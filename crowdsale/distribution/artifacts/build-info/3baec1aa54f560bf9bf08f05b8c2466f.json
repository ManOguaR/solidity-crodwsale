{
	"id": "3baec1aa54f560bf9bf08f05b8c2466f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"crowdsale/distribution/refundableCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"crowdsale/distribution/finalizableCrowdsale.sol\";\r\nimport \"crowdsale/abstractions/refundable.sol\";\r\n\r\n/**\r\n * @title RefundableCrowdsale\r\n * @dev Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users\r\n * getting a refund if goal is not met.\r\n *\r\n * Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal\r\n * is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\r\n * the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\r\n * the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.\r\n */\r\nabstract contract RefundableCrowdsale is Context, FinalizableCrowdsale, RefundableContract {\r\n    using SafeMath for uint256;\r\n\r\n    /**\r\n     * @dev Constructor, creates RefundEscrow.\r\n     * @param inGoal Funding goal\r\n     */\r\n    constructor (uint256 inGoal, uint256 inOpeningTime, uint256 inClosingTime, uint256 inRate, address payable inWallet, IERC20 inToken) \r\n    FinalizableCrowdsale(inOpeningTime, inClosingTime, inRate, inWallet, inToken)\r\n    RefundableContract(inGoal, inWallet) {}\r\n\r\n    /**\r\n     * @dev Investors can claim refunds here if crowdsale is unsuccessful.\r\n     * @param refundee Whose refund will be claimed.\r\n     */\r\n    function claimRefund(address payable refundee) public {\r\n        require(finalized(), \"RefundableCrowdsale: not finalized\");\r\n        require(!goalReached(), \"RefundableCrowdsale: goal reached\");\r\n        _claimRefund(refundee);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks whether funding goal was reached.\r\n     * @return Whether funding goal was reached\r\n     */\r\n    function goalReached() public view returns (bool) {\r\n        return weiRaised() >= goal();\r\n    }\r\n\r\n    /**\r\n     * @dev Escrow finalization task, called when finalize() is called.\r\n     */\r\n    function _finalization() internal override {\r\n        if (goalReached()) {\r\n            _closeAndWithdraw();\r\n        } else {\r\n            _enableRefunds();\r\n        }\r\n\r\n        super._finalization();\r\n    }\r\n\r\n    /**\r\n     * @dev Overrides Crowdsale fund forwarding, sending funds to escrow.\r\n     */\r\n    function _forwardFunds() internal virtual override  {\r\n        _depositInEscrow();\r\n    }\r\n}"
			},
			"crowdsale/abstractions/refundable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\";\r\n\r\n/**\r\n * @title RefundableCrowdsale\r\n * @dev Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users\r\n * getting a refund if goal is not met.\r\n *\r\n * Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal\r\n * is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\r\n * the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\r\n * the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.\r\n */\r\nabstract contract RefundableContract is Context {\r\n    using SafeMath for uint256;\r\n\r\n    // minimum amount of funds to be raised in weis\r\n    uint256 private _goal;\r\n\r\n    // refund escrow used to hold funds while crowdsale is running\r\n    RefundEscrow private _escrow;\r\n\r\n    /**\r\n     * @dev Constructor, creates RefundEscrow.\r\n     * @param inGoal Funding goal\r\n     */\r\n    constructor (uint256 inGoal, address payable inWallet) \r\n    {\r\n        require(inGoal > 0, \"RefundableCrowdsale: goal is 0\");\r\n        _escrow = new RefundEscrow(inWallet);\r\n        _goal = inGoal;\r\n    }\r\n\r\n    /**\r\n     * @return minimum amount of funds to be raised in wei.\r\n     */\r\n    function goal() public view returns (uint256) {\r\n        return _goal;\r\n    }\r\n    \r\n    /**\r\n     * @dev Investors can claim refunds here if crowdsale is unsuccessful.\r\n     * @param refundee Whose refund will be claimed.\r\n     */\r\n    function _claimRefund(address payable refundee) internal {\r\n        _escrow.withdraw(refundee);\r\n    }\r\n\r\n    function _closeAndWithdraw() internal {\r\n        _escrow.close();\r\n        _escrow.beneficiaryWithdraw();\r\n    }\r\n\r\n    function _enableRefunds() internal  {\r\n        _escrow.enableRefunds();\r\n    }\r\n\r\n    function _depositInEscrow() internal {\r\n        _escrow.deposit{value: msg.value}(_msgSender());\r\n    }\r\n}"
			},
			"crowdsale/distribution/finalizableCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"crowdsale/validation/timedCrowdsale.sol\";\r\nimport \"crowdsale/abstractions/finalizable.sol\";\r\n\r\n/**\r\n * @title FinalizableCrowdsale\r\n * @dev Extension of TimedCrowdsale with a one-off finalization action, where one\r\n * can do extra work after finishing.\r\n */\r\nabstract contract FinalizableCrowdsale is TimedCrowdsale, FinalizableContract {\r\n    using SafeMath for uint256;\r\n\r\n    /**\r\n     * @dev Constructor, takes crowdsale opening and closing times.\r\n     * @param inOpeningTime Crowdsale opening time\r\n     * @param inClosingTime Crowdsale closing time\r\n     * @param inRate Crowdsale rate\r\n     * @param inWallet Crowdsale wallet\r\n     * @param inToken Crowdsale token\r\n     */\r\n    constructor (uint256 inOpeningTime, uint256 inClosingTime, uint256 inRate, address payable inWallet, IERC20 inToken) \r\n    TimedCrowdsale(inOpeningTime, inClosingTime, inRate, inWallet, inToken)\r\n    FinalizableContract() {\r\n    }\r\n\r\n    /**\r\n     * @dev Must be called after crowdsale ends, to do some extra finalization\r\n     * work. Calls the contract's finalization function.\r\n     */\r\n    function finalize() public override {\r\n        require(hasClosed(), \"FinalizableCrowdsale: not closed\");\r\n        super.finalize();\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"crowdsale/abstractions/finalizable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"crowdsale/validation/timedCrowdsale.sol\";\r\n\r\n/**\r\n * @title FinalizableCrowdsale\r\n * @dev Extension of TimedCrowdsale with a one-off finalization action, where one\r\n * can do extra work after finishing.\r\n */\r\nabstract contract FinalizableContract {\r\n    using SafeMath for uint256;\r\n\r\n    bool private _finalized;\r\n\r\n    event ContractFinalized();\r\n\r\n    /**\r\n     * @dev Constructor, takes crowdsale opening and closing times.\r\n     */\r\n    constructor () \r\n    {\r\n    _finalized = false;\r\n    }\r\n\r\n    /**\r\n     * @return true if the crowdsale is finalized, false otherwise.\r\n     */\r\n    function finalized() public view returns (bool) {\r\n        return _finalized;\r\n    }\r\n\r\n    /**\r\n     * @dev Must be called after crowdsale ends, to do some extra finalization\r\n     * work. Calls the contract's finalization function.\r\n     */\r\n    function finalize() public virtual  {\r\n        require(!_finalized, \"FinalizableCrowdsale: already finalized\");\r\n        _finalized = true;\r\n\r\n        _finalization();\r\n        emit ContractFinalized();\r\n    }\r\n\r\n    /**\r\n     * @dev Can be overridden to add finalization logic. The overriding function\r\n     * should call super._finalization() to ensure the chain of finalization is\r\n     * executed entirely.\r\n     */\r\n    function _finalization() virtual internal {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n}"
			},
			"crowdsale/validation/timedCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"crowdsale/crowdsale.sol\";\r\n\r\n/**\r\n * @title TimedCrowdsale\r\n * @dev Crowdsale accepting contributions only within a time frame.\r\n */\r\nabstract contract TimedCrowdsale is Crowdsale {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 private _openingTime;\r\n    uint256 private _closingTime;\r\n\r\n    /**\r\n     * Event for crowdsale extending\r\n     * @param newClosingTime new closing time\r\n     * @param prevClosingTime old closing time\r\n     */\r\n    event TimedCrowdsaleExtended(uint256 prevClosingTime, uint256 newClosingTime);\r\n\r\n    /**\r\n     * @dev Reverts if not in crowdsale time range.\r\n     */\r\n    modifier onlyWhileOpen {\r\n        require(isOpen(), \"TimedCrowdsale: not open\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Constructor, takes crowdsale opening and closing times.\r\n     * @param inOpeningTime Crowdsale opening time\r\n     * @param inClosingTime Crowdsale closing time\r\n     */\r\n    constructor (uint256 inOpeningTime, uint256 inClosingTime, uint256 inRate, address payable inWallet, IERC20 inToken) Crowdsale(inRate, inWallet, inToken) {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        require(inOpeningTime >= block.timestamp, \"TimedCrowdsale: opening time is before current time\");\r\n        // solhint-disable-next-line max-line-length\r\n        require(inClosingTime > inOpeningTime, \"TimedCrowdsale: opening time is not before closing time\");\r\n\r\n        _openingTime = inOpeningTime;\r\n        _closingTime = inClosingTime;\r\n    }\r\n\r\n    /**\r\n     * @return the crowdsale opening time.\r\n     */\r\n    function openingTime() public view returns (uint256) {\r\n        return _openingTime;\r\n    }\r\n\r\n    /**\r\n     * @return the crowdsale closing time.\r\n     */\r\n    function closingTime() public view returns (uint256) {\r\n        return _closingTime;\r\n    }\r\n\r\n    /**\r\n     * @return true if the crowdsale is open, false otherwise.\r\n     */\r\n    function isOpen() public view returns (bool) {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        return block.timestamp >= _openingTime && block.timestamp <= _closingTime;\r\n    }\r\n\r\n    /**\r\n     * @dev Checks whether the period in which the crowdsale is open has already elapsed.\r\n     * @return Whether crowdsale period has elapsed\r\n     */\r\n    function hasClosed() public view returns (bool) {\r\n        // solhint-disable-next-line not-rely-on-time\r\n        return block.timestamp > _closingTime;\r\n    }\r\n\r\n    /**\r\n     * @dev Extend parent behavior requiring to be within contributing period.\r\n     * @param beneficiary Token purchaser\r\n     * @param weiAmount Amount of wei contributed\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override onlyWhileOpen view {\r\n        super._preValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Extend crowdsale.\r\n     * @param newClosingTime Crowdsale closing time\r\n     */\r\n    function _extendTime(uint256 newClosingTime) internal {\r\n        require(!hasClosed(), \"TimedCrowdsale: already closed\");\r\n        // solhint-disable-next-line max-line-length\r\n        require(newClosingTime > _closingTime, \"TimedCrowdsale: new closing time is before current closing time\");\r\n\r\n        emit TimedCrowdsaleExtended(_closingTime, newClosingTime);\r\n        _closingTime = newClosingTime;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/escrow/RefundEscrow.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ConditionalEscrow.sol\";\n\n/**\n * @title RefundEscrow\n * @dev Escrow that holds funds for a beneficiary, deposited from multiple\n * parties.\n * @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n * @dev The owner account (that is, the contract that instantiates this\n * contract) may deposit, close the deposit period, and allow for either\n * withdrawal by the beneficiary, or refunds to the depositors. All interactions\n * with `RefundEscrow` will be made through the owner contract.\n */\ncontract RefundEscrow is ConditionalEscrow {\n    using Address for address payable;\n\n    enum State {\n        Active,\n        Refunding,\n        Closed\n    }\n\n    event RefundsClosed();\n    event RefundsEnabled();\n\n    State private _state;\n    address payable private immutable _beneficiary;\n\n    /**\n     * @dev Constructor.\n     * @param beneficiary_ The beneficiary of the deposits.\n     */\n    constructor(address payable beneficiary_) {\n        require(beneficiary_ != address(0), \"RefundEscrow: beneficiary is the zero address\");\n        _beneficiary = beneficiary_;\n        _state = State.Active;\n    }\n\n    /**\n     * @return The current state of the escrow.\n     */\n    function state() public view virtual returns (State) {\n        return _state;\n    }\n\n    /**\n     * @return The beneficiary of the escrow.\n     */\n    function beneficiary() public view virtual returns (address payable) {\n        return _beneficiary;\n    }\n\n    /**\n     * @dev Stores funds that may later be refunded.\n     * @param refundee The address funds will be sent to if a refund occurs.\n     */\n    function deposit(address refundee) public payable virtual override {\n        require(state() == State.Active, \"RefundEscrow: can only deposit while active\");\n        super.deposit(refundee);\n    }\n\n    /**\n     * @dev Allows for the beneficiary to withdraw their funds, rejecting\n     * further deposits.\n     */\n    function close() public virtual onlyOwner {\n        require(state() == State.Active, \"RefundEscrow: can only close while active\");\n        _state = State.Closed;\n        emit RefundsClosed();\n    }\n\n    /**\n     * @dev Allows for refunds to take place, rejecting further deposits.\n     */\n    function enableRefunds() public virtual onlyOwner {\n        require(state() == State.Active, \"RefundEscrow: can only enable refunds while active\");\n        _state = State.Refunding;\n        emit RefundsEnabled();\n    }\n\n    /**\n     * @dev Withdraws the beneficiary's funds.\n     */\n    function beneficiaryWithdraw() public virtual {\n        require(state() == State.Closed, \"RefundEscrow: beneficiary can only withdraw while closed\");\n        beneficiary().sendValue(address(this).balance);\n    }\n\n    /**\n     * @dev Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a\n     * 'payee' argument, but we ignore it here since the condition is global, not per-payee.\n     */\n    function withdrawalAllowed(address) public view override returns (bool) {\n        return state() == State.Refunding;\n    }\n}\n"
			},
			"crowdsale/crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Crowdsale\r\n * @dev Crowdsale is a base contract for managing a token crowdsale,\r\n * allowing investors to purchase tokens with ether. This contract implements\r\n * such functionality in its most fundamental form and can be extended to provide additional\r\n * functionality and/or custom behavior.\r\n * The external interface represents the basic interface for purchasing tokens, and conforms\r\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\r\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\r\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\r\n * behavior.\r\n */\r\nabstract contract Crowdsale is Context, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The token being sold\r\n    IERC20 private _token;\r\n\r\n    // Address where funds are collected\r\n    address payable private _wallet;\r\n\r\n    // How many token units a buyer gets per wei.\r\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\r\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\r\n    // 1 wei will give you 1 unit, or 0.001 TOK.\r\n    uint256 private _rate;\r\n\r\n    // Amount of wei raised\r\n    uint256 private _weiRaised;\r\n\r\n    /**\r\n     * Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of tokens purchased\r\n     */\r\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    /**\r\n     * @param inRate Number of token units a buyer gets per wei\r\n     * @dev The rate is the conversion between wei and the smallest and indivisible\r\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\r\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\r\n     * @param inWallet Address where collected funds will be forwarded to\r\n     * @param inToken Address of the token being sold\r\n     */\r\n    constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {\r\n        require(inRate > 0, \"Crowdsale: rate is 0\");\r\n        require(inWallet != address(0), \"Crowdsale: wallet is the zero address\");\r\n        require(address(inToken) != address(0), \"Crowdsale: token is the zero address\");\r\n\r\n        _rate = inRate;\r\n        _wallet = inWallet;\r\n        _token = inToken;\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function ***DO NOT OVERRIDE***\r\n     * Note that other contracts will transfer funds with a base gas stipend\r\n     * of 2300, which is not enough to call buyTokens. Consider calling\r\n     * buyTokens directly when purchasing tokens from a contract.\r\n     */\r\n    fallback() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n    \r\n    receive() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @return the token being sold.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the address where funds are collected.\r\n     */\r\n    function wallet() public view returns (address payable) {\r\n        return _wallet;\r\n    }\r\n\r\n    /**\r\n     * @return the number of token units a buyer gets per wei.\r\n     */\r\n    function rate() public virtual view returns (uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    /**\r\n     * @return the amount of wei raised.\r\n     */\r\n    function weiRaised() public view returns (uint256) {\r\n        return _weiRaised;\r\n    }\r\n\r\n    /**\r\n     * @dev low level token purchase ***DO NOT OVERRIDE***\r\n     * This function has a non-reentrancy guard, so it shouldn't be called by\r\n     * another `nonReentrant` function.\r\n     * @param beneficiary Recipient of the token purchase\r\n     */\r\n    function buyTokens(address beneficiary) public nonReentrant payable {\r\n        uint256 weiAmount = msg.value;\r\n        _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n        // calculate token amount to be created\r\n        uint256 tokens = _getTokenAmount(weiAmount);\r\n\r\n        // update state\r\n        _weiRaised = _weiRaised.add(weiAmount);\r\n\r\n        _processPurchase(beneficiary, tokens);\r\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\r\n\r\n        _updatePurchasingState(beneficiary, weiAmount);\r\n\r\n        _forwardFunds();\r\n        _postValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\r\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\r\n     * conditions are not met.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\r\n     * its tokens.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param tokenAmount Number of tokens to be emitted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _token.safeTransfer(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\r\n     * tokens.\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param tokenAmount Number of tokens to be purchased\r\n     */\r\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _deliverTokens(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\r\n     * etc.)\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Override to extend the way in which ether is converted to tokens.\r\n     * @param weiAmount Value in wei to be converted into tokens\r\n     * @return Number of tokens that can be purchased with the specified _weiAmount\r\n     */\r\n    function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {\r\n        return weiAmount.mul(_rate);\r\n    }\r\n\r\n    /**\r\n     * @dev Determines how ETH is stored/forwarded on purchases.\r\n     */\r\n    function _forwardFunds() internal virtual {\r\n        _wallet.transfer(msg.value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/escrow/ConditionalEscrow.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Escrow.sol\";\n\n/**\n * @title ConditionalEscrow\n * @dev Base abstract escrow to only allow withdrawal if a condition is met.\n * @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n */\nabstract contract ConditionalEscrow is Escrow {\n    /**\n     * @dev Returns whether an address is allowed to withdraw their funds. To be\n     * implemented by derived contracts.\n     * @param payee The destination address of the funds.\n     */\n    function withdrawalAllowed(address payee) public view virtual returns (bool);\n\n    function withdraw(address payable payee) public virtual override {\n        require(withdrawalAllowed(payee), \"ConditionalEscrow: payee is not allowed to withdraw\");\n        super.withdraw(payee);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/escrow/Escrow.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/escrow/Escrow.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../access/Ownable.sol\";\nimport \"../Address.sol\";\n\n/**\n * @title Escrow\n * @dev Base escrow contract, holds funds designated for a payee until they\n * withdraw them.\n *\n * Intended usage: This contract (and derived escrow contracts) should be a\n * standalone contract, that only interacts with the contract that instantiated\n * it. That way, it is guaranteed that all Ether will be handled according to\n * the `Escrow` rules, and there is no need to check for payable functions or\n * transfers in the inheritance tree. The contract that uses the escrow as its\n * payment method should be its owner, and provide public methods redirecting\n * to the escrow's deposit and withdraw.\n */\ncontract Escrow is Ownable {\n    using Address for address payable;\n\n    event Deposited(address indexed payee, uint256 weiAmount);\n    event Withdrawn(address indexed payee, uint256 weiAmount);\n\n    mapping(address => uint256) private _deposits;\n\n    function depositsOf(address payee) public view returns (uint256) {\n        return _deposits[payee];\n    }\n\n    /**\n     * @dev Stores the sent amount as credit to be withdrawn.\n     * @param payee The destination address of the funds.\n     *\n     * Emits a {Deposited} event.\n     */\n    function deposit(address payee) public payable virtual onlyOwner {\n        uint256 amount = msg.value;\n        _deposits[payee] += amount;\n        emit Deposited(payee, amount);\n    }\n\n    /**\n     * @dev Withdraw accumulated balance for a payee, forwarding all gas to the\n     * recipient.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * @param payee The address whose funds will be withdrawn and transferred to.\n     *\n     * Emits a {Withdrawn} event.\n     */\n    function withdraw(address payable payee) public virtual onlyOwner {\n        uint256 payment = _deposits[payee];\n\n        _deposits[payee] = 0;\n\n        payee.sendValue(payment);\n\n        emit Withdrawn(payee, payment);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol",
								"@openzeppelin/contracts/utils/escrow/Escrow.sol",
								"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/abstractions/finalizable.sol",
								"crowdsale/abstractions/refundable.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/distribution/finalizableCrowdsale.sol",
								"crowdsale/distribution/refundableCrowdsale.sol",
								"crowdsale/validation/timedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol",
								"@openzeppelin/contracts/utils/escrow/Escrow.sol",
								"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/abstractions/finalizable.sol",
								"crowdsale/abstractions/refundable.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/distribution/finalizableCrowdsale.sol",
								"crowdsale/distribution/refundableCrowdsale.sol",
								"crowdsale/validation/timedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol": {
				"ConditionalEscrow": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "payee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "payee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "payee",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "payee",
									"type": "address"
								}
							],
							"name": "depositsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "payee",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "payee",
									"type": "address"
								}
							],
							"name": "withdrawalAllowed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Base abstract escrow to only allow withdrawal if a condition is met.Intended usage: See {Escrow}. Same usage guidelines apply here.",
						"kind": "dev",
						"methods": {
							"deposit(address)": {
								"details": "Stores the sent amount as credit to be withdrawn.",
								"params": {
									"payee": "The destination address of the funds. Emits a {Deposited} event."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
								"params": {
									"payee": "The address whose funds will be withdrawn and transferred to. Emits a {Withdrawn} event."
								}
							},
							"withdrawalAllowed(address)": {
								"details": "Returns whether an address is allowed to withdraw their funds. To be implemented by derived contracts.",
								"params": {
									"payee": "The destination address of the funds."
								}
							}
						},
						"title": "ConditionalEscrow",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(address)": "f340fa01",
							"depositsOf(address)": "e3a9db1a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9",
							"withdrawalAllowed(address)": "685ca194"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawalAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base abstract escrow to only allow withdrawal if a condition is met.Intended usage: See {Escrow}. Same usage guidelines apply here.\",\"kind\":\"dev\",\"methods\":{\"deposit(address)\":{\"details\":\"Stores the sent amount as credit to be withdrawn.\",\"params\":{\"payee\":\"The destination address of the funds. Emits a {Deposited} event.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"The address whose funds will be withdrawn and transferred to. Emits a {Withdrawn} event.\"}},\"withdrawalAllowed(address)\":{\"details\":\"Returns whether an address is allowed to withdraw their funds. To be implemented by derived contracts.\",\"params\":{\"payee\":\"The destination address of the funds.\"}}},\"title\":\"ConditionalEscrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":\"ConditionalEscrow\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0xf71d228abc2df1a5020ba208b237718e22cad6b3532f5e8f1021f4f15068e290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e42465b2c37a5d9286678ad167ed75691cb7bd2f6abcb677e7820ac58263a723\",\"dweb:/ipfs/QmdxVmnFC6ELiJLcQauqJxR353hjT2eNQ5ELHv1j46KeHi\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xabdff382f93edb8bd94b227798fc0daf64abe891403e1e525f5870c2cae8bf65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402701e1bf7c6314463211809668b51986f27695b5d552dcd51aed0730c66680\",\"dweb:/ipfs/QmRLv8Tr9ZV7QABCSr2ri4N1EsKGebFC87ti9794GMGLiL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol:ConditionalEscrow",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1188,
								"contract": "@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol:ConditionalEscrow",
								"label": "_deposits",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/escrow/Escrow.sol": {
				"Escrow": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "payee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "payee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "payee",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "payee",
									"type": "address"
								}
							],
							"name": "depositsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "payee",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Base escrow contract, holds funds designated for a payee until they withdraw them. Intended usage: This contract (and derived escrow contracts) should be a standalone contract, that only interacts with the contract that instantiated it. That way, it is guaranteed that all Ether will be handled according to the `Escrow` rules, and there is no need to check for payable functions or transfers in the inheritance tree. The contract that uses the escrow as its payment method should be its owner, and provide public methods redirecting to the escrow's deposit and withdraw.",
						"kind": "dev",
						"methods": {
							"deposit(address)": {
								"details": "Stores the sent amount as credit to be withdrawn.",
								"params": {
									"payee": "The destination address of the funds. Emits a {Deposited} event."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
								"params": {
									"payee": "The address whose funds will be withdrawn and transferred to. Emits a {Withdrawn} event."
								}
							}
						},
						"title": "Escrow",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":825:2253  contract Escrow is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":825:2253  contract Escrow is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":825:2253  contract Escrow is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":825:2253  contract Escrow is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x51cff8d9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe3a9db1a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf340fa01\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2027:2251  function withdraw(address payable payee) public virtual onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1077:1182  function depositsOf(address payee) public view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1365:1548  function deposit(address payee) public payable virtual onlyOwner {... */\n    tag_7:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2027:2251  function withdraw(address payable payee) public virtual onlyOwner {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_36:\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2103:2118  uint256 payment */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2121:2130  _deposits */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2121:2137  _deposits[payee] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2131:2136  payee */\n      dup4\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2121:2137  _deposits[payee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2103:2137  uint256 payment = _deposits[payee] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2167:2168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2148:2157  _deposits */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2148:2164  _deposits[payee] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2158:2163  payee */\n      dup5\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2148:2164  _deposits[payee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2148:2168  _deposits[payee] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2179:2203  payee.sendValue(payment) */\n      tag_39\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2195:2202  payment */\n      dup2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2179:2184  payee */\n      dup4\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2179:2194  payee.sendValue */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_40\n      swap1\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2179:2203  payee.sendValue(payment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2229:2234  payee */\n      dup2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2219:2244  Withdrawn(payee, payment) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2236:2243  payment */\n      dup3\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2219:2244  Withdrawn(payee, payment) */\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2093:2251  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2027:2251  function withdraw(address payable payee) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1077:1182  function depositsOf(address payee) public view returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1133:1140  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1159:1168  _deposits */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1159:1175  _deposits[payee] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1169:1174  payee */\n      dup4\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1159:1175  _deposits[payee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1152:1175  return _deposits[payee] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1077:1182  function depositsOf(address payee) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_50\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1365:1548  function deposit(address payee) public payable virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1440:1454  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1457:1466  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1440:1466  uint256 amount = msg.value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1496:1502  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1476:1485  _deposits */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1476:1492  _deposits[payee] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1486:1491  payee */\n      dup5\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1476:1492  _deposits[payee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1476:1502  _deposits[payee] += amount */\n      dup3\n      dup3\n      sload\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1527:1532  payee */\n      dup2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1517:1541  Deposited(payee, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1534:1540  amount */\n      dup3\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1517:1541  Deposited(payee, amount) */\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1430:1548  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1365:1548  function deposit(address payee) public payable virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_18\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2647:2959  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2761:2767  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2736:2757  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2736:2767  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2728:2801  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2813:2825  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2831:2840  recipient */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2831:2845  recipient.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2853:2859  amount */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2831:2864  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_77\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_76)\n    tag_77:\n      0x60\n      swap2\n      pop\n    tag_76:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2812:2864  (bool success, ) = recipient.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2882:2889  success */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2874:2952  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2718:2959  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2647:2959  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_84:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_86:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:570   */\n    tag_87:\n        /* \"#utility.yul\":511:518   */\n      0x00\n        /* \"#utility.yul\":540:564   */\n      tag_115\n        /* \"#utility.yul\":558:563   */\n      dup3\n        /* \"#utility.yul\":540:564   */\n      tag_86\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":529:564   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":576:714   */\n    tag_88:\n        /* \"#utility.yul\":657:689   */\n      tag_117\n        /* \"#utility.yul\":683:688   */\n      dup2\n        /* \"#utility.yul\":657:689   */\n      tag_87\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":650:655   */\n      dup2\n        /* \"#utility.yul\":647:690   */\n      eq\n        /* \"#utility.yul\":637:708   */\n      tag_118\n      jumpi\n        /* \"#utility.yul\":704:705   */\n      0x00\n        /* \"#utility.yul\":701:702   */\n      dup1\n        /* \"#utility.yul\":694:706   */\n      revert\n        /* \"#utility.yul\":637:708   */\n    tag_118:\n        /* \"#utility.yul\":576:714   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":720:875   */\n    tag_89:\n        /* \"#utility.yul\":774:779   */\n      0x00\n        /* \"#utility.yul\":812:818   */\n      dup2\n        /* \"#utility.yul\":799:819   */\n      calldataload\n        /* \"#utility.yul\":790:819   */\n      swap1\n      pop\n        /* \"#utility.yul\":828:869   */\n      tag_120\n        /* \"#utility.yul\":863:868   */\n      dup2\n        /* \"#utility.yul\":828:869   */\n      tag_88\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":720:875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":881:1226   */\n    tag_11:\n        /* \"#utility.yul\":948:954   */\n      0x00\n        /* \"#utility.yul\":997:999   */\n      0x20\n        /* \"#utility.yul\":985:994   */\n      dup3\n        /* \"#utility.yul\":976:983   */\n      dup5\n        /* \"#utility.yul\":972:995   */\n      sub\n        /* \"#utility.yul\":968:1000   */\n      slt\n        /* \"#utility.yul\":965:1084   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":1003:1082   */\n      tag_123\n      tag_84\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":965:1084   */\n    tag_122:\n        /* \"#utility.yul\":1123:1124   */\n      0x00\n        /* \"#utility.yul\":1148:1209   */\n      tag_124\n        /* \"#utility.yul\":1201:1208   */\n      dup5\n        /* \"#utility.yul\":1192:1198   */\n      dup3\n        /* \"#utility.yul\":1181:1190   */\n      dup6\n        /* \"#utility.yul\":1177:1199   */\n      add\n        /* \"#utility.yul\":1148:1209   */\n      tag_89\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1138:1209   */\n      swap2\n      pop\n        /* \"#utility.yul\":1094:1219   */\n      pop\n        /* \"#utility.yul\":881:1226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1232:1328   */\n    tag_90:\n        /* \"#utility.yul\":1269:1276   */\n      0x00\n        /* \"#utility.yul\":1298:1322   */\n      tag_126\n        /* \"#utility.yul\":1316:1321   */\n      dup3\n        /* \"#utility.yul\":1298:1322   */\n      tag_86\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1287:1322   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1334:1452   */\n    tag_91:\n        /* \"#utility.yul\":1421:1445   */\n      tag_128\n        /* \"#utility.yul\":1439:1444   */\n      dup2\n        /* \"#utility.yul\":1421:1445   */\n      tag_90\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1416:1419   */\n      dup3\n        /* \"#utility.yul\":1409:1446   */\n      mstore\n        /* \"#utility.yul\":1334:1452   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1458:1680   */\n    tag_20:\n        /* \"#utility.yul\":1551:1555   */\n      0x00\n        /* \"#utility.yul\":1589:1591   */\n      0x20\n        /* \"#utility.yul\":1578:1587   */\n      dup3\n        /* \"#utility.yul\":1574:1592   */\n      add\n        /* \"#utility.yul\":1566:1592   */\n      swap1\n      pop\n        /* \"#utility.yul\":1602:1673   */\n      tag_130\n        /* \"#utility.yul\":1670:1671   */\n      0x00\n        /* \"#utility.yul\":1659:1668   */\n      dup4\n        /* \"#utility.yul\":1655:1672   */\n      add\n        /* \"#utility.yul\":1646:1652   */\n      dup5\n        /* \"#utility.yul\":1602:1673   */\n      tag_91\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1458:1680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1808   */\n    tag_92:\n        /* \"#utility.yul\":1759:1783   */\n      tag_132\n        /* \"#utility.yul\":1777:1782   */\n      dup2\n        /* \"#utility.yul\":1759:1783   */\n      tag_90\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1752:1757   */\n      dup2\n        /* \"#utility.yul\":1749:1784   */\n      eq\n        /* \"#utility.yul\":1739:1802   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":1798:1799   */\n      0x00\n        /* \"#utility.yul\":1795:1796   */\n      dup1\n        /* \"#utility.yul\":1788:1800   */\n      revert\n        /* \"#utility.yul\":1739:1802   */\n    tag_133:\n        /* \"#utility.yul\":1686:1808   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1814:1953   */\n    tag_93:\n        /* \"#utility.yul\":1860:1865   */\n      0x00\n        /* \"#utility.yul\":1898:1904   */\n      dup2\n        /* \"#utility.yul\":1885:1905   */\n      calldataload\n        /* \"#utility.yul\":1876:1905   */\n      swap1\n      pop\n        /* \"#utility.yul\":1914:1947   */\n      tag_135\n        /* \"#utility.yul\":1941:1946   */\n      dup2\n        /* \"#utility.yul\":1914:1947   */\n      tag_92\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1814:1953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2288   */\n    tag_24:\n        /* \"#utility.yul\":2018:2024   */\n      0x00\n        /* \"#utility.yul\":2067:2069   */\n      0x20\n        /* \"#utility.yul\":2055:2064   */\n      dup3\n        /* \"#utility.yul\":2046:2053   */\n      dup5\n        /* \"#utility.yul\":2042:2065   */\n      sub\n        /* \"#utility.yul\":2038:2070   */\n      slt\n        /* \"#utility.yul\":2035:2154   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":2073:2152   */\n      tag_138\n      tag_84\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2035:2154   */\n    tag_137:\n        /* \"#utility.yul\":2193:2194   */\n      0x00\n        /* \"#utility.yul\":2218:2271   */\n      tag_139\n        /* \"#utility.yul\":2263:2270   */\n      dup5\n        /* \"#utility.yul\":2254:2260   */\n      dup3\n        /* \"#utility.yul\":2243:2252   */\n      dup6\n        /* \"#utility.yul\":2239:2261   */\n      add\n        /* \"#utility.yul\":2218:2271   */\n      tag_93\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":2208:2271   */\n      swap2\n      pop\n        /* \"#utility.yul\":2164:2281   */\n      pop\n        /* \"#utility.yul\":1959:2288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2294:2371   */\n    tag_94:\n        /* \"#utility.yul\":2331:2338   */\n      0x00\n        /* \"#utility.yul\":2360:2365   */\n      dup2\n        /* \"#utility.yul\":2349:2365   */\n      swap1\n      pop\n        /* \"#utility.yul\":2294:2371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2377:2495   */\n    tag_95:\n        /* \"#utility.yul\":2464:2488   */\n      tag_142\n        /* \"#utility.yul\":2482:2487   */\n      dup2\n        /* \"#utility.yul\":2464:2488   */\n      tag_94\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":2459:2462   */\n      dup3\n        /* \"#utility.yul\":2452:2489   */\n      mstore\n        /* \"#utility.yul\":2377:2495   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2501:2723   */\n    tag_27:\n        /* \"#utility.yul\":2594:2598   */\n      0x00\n        /* \"#utility.yul\":2632:2634   */\n      0x20\n        /* \"#utility.yul\":2621:2630   */\n      dup3\n        /* \"#utility.yul\":2617:2635   */\n      add\n        /* \"#utility.yul\":2609:2635   */\n      swap1\n      pop\n        /* \"#utility.yul\":2645:2716   */\n      tag_144\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2702:2711   */\n      dup4\n        /* \"#utility.yul\":2698:2715   */\n      add\n        /* \"#utility.yul\":2689:2695   */\n      dup5\n        /* \"#utility.yul\":2645:2716   */\n      tag_95\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2501:2723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:2898   */\n    tag_96:\n        /* \"#utility.yul\":2813:2824   */\n      0x00\n        /* \"#utility.yul\":2847:2853   */\n      dup3\n        /* \"#utility.yul\":2842:2845   */\n      dup3\n        /* \"#utility.yul\":2835:2854   */\n      mstore\n        /* \"#utility.yul\":2887:2891   */\n      0x20\n        /* \"#utility.yul\":2882:2885   */\n      dup3\n        /* \"#utility.yul\":2878:2892   */\n      add\n        /* \"#utility.yul\":2863:2892   */\n      swap1\n      pop\n        /* \"#utility.yul\":2729:2898   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2904:3129   */\n    tag_97:\n        /* \"#utility.yul\":3044:3078   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3040:3041   */\n      0x00\n        /* \"#utility.yul\":3032:3038   */\n      dup3\n        /* \"#utility.yul\":3028:3042   */\n      add\n        /* \"#utility.yul\":3021:3079   */\n      mstore\n        /* \"#utility.yul\":3113:3121   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3108:3110   */\n      0x20\n        /* \"#utility.yul\":3100:3106   */\n      dup3\n        /* \"#utility.yul\":3096:3111   */\n      add\n        /* \"#utility.yul\":3089:3122   */\n      mstore\n        /* \"#utility.yul\":2904:3129   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3135:3501   */\n    tag_98:\n        /* \"#utility.yul\":3277:3280   */\n      0x00\n        /* \"#utility.yul\":3298:3365   */\n      tag_148\n        /* \"#utility.yul\":3362:3364   */\n      0x26\n        /* \"#utility.yul\":3357:3360   */\n      dup4\n        /* \"#utility.yul\":3298:3365   */\n      tag_96\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3291:3365   */\n      swap2\n      pop\n        /* \"#utility.yul\":3374:3467   */\n      tag_149\n        /* \"#utility.yul\":3463:3466   */\n      dup3\n        /* \"#utility.yul\":3374:3467   */\n      tag_97\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3492:3494   */\n      0x40\n        /* \"#utility.yul\":3487:3490   */\n      dup3\n        /* \"#utility.yul\":3483:3495   */\n      add\n        /* \"#utility.yul\":3476:3495   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3501   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3507:3926   */\n    tag_54:\n        /* \"#utility.yul\":3673:3677   */\n      0x00\n        /* \"#utility.yul\":3711:3713   */\n      0x20\n        /* \"#utility.yul\":3700:3709   */\n      dup3\n        /* \"#utility.yul\":3696:3714   */\n      add\n        /* \"#utility.yul\":3688:3714   */\n      swap1\n      pop\n        /* \"#utility.yul\":3760:3769   */\n      dup2\n        /* \"#utility.yul\":3754:3758   */\n      dup2\n        /* \"#utility.yul\":3750:3770   */\n      sub\n        /* \"#utility.yul\":3746:3747   */\n      0x00\n        /* \"#utility.yul\":3735:3744   */\n      dup4\n        /* \"#utility.yul\":3731:3748   */\n      add\n        /* \"#utility.yul\":3724:3771   */\n      mstore\n        /* \"#utility.yul\":3788:3919   */\n      tag_151\n        /* \"#utility.yul\":3914:3918   */\n      dup2\n        /* \"#utility.yul\":3788:3919   */\n      tag_98\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":3780:3919   */\n      swap1\n      pop\n        /* \"#utility.yul\":3507:3926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3932:4112   */\n    tag_99:\n        /* \"#utility.yul\":3980:4057   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3977:3978   */\n      0x00\n        /* \"#utility.yul\":3970:4058   */\n      mstore\n        /* \"#utility.yul\":4077:4081   */\n      0x11\n        /* \"#utility.yul\":4074:4075   */\n      0x04\n        /* \"#utility.yul\":4067:4082   */\n      mstore\n        /* \"#utility.yul\":4101:4105   */\n      0x24\n        /* \"#utility.yul\":4098:4099   */\n      0x00\n        /* \"#utility.yul\":4091:4106   */\n      revert\n        /* \"#utility.yul\":4118:4309   */\n    tag_60:\n        /* \"#utility.yul\":4158:4161   */\n      0x00\n        /* \"#utility.yul\":4177:4197   */\n      tag_154\n        /* \"#utility.yul\":4195:4196   */\n      dup3\n        /* \"#utility.yul\":4177:4197   */\n      tag_94\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4172:4197   */\n      swap2\n      pop\n        /* \"#utility.yul\":4211:4231   */\n      tag_155\n        /* \"#utility.yul\":4229:4230   */\n      dup4\n        /* \"#utility.yul\":4211:4231   */\n      tag_94\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4206:4231   */\n      swap3\n      pop\n        /* \"#utility.yul\":4254:4255   */\n      dup3\n        /* \"#utility.yul\":4251:4252   */\n      dup3\n        /* \"#utility.yul\":4247:4256   */\n      add\n        /* \"#utility.yul\":4240:4256   */\n      swap1\n      pop\n        /* \"#utility.yul\":4275:4278   */\n      dup1\n        /* \"#utility.yul\":4272:4273   */\n      dup3\n        /* \"#utility.yul\":4269:4279   */\n      gt\n        /* \"#utility.yul\":4266:4302   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":4282:4300   */\n      tag_157\n      tag_99\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":4266:4302   */\n    tag_156:\n        /* \"#utility.yul\":4118:4309   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4315:4497   */\n    tag_100:\n        /* \"#utility.yul\":4455:4489   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4451:4452   */\n      0x00\n        /* \"#utility.yul\":4443:4449   */\n      dup3\n        /* \"#utility.yul\":4439:4453   */\n      add\n        /* \"#utility.yul\":4432:4490   */\n      mstore\n        /* \"#utility.yul\":4315:4497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4503:4869   */\n    tag_101:\n        /* \"#utility.yul\":4645:4648   */\n      0x00\n        /* \"#utility.yul\":4666:4733   */\n      tag_160\n        /* \"#utility.yul\":4730:4732   */\n      0x20\n        /* \"#utility.yul\":4725:4728   */\n      dup4\n        /* \"#utility.yul\":4666:4733   */\n      tag_96\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":4659:4733   */\n      swap2\n      pop\n        /* \"#utility.yul\":4742:4835   */\n      tag_161\n        /* \"#utility.yul\":4831:4834   */\n      dup3\n        /* \"#utility.yul\":4742:4835   */\n      tag_100\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":4860:4862   */\n      0x20\n        /* \"#utility.yul\":4855:4858   */\n      dup3\n        /* \"#utility.yul\":4851:4863   */\n      add\n        /* \"#utility.yul\":4844:4863   */\n      swap1\n      pop\n        /* \"#utility.yul\":4503:4869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4875:5294   */\n    tag_68:\n        /* \"#utility.yul\":5041:5045   */\n      0x00\n        /* \"#utility.yul\":5079:5081   */\n      0x20\n        /* \"#utility.yul\":5068:5077   */\n      dup3\n        /* \"#utility.yul\":5064:5082   */\n      add\n        /* \"#utility.yul\":5056:5082   */\n      swap1\n      pop\n        /* \"#utility.yul\":5128:5137   */\n      dup2\n        /* \"#utility.yul\":5122:5126   */\n      dup2\n        /* \"#utility.yul\":5118:5138   */\n      sub\n        /* \"#utility.yul\":5114:5115   */\n      0x00\n        /* \"#utility.yul\":5103:5112   */\n      dup4\n        /* \"#utility.yul\":5099:5116   */\n      add\n        /* \"#utility.yul\":5092:5139   */\n      mstore\n        /* \"#utility.yul\":5156:5287   */\n      tag_163\n        /* \"#utility.yul\":5282:5286   */\n      dup2\n        /* \"#utility.yul\":5156:5287   */\n      tag_101\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5148:5287   */\n      swap1\n      pop\n        /* \"#utility.yul\":4875:5294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5300:5479   */\n    tag_102:\n        /* \"#utility.yul\":5440:5471   */\n      0x416464726573733a20696e73756666696369656e742062616c616e6365000000\n        /* \"#utility.yul\":5436:5437   */\n      0x00\n        /* \"#utility.yul\":5428:5434   */\n      dup3\n        /* \"#utility.yul\":5424:5438   */\n      add\n        /* \"#utility.yul\":5417:5472   */\n      mstore\n        /* \"#utility.yul\":5300:5479   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5485:5851   */\n    tag_103:\n        /* \"#utility.yul\":5627:5630   */\n      0x00\n        /* \"#utility.yul\":5648:5715   */\n      tag_166\n        /* \"#utility.yul\":5712:5714   */\n      0x1d\n        /* \"#utility.yul\":5707:5710   */\n      dup4\n        /* \"#utility.yul\":5648:5715   */\n      tag_96\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5641:5715   */\n      swap2\n      pop\n        /* \"#utility.yul\":5724:5817   */\n      tag_167\n        /* \"#utility.yul\":5813:5816   */\n      dup3\n        /* \"#utility.yul\":5724:5817   */\n      tag_102\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5842:5844   */\n      0x20\n        /* \"#utility.yul\":5837:5840   */\n      dup3\n        /* \"#utility.yul\":5833:5845   */\n      add\n        /* \"#utility.yul\":5826:5845   */\n      swap1\n      pop\n        /* \"#utility.yul\":5485:5851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5857:6276   */\n    tag_72:\n        /* \"#utility.yul\":6023:6027   */\n      0x00\n        /* \"#utility.yul\":6061:6063   */\n      0x20\n        /* \"#utility.yul\":6050:6059   */\n      dup3\n        /* \"#utility.yul\":6046:6064   */\n      add\n        /* \"#utility.yul\":6038:6064   */\n      swap1\n      pop\n        /* \"#utility.yul\":6110:6119   */\n      dup2\n        /* \"#utility.yul\":6104:6108   */\n      dup2\n        /* \"#utility.yul\":6100:6120   */\n      sub\n        /* \"#utility.yul\":6096:6097   */\n      0x00\n        /* \"#utility.yul\":6085:6094   */\n      dup4\n        /* \"#utility.yul\":6081:6098   */\n      add\n        /* \"#utility.yul\":6074:6121   */\n      mstore\n        /* \"#utility.yul\":6138:6269   */\n      tag_169\n        /* \"#utility.yul\":6264:6268   */\n      dup2\n        /* \"#utility.yul\":6138:6269   */\n      tag_103\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6130:6269   */\n      swap1\n      pop\n        /* \"#utility.yul\":5857:6276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6429   */\n    tag_104:\n        /* \"#utility.yul\":6383:6394   */\n      0x00\n        /* \"#utility.yul\":6420:6423   */\n      dup2\n        /* \"#utility.yul\":6405:6423   */\n      swap1\n      pop\n        /* \"#utility.yul\":6282:6429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6435:6549   */\n    tag_105:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6555:6953   */\n    tag_106:\n        /* \"#utility.yul\":6714:6717   */\n      0x00\n        /* \"#utility.yul\":6735:6818   */\n      tag_173\n        /* \"#utility.yul\":6816:6817   */\n      0x00\n        /* \"#utility.yul\":6811:6814   */\n      dup4\n        /* \"#utility.yul\":6735:6818   */\n      tag_104\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6728:6818   */\n      swap2\n      pop\n        /* \"#utility.yul\":6827:6920   */\n      tag_174\n        /* \"#utility.yul\":6916:6919   */\n      dup3\n        /* \"#utility.yul\":6827:6920   */\n      tag_105\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6945:6946   */\n      0x00\n        /* \"#utility.yul\":6940:6943   */\n      dup3\n        /* \"#utility.yul\":6936:6947   */\n      add\n        /* \"#utility.yul\":6929:6947   */\n      swap1\n      pop\n        /* \"#utility.yul\":6555:6953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6959:7338   */\n    tag_74:\n        /* \"#utility.yul\":7143:7146   */\n      0x00\n        /* \"#utility.yul\":7165:7312   */\n      tag_176\n        /* \"#utility.yul\":7308:7311   */\n      dup3\n        /* \"#utility.yul\":7165:7312   */\n      tag_106\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":7158:7312   */\n      swap2\n      pop\n        /* \"#utility.yul\":7329:7332   */\n      dup2\n        /* \"#utility.yul\":7322:7332   */\n      swap1\n      pop\n        /* \"#utility.yul\":6959:7338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7344:7589   */\n    tag_107:\n        /* \"#utility.yul\":7484:7518   */\n      0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072\n        /* \"#utility.yul\":7480:7481   */\n      0x00\n        /* \"#utility.yul\":7472:7478   */\n      dup3\n        /* \"#utility.yul\":7468:7482   */\n      add\n        /* \"#utility.yul\":7461:7519   */\n      mstore\n        /* \"#utility.yul\":7553:7581   */\n      0x6563697069656e74206d61792068617665207265766572746564000000000000\n        /* \"#utility.yul\":7548:7550   */\n      0x20\n        /* \"#utility.yul\":7540:7546   */\n      dup3\n        /* \"#utility.yul\":7536:7551   */\n      add\n        /* \"#utility.yul\":7529:7582   */\n      mstore\n        /* \"#utility.yul\":7344:7589   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7595:7961   */\n    tag_108:\n        /* \"#utility.yul\":7737:7740   */\n      0x00\n        /* \"#utility.yul\":7758:7825   */\n      tag_179\n        /* \"#utility.yul\":7822:7824   */\n      0x3a\n        /* \"#utility.yul\":7817:7820   */\n      dup4\n        /* \"#utility.yul\":7758:7825   */\n      tag_96\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7751:7825   */\n      swap2\n      pop\n        /* \"#utility.yul\":7834:7927   */\n      tag_180\n        /* \"#utility.yul\":7923:7926   */\n      dup3\n        /* \"#utility.yul\":7834:7927   */\n      tag_107\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7952:7954   */\n      0x40\n        /* \"#utility.yul\":7947:7950   */\n      dup3\n        /* \"#utility.yul\":7943:7955   */\n      add\n        /* \"#utility.yul\":7936:7955   */\n      swap1\n      pop\n        /* \"#utility.yul\":7595:7961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7967:8386   */\n    tag_80:\n        /* \"#utility.yul\":8133:8137   */\n      0x00\n        /* \"#utility.yul\":8171:8173   */\n      0x20\n        /* \"#utility.yul\":8160:8169   */\n      dup3\n        /* \"#utility.yul\":8156:8174   */\n      add\n        /* \"#utility.yul\":8148:8174   */\n      swap1\n      pop\n        /* \"#utility.yul\":8220:8229   */\n      dup2\n        /* \"#utility.yul\":8214:8218   */\n      dup2\n        /* \"#utility.yul\":8210:8230   */\n      sub\n        /* \"#utility.yul\":8206:8207   */\n      0x00\n        /* \"#utility.yul\":8195:8204   */\n      dup4\n        /* \"#utility.yul\":8191:8208   */\n      add\n        /* \"#utility.yul\":8184:8231   */\n      mstore\n        /* \"#utility.yul\":8248:8379   */\n      tag_182\n        /* \"#utility.yul\":8374:8378   */\n      dup2\n        /* \"#utility.yul\":8248:8379   */\n      tag_108\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":8240:8379   */\n      swap1\n      pop\n        /* \"#utility.yul\":7967:8386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122012a4860e09a717af7d33265f9e506d1a830515a3b4fedeb21ebc477aec6d536864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1117": {
									"entryPoint": 49,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 56,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5061002c61002161003160201b60201c565b61003860201b60201c565b6100f9565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a4a806101065f395ff3fe608060405260043610610054575f3560e01c806351cff8d914610058578063715018a6146100805780638da5cb5b14610096578063e3a9db1a146100c0578063f2fde38b146100fc578063f340fa0114610124575b5f80fd5b348015610063575f80fd5b5061007e6004803603810190610079919061068d565b610140565b005b34801561008b575f80fd5b50610094610246565b005b3480156100a1575f80fd5b506100aa610259565b6040516100b791906106d8565b60405180910390f35b3480156100cb575f80fd5b506100e660048036038101906100e1919061071b565b610280565b6040516100f3919061075e565b60405180910390f35b348015610107575f80fd5b50610122600480360381019061011d919061071b565b6102c6565b005b61013e6004803603810190610139919061071b565b610348565b005b6101486103f9565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506101f4818373ffffffffffffffffffffffffffffffffffffffff1661047790919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161023a919061075e565b60405180910390a25050565b61024e6103f9565b6102575f610567565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6102ce6103f9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361033c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610333906107f7565b60405180910390fd5b61034581610567565b50565b6103506103f9565b5f3490508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103a09190610842565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040516103ed919061075e565b60405180910390a25050565b610401610628565b73ffffffffffffffffffffffffffffffffffffffff1661041f610259565b73ffffffffffffffffffffffffffffffffffffffff1614610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046c906108bf565b60405180910390fd5b565b804710156104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b190610927565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff16826040516104df90610972565b5f6040518083038185875af1925050503d805f8114610519576040519150601f19603f3d011682016040523d82523d5f602084013e61051e565b606091505b5050905080610562576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610559906109f6565b60405180910390fd5b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61065c82610633565b9050919050565b61066c81610652565b8114610676575f80fd5b50565b5f8135905061068781610663565b92915050565b5f602082840312156106a2576106a161062f565b5b5f6106af84828501610679565b91505092915050565b5f6106c282610633565b9050919050565b6106d2816106b8565b82525050565b5f6020820190506106eb5f8301846106c9565b92915050565b6106fa816106b8565b8114610704575f80fd5b50565b5f81359050610715816106f1565b92915050565b5f602082840312156107305761072f61062f565b5b5f61073d84828501610707565b91505092915050565b5f819050919050565b61075881610746565b82525050565b5f6020820190506107715f83018461074f565b92915050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6107e1602683610777565b91506107ec82610787565b604082019050919050565b5f6020820190508181035f83015261080e816107d5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61084c82610746565b915061085783610746565b925082820190508082111561086f5761086e610815565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6108a9602083610777565b91506108b482610875565b602082019050919050565b5f6020820190508181035f8301526108d68161089d565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e63650000005f82015250565b5f610911601d83610777565b915061091c826108dd565b602082019050919050565b5f6020820190508181035f83015261093e81610905565b9050919050565b5f81905092915050565b50565b5f61095d5f83610945565b91506109688261094f565b5f82019050919050565b5f61097c82610952565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c20725f8201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b5f6109e0603a83610777565b91506109eb82610986565b604082019050919050565b5f6020820190508181035f830152610a0d816109d4565b905091905056fea264697066735822122012a4860e09a717af7d33265f9e506d1a830515a3b4fedeb21ebc477aec6d536864736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C PUSH2 0x21 PUSH2 0x31 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x38 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA4A DUP1 PUSH2 0x106 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH2 0x140 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x94 PUSH2 0x246 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x148 PUSH2 0x3F9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x24E PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x257 PUSH0 PUSH2 0x567 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE PUSH2 0x3F9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x345 DUP2 PUSH2 0x567 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x350 PUSH2 0x3F9 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x401 PUSH2 0x628 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x41F PUSH2 0x259 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP1 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B1 SWAP1 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP1 PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x65C DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66C DUP2 PUSH2 0x652 JUMP JUMPDEST DUP2 EQ PUSH2 0x676 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x687 DUP2 PUSH2 0x663 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6AF DUP5 DUP3 DUP6 ADD PUSH2 0x679 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C2 DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D2 DUP2 PUSH2 0x6B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6EB PUSH0 DUP4 ADD DUP5 PUSH2 0x6C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6FA DUP2 PUSH2 0x6B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x704 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x715 DUP2 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x730 JUMPI PUSH2 0x72F PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x73D DUP5 DUP3 DUP6 ADD PUSH2 0x707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x771 PUSH0 DUP4 ADD DUP5 PUSH2 0x74F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7E1 PUSH1 0x26 DUP4 PUSH2 0x777 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EC DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x80E DUP2 PUSH2 0x7D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x84C DUP3 PUSH2 0x746 JUMP JUMPDEST SWAP2 POP PUSH2 0x857 DUP4 PUSH2 0x746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x86F JUMPI PUSH2 0x86E PUSH2 0x815 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8A9 PUSH1 0x20 DUP4 PUSH2 0x777 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B4 DUP3 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8D6 DUP2 PUSH2 0x89D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x911 PUSH1 0x1D DUP4 PUSH2 0x777 JUMP JUMPDEST SWAP2 POP PUSH2 0x91C DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x93E DUP2 PUSH2 0x905 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x95D PUSH0 DUP4 PUSH2 0x945 JUMP JUMPDEST SWAP2 POP PUSH2 0x968 DUP3 PUSH2 0x94F JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x97C DUP3 PUSH2 0x952 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH0 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9E0 PUSH1 0x3A DUP4 PUSH2 0x777 JUMP JUMPDEST SWAP2 POP PUSH2 0x9EB DUP3 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA0D DUP2 PUSH2 0x9D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT LOG4 DUP7 0xE MULMOD 0xA7 OR 0xAF PUSH30 0x33265F9E506D1A830515A3B4FEDEB21EBC477AEC6D536864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "825:1428:9:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;825:1428:9;;656:96:7;709:7;735:10;728:17;;656:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;825:1428:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1017,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1117": {
									"entryPoint": 1576,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1383,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_1225": {
									"entryPoint": 840,
									"id": 1225,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositsOf_1200": {
									"entryPoint": 640,
									"id": 1200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 601,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 582,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendValue_827": {
									"entryPoint": 1143,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 710,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1257": {
									"entryPoint": 320,
									"id": 1257,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae": {
									"entryPoint": 2438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8389:18",
										"nodeType": "YulBlock",
										"src": "0:8389:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "379:81:18",
													"nodeType": "YulBlock",
													"src": "379:81:18",
													"statements": [
														{
															"nativeSrc": "389:65:18",
															"nodeType": "YulAssignment",
															"src": "389:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:18",
																		"nodeType": "YulLiteral",
																		"src": "411:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:18"
																},
																"nativeSrc": "400:54:18",
																"nodeType": "YulFunctionCall",
																"src": "400:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:18",
														"nodeType": "YulTypedName",
														"src": "361:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:18",
														"nodeType": "YulTypedName",
														"src": "371:7:18",
														"type": ""
													}
												],
												"src": "334:126:18"
											},
											{
												"body": {
													"nativeSrc": "519:51:18",
													"nodeType": "YulBlock",
													"src": "519:51:18",
													"statements": [
														{
															"nativeSrc": "529:35:18",
															"nodeType": "YulAssignment",
															"src": "529:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "558:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "558:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "540:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "540:17:18"
																},
																"nativeSrc": "540:24:18",
																"nodeType": "YulFunctionCall",
																"src": "540:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "529:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "529:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "466:104:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "501:5:18",
														"nodeType": "YulTypedName",
														"src": "501:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "511:7:18",
														"nodeType": "YulTypedName",
														"src": "511:7:18",
														"type": ""
													}
												],
												"src": "466:104:18"
											},
											{
												"body": {
													"nativeSrc": "627:87:18",
													"nodeType": "YulBlock",
													"src": "627:87:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "692:16:18",
																"nodeType": "YulBlock",
																"src": "692:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "701:1:18",
																					"nodeType": "YulLiteral",
																					"src": "701:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "704:1:18",
																					"nodeType": "YulLiteral",
																					"src": "704:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "694:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:18"
																			},
																			"nativeSrc": "694:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:18"
																		},
																		"nativeSrc": "694:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "650:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "650:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "683:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "683:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "657:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "657:25:18"
																				},
																				"nativeSrc": "657:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "657:32:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "647:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "647:2:18"
																		},
																		"nativeSrc": "647:43:18",
																		"nodeType": "YulFunctionCall",
																		"src": "647:43:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "640:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:18"
																},
																"nativeSrc": "640:51:18",
																"nodeType": "YulFunctionCall",
																"src": "640:51:18"
															},
															"nativeSrc": "637:71:18",
															"nodeType": "YulIf",
															"src": "637:71:18"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "576:138:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:18",
														"nodeType": "YulTypedName",
														"src": "620:5:18",
														"type": ""
													}
												],
												"src": "576:138:18"
											},
											{
												"body": {
													"nativeSrc": "780:95:18",
													"nodeType": "YulBlock",
													"src": "780:95:18",
													"statements": [
														{
															"nativeSrc": "790:29:18",
															"nodeType": "YulAssignment",
															"src": "790:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "812:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "799:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "799:12:18"
																},
																"nativeSrc": "799:20:18",
																"nodeType": "YulFunctionCall",
																"src": "799:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "790:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "790:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "863:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "863:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "828:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "828:34:18"
																},
																"nativeSrc": "828:41:18",
																"nodeType": "YulFunctionCall",
																"src": "828:41:18"
															},
															"nativeSrc": "828:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "828:41:18"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "720:155:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "758:6:18",
														"nodeType": "YulTypedName",
														"src": "758:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "766:3:18",
														"nodeType": "YulTypedName",
														"src": "766:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "774:5:18",
														"nodeType": "YulTypedName",
														"src": "774:5:18",
														"type": ""
													}
												],
												"src": "720:155:18"
											},
											{
												"body": {
													"nativeSrc": "955:271:18",
													"nodeType": "YulBlock",
													"src": "955:271:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1001:83:18",
																"nodeType": "YulBlock",
																"src": "1001:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1003:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "1003:77:18"
																			},
																			"nativeSrc": "1003:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1003:79:18"
																		},
																		"nativeSrc": "1003:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1003:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "976:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "976:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "985:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "972:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "972:3:18"
																		},
																		"nativeSrc": "972:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "972:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "997:2:18",
																		"nodeType": "YulLiteral",
																		"src": "997:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "968:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "968:3:18"
																},
																"nativeSrc": "968:32:18",
																"nodeType": "YulFunctionCall",
																"src": "968:32:18"
															},
															"nativeSrc": "965:119:18",
															"nodeType": "YulIf",
															"src": "965:119:18"
														},
														{
															"nativeSrc": "1094:125:18",
															"nodeType": "YulBlock",
															"src": "1094:125:18",
															"statements": [
																{
																	"nativeSrc": "1109:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1109:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1123:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1123:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1113:6:18",
																			"nodeType": "YulTypedName",
																			"src": "1113:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1138:71:18",
																	"nodeType": "YulAssignment",
																	"src": "1138:71:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1181:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1181:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1192:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1192:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1177:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1177:3:18"
																				},
																				"nativeSrc": "1177:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1177:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1201:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1201:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "1148:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "1148:28:18"
																		},
																		"nativeSrc": "1148:61:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1148:61:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1138:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1138:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nativeSrc": "881:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "925:9:18",
														"nodeType": "YulTypedName",
														"src": "925:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "936:7:18",
														"nodeType": "YulTypedName",
														"src": "936:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "948:6:18",
														"nodeType": "YulTypedName",
														"src": "948:6:18",
														"type": ""
													}
												],
												"src": "881:345:18"
											},
											{
												"body": {
													"nativeSrc": "1277:51:18",
													"nodeType": "YulBlock",
													"src": "1277:51:18",
													"statements": [
														{
															"nativeSrc": "1287:35:18",
															"nodeType": "YulAssignment",
															"src": "1287:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1316:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1316:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1298:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1298:17:18"
																},
																"nativeSrc": "1298:24:18",
																"nodeType": "YulFunctionCall",
																"src": "1298:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1287:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1287:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1232:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1259:5:18",
														"nodeType": "YulTypedName",
														"src": "1259:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1269:7:18",
														"nodeType": "YulTypedName",
														"src": "1269:7:18",
														"type": ""
													}
												],
												"src": "1232:96:18"
											},
											{
												"body": {
													"nativeSrc": "1399:53:18",
													"nodeType": "YulBlock",
													"src": "1399:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1416:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1416:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1439:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1439:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1421:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "1421:17:18"
																		},
																		"nativeSrc": "1421:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1409:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1409:6:18"
																},
																"nativeSrc": "1409:37:18",
																"nodeType": "YulFunctionCall",
																"src": "1409:37:18"
															},
															"nativeSrc": "1409:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "1409:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1334:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1387:5:18",
														"nodeType": "YulTypedName",
														"src": "1387:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1394:3:18",
														"nodeType": "YulTypedName",
														"src": "1394:3:18",
														"type": ""
													}
												],
												"src": "1334:118:18"
											},
											{
												"body": {
													"nativeSrc": "1556:124:18",
													"nodeType": "YulBlock",
													"src": "1556:124:18",
													"statements": [
														{
															"nativeSrc": "1566:26:18",
															"nodeType": "YulAssignment",
															"src": "1566:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1578:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1578:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1589:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1589:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1574:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1574:3:18"
																},
																"nativeSrc": "1574:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1574:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1566:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1566:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1646:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1659:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1659:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1670:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1670:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1655:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1655:3:18"
																		},
																		"nativeSrc": "1655:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1655:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1602:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "1602:43:18"
																},
																"nativeSrc": "1602:71:18",
																"nodeType": "YulFunctionCall",
																"src": "1602:71:18"
															},
															"nativeSrc": "1602:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "1602:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1458:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1528:9:18",
														"nodeType": "YulTypedName",
														"src": "1528:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1540:6:18",
														"nodeType": "YulTypedName",
														"src": "1540:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1551:4:18",
														"nodeType": "YulTypedName",
														"src": "1551:4:18",
														"type": ""
													}
												],
												"src": "1458:222:18"
											},
											{
												"body": {
													"nativeSrc": "1729:79:18",
													"nodeType": "YulBlock",
													"src": "1729:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1786:16:18",
																"nodeType": "YulBlock",
																"src": "1786:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1795:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1795:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1798:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1798:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1788:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1788:6:18"
																			},
																			"nativeSrc": "1788:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1788:12:18"
																		},
																		"nativeSrc": "1788:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1788:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1752:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1752:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1777:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1777:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1759:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1759:17:18"
																				},
																				"nativeSrc": "1759:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1759:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1749:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1749:2:18"
																		},
																		"nativeSrc": "1749:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1749:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1742:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:18"
																},
																"nativeSrc": "1742:43:18",
																"nodeType": "YulFunctionCall",
																"src": "1742:43:18"
															},
															"nativeSrc": "1739:63:18",
															"nodeType": "YulIf",
															"src": "1739:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1686:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1722:5:18",
														"nodeType": "YulTypedName",
														"src": "1722:5:18",
														"type": ""
													}
												],
												"src": "1686:122:18"
											},
											{
												"body": {
													"nativeSrc": "1866:87:18",
													"nodeType": "YulBlock",
													"src": "1866:87:18",
													"statements": [
														{
															"nativeSrc": "1876:29:18",
															"nodeType": "YulAssignment",
															"src": "1876:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1898:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1898:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1885:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1885:12:18"
																},
																"nativeSrc": "1885:20:18",
																"nodeType": "YulFunctionCall",
																"src": "1885:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1876:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1876:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1941:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1941:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1914:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "1914:26:18"
																},
																"nativeSrc": "1914:33:18",
																"nodeType": "YulFunctionCall",
																"src": "1914:33:18"
															},
															"nativeSrc": "1914:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "1914:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1814:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1844:6:18",
														"nodeType": "YulTypedName",
														"src": "1844:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1852:3:18",
														"nodeType": "YulTypedName",
														"src": "1852:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1860:5:18",
														"nodeType": "YulTypedName",
														"src": "1860:5:18",
														"type": ""
													}
												],
												"src": "1814:139:18"
											},
											{
												"body": {
													"nativeSrc": "2025:263:18",
													"nodeType": "YulBlock",
													"src": "2025:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2071:83:18",
																"nodeType": "YulBlock",
																"src": "2071:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2073:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "2073:77:18"
																			},
																			"nativeSrc": "2073:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2073:79:18"
																		},
																		"nativeSrc": "2073:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2073:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2046:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2046:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2055:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2055:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2042:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2042:3:18"
																		},
																		"nativeSrc": "2042:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2042:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2067:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2067:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2038:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2038:3:18"
																},
																"nativeSrc": "2038:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2038:32:18"
															},
															"nativeSrc": "2035:119:18",
															"nodeType": "YulIf",
															"src": "2035:119:18"
														},
														{
															"nativeSrc": "2164:117:18",
															"nodeType": "YulBlock",
															"src": "2164:117:18",
															"statements": [
																{
																	"nativeSrc": "2179:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2179:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2193:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2193:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2183:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2183:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2208:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2208:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2243:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2243:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2254:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2254:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2239:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2239:3:18"
																				},
																				"nativeSrc": "2239:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2239:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2263:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2263:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2218:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2218:20:18"
																		},
																		"nativeSrc": "2218:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2208:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2208:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1959:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1995:9:18",
														"nodeType": "YulTypedName",
														"src": "1995:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2006:7:18",
														"nodeType": "YulTypedName",
														"src": "2006:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2018:6:18",
														"nodeType": "YulTypedName",
														"src": "2018:6:18",
														"type": ""
													}
												],
												"src": "1959:329:18"
											},
											{
												"body": {
													"nativeSrc": "2339:32:18",
													"nodeType": "YulBlock",
													"src": "2339:32:18",
													"statements": [
														{
															"nativeSrc": "2349:16:18",
															"nodeType": "YulAssignment",
															"src": "2349:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2360:5:18",
																"nodeType": "YulIdentifier",
																"src": "2360:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2349:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2349:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2294:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2321:5:18",
														"nodeType": "YulTypedName",
														"src": "2321:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2331:7:18",
														"nodeType": "YulTypedName",
														"src": "2331:7:18",
														"type": ""
													}
												],
												"src": "2294:77:18"
											},
											{
												"body": {
													"nativeSrc": "2442:53:18",
													"nodeType": "YulBlock",
													"src": "2442:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2459:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2459:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2482:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2482:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2464:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "2464:17:18"
																		},
																		"nativeSrc": "2464:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2464:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2452:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2452:6:18"
																},
																"nativeSrc": "2452:37:18",
																"nodeType": "YulFunctionCall",
																"src": "2452:37:18"
															},
															"nativeSrc": "2452:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "2452:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2377:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2430:5:18",
														"nodeType": "YulTypedName",
														"src": "2430:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2437:3:18",
														"nodeType": "YulTypedName",
														"src": "2437:3:18",
														"type": ""
													}
												],
												"src": "2377:118:18"
											},
											{
												"body": {
													"nativeSrc": "2599:124:18",
													"nodeType": "YulBlock",
													"src": "2599:124:18",
													"statements": [
														{
															"nativeSrc": "2609:26:18",
															"nodeType": "YulAssignment",
															"src": "2609:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2621:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2621:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2632:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2632:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2617:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2617:3:18"
																},
																"nativeSrc": "2617:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2617:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2609:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2609:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2689:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2689:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2702:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2713:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2713:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2698:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:18"
																		},
																		"nativeSrc": "2698:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2645:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "2645:43:18"
																},
																"nativeSrc": "2645:71:18",
																"nodeType": "YulFunctionCall",
																"src": "2645:71:18"
															},
															"nativeSrc": "2645:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "2645:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2501:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2571:9:18",
														"nodeType": "YulTypedName",
														"src": "2571:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2583:6:18",
														"nodeType": "YulTypedName",
														"src": "2583:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2594:4:18",
														"nodeType": "YulTypedName",
														"src": "2594:4:18",
														"type": ""
													}
												],
												"src": "2501:222:18"
											},
											{
												"body": {
													"nativeSrc": "2825:73:18",
													"nodeType": "YulBlock",
													"src": "2825:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2842:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2842:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2847:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2847:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2835:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2835:6:18"
																},
																"nativeSrc": "2835:19:18",
																"nodeType": "YulFunctionCall",
																"src": "2835:19:18"
															},
															"nativeSrc": "2835:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "2835:19:18"
														},
														{
															"nativeSrc": "2863:29:18",
															"nodeType": "YulAssignment",
															"src": "2863:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2882:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2882:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2887:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2887:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2878:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2878:3:18"
																},
																"nativeSrc": "2878:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2878:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2863:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "2863:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2729:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2797:3:18",
														"nodeType": "YulTypedName",
														"src": "2797:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2802:6:18",
														"nodeType": "YulTypedName",
														"src": "2802:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2813:11:18",
														"nodeType": "YulTypedName",
														"src": "2813:11:18",
														"type": ""
													}
												],
												"src": "2729:169:18"
											},
											{
												"body": {
													"nativeSrc": "3010:119:18",
													"nodeType": "YulBlock",
													"src": "3010:119:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3032:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3032:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3040:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3040:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3028:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3028:3:18"
																		},
																		"nativeSrc": "3028:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3028:14:18"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "3044:34:18",
																		"nodeType": "YulLiteral",
																		"src": "3044:34:18",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3021:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3021:6:18"
																},
																"nativeSrc": "3021:58:18",
																"nodeType": "YulFunctionCall",
																"src": "3021:58:18"
															},
															"nativeSrc": "3021:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "3021:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3100:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3100:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3108:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3108:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3096:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3096:3:18"
																		},
																		"nativeSrc": "3096:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3096:15:18"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "3113:8:18",
																		"nodeType": "YulLiteral",
																		"src": "3113:8:18",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3089:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3089:6:18"
																},
																"nativeSrc": "3089:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3089:33:18"
															},
															"nativeSrc": "3089:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "3089:33:18"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "2904:225:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3002:6:18",
														"nodeType": "YulTypedName",
														"src": "3002:6:18",
														"type": ""
													}
												],
												"src": "2904:225:18"
											},
											{
												"body": {
													"nativeSrc": "3281:220:18",
													"nodeType": "YulBlock",
													"src": "3281:220:18",
													"statements": [
														{
															"nativeSrc": "3291:74:18",
															"nodeType": "YulAssignment",
															"src": "3291:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3357:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3357:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3362:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3362:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3298:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "3298:58:18"
																},
																"nativeSrc": "3298:67:18",
																"nodeType": "YulFunctionCall",
																"src": "3298:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3291:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3291:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3463:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3463:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "3374:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "3374:88:18"
																},
																"nativeSrc": "3374:93:18",
																"nodeType": "YulFunctionCall",
																"src": "3374:93:18"
															},
															"nativeSrc": "3374:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "3374:93:18"
														},
														{
															"nativeSrc": "3476:19:18",
															"nodeType": "YulAssignment",
															"src": "3476:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3487:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3487:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3492:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3492:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3483:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3483:3:18"
																},
																"nativeSrc": "3483:12:18",
																"nodeType": "YulFunctionCall",
																"src": "3483:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3476:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3476:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3135:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3269:3:18",
														"nodeType": "YulTypedName",
														"src": "3269:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3277:3:18",
														"nodeType": "YulTypedName",
														"src": "3277:3:18",
														"type": ""
													}
												],
												"src": "3135:366:18"
											},
											{
												"body": {
													"nativeSrc": "3678:248:18",
													"nodeType": "YulBlock",
													"src": "3678:248:18",
													"statements": [
														{
															"nativeSrc": "3688:26:18",
															"nodeType": "YulAssignment",
															"src": "3688:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3700:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3700:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3711:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3696:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3696:3:18"
																},
																"nativeSrc": "3696:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3696:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3688:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3688:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3735:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3735:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3746:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3746:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:18"
																		},
																		"nativeSrc": "3731:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3731:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3754:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "3754:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3760:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3760:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3750:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3750:3:18"
																		},
																		"nativeSrc": "3750:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3750:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3724:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3724:6:18"
																},
																"nativeSrc": "3724:47:18",
																"nodeType": "YulFunctionCall",
																"src": "3724:47:18"
															},
															"nativeSrc": "3724:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "3724:47:18"
														},
														{
															"nativeSrc": "3780:139:18",
															"nodeType": "YulAssignment",
															"src": "3780:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3914:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3914:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3788:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "3788:124:18"
																},
																"nativeSrc": "3788:131:18",
																"nodeType": "YulFunctionCall",
																"src": "3788:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3780:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3780:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3507:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3658:9:18",
														"nodeType": "YulTypedName",
														"src": "3658:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3673:4:18",
														"nodeType": "YulTypedName",
														"src": "3673:4:18",
														"type": ""
													}
												],
												"src": "3507:419:18"
											},
											{
												"body": {
													"nativeSrc": "3960:152:18",
													"nodeType": "YulBlock",
													"src": "3960:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3977:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3977:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3980:77:18",
																		"nodeType": "YulLiteral",
																		"src": "3980:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3970:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3970:6:18"
																},
																"nativeSrc": "3970:88:18",
																"nodeType": "YulFunctionCall",
																"src": "3970:88:18"
															},
															"nativeSrc": "3970:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "3970:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4074:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4074:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4077:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4077:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4067:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:18"
																},
																"nativeSrc": "4067:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4067:15:18"
															},
															"nativeSrc": "4067:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "4067:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4098:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4098:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4101:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4101:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4091:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:18"
																},
																"nativeSrc": "4091:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4091:15:18"
															},
															"nativeSrc": "4091:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "4091:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3932:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "3932:180:18"
											},
											{
												"body": {
													"nativeSrc": "4162:147:18",
													"nodeType": "YulBlock",
													"src": "4162:147:18",
													"statements": [
														{
															"nativeSrc": "4172:25:18",
															"nodeType": "YulAssignment",
															"src": "4172:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4195:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "4195:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4177:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "4177:17:18"
																},
																"nativeSrc": "4177:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4177:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4172:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "4172:1:18"
																}
															]
														},
														{
															"nativeSrc": "4206:25:18",
															"nodeType": "YulAssignment",
															"src": "4206:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4229:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "4229:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4211:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "4211:17:18"
																},
																"nativeSrc": "4211:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4211:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4206:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "4206:1:18"
																}
															]
														},
														{
															"nativeSrc": "4240:16:18",
															"nodeType": "YulAssignment",
															"src": "4240:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4251:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "4251:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4254:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "4254:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4247:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4247:3:18"
																},
																"nativeSrc": "4247:9:18",
																"nodeType": "YulFunctionCall",
																"src": "4247:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4240:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4240:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4280:22:18",
																"nodeType": "YulBlock",
																"src": "4280:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4282:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "4282:16:18"
																			},
																			"nativeSrc": "4282:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4282:18:18"
																		},
																		"nativeSrc": "4282:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4282:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4272:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "4272:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4275:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4275:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4269:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4269:2:18"
																},
																"nativeSrc": "4269:10:18",
																"nodeType": "YulFunctionCall",
																"src": "4269:10:18"
															},
															"nativeSrc": "4266:36:18",
															"nodeType": "YulIf",
															"src": "4266:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4118:191:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4149:1:18",
														"nodeType": "YulTypedName",
														"src": "4149:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4152:1:18",
														"nodeType": "YulTypedName",
														"src": "4152:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4158:3:18",
														"nodeType": "YulTypedName",
														"src": "4158:3:18",
														"type": ""
													}
												],
												"src": "4118:191:18"
											},
											{
												"body": {
													"nativeSrc": "4421:76:18",
													"nodeType": "YulBlock",
													"src": "4421:76:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4443:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4443:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4451:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4451:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4439:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4439:3:18"
																		},
																		"nativeSrc": "4439:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4439:14:18"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4455:34:18",
																		"nodeType": "YulLiteral",
																		"src": "4455:34:18",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4432:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4432:6:18"
																},
																"nativeSrc": "4432:58:18",
																"nodeType": "YulFunctionCall",
																"src": "4432:58:18"
															},
															"nativeSrc": "4432:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "4432:58:18"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "4315:182:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4413:6:18",
														"nodeType": "YulTypedName",
														"src": "4413:6:18",
														"type": ""
													}
												],
												"src": "4315:182:18"
											},
											{
												"body": {
													"nativeSrc": "4649:220:18",
													"nodeType": "YulBlock",
													"src": "4649:220:18",
													"statements": [
														{
															"nativeSrc": "4659:74:18",
															"nodeType": "YulAssignment",
															"src": "4659:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4725:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4725:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4730:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4730:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4666:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "4666:58:18"
																},
																"nativeSrc": "4666:67:18",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4659:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4831:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4831:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "4742:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "4742:88:18"
																},
																"nativeSrc": "4742:93:18",
																"nodeType": "YulFunctionCall",
																"src": "4742:93:18"
															},
															"nativeSrc": "4742:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "4742:93:18"
														},
														{
															"nativeSrc": "4844:19:18",
															"nodeType": "YulAssignment",
															"src": "4844:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4855:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4855:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4860:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4860:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4851:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:18"
																},
																"nativeSrc": "4851:12:18",
																"nodeType": "YulFunctionCall",
																"src": "4851:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4844:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4503:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4637:3:18",
														"nodeType": "YulTypedName",
														"src": "4637:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4645:3:18",
														"nodeType": "YulTypedName",
														"src": "4645:3:18",
														"type": ""
													}
												],
												"src": "4503:366:18"
											},
											{
												"body": {
													"nativeSrc": "5046:248:18",
													"nodeType": "YulBlock",
													"src": "5046:248:18",
													"statements": [
														{
															"nativeSrc": "5056:26:18",
															"nodeType": "YulAssignment",
															"src": "5056:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5068:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5068:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5079:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5079:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5064:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5064:3:18"
																},
																"nativeSrc": "5064:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5064:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5056:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5056:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5103:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5103:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5114:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5114:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5099:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5099:3:18"
																		},
																		"nativeSrc": "5099:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5099:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5122:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "5122:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5128:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5128:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5118:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5118:3:18"
																		},
																		"nativeSrc": "5118:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5118:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5092:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:18"
																},
																"nativeSrc": "5092:47:18",
																"nodeType": "YulFunctionCall",
																"src": "5092:47:18"
															},
															"nativeSrc": "5092:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "5092:47:18"
														},
														{
															"nativeSrc": "5148:139:18",
															"nodeType": "YulAssignment",
															"src": "5148:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5282:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "5282:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5156:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "5156:124:18"
																},
																"nativeSrc": "5156:131:18",
																"nodeType": "YulFunctionCall",
																"src": "5156:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5148:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5148:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4875:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5026:9:18",
														"nodeType": "YulTypedName",
														"src": "5026:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5041:4:18",
														"nodeType": "YulTypedName",
														"src": "5041:4:18",
														"type": ""
													}
												],
												"src": "4875:419:18"
											},
											{
												"body": {
													"nativeSrc": "5406:73:18",
													"nodeType": "YulBlock",
													"src": "5406:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5428:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5428:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5436:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5436:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5424:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5424:3:18"
																		},
																		"nativeSrc": "5424:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5424:14:18"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5440:31:18",
																		"nodeType": "YulLiteral",
																		"src": "5440:31:18",
																		"type": "",
																		"value": "Address: insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5417:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5417:6:18"
																},
																"nativeSrc": "5417:55:18",
																"nodeType": "YulFunctionCall",
																"src": "5417:55:18"
															},
															"nativeSrc": "5417:55:18",
															"nodeType": "YulExpressionStatement",
															"src": "5417:55:18"
														}
													]
												},
												"name": "store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
												"nativeSrc": "5300:179:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5398:6:18",
														"nodeType": "YulTypedName",
														"src": "5398:6:18",
														"type": ""
													}
												],
												"src": "5300:179:18"
											},
											{
												"body": {
													"nativeSrc": "5631:220:18",
													"nodeType": "YulBlock",
													"src": "5631:220:18",
													"statements": [
														{
															"nativeSrc": "5641:74:18",
															"nodeType": "YulAssignment",
															"src": "5641:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5707:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5707:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5712:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5712:2:18",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5648:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "5648:58:18"
																},
																"nativeSrc": "5648:67:18",
																"nodeType": "YulFunctionCall",
																"src": "5648:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5641:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5641:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5813:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5813:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																	"nativeSrc": "5724:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "5724:88:18"
																},
																"nativeSrc": "5724:93:18",
																"nodeType": "YulFunctionCall",
																"src": "5724:93:18"
															},
															"nativeSrc": "5724:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "5724:93:18"
														},
														{
															"nativeSrc": "5826:19:18",
															"nodeType": "YulAssignment",
															"src": "5826:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5837:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5837:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5842:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5842:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5833:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5833:3:18"
																},
																"nativeSrc": "5833:12:18",
																"nodeType": "YulFunctionCall",
																"src": "5833:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5826:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5826:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5485:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5619:3:18",
														"nodeType": "YulTypedName",
														"src": "5619:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5627:3:18",
														"nodeType": "YulTypedName",
														"src": "5627:3:18",
														"type": ""
													}
												],
												"src": "5485:366:18"
											},
											{
												"body": {
													"nativeSrc": "6028:248:18",
													"nodeType": "YulBlock",
													"src": "6028:248:18",
													"statements": [
														{
															"nativeSrc": "6038:26:18",
															"nodeType": "YulAssignment",
															"src": "6038:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6050:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6050:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6061:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6061:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6046:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6046:3:18"
																},
																"nativeSrc": "6046:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6046:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6038:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6038:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6085:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6085:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6096:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6096:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6081:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6081:3:18"
																		},
																		"nativeSrc": "6081:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6081:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6104:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6104:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6110:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6110:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6100:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6100:3:18"
																		},
																		"nativeSrc": "6100:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6100:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6074:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6074:6:18"
																},
																"nativeSrc": "6074:47:18",
																"nodeType": "YulFunctionCall",
																"src": "6074:47:18"
															},
															"nativeSrc": "6074:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "6074:47:18"
														},
														{
															"nativeSrc": "6130:139:18",
															"nodeType": "YulAssignment",
															"src": "6130:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6264:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6264:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6138:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "6138:124:18"
																},
																"nativeSrc": "6138:131:18",
																"nodeType": "YulFunctionCall",
																"src": "6138:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6130:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6130:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5857:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6008:9:18",
														"nodeType": "YulTypedName",
														"src": "6008:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6023:4:18",
														"nodeType": "YulTypedName",
														"src": "6023:4:18",
														"type": ""
													}
												],
												"src": "5857:419:18"
											},
											{
												"body": {
													"nativeSrc": "6395:34:18",
													"nodeType": "YulBlock",
													"src": "6395:34:18",
													"statements": [
														{
															"nativeSrc": "6405:18:18",
															"nodeType": "YulAssignment",
															"src": "6405:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "6420:3:18",
																"nodeType": "YulIdentifier",
																"src": "6420:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6405:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "6405:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6282:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6367:3:18",
														"nodeType": "YulTypedName",
														"src": "6367:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6372:6:18",
														"nodeType": "YulTypedName",
														"src": "6372:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6383:11:18",
														"nodeType": "YulTypedName",
														"src": "6383:11:18",
														"type": ""
													}
												],
												"src": "6282:147:18"
											},
											{
												"body": {
													"nativeSrc": "6541:8:18",
													"nodeType": "YulBlock",
													"src": "6541:8:18",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "6435:114:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6533:6:18",
														"nodeType": "YulTypedName",
														"src": "6533:6:18",
														"type": ""
													}
												],
												"src": "6435:114:18"
											},
											{
												"body": {
													"nativeSrc": "6718:235:18",
													"nodeType": "YulBlock",
													"src": "6718:235:18",
													"statements": [
														{
															"nativeSrc": "6728:90:18",
															"nodeType": "YulAssignment",
															"src": "6728:90:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6811:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6811:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6816:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6816:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6735:75:18",
																	"nodeType": "YulIdentifier",
																	"src": "6735:75:18"
																},
																"nativeSrc": "6735:83:18",
																"nodeType": "YulFunctionCall",
																"src": "6735:83:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6728:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6728:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6916:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6916:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "6827:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "6827:88:18"
																},
																"nativeSrc": "6827:93:18",
																"nodeType": "YulFunctionCall",
																"src": "6827:93:18"
															},
															"nativeSrc": "6827:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "6827:93:18"
														},
														{
															"nativeSrc": "6929:18:18",
															"nodeType": "YulAssignment",
															"src": "6929:18:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6940:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6940:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6945:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6945:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6936:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6936:3:18"
																},
																"nativeSrc": "6936:11:18",
																"nodeType": "YulFunctionCall",
																"src": "6936:11:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6929:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6929:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6555:398:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6706:3:18",
														"nodeType": "YulTypedName",
														"src": "6706:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6714:3:18",
														"nodeType": "YulTypedName",
														"src": "6714:3:18",
														"type": ""
													}
												],
												"src": "6555:398:18"
											},
											{
												"body": {
													"nativeSrc": "7147:191:18",
													"nodeType": "YulBlock",
													"src": "7147:191:18",
													"statements": [
														{
															"nativeSrc": "7158:154:18",
															"nodeType": "YulAssignment",
															"src": "7158:154:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7308:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7308:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7165:141:18",
																	"nodeType": "YulIdentifier",
																	"src": "7165:141:18"
																},
																"nativeSrc": "7165:147:18",
																"nodeType": "YulFunctionCall",
																"src": "7165:147:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7158:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7158:3:18"
																}
															]
														},
														{
															"nativeSrc": "7322:10:18",
															"nodeType": "YulAssignment",
															"src": "7322:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "7329:3:18",
																"nodeType": "YulIdentifier",
																"src": "7329:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7322:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7322:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6959:379:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7134:3:18",
														"nodeType": "YulTypedName",
														"src": "7134:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7143:3:18",
														"nodeType": "YulTypedName",
														"src": "7143:3:18",
														"type": ""
													}
												],
												"src": "6959:379:18"
											},
											{
												"body": {
													"nativeSrc": "7450:139:18",
													"nodeType": "YulBlock",
													"src": "7450:139:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7472:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7472:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7480:1:18",
																				"nodeType": "YulLiteral",
																				"src": "7480:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7468:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7468:3:18"
																		},
																		"nativeSrc": "7468:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7468:14:18"
																	},
																	{
																		"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c2072",
																		"kind": "string",
																		"nativeSrc": "7484:34:18",
																		"nodeType": "YulLiteral",
																		"src": "7484:34:18",
																		"type": "",
																		"value": "Address: unable to send value, r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7461:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7461:6:18"
																},
																"nativeSrc": "7461:58:18",
																"nodeType": "YulFunctionCall",
																"src": "7461:58:18"
															},
															"nativeSrc": "7461:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "7461:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7540:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7540:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7548:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7548:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7536:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7536:3:18"
																		},
																		"nativeSrc": "7536:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7536:15:18"
																	},
																	{
																		"hexValue": "6563697069656e74206d61792068617665207265766572746564",
																		"kind": "string",
																		"nativeSrc": "7553:28:18",
																		"nodeType": "YulLiteral",
																		"src": "7553:28:18",
																		"type": "",
																		"value": "ecipient may have reverted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7529:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7529:6:18"
																},
																"nativeSrc": "7529:53:18",
																"nodeType": "YulFunctionCall",
																"src": "7529:53:18"
															},
															"nativeSrc": "7529:53:18",
															"nodeType": "YulExpressionStatement",
															"src": "7529:53:18"
														}
													]
												},
												"name": "store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
												"nativeSrc": "7344:245:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7442:6:18",
														"nodeType": "YulTypedName",
														"src": "7442:6:18",
														"type": ""
													}
												],
												"src": "7344:245:18"
											},
											{
												"body": {
													"nativeSrc": "7741:220:18",
													"nodeType": "YulBlock",
													"src": "7741:220:18",
													"statements": [
														{
															"nativeSrc": "7751:74:18",
															"nodeType": "YulAssignment",
															"src": "7751:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7817:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7817:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7822:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7822:2:18",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7758:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "7758:58:18"
																},
																"nativeSrc": "7758:67:18",
																"nodeType": "YulFunctionCall",
																"src": "7758:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7751:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7751:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7923:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7923:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																	"nativeSrc": "7834:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "7834:88:18"
																},
																"nativeSrc": "7834:93:18",
																"nodeType": "YulFunctionCall",
																"src": "7834:93:18"
															},
															"nativeSrc": "7834:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "7834:93:18"
														},
														{
															"nativeSrc": "7936:19:18",
															"nodeType": "YulAssignment",
															"src": "7936:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7947:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7947:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7952:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7952:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7943:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7943:3:18"
																},
																"nativeSrc": "7943:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7943:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7936:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7936:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7595:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7729:3:18",
														"nodeType": "YulTypedName",
														"src": "7729:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7737:3:18",
														"nodeType": "YulTypedName",
														"src": "7737:3:18",
														"type": ""
													}
												],
												"src": "7595:366:18"
											},
											{
												"body": {
													"nativeSrc": "8138:248:18",
													"nodeType": "YulBlock",
													"src": "8138:248:18",
													"statements": [
														{
															"nativeSrc": "8148:26:18",
															"nodeType": "YulAssignment",
															"src": "8148:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8160:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8160:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8171:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8171:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8156:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8156:3:18"
																},
																"nativeSrc": "8156:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8156:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8148:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8148:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8195:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8195:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8206:1:18",
																				"nodeType": "YulLiteral",
																				"src": "8206:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8191:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8191:3:18"
																		},
																		"nativeSrc": "8191:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8191:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8214:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "8214:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8220:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8220:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8210:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8210:3:18"
																		},
																		"nativeSrc": "8210:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8210:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8184:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8184:6:18"
																},
																"nativeSrc": "8184:47:18",
																"nodeType": "YulFunctionCall",
																"src": "8184:47:18"
															},
															"nativeSrc": "8184:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "8184:47:18"
														},
														{
															"nativeSrc": "8240:139:18",
															"nodeType": "YulAssignment",
															"src": "8240:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8374:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8374:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8248:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "8248:124:18"
																},
																"nativeSrc": "8248:131:18",
																"nodeType": "YulFunctionCall",
																"src": "8248:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8240:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8240:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7967:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8118:9:18",
														"nodeType": "YulTypedName",
														"src": "8118:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8133:4:18",
														"nodeType": "YulTypedName",
														"src": "8133:4:18",
														"type": ""
													}
												],
												"src": "7967:419:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: unable to send value, r\")\n\n        mstore(add(memPtr, 32), \"ecipient may have reverted\")\n\n    }\n\n    function abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 58)\n        store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610054575f3560e01c806351cff8d914610058578063715018a6146100805780638da5cb5b14610096578063e3a9db1a146100c0578063f2fde38b146100fc578063f340fa0114610124575b5f80fd5b348015610063575f80fd5b5061007e6004803603810190610079919061068d565b610140565b005b34801561008b575f80fd5b50610094610246565b005b3480156100a1575f80fd5b506100aa610259565b6040516100b791906106d8565b60405180910390f35b3480156100cb575f80fd5b506100e660048036038101906100e1919061071b565b610280565b6040516100f3919061075e565b60405180910390f35b348015610107575f80fd5b50610122600480360381019061011d919061071b565b6102c6565b005b61013e6004803603810190610139919061071b565b610348565b005b6101486103f9565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506101f4818373ffffffffffffffffffffffffffffffffffffffff1661047790919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161023a919061075e565b60405180910390a25050565b61024e6103f9565b6102575f610567565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6102ce6103f9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361033c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610333906107f7565b60405180910390fd5b61034581610567565b50565b6103506103f9565b5f3490508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546103a09190610842565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040516103ed919061075e565b60405180910390a25050565b610401610628565b73ffffffffffffffffffffffffffffffffffffffff1661041f610259565b73ffffffffffffffffffffffffffffffffffffffff1614610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046c906108bf565b60405180910390fd5b565b804710156104ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b190610927565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff16826040516104df90610972565b5f6040518083038185875af1925050503d805f8114610519576040519150601f19603f3d011682016040523d82523d5f602084013e61051e565b606091505b5050905080610562576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610559906109f6565b60405180910390fd5b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61065c82610633565b9050919050565b61066c81610652565b8114610676575f80fd5b50565b5f8135905061068781610663565b92915050565b5f602082840312156106a2576106a161062f565b5b5f6106af84828501610679565b91505092915050565b5f6106c282610633565b9050919050565b6106d2816106b8565b82525050565b5f6020820190506106eb5f8301846106c9565b92915050565b6106fa816106b8565b8114610704575f80fd5b50565b5f81359050610715816106f1565b92915050565b5f602082840312156107305761072f61062f565b5b5f61073d84828501610707565b91505092915050565b5f819050919050565b61075881610746565b82525050565b5f6020820190506107715f83018461074f565b92915050565b5f82825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6107e1602683610777565b91506107ec82610787565b604082019050919050565b5f6020820190508181035f83015261080e816107d5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61084c82610746565b915061085783610746565b925082820190508082111561086f5761086e610815565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6108a9602083610777565b91506108b482610875565b602082019050919050565b5f6020820190508181035f8301526108d68161089d565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e63650000005f82015250565b5f610911601d83610777565b915061091c826108dd565b602082019050919050565b5f6020820190508181035f83015261093e81610905565b9050919050565b5f81905092915050565b50565b5f61095d5f83610945565b91506109688261094f565b5f82019050919050565b5f61097c82610952565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c20725f8201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b5f6109e0603a83610777565b91506109eb82610986565b604082019050919050565b5f6020820190508181035f830152610a0d816109d4565b905091905056fea264697066735822122012a4860e09a717af7d33265f9e506d1a830515a3b4fedeb21ebc477aec6d536864736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x54 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x124 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH2 0x140 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x94 PUSH2 0x246 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x148 PUSH2 0x3F9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x477 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x24E PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x257 PUSH0 PUSH2 0x567 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CE PUSH2 0x3F9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x333 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x345 DUP2 PUSH2 0x567 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x350 PUSH2 0x3F9 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x75E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x401 PUSH2 0x628 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x41F PUSH2 0x259 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP1 PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B1 SWAP1 PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP1 PUSH2 0x972 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x519 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x51E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x559 SWAP1 PUSH2 0x9F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x65C DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66C DUP2 PUSH2 0x652 JUMP JUMPDEST DUP2 EQ PUSH2 0x676 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x687 DUP2 PUSH2 0x663 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6AF DUP5 DUP3 DUP6 ADD PUSH2 0x679 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6C2 DUP3 PUSH2 0x633 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D2 DUP2 PUSH2 0x6B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6EB PUSH0 DUP4 ADD DUP5 PUSH2 0x6C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6FA DUP2 PUSH2 0x6B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x704 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x715 DUP2 PUSH2 0x6F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x730 JUMPI PUSH2 0x72F PUSH2 0x62F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x73D DUP5 DUP3 DUP6 ADD PUSH2 0x707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x771 PUSH0 DUP4 ADD DUP5 PUSH2 0x74F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7E1 PUSH1 0x26 DUP4 PUSH2 0x777 JUMP JUMPDEST SWAP2 POP PUSH2 0x7EC DUP3 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x80E DUP2 PUSH2 0x7D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x84C DUP3 PUSH2 0x746 JUMP JUMPDEST SWAP2 POP PUSH2 0x857 DUP4 PUSH2 0x746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x86F JUMPI PUSH2 0x86E PUSH2 0x815 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8A9 PUSH1 0x20 DUP4 PUSH2 0x777 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B4 DUP3 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8D6 DUP2 PUSH2 0x89D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x911 PUSH1 0x1D DUP4 PUSH2 0x777 JUMP JUMPDEST SWAP2 POP PUSH2 0x91C DUP3 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x93E DUP2 PUSH2 0x905 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x95D PUSH0 DUP4 PUSH2 0x945 JUMP JUMPDEST SWAP2 POP PUSH2 0x968 DUP3 PUSH2 0x94F JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x97C DUP3 PUSH2 0x952 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH0 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9E0 PUSH1 0x3A DUP4 PUSH2 0x777 JUMP JUMPDEST SWAP2 POP PUSH2 0x9EB DUP3 PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA0D DUP2 PUSH2 0x9D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT LOG4 DUP7 0xE MULMOD 0xA7 OR 0xAF PUSH30 0x33265F9E506D1A830515A3B4FEDEB21EBC477AEC6D536864736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "825:1428:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:224;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1824:101:0;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1077:105:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1365:183:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2027:224;1094:13:0;:11;:13::i;:::-;2103:15:9::1;2121:9;:16;2131:5;2121:16;;;;;;;;;;;;;;;;2103:34;;2167:1;2148:9;:16;2158:5;2148:16;;;;;;;;;;;;;;;:20;;;;2179:24;2195:7;2179:5;:15;;;;:24;;;;:::i;:::-;2229:5;2219:25;;;2236:7;2219:25;;;;;;:::i;:::-;;;;;;;;2093:158;2027:224:::0;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1077:105:9:-;1133:7;1159:9;:16;1169:5;1159:16;;;;;;;;;;;;;;;;1152:23;;1077:105;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1365:183:9:-;1094:13:0;:11;:13::i;:::-;1440:14:9::1;1457:9;1440:26;;1496:6;1476:9;:16;1486:5;1476:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;1527:5;1517:24;;;1534:6;1517:24;;;;;;:::i;:::-;;;;;;;;1430:118;1365:183:::0;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2647:312:6:-;2761:6;2736:21;:31;;2728:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2813:12;2831:9;:14;;2853:6;2831:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2718:241;2647:312;;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:18:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:155::-;774:5;812:6;799:20;790:29;;828:41;863:5;828:41;:::i;:::-;720:155;;;;:::o;881:345::-;948:6;997:2;985:9;976:7;972:23;968:32;965:119;;;1003:79;;:::i;:::-;965:119;1123:1;1148:61;1201:7;1192:6;1181:9;1177:22;1148:61;:::i;:::-;1138:71;;1094:125;881:345;;;;:::o;1232:96::-;1269:7;1298:24;1316:5;1298:24;:::i;:::-;1287:35;;1232:96;;;:::o;1334:118::-;1421:24;1439:5;1421:24;:::i;:::-;1416:3;1409:37;1334:118;;:::o;1458:222::-;1551:4;1589:2;1578:9;1574:18;1566:26;;1602:71;1670:1;1659:9;1655:17;1646:6;1602:71;:::i;:::-;1458:222;;;;:::o;1686:122::-;1759:24;1777:5;1759:24;:::i;:::-;1752:5;1749:35;1739:63;;1798:1;1795;1788:12;1739:63;1686:122;:::o;1814:139::-;1860:5;1898:6;1885:20;1876:29;;1914:33;1941:5;1914:33;:::i;:::-;1814:139;;;;:::o;1959:329::-;2018:6;2067:2;2055:9;2046:7;2042:23;2038:32;2035:119;;;2073:79;;:::i;:::-;2035:119;2193:1;2218:53;2263:7;2254:6;2243:9;2239:22;2218:53;:::i;:::-;2208:63;;2164:117;1959:329;;;;:::o;2294:77::-;2331:7;2360:5;2349:16;;2294:77;;;:::o;2377:118::-;2464:24;2482:5;2464:24;:::i;:::-;2459:3;2452:37;2377:118;;:::o;2501:222::-;2594:4;2632:2;2621:9;2617:18;2609:26;;2645:71;2713:1;2702:9;2698:17;2689:6;2645:71;:::i;:::-;2501:222;;;;:::o;2729:169::-;2813:11;2847:6;2842:3;2835:19;2887:4;2882:3;2878:14;2863:29;;2729:169;;;;:::o;2904:225::-;3044:34;3040:1;3032:6;3028:14;3021:58;3113:8;3108:2;3100:6;3096:15;3089:33;2904:225;:::o;3135:366::-;3277:3;3298:67;3362:2;3357:3;3298:67;:::i;:::-;3291:74;;3374:93;3463:3;3374:93;:::i;:::-;3492:2;3487:3;3483:12;3476:19;;3135:366;;;:::o;3507:419::-;3673:4;3711:2;3700:9;3696:18;3688:26;;3760:9;3754:4;3750:20;3746:1;3735:9;3731:17;3724:47;3788:131;3914:4;3788:131;:::i;:::-;3780:139;;3507:419;;;:::o;3932:180::-;3980:77;3977:1;3970:88;4077:4;4074:1;4067:15;4101:4;4098:1;4091:15;4118:191;4158:3;4177:20;4195:1;4177:20;:::i;:::-;4172:25;;4211:20;4229:1;4211:20;:::i;:::-;4206:25;;4254:1;4251;4247:9;4240:16;;4275:3;4272:1;4269:10;4266:36;;;4282:18;;:::i;:::-;4266:36;4118:191;;;;:::o;4315:182::-;4455:34;4451:1;4443:6;4439:14;4432:58;4315:182;:::o;4503:366::-;4645:3;4666:67;4730:2;4725:3;4666:67;:::i;:::-;4659:74;;4742:93;4831:3;4742:93;:::i;:::-;4860:2;4855:3;4851:12;4844:19;;4503:366;;;:::o;4875:419::-;5041:4;5079:2;5068:9;5064:18;5056:26;;5128:9;5122:4;5118:20;5114:1;5103:9;5099:17;5092:47;5156:131;5282:4;5156:131;:::i;:::-;5148:139;;4875:419;;;:::o;5300:179::-;5440:31;5436:1;5428:6;5424:14;5417:55;5300:179;:::o;5485:366::-;5627:3;5648:67;5712:2;5707:3;5648:67;:::i;:::-;5641:74;;5724:93;5813:3;5724:93;:::i;:::-;5842:2;5837:3;5833:12;5826:19;;5485:366;;;:::o;5857:419::-;6023:4;6061:2;6050:9;6046:18;6038:26;;6110:9;6104:4;6100:20;6096:1;6085:9;6081:17;6074:47;6138:131;6264:4;6138:131;:::i;:::-;6130:139;;5857:419;;;:::o;6282:147::-;6383:11;6420:3;6405:18;;6282:147;;;;:::o;6435:114::-;;:::o;6555:398::-;6714:3;6735:83;6816:1;6811:3;6735:83;:::i;:::-;6728:90;;6827:93;6916:3;6827:93;:::i;:::-;6945:1;6940:3;6936:11;6929:18;;6555:398;;;:::o;6959:379::-;7143:3;7165:147;7308:3;7165:147;:::i;:::-;7158:154;;7329:3;7322:10;;6959:379;;;:::o;7344:245::-;7484:34;7480:1;7472:6;7468:14;7461:58;7553:28;7548:2;7540:6;7536:15;7529:53;7344:245;:::o;7595:366::-;7737:3;7758:67;7822:2;7817:3;7758:67;:::i;:::-;7751:74;;7834:93;7923:3;7834:93;:::i;:::-;7952:2;7947:3;7943:12;7936:19;;7595:366;;;:::o;7967:419::-;8133:4;8171:2;8160:9;8156:18;8148:26;;8220:9;8214:4;8210:20;8206:1;8195:9;8191:17;8184:47;8248:131;8374:4;8248:131;:::i;:::-;8240:139;;7967:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "526800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit(address)": "infinite",
								"depositsOf(address)": "2873",
								"owner()": "2537",
								"renounceOwnership()": "30390",
								"transferOwnership(address)": "30797",
								"withdraw(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 825,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 825,
									"end": 2253,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012a4860e09a717af7d33265f9e506d1a830515a3b4fedeb21ebc477aec6d536864736f6c63430008150033",
									".code": [
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "51CFF8D9"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "E3A9DB1A"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "F340FA01"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 825,
											"end": 2253,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2027,
											"end": 2251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2027,
											"end": 2251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1077,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1077,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1365,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1365,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2163,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2168,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2168,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2195,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2184,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2229,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 2236,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2219,
											"end": 2244,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2251,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1168,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1174,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1466,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1466,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1502,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1491,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1476,
											"end": 1502,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 1534,
											"end": 1540,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1517,
											"end": 1541,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1548,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2959,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2757,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2767,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2728,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2831,
											"end": 2845,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2831,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2874,
											"end": 2952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 570,
											"name": "tag",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 466,
											"end": 570,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 511,
											"end": 518,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 540,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 540,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 540,
											"end": 564,
											"name": "tag",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 540,
											"end": 564,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 529,
											"end": 564,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 529,
											"end": 564,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 570,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 466,
											"end": 570,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 466,
											"end": 570,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 466,
											"end": 570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 576,
											"end": 714,
											"name": "tag",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 576,
											"end": 714,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 657,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 683,
											"end": 688,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 657,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 657,
											"end": 689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 657,
											"end": 689,
											"name": "tag",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 657,
											"end": 689,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 650,
											"end": 655,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 647,
											"end": 690,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 637,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 637,
											"end": 708,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 704,
											"end": 705,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 702,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 694,
											"end": 706,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 637,
											"end": 708,
											"name": "tag",
											"source": 18,
											"value": "118"
										},
										{
											"begin": 637,
											"end": 708,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 576,
											"end": 714,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 576,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 720,
											"end": 875,
											"name": "tag",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 720,
											"end": 875,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 774,
											"end": 779,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 799,
											"end": 819,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 790,
											"end": 819,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 790,
											"end": 819,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 828,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 863,
											"end": 868,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 828,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 828,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 828,
											"end": 869,
											"name": "tag",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 828,
											"end": 869,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 720,
											"end": 875,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 720,
											"end": 875,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 720,
											"end": 875,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 720,
											"end": 875,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 720,
											"end": 875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 881,
											"end": 1226,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 881,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 948,
											"end": 954,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 999,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 976,
											"end": 983,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 972,
											"end": 995,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 968,
											"end": 1000,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 965,
											"end": 1084,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 965,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 965,
											"end": 1084,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1003,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 1003,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 1003,
											"end": 1082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1003,
											"end": 1082,
											"name": "tag",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 1003,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 965,
											"end": 1084,
											"name": "tag",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 965,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1181,
											"end": 1190,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1148,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 1148,
											"end": 1209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1148,
											"end": 1209,
											"name": "tag",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 1148,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1138,
											"end": 1209,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1138,
											"end": 1209,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1094,
											"end": 1219,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 881,
											"end": 1226,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 881,
											"end": 1226,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 881,
											"end": 1226,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 881,
											"end": 1226,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 881,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1328,
											"name": "tag",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 1232,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1269,
											"end": 1276,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 1316,
											"end": 1321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 1298,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "tag",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 1298,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1322,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1287,
											"end": 1322,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1328,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1328,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1328,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1334,
											"end": 1452,
											"name": "tag",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 1334,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1421,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 1439,
											"end": 1444,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1421,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 1421,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1421,
											"end": 1445,
											"name": "tag",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 1421,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1416,
											"end": 1419,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1409,
											"end": 1446,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1334,
											"end": 1452,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1334,
											"end": 1452,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1334,
											"end": 1452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1458,
											"end": 1680,
											"name": "tag",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1551,
											"end": 1555,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1566,
											"end": 1592,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1602,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "130"
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1668,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1655,
											"end": 1672,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1602,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 1602,
											"end": 1673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1602,
											"end": 1673,
											"name": "tag",
											"source": 18,
											"value": "130"
										},
										{
											"begin": 1602,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1458,
											"end": 1680,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1458,
											"end": 1680,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1458,
											"end": 1680,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1458,
											"end": 1680,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1458,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "tag",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 1777,
											"end": 1782,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 1759,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "tag",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1752,
											"end": 1757,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1749,
											"end": 1784,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1788,
											"end": 1800,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "tag",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1686,
											"end": 1808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "tag",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1905,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1876,
											"end": 1905,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 1941,
											"end": 1946,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 1914,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "tag",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1959,
											"end": 2288,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1959,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2069,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2064,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2042,
											"end": 2065,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2038,
											"end": 2070,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2035,
											"end": 2154,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2035,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 2035,
											"end": 2154,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2073,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 2073,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 2073,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2073,
											"end": 2152,
											"name": "tag",
											"source": 18,
											"value": "138"
										},
										{
											"begin": 2073,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2035,
											"end": 2154,
											"name": "tag",
											"source": 18,
											"value": "137"
										},
										{
											"begin": 2035,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2193,
											"end": 2194,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2243,
											"end": 2252,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2239,
											"end": 2261,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2218,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 2218,
											"end": 2271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2218,
											"end": 2271,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 2218,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2164,
											"end": 2281,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1959,
											"end": 2288,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1959,
											"end": 2288,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1959,
											"end": 2288,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1959,
											"end": 2288,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1959,
											"end": 2288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2371,
											"name": "tag",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 2294,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2331,
											"end": 2338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2349,
											"end": 2365,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2349,
											"end": 2365,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2371,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2371,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2371,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2294,
											"end": 2371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2377,
											"end": 2495,
											"name": "tag",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 2377,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2464,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 2482,
											"end": 2487,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2464,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 2464,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2464,
											"end": 2488,
											"name": "tag",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 2464,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2459,
											"end": 2462,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2452,
											"end": 2489,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2377,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2377,
											"end": 2495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2377,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2501,
											"end": 2723,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 2501,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2594,
											"end": 2598,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2634,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2630,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2635,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2609,
											"end": 2635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2609,
											"end": 2635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2645,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2698,
											"end": 2715,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2645,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "95"
										},
										{
											"begin": 2645,
											"end": 2716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2645,
											"end": 2716,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 2645,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2501,
											"end": 2723,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2501,
											"end": 2723,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2501,
											"end": 2723,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2501,
											"end": 2723,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2501,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2729,
											"end": 2898,
											"name": "tag",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 2729,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2813,
											"end": 2824,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2853,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2842,
											"end": 2845,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2835,
											"end": 2854,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2885,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2878,
											"end": 2892,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2863,
											"end": 2892,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2863,
											"end": 2892,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2729,
											"end": 2898,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2729,
											"end": 2898,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2729,
											"end": 2898,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2729,
											"end": 2898,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2729,
											"end": 2898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2904,
											"end": 3129,
											"name": "tag",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 2904,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3044,
											"end": 3078,
											"name": "PUSH",
											"source": 18,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3040,
											"end": 3041,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3028,
											"end": 3042,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3021,
											"end": 3079,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3113,
											"end": 3121,
											"name": "PUSH",
											"source": 18,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3108,
											"end": 3110,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3096,
											"end": 3111,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3089,
											"end": 3122,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2904,
											"end": 3129,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2904,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3135,
											"end": 3501,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 3135,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3277,
											"end": 3280,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "148"
										},
										{
											"begin": 3362,
											"end": 3364,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 3357,
											"end": 3360,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3298,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 3298,
											"end": 3365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3298,
											"end": 3365,
											"name": "tag",
											"source": 18,
											"value": "148"
										},
										{
											"begin": 3298,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3291,
											"end": 3365,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3291,
											"end": 3365,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3374,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 3463,
											"end": 3466,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3374,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 3374,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3374,
											"end": 3467,
											"name": "tag",
											"source": 18,
											"value": "149"
										},
										{
											"begin": 3374,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3492,
											"end": 3494,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3490,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3483,
											"end": 3495,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3476,
											"end": 3495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3135,
											"end": 3501,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3135,
											"end": 3501,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3135,
											"end": 3501,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3135,
											"end": 3501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3673,
											"end": 3677,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3696,
											"end": 3714,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3760,
											"end": 3769,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3754,
											"end": 3758,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3750,
											"end": 3770,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3746,
											"end": 3747,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3744,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3731,
											"end": 3748,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3724,
											"end": 3771,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 3914,
											"end": 3918,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 3788,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "tag",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 3788,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3780,
											"end": 3919,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3780,
											"end": 3919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3507,
											"end": 3926,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3507,
											"end": 3926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3980,
											"end": 4057,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 4058,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4077,
											"end": 4081,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 4074,
											"end": 4075,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4067,
											"end": 4082,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4101,
											"end": 4105,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4098,
											"end": 4099,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4106,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4118,
											"end": 4309,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4118,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4158,
											"end": 4161,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 4195,
											"end": 4196,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 4177,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 4177,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4172,
											"end": 4197,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4172,
											"end": 4197,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4211,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4211,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 4211,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4211,
											"end": 4231,
											"name": "tag",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 4211,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4206,
											"end": 4231,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4206,
											"end": 4231,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4254,
											"end": 4255,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4247,
											"end": 4256,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4240,
											"end": 4256,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4240,
											"end": 4256,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4272,
											"end": 4273,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4269,
											"end": 4279,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4266,
											"end": 4302,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4266,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 4266,
											"end": 4302,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 4282,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "tag",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4266,
											"end": 4302,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 4266,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4118,
											"end": 4309,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4118,
											"end": 4309,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4118,
											"end": 4309,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4118,
											"end": 4309,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4118,
											"end": 4309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4315,
											"end": 4497,
											"name": "tag",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4315,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4455,
											"end": 4489,
											"name": "PUSH",
											"source": 18,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4451,
											"end": 4452,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4449,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4439,
											"end": 4453,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4432,
											"end": 4490,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4315,
											"end": 4497,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4315,
											"end": 4497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4869,
											"name": "tag",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 4503,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4645,
											"end": 4648,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 4730,
											"end": 4732,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4725,
											"end": 4728,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 18,
											"value": "160"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4659,
											"end": 4733,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4659,
											"end": 4733,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4742,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4742,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4742,
											"end": 4835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4742,
											"end": 4835,
											"name": "tag",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 4742,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4860,
											"end": 4862,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4851,
											"end": 4863,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4844,
											"end": 4863,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4869,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4869,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4869,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4875,
											"end": 5294,
											"name": "tag",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 4875,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5041,
											"end": 5045,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5081,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5056,
											"end": 5082,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5056,
											"end": 5082,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5128,
											"end": 5137,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5122,
											"end": 5126,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5118,
											"end": 5138,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5114,
											"end": 5115,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5112,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5099,
											"end": 5116,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5092,
											"end": 5139,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5156,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 5282,
											"end": 5286,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5156,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 5156,
											"end": 5287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5156,
											"end": 5287,
											"name": "tag",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 5156,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5287,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5287,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4875,
											"end": 5294,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4875,
											"end": 5294,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4875,
											"end": 5294,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4875,
											"end": 5294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5300,
											"end": 5479,
											"name": "tag",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 5300,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5440,
											"end": 5471,
											"name": "PUSH",
											"source": 18,
											"value": "416464726573733A20696E73756666696369656E742062616C616E6365000000"
										},
										{
											"begin": 5436,
											"end": 5437,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5434,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5424,
											"end": 5438,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5417,
											"end": 5472,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5300,
											"end": 5479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5300,
											"end": 5479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5851,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 5485,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5627,
											"end": 5630,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 5712,
											"end": 5714,
											"name": "PUSH",
											"source": 18,
											"value": "1D"
										},
										{
											"begin": 5707,
											"end": 5710,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5648,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 5648,
											"end": 5715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5648,
											"end": 5715,
											"name": "tag",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 5648,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5641,
											"end": 5715,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5641,
											"end": 5715,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 5813,
											"end": 5816,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 5724,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5724,
											"end": 5817,
											"name": "tag",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 5724,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5842,
											"end": 5844,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5840,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5833,
											"end": 5845,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5826,
											"end": 5845,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5826,
											"end": 5845,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5851,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5851,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5851,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5485,
											"end": 5851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5857,
											"end": 6276,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 5857,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6023,
											"end": 6027,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6061,
											"end": 6063,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6059,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6046,
											"end": 6064,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6038,
											"end": 6064,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6038,
											"end": 6064,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6110,
											"end": 6119,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6104,
											"end": 6108,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6100,
											"end": 6120,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6096,
											"end": 6097,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6085,
											"end": 6094,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6081,
											"end": 6098,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6074,
											"end": 6121,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6138,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 6264,
											"end": 6268,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6138,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 6138,
											"end": 6269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6138,
											"end": 6269,
											"name": "tag",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 6138,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6130,
											"end": 6269,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6130,
											"end": 6269,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5857,
											"end": 6276,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5857,
											"end": 6276,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5857,
											"end": 6276,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5857,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6282,
											"end": 6429,
											"name": "tag",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 6282,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6383,
											"end": 6394,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6423,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6282,
											"end": 6429,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6282,
											"end": 6429,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6282,
											"end": 6429,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6282,
											"end": 6429,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6282,
											"end": 6429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6435,
											"end": 6549,
											"name": "tag",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 6435,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6435,
											"end": 6549,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6435,
											"end": 6549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6555,
											"end": 6953,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 6555,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6714,
											"end": 6717,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 6816,
											"end": 6817,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6814,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6735,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 6735,
											"end": 6818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6735,
											"end": 6818,
											"name": "tag",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 6735,
											"end": 6818,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6728,
											"end": 6818,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6728,
											"end": 6818,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6827,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 6916,
											"end": 6919,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6827,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 6827,
											"end": 6920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6827,
											"end": 6920,
											"name": "tag",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 6827,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6945,
											"end": 6946,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6940,
											"end": 6943,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6936,
											"end": 6947,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6555,
											"end": 6953,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6555,
											"end": 6953,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6555,
											"end": 6953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6555,
											"end": 6953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6959,
											"end": 7338,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 6959,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7143,
											"end": 7146,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 7308,
											"end": 7311,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7165,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 7165,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7165,
											"end": 7312,
											"name": "tag",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 7165,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7158,
											"end": 7312,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7158,
											"end": 7312,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7329,
											"end": 7332,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7322,
											"end": 7332,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7322,
											"end": 7332,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6959,
											"end": 7338,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6959,
											"end": 7338,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6959,
											"end": 7338,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6959,
											"end": 7338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7344,
											"end": 7589,
											"name": "tag",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 7344,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7484,
											"end": 7518,
											"name": "PUSH",
											"source": 18,
											"value": "416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
										},
										{
											"begin": 7480,
											"end": 7481,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7478,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7468,
											"end": 7482,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7461,
											"end": 7519,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7553,
											"end": 7581,
											"name": "PUSH",
											"source": 18,
											"value": "6563697069656E74206D61792068617665207265766572746564000000000000"
										},
										{
											"begin": 7548,
											"end": 7550,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7540,
											"end": 7546,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7536,
											"end": 7551,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7529,
											"end": 7582,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7344,
											"end": 7589,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7344,
											"end": 7589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7595,
											"end": 7961,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 7595,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7737,
											"end": 7740,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 7822,
											"end": 7824,
											"name": "PUSH",
											"source": 18,
											"value": "3A"
										},
										{
											"begin": 7817,
											"end": 7820,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7758,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 7758,
											"end": 7825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7758,
											"end": 7825,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 7758,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7751,
											"end": 7825,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7751,
											"end": 7825,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7834,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 7923,
											"end": 7926,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7834,
											"end": 7927,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "107"
										},
										{
											"begin": 7834,
											"end": 7927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7834,
											"end": 7927,
											"name": "tag",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 7834,
											"end": 7927,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7952,
											"end": 7954,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7947,
											"end": 7950,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7943,
											"end": 7955,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7936,
											"end": 7955,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7936,
											"end": 7955,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7595,
											"end": 7961,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7595,
											"end": 7961,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7595,
											"end": 7961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7595,
											"end": 7961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8386,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 7967,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8133,
											"end": 8137,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8160,
											"end": 8169,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8148,
											"end": 8174,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8148,
											"end": 8174,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8220,
											"end": 8229,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8214,
											"end": 8218,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8210,
											"end": 8230,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8206,
											"end": 8207,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8204,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8191,
											"end": 8208,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8184,
											"end": 8231,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8248,
											"end": 8379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 8374,
											"end": 8378,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8248,
											"end": 8379,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 8248,
											"end": 8379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8248,
											"end": 8379,
											"name": "tag",
											"source": 18,
											"value": "182"
										},
										{
											"begin": 8248,
											"end": 8379,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8240,
											"end": 8379,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8240,
											"end": 8379,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8386,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8386,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8386,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7967,
											"end": 8386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol",
								"@openzeppelin/contracts/utils/escrow/Escrow.sol",
								"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/abstractions/finalizable.sol",
								"crowdsale/abstractions/refundable.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/distribution/finalizableCrowdsale.sol",
								"crowdsale/distribution/refundableCrowdsale.sol",
								"crowdsale/validation/timedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit(address)": "f340fa01",
							"depositsOf(address)": "e3a9db1a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base escrow contract, holds funds designated for a payee until they withdraw them. Intended usage: This contract (and derived escrow contracts) should be a standalone contract, that only interacts with the contract that instantiated it. That way, it is guaranteed that all Ether will be handled according to the `Escrow` rules, and there is no need to check for payable functions or transfers in the inheritance tree. The contract that uses the escrow as its payment method should be its owner, and provide public methods redirecting to the escrow's deposit and withdraw.\",\"kind\":\"dev\",\"methods\":{\"deposit(address)\":{\"details\":\"Stores the sent amount as credit to be withdrawn.\",\"params\":{\"payee\":\"The destination address of the funds. Emits a {Deposited} event.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"The address whose funds will be withdrawn and transferred to. Emits a {Withdrawn} event.\"}}},\"title\":\"Escrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":\"Escrow\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xabdff382f93edb8bd94b227798fc0daf64abe891403e1e525f5870c2cae8bf65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402701e1bf7c6314463211809668b51986f27695b5d552dcd51aed0730c66680\",\"dweb:/ipfs/QmRLv8Tr9ZV7QABCSr2ri4N1EsKGebFC87ti9794GMGLiL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/utils/escrow/Escrow.sol:Escrow",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1188,
								"contract": "@openzeppelin/contracts/utils/escrow/Escrow.sol:Escrow",
								"label": "_deposits",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol": {
				"RefundEscrow": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "beneficiary_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "payee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "RefundsClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "RefundsEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "payee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "beneficiaryWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "close",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "refundee",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "payee",
									"type": "address"
								}
							],
							"name": "depositsOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableRefunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum RefundEscrow.State",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "payee",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "withdrawalAllowed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Escrow that holds funds for a beneficiary, deposited from multiple parties.Intended usage: See {Escrow}. Same usage guidelines apply here.The owner account (that is, the contract that instantiates this contract) may deposit, close the deposit period, and allow for either withdrawal by the beneficiary, or refunds to the depositors. All interactions with `RefundEscrow` will be made through the owner contract.",
						"kind": "dev",
						"methods": {
							"beneficiary()": {
								"returns": {
									"_0": "The beneficiary of the escrow."
								}
							},
							"beneficiaryWithdraw()": {
								"details": "Withdraws the beneficiary's funds."
							},
							"close()": {
								"details": "Allows for the beneficiary to withdraw their funds, rejecting further deposits."
							},
							"constructor": {
								"details": "Constructor.",
								"params": {
									"beneficiary_": "The beneficiary of the deposits."
								}
							},
							"deposit(address)": {
								"details": "Stores funds that may later be refunded.",
								"params": {
									"refundee": "The address funds will be sent to if a refund occurs."
								}
							},
							"enableRefunds()": {
								"details": "Allows for refunds to take place, rejecting further deposits."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"state()": {
								"returns": {
									"_0": "The current state of the escrow."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address)": {
								"details": "Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
								"params": {
									"payee": "The address whose funds will be withdrawn and transferred to. Emits a {Withdrawn} event."
								}
							},
							"withdrawalAllowed(address)": {
								"details": "Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a 'payee' argument, but we ignore it here since the condition is global, not per-payee."
							}
						},
						"title": "RefundEscrow",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":638:3189  contract RefundEscrow is ConditionalEscrow {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1037:1248  constructor(address payable beneficiary_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1121:1122  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1097:1123  beneficiary_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1097:1109  beneficiary_ */\n  dup2\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1097:1123  beneficiary_ != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1089:1173  require(beneficiary_ != address(0), \"RefundEscrow: beneficiary is the zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1198:1210  beneficiary_ */\n  dup1\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1183:1210  _beneficiary = beneficiary_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1229:1241  State.Active */\n  0x00\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1220:1226  _state */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1220:1241  _state = State.Active */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\ntag_15:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1037:1248  constructor(address payable beneficiary_) {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":638:3189  contract RefundEscrow is ConditionalEscrow {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_24:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:570   */\ntag_25:\n    /* \"#utility.yul\":511:518   */\n  0x00\n    /* \"#utility.yul\":540:564   */\n  tag_37\n    /* \"#utility.yul\":558:563   */\n  dup3\n    /* \"#utility.yul\":540:564   */\n  tag_24\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":529:564   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:570   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":576:714   */\ntag_26:\n    /* \"#utility.yul\":657:689   */\n  tag_39\n    /* \"#utility.yul\":683:688   */\n  dup2\n    /* \"#utility.yul\":657:689   */\n  tag_25\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":650:655   */\n  dup2\n    /* \"#utility.yul\":647:690   */\n  eq\n    /* \"#utility.yul\":637:708   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":704:705   */\n  0x00\n    /* \"#utility.yul\":701:702   */\n  dup1\n    /* \"#utility.yul\":694:706   */\n  revert\n    /* \"#utility.yul\":637:708   */\ntag_40:\n    /* \"#utility.yul\":576:714   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":720:879   */\ntag_27:\n    /* \"#utility.yul\":785:790   */\n  0x00\n    /* \"#utility.yul\":816:822   */\n  dup2\n    /* \"#utility.yul\":810:823   */\n  mload\n    /* \"#utility.yul\":801:823   */\n  swap1\n  pop\n    /* \"#utility.yul\":832:873   */\n  tag_42\n    /* \"#utility.yul\":867:872   */\n  dup2\n    /* \"#utility.yul\":832:873   */\n  tag_26\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":720:879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":885:1252   */\ntag_3:\n    /* \"#utility.yul\":963:969   */\n  0x00\n    /* \"#utility.yul\":1012:1014   */\n  0x20\n    /* \"#utility.yul\":1000:1009   */\n  dup3\n    /* \"#utility.yul\":991:998   */\n  dup5\n    /* \"#utility.yul\":987:1010   */\n  sub\n    /* \"#utility.yul\":983:1015   */\n  slt\n    /* \"#utility.yul\":980:1099   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1018:1097   */\n  tag_45\n  tag_22\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":980:1099   */\ntag_44:\n    /* \"#utility.yul\":1138:1139   */\n  0x00\n    /* \"#utility.yul\":1163:1235   */\n  tag_46\n    /* \"#utility.yul\":1227:1234   */\n  dup5\n    /* \"#utility.yul\":1218:1224   */\n  dup3\n    /* \"#utility.yul\":1207:1216   */\n  dup6\n    /* \"#utility.yul\":1203:1225   */\n  add\n    /* \"#utility.yul\":1163:1235   */\n  tag_27\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1153:1235   */\n  swap2\n  pop\n    /* \"#utility.yul\":1109:1245   */\n  pop\n    /* \"#utility.yul\":885:1252   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1258:1427   */\ntag_28:\n    /* \"#utility.yul\":1342:1353   */\n  0x00\n    /* \"#utility.yul\":1376:1382   */\n  dup3\n    /* \"#utility.yul\":1371:1374   */\n  dup3\n    /* \"#utility.yul\":1364:1383   */\n  mstore\n    /* \"#utility.yul\":1416:1420   */\n  0x20\n    /* \"#utility.yul\":1411:1414   */\n  dup3\n    /* \"#utility.yul\":1407:1421   */\n  add\n    /* \"#utility.yul\":1392:1421   */\n  swap1\n  pop\n    /* \"#utility.yul\":1258:1427   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1433:1665   */\ntag_29:\n    /* \"#utility.yul\":1573:1607   */\n  0x526566756e64457363726f773a2062656e656669636961727920697320746865\n    /* \"#utility.yul\":1569:1570   */\n  0x00\n    /* \"#utility.yul\":1561:1567   */\n  dup3\n    /* \"#utility.yul\":1557:1571   */\n  add\n    /* \"#utility.yul\":1550:1608   */\n  mstore\n    /* \"#utility.yul\":1642:1657   */\n  0x207a65726f206164647265737300000000000000000000000000000000000000\n    /* \"#utility.yul\":1637:1639   */\n  0x20\n    /* \"#utility.yul\":1629:1635   */\n  dup3\n    /* \"#utility.yul\":1625:1640   */\n  add\n    /* \"#utility.yul\":1618:1658   */\n  mstore\n    /* \"#utility.yul\":1433:1665   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1671:2037   */\ntag_30:\n    /* \"#utility.yul\":1813:1816   */\n  0x00\n    /* \"#utility.yul\":1834:1901   */\n  tag_50\n    /* \"#utility.yul\":1898:1900   */\n  0x2d\n    /* \"#utility.yul\":1893:1896   */\n  dup4\n    /* \"#utility.yul\":1834:1901   */\n  tag_28\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1827:1901   */\n  swap2\n  pop\n    /* \"#utility.yul\":1910:2003   */\n  tag_51\n    /* \"#utility.yul\":1999:2002   */\n  dup3\n    /* \"#utility.yul\":1910:2003   */\n  tag_29\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2028:2030   */\n  0x40\n    /* \"#utility.yul\":2023:2026   */\n  dup3\n    /* \"#utility.yul\":2019:2031   */\n  add\n    /* \"#utility.yul\":2012:2031   */\n  swap1\n  pop\n    /* \"#utility.yul\":1671:2037   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2043:2462   */\ntag_14:\n    /* \"#utility.yul\":2209:2213   */\n  0x00\n    /* \"#utility.yul\":2247:2249   */\n  0x20\n    /* \"#utility.yul\":2236:2245   */\n  dup3\n    /* \"#utility.yul\":2232:2250   */\n  add\n    /* \"#utility.yul\":2224:2250   */\n  swap1\n  pop\n    /* \"#utility.yul\":2296:2305   */\n  dup2\n    /* \"#utility.yul\":2290:2294   */\n  dup2\n    /* \"#utility.yul\":2286:2306   */\n  sub\n    /* \"#utility.yul\":2282:2283   */\n  0x00\n    /* \"#utility.yul\":2271:2280   */\n  dup4\n    /* \"#utility.yul\":2267:2284   */\n  add\n    /* \"#utility.yul\":2260:2307   */\n  mstore\n    /* \"#utility.yul\":2324:2455   */\n  tag_53\n    /* \"#utility.yul\":2450:2454   */\n  dup2\n    /* \"#utility.yul\":2324:2455   */\n  tag_30\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2316:2455   */\n  swap1\n  pop\n    /* \"#utility.yul\":2043:2462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2468:2648   */\ntag_17:\n    /* \"#utility.yul\":2516:2593   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2513:2514   */\n  0x00\n    /* \"#utility.yul\":2506:2594   */\n  mstore\n    /* \"#utility.yul\":2613:2617   */\n  0x21\n    /* \"#utility.yul\":2610:2611   */\n  0x04\n    /* \"#utility.yul\":2603:2618   */\n  mstore\n    /* \"#utility.yul\":2637:2641   */\n  0x24\n    /* \"#utility.yul\":2634:2635   */\n  0x00\n    /* \"#utility.yul\":2627:2642   */\n  revert\n    /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":638:3189  contract RefundEscrow is ConditionalEscrow {... */\ntag_18:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3e1cf3d8cbf38b610aad9cadfe96c4fb6d63415cc4c92f7179b9df82a542d1e7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":638:3189  contract RefundEscrow is ConditionalEscrow {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9af6549a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe3a9db1a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf340fa01\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x38af3eed\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x43d726d6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x685ca194\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8c52dc41\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1469:1574  function beneficiary() public view virtual returns (address payable) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2043:2240  function close() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":668:869  function withdraw(address payable payee) public virtual override {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3065:3187  function withdrawalAllowed(address) public view override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2336:2554  function enableRefunds() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2623:2834  function beneficiaryWithdraw() public virtual {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1318:1401  function state() public view virtual returns (State) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1077:1182  function depositsOf(address payee) public view returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1726:1922  function deposit(address refundee) public payable virtual override {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1469:1574  function beneficiary() public view virtual returns (address payable) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1521:1536  address payable */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1555:1567  _beneficiary */\n      immutable(\"0x3e1cf3d8cbf38b610aad9cadfe96c4fb6d63415cc4c92f7179b9df82a542d1e7\")\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1548:1567  return _beneficiary */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1469:1574  function beneficiary() public view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2043:2240  function close() public virtual onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2114:2126  State.Active */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2103:2126  state() == State.Active */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_72\n      jumpi\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2103:2110  state() */\n      tag_75\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2103:2108  state */\n      tag_51\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2103:2110  state() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2103:2126  state() == State.Active */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_76\n      jumpi\n      tag_77\n      tag_74\n      jump\t// in\n    tag_77:\n    tag_76:\n      eq\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2095:2172  require(state() == State.Active, \"RefundEscrow: can only close while active\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2191:2203  State.Closed */\n      0x02\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2182:2188  _state */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2182:2203  _state = State.Closed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_81\n      jumpi\n      tag_82\n      tag_74\n      jump\t// in\n    tag_82:\n    tag_81:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2218:2233  RefundsClosed() */\n      0x088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2043:2240  function close() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":668:869  function withdraw(address payable payee) public virtual override {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":751:775  withdrawalAllowed(payee) */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":769:774  payee */\n      dup2\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":751:768  withdrawalAllowed */\n      tag_32\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":751:775  withdrawalAllowed(payee) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":743:831  require(withdrawalAllowed(payee), \"ConditionalEscrow: payee is not allowed to withdraw\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":841:862  super.withdraw(payee) */\n      tag_88\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":856:861  payee */\n      dup2\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":841:855  super.withdraw */\n      tag_89\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":841:862  super.withdraw(payee) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":668:869  function withdraw(address payable payee) public virtual override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3065:3187  function withdrawalAllowed(address) public view override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3131:3135  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3165:3180  State.Refunding */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3154:3180  state() == State.Refunding */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_91\n      jumpi\n      tag_92\n      tag_74\n      jump\t// in\n    tag_92:\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3154:3161  state() */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3154:3159  state */\n      tag_51\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3154:3161  state() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3154:3180  state() == State.Refunding */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_94\n      jumpi\n      tag_95\n      tag_74\n      jump\t// in\n    tag_95:\n    tag_94:\n      eq\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3147:3180  return state() == State.Refunding */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":3065:3187  function withdrawalAllowed(address) public view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2336:2554  function enableRefunds() public virtual onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2415:2427  State.Active */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2404:2427  state() == State.Active */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_104\n      jumpi\n      tag_105\n      tag_74\n      jump\t// in\n    tag_105:\n    tag_104:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2404:2411  state() */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2404:2409  state */\n      tag_51\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2404:2411  state() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2404:2427  state() == State.Active */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_107\n      jumpi\n      tag_108\n      tag_74\n      jump\t// in\n    tag_108:\n    tag_107:\n      eq\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2396:2482  require(state() == State.Active, \"RefundEscrow: can only enable refunds while active\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2501:2516  State.Refunding */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2492:2498  _state */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2492:2516  _state = State.Refunding */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_112\n      jumpi\n      tag_113\n      tag_74\n      jump\t// in\n    tag_113:\n    tag_112:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2531:2547  RefundsEnabled() */\n      0x599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2336:2554  function enableRefunds() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2623:2834  function beneficiaryWithdraw() public virtual {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2698:2710  State.Closed */\n      0x02\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2687:2710  state() == State.Closed */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_116\n      jumpi\n      tag_117\n      tag_74\n      jump\t// in\n    tag_117:\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2687:2694  state() */\n      tag_118\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2687:2692  state */\n      tag_51\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2687:2694  state() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2687:2710  state() == State.Closed */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_119\n      jumpi\n      tag_120\n      tag_74\n      jump\t// in\n    tag_120:\n    tag_119:\n      eq\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2679:2771  require(state() == State.Closed, \"RefundEscrow: beneficiary can only withdraw while closed\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2781:2827  beneficiary().sendValue(address(this).balance) */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2805:2826  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2781:2794  beneficiary() */\n      tag_125\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2781:2792  beneficiary */\n      tag_17\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2781:2794  beneficiary() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2781:2804  beneficiary().sendValue */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2781:2827  beneficiary().sendValue(address(this).balance) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":2623:2834  function beneficiaryWithdraw() public virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1318:1401  function state() public view virtual returns (State) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1364:1369  State */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1388:1394  _state */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1381:1394  return _state */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1318:1401  function state() public view virtual returns (State) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1077:1182  function depositsOf(address payee) public view returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1133:1140  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1159:1168  _deposits */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1159:1175  _deposits[payee] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1169:1174  payee */\n      dup4\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1159:1175  _deposits[payee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1152:1175  return _deposits[payee] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1077:1182  function depositsOf(address payee) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1726:1922  function deposit(address refundee) public payable virtual override {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1822:1834  State.Active */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1811:1834  state() == State.Active */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_137\n      jumpi\n      tag_138\n      tag_74\n      jump\t// in\n    tag_138:\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1811:1818  state() */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1811:1816  state */\n      tag_51\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1811:1818  state() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1811:1834  state() == State.Active */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_140\n      jumpi\n      tag_141\n      tag_74\n      jump\t// in\n    tag_141:\n    tag_140:\n      eq\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1803:1882  require(state() == State.Active, \"RefundEscrow: can only deposit while active\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1892:1915  super.deposit(refundee) */\n      tag_145\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1906:1914  refundee */\n      dup2\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1892:1905  super.deposit */\n      tag_146\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1892:1915  super.deposit(refundee) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":1726:1922  function deposit(address refundee) public payable virtual override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2027:2251  function withdraw(address payable payee) public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2103:2118  uint256 payment */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2121:2130  _deposits */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2121:2137  _deposits[payee] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2131:2136  payee */\n      dup4\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2121:2137  _deposits[payee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2103:2137  uint256 payment = _deposits[payee] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2167:2168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2148:2157  _deposits */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2148:2164  _deposits[payee] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2158:2163  payee */\n      dup5\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2148:2164  _deposits[payee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2148:2168  _deposits[payee] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2179:2203  payee.sendValue(payment) */\n      tag_157\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2195:2202  payment */\n      dup2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2179:2184  payee */\n      dup4\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2179:2194  payee.sendValue */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2179:2203  payee.sendValue(payment) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2229:2234  payee */\n      dup2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2219:2244  Withdrawn(payee, payment) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2236:2243  payment */\n      dup3\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2219:2244  Withdrawn(payee, payment) */\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2093:2251  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":2027:2251  function withdraw(address payable payee) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2647:2959  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2761:2767  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2736:2757  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2736:2767  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2728:2801  require(address(this).balance >= amount, \"Address: insufficient balance\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2813:2825  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2831:2840  recipient */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2831:2845  recipient.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2853:2859  amount */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2831:2864  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_168\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_167)\n    tag_168:\n      0x60\n      swap2\n      pop\n    tag_167:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2812:2864  (bool success, ) = recipient.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2882:2889  success */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2874:2952  require(success, \"Address: unable to send value, recipient may have reverted\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2718:2959  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2647:2959  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1365:1548  function deposit(address payee) public payable virtual onlyOwner {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1440:1454  uint256 amount */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1457:1466  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1440:1466  uint256 amount = msg.value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1496:1502  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1476:1485  _deposits */\n      0x01\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1476:1492  _deposits[payee] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1486:1491  payee */\n      dup5\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1476:1492  _deposits[payee] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1476:1502  _deposits[payee] += amount */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1527:1532  payee */\n      dup2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1517:1541  Deposited(payee, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1534:1540  amount */\n      dup3\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1517:1541  Deposited(payee, amount) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1430:1548  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/escrow/Escrow.sol\":1365:1548  function deposit(address payee) public payable virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_179:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:243   */\n    tag_180:\n        /* \"#utility.yul\":184:191   */\n      0x00\n        /* \"#utility.yul\":213:237   */\n      tag_225\n        /* \"#utility.yul\":231:236   */\n      dup3\n        /* \"#utility.yul\":213:237   */\n      tag_179\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":202:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":249:391   */\n    tag_181:\n        /* \"#utility.yul\":352:384   */\n      tag_227\n        /* \"#utility.yul\":378:383   */\n      dup2\n        /* \"#utility.yul\":352:384   */\n      tag_180\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":347:350   */\n      dup3\n        /* \"#utility.yul\":340:385   */\n      mstore\n        /* \"#utility.yul\":249:391   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:651   */\n    tag_19:\n        /* \"#utility.yul\":506:510   */\n      0x00\n        /* \"#utility.yul\":544:546   */\n      0x20\n        /* \"#utility.yul\":533:542   */\n      dup3\n        /* \"#utility.yul\":529:547   */\n      add\n        /* \"#utility.yul\":521:547   */\n      swap1\n      pop\n        /* \"#utility.yul\":557:644   */\n      tag_229\n        /* \"#utility.yul\":641:642   */\n      0x00\n        /* \"#utility.yul\":630:639   */\n      dup4\n        /* \"#utility.yul\":626:643   */\n      add\n        /* \"#utility.yul\":617:623   */\n      dup5\n        /* \"#utility.yul\":557:644   */\n      tag_181\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":397:651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":738:855   */\n    tag_183:\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":844:845   */\n      dup1\n        /* \"#utility.yul\":837:849   */\n      revert\n        /* \"#utility.yul\":984:1122   */\n    tag_185:\n        /* \"#utility.yul\":1065:1097   */\n      tag_234\n        /* \"#utility.yul\":1091:1096   */\n      dup2\n        /* \"#utility.yul\":1065:1097   */\n      tag_180\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1058:1063   */\n      dup2\n        /* \"#utility.yul\":1055:1098   */\n      eq\n        /* \"#utility.yul\":1045:1116   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1109:1110   */\n      dup1\n        /* \"#utility.yul\":1102:1114   */\n      revert\n        /* \"#utility.yul\":1045:1116   */\n    tag_235:\n        /* \"#utility.yul\":984:1122   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1128:1283   */\n    tag_186:\n        /* \"#utility.yul\":1182:1187   */\n      0x00\n        /* \"#utility.yul\":1220:1226   */\n      dup2\n        /* \"#utility.yul\":1207:1227   */\n      calldataload\n        /* \"#utility.yul\":1198:1227   */\n      swap1\n      pop\n        /* \"#utility.yul\":1236:1277   */\n      tag_237\n        /* \"#utility.yul\":1271:1276   */\n      dup2\n        /* \"#utility.yul\":1236:1277   */\n      tag_185\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1128:1283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1289:1634   */\n    tag_26:\n        /* \"#utility.yul\":1356:1362   */\n      0x00\n        /* \"#utility.yul\":1405:1407   */\n      0x20\n        /* \"#utility.yul\":1393:1402   */\n      dup3\n        /* \"#utility.yul\":1384:1391   */\n      dup5\n        /* \"#utility.yul\":1380:1403   */\n      sub\n        /* \"#utility.yul\":1376:1408   */\n      slt\n        /* \"#utility.yul\":1373:1492   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1411:1490   */\n      tag_240\n      tag_183\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1373:1492   */\n    tag_239:\n        /* \"#utility.yul\":1531:1532   */\n      0x00\n        /* \"#utility.yul\":1556:1617   */\n      tag_241\n        /* \"#utility.yul\":1609:1616   */\n      dup5\n        /* \"#utility.yul\":1600:1606   */\n      dup3\n        /* \"#utility.yul\":1589:1598   */\n      dup6\n        /* \"#utility.yul\":1585:1607   */\n      add\n        /* \"#utility.yul\":1556:1617   */\n      tag_186\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1546:1617   */\n      swap2\n      pop\n        /* \"#utility.yul\":1502:1627   */\n      pop\n        /* \"#utility.yul\":1289:1634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1640:1736   */\n    tag_187:\n        /* \"#utility.yul\":1677:1684   */\n      0x00\n        /* \"#utility.yul\":1706:1730   */\n      tag_243\n        /* \"#utility.yul\":1724:1729   */\n      dup3\n        /* \"#utility.yul\":1706:1730   */\n      tag_179\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1695:1730   */\n      swap1\n      pop\n        /* \"#utility.yul\":1640:1736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1742:1864   */\n    tag_188:\n        /* \"#utility.yul\":1815:1839   */\n      tag_245\n        /* \"#utility.yul\":1833:1838   */\n      dup2\n        /* \"#utility.yul\":1815:1839   */\n      tag_187\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1808:1813   */\n      dup2\n        /* \"#utility.yul\":1805:1840   */\n      eq\n        /* \"#utility.yul\":1795:1858   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":1854:1855   */\n      0x00\n        /* \"#utility.yul\":1851:1852   */\n      dup1\n        /* \"#utility.yul\":1844:1856   */\n      revert\n        /* \"#utility.yul\":1795:1858   */\n    tag_246:\n        /* \"#utility.yul\":1742:1864   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1870:2009   */\n    tag_189:\n        /* \"#utility.yul\":1916:1921   */\n      0x00\n        /* \"#utility.yul\":1954:1960   */\n      dup2\n        /* \"#utility.yul\":1941:1961   */\n      calldataload\n        /* \"#utility.yul\":1932:1961   */\n      swap1\n      pop\n        /* \"#utility.yul\":1970:2003   */\n      tag_248\n        /* \"#utility.yul\":1997:2002   */\n      dup2\n        /* \"#utility.yul\":1970:2003   */\n      tag_188\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1870:2009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2015:2344   */\n    tag_31:\n        /* \"#utility.yul\":2074:2080   */\n      0x00\n        /* \"#utility.yul\":2123:2125   */\n      0x20\n        /* \"#utility.yul\":2111:2120   */\n      dup3\n        /* \"#utility.yul\":2102:2109   */\n      dup5\n        /* \"#utility.yul\":2098:2121   */\n      sub\n        /* \"#utility.yul\":2094:2126   */\n      slt\n        /* \"#utility.yul\":2091:2210   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2129:2208   */\n      tag_251\n      tag_183\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2091:2210   */\n    tag_250:\n        /* \"#utility.yul\":2249:2250   */\n      0x00\n        /* \"#utility.yul\":2274:2327   */\n      tag_252\n        /* \"#utility.yul\":2319:2326   */\n      dup5\n        /* \"#utility.yul\":2310:2316   */\n      dup3\n        /* \"#utility.yul\":2299:2308   */\n      dup6\n        /* \"#utility.yul\":2295:2317   */\n      add\n        /* \"#utility.yul\":2274:2327   */\n      tag_189\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2264:2327   */\n      swap2\n      pop\n        /* \"#utility.yul\":2220:2337   */\n      pop\n        /* \"#utility.yul\":2015:2344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2350:2440   */\n    tag_190:\n        /* \"#utility.yul\":2384:2391   */\n      0x00\n        /* \"#utility.yul\":2427:2432   */\n      dup2\n        /* \"#utility.yul\":2420:2433   */\n      iszero\n        /* \"#utility.yul\":2413:2434   */\n      iszero\n        /* \"#utility.yul\":2402:2434   */\n      swap1\n      pop\n        /* \"#utility.yul\":2350:2440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2446:2555   */\n    tag_191:\n        /* \"#utility.yul\":2527:2548   */\n      tag_255\n        /* \"#utility.yul\":2542:2547   */\n      dup2\n        /* \"#utility.yul\":2527:2548   */\n      tag_190\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2522:2525   */\n      dup3\n        /* \"#utility.yul\":2515:2549   */\n      mstore\n        /* \"#utility.yul\":2446:2555   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2771   */\n    tag_34:\n        /* \"#utility.yul\":2648:2652   */\n      0x00\n        /* \"#utility.yul\":2686:2688   */\n      0x20\n        /* \"#utility.yul\":2675:2684   */\n      dup3\n        /* \"#utility.yul\":2671:2689   */\n      add\n        /* \"#utility.yul\":2663:2689   */\n      swap1\n      pop\n        /* \"#utility.yul\":2699:2764   */\n      tag_257\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2750:2759   */\n      dup4\n        /* \"#utility.yul\":2746:2763   */\n      add\n        /* \"#utility.yul\":2737:2743   */\n      dup5\n        /* \"#utility.yul\":2699:2764   */\n      tag_191\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2561:2771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2777:2895   */\n    tag_192:\n        /* \"#utility.yul\":2864:2888   */\n      tag_259\n        /* \"#utility.yul\":2882:2887   */\n      dup2\n        /* \"#utility.yul\":2864:2888   */\n      tag_187\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2859:2862   */\n      dup3\n        /* \"#utility.yul\":2852:2889   */\n      mstore\n        /* \"#utility.yul\":2777:2895   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2901:3123   */\n    tag_45:\n        /* \"#utility.yul\":2994:2998   */\n      0x00\n        /* \"#utility.yul\":3032:3034   */\n      0x20\n        /* \"#utility.yul\":3021:3030   */\n      dup3\n        /* \"#utility.yul\":3017:3035   */\n      add\n        /* \"#utility.yul\":3009:3035   */\n      swap1\n      pop\n        /* \"#utility.yul\":3045:3116   */\n      tag_261\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3102:3111   */\n      dup4\n        /* \"#utility.yul\":3098:3115   */\n      add\n        /* \"#utility.yul\":3089:3095   */\n      dup5\n        /* \"#utility.yul\":3045:3116   */\n      tag_192\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2901:3123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3129:3309   */\n    tag_74:\n        /* \"#utility.yul\":3177:3254   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3174:3175   */\n      0x00\n        /* \"#utility.yul\":3167:3255   */\n      mstore\n        /* \"#utility.yul\":3274:3278   */\n      0x21\n        /* \"#utility.yul\":3271:3272   */\n      0x04\n        /* \"#utility.yul\":3264:3279   */\n      mstore\n        /* \"#utility.yul\":3298:3302   */\n      0x24\n        /* \"#utility.yul\":3295:3296   */\n      0x00\n        /* \"#utility.yul\":3288:3303   */\n      revert\n        /* \"#utility.yul\":3315:3430   */\n    tag_193:\n        /* \"#utility.yul\":3398:3399   */\n      0x03\n        /* \"#utility.yul\":3391:3396   */\n      dup2\n        /* \"#utility.yul\":3388:3400   */\n      lt\n        /* \"#utility.yul\":3378:3424   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3404:3422   */\n      tag_265\n      tag_74\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3378:3424   */\n    tag_264:\n        /* \"#utility.yul\":3315:3430   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3436:3567   */\n    tag_194:\n        /* \"#utility.yul\":3483:3490   */\n      0x00\n        /* \"#utility.yul\":3512:3517   */\n      dup2\n        /* \"#utility.yul\":3501:3517   */\n      swap1\n      pop\n        /* \"#utility.yul\":3518:3561   */\n      tag_267\n        /* \"#utility.yul\":3555:3560   */\n      dup3\n        /* \"#utility.yul\":3518:3561   */\n      tag_193\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3436:3567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3573:3704   */\n    tag_195:\n        /* \"#utility.yul\":3631:3640   */\n      0x00\n        /* \"#utility.yul\":3664:3698   */\n      tag_269\n        /* \"#utility.yul\":3692:3697   */\n      dup3\n        /* \"#utility.yul\":3664:3698   */\n      tag_194\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3651:3698   */\n      swap1\n      pop\n        /* \"#utility.yul\":3573:3704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3710:3857   */\n    tag_196:\n        /* \"#utility.yul\":3805:3850   */\n      tag_271\n        /* \"#utility.yul\":3844:3849   */\n      dup2\n        /* \"#utility.yul\":3805:3850   */\n      tag_195\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3800:3803   */\n      dup3\n        /* \"#utility.yul\":3793:3851   */\n      mstore\n        /* \"#utility.yul\":3710:3857   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3863:4101   */\n    tag_53:\n        /* \"#utility.yul\":3964:3968   */\n      0x00\n        /* \"#utility.yul\":4002:4004   */\n      0x20\n        /* \"#utility.yul\":3991:4000   */\n      dup3\n        /* \"#utility.yul\":3987:4005   */\n      add\n        /* \"#utility.yul\":3979:4005   */\n      swap1\n      pop\n        /* \"#utility.yul\":4015:4094   */\n      tag_273\n        /* \"#utility.yul\":4091:4092   */\n      0x00\n        /* \"#utility.yul\":4080:4089   */\n      dup4\n        /* \"#utility.yul\":4076:4093   */\n      add\n        /* \"#utility.yul\":4067:4073   */\n      dup5\n        /* \"#utility.yul\":4015:4094   */\n      tag_196\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3863:4101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4107:4184   */\n    tag_197:\n        /* \"#utility.yul\":4144:4151   */\n      0x00\n        /* \"#utility.yul\":4173:4178   */\n      dup2\n        /* \"#utility.yul\":4162:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":4107:4184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4308   */\n    tag_198:\n        /* \"#utility.yul\":4277:4301   */\n      tag_276\n        /* \"#utility.yul\":4295:4300   */\n      dup2\n        /* \"#utility.yul\":4277:4301   */\n      tag_197\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4272:4275   */\n      dup3\n        /* \"#utility.yul\":4265:4302   */\n      mstore\n        /* \"#utility.yul\":4190:4308   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4314:4536   */\n    tag_59:\n        /* \"#utility.yul\":4407:4411   */\n      0x00\n        /* \"#utility.yul\":4445:4447   */\n      0x20\n        /* \"#utility.yul\":4434:4443   */\n      dup3\n        /* \"#utility.yul\":4430:4448   */\n      add\n        /* \"#utility.yul\":4422:4448   */\n      swap1\n      pop\n        /* \"#utility.yul\":4458:4529   */\n      tag_278\n        /* \"#utility.yul\":4526:4527   */\n      0x00\n        /* \"#utility.yul\":4515:4524   */\n      dup4\n        /* \"#utility.yul\":4511:4528   */\n      add\n        /* \"#utility.yul\":4502:4508   */\n      dup5\n        /* \"#utility.yul\":4458:4529   */\n      tag_198\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4314:4536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4542:4711   */\n    tag_199:\n        /* \"#utility.yul\":4626:4637   */\n      0x00\n        /* \"#utility.yul\":4660:4666   */\n      dup3\n        /* \"#utility.yul\":4655:4658   */\n      dup3\n        /* \"#utility.yul\":4648:4667   */\n      mstore\n        /* \"#utility.yul\":4700:4704   */\n      0x20\n        /* \"#utility.yul\":4695:4698   */\n      dup3\n        /* \"#utility.yul\":4691:4705   */\n      add\n        /* \"#utility.yul\":4676:4705   */\n      swap1\n      pop\n        /* \"#utility.yul\":4542:4711   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4717:4945   */\n    tag_200:\n        /* \"#utility.yul\":4857:4891   */\n      0x526566756e64457363726f773a2063616e206f6e6c7920636c6f736520776869\n        /* \"#utility.yul\":4853:4854   */\n      0x00\n        /* \"#utility.yul\":4845:4851   */\n      dup3\n        /* \"#utility.yul\":4841:4855   */\n      add\n        /* \"#utility.yul\":4834:4892   */\n      mstore\n        /* \"#utility.yul\":4926:4937   */\n      0x6c65206163746976650000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4921:4923   */\n      0x20\n        /* \"#utility.yul\":4913:4919   */\n      dup3\n        /* \"#utility.yul\":4909:4924   */\n      add\n        /* \"#utility.yul\":4902:4938   */\n      mstore\n        /* \"#utility.yul\":4717:4945   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4951:5317   */\n    tag_201:\n        /* \"#utility.yul\":5093:5096   */\n      0x00\n        /* \"#utility.yul\":5114:5181   */\n      tag_282\n        /* \"#utility.yul\":5178:5180   */\n      0x29\n        /* \"#utility.yul\":5173:5176   */\n      dup4\n        /* \"#utility.yul\":5114:5181   */\n      tag_199\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5107:5181   */\n      swap2\n      pop\n        /* \"#utility.yul\":5190:5283   */\n      tag_283\n        /* \"#utility.yul\":5279:5282   */\n      dup3\n        /* \"#utility.yul\":5190:5283   */\n      tag_200\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5308:5310   */\n      0x40\n        /* \"#utility.yul\":5303:5306   */\n      dup3\n        /* \"#utility.yul\":5299:5311   */\n      add\n        /* \"#utility.yul\":5292:5311   */\n      swap1\n      pop\n        /* \"#utility.yul\":4951:5317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5323:5742   */\n    tag_80:\n        /* \"#utility.yul\":5489:5493   */\n      0x00\n        /* \"#utility.yul\":5527:5529   */\n      0x20\n        /* \"#utility.yul\":5516:5525   */\n      dup3\n        /* \"#utility.yul\":5512:5530   */\n      add\n        /* \"#utility.yul\":5504:5530   */\n      swap1\n      pop\n        /* \"#utility.yul\":5576:5585   */\n      dup2\n        /* \"#utility.yul\":5570:5574   */\n      dup2\n        /* \"#utility.yul\":5566:5586   */\n      sub\n        /* \"#utility.yul\":5562:5563   */\n      0x00\n        /* \"#utility.yul\":5551:5560   */\n      dup4\n        /* \"#utility.yul\":5547:5564   */\n      add\n        /* \"#utility.yul\":5540:5587   */\n      mstore\n        /* \"#utility.yul\":5604:5735   */\n      tag_285\n        /* \"#utility.yul\":5730:5734   */\n      dup2\n        /* \"#utility.yul\":5604:5735   */\n      tag_201\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5596:5735   */\n      swap1\n      pop\n        /* \"#utility.yul\":5323:5742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5748:5986   */\n    tag_202:\n        /* \"#utility.yul\":5888:5922   */\n      0x436f6e646974696f6e616c457363726f773a207061796565206973206e6f7420\n        /* \"#utility.yul\":5884:5885   */\n      0x00\n        /* \"#utility.yul\":5876:5882   */\n      dup3\n        /* \"#utility.yul\":5872:5886   */\n      add\n        /* \"#utility.yul\":5865:5923   */\n      mstore\n        /* \"#utility.yul\":5957:5978   */\n      0x616c6c6f77656420746f20776974686472617700000000000000000000000000\n        /* \"#utility.yul\":5952:5954   */\n      0x20\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5955   */\n      add\n        /* \"#utility.yul\":5933:5979   */\n      mstore\n        /* \"#utility.yul\":5748:5986   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5992:6358   */\n    tag_203:\n        /* \"#utility.yul\":6134:6137   */\n      0x00\n        /* \"#utility.yul\":6155:6222   */\n      tag_288\n        /* \"#utility.yul\":6219:6221   */\n      0x33\n        /* \"#utility.yul\":6214:6217   */\n      dup4\n        /* \"#utility.yul\":6155:6222   */\n      tag_199\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6148:6222   */\n      swap2\n      pop\n        /* \"#utility.yul\":6231:6324   */\n      tag_289\n        /* \"#utility.yul\":6320:6323   */\n      dup3\n        /* \"#utility.yul\":6231:6324   */\n      tag_202\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6349:6351   */\n      0x40\n        /* \"#utility.yul\":6344:6347   */\n      dup3\n        /* \"#utility.yul\":6340:6352   */\n      add\n        /* \"#utility.yul\":6333:6352   */\n      swap1\n      pop\n        /* \"#utility.yul\":5992:6358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6364:6783   */\n    tag_87:\n        /* \"#utility.yul\":6530:6534   */\n      0x00\n        /* \"#utility.yul\":6568:6570   */\n      0x20\n        /* \"#utility.yul\":6557:6566   */\n      dup3\n        /* \"#utility.yul\":6553:6571   */\n      add\n        /* \"#utility.yul\":6545:6571   */\n      swap1\n      pop\n        /* \"#utility.yul\":6617:6626   */\n      dup2\n        /* \"#utility.yul\":6611:6615   */\n      dup2\n        /* \"#utility.yul\":6607:6627   */\n      sub\n        /* \"#utility.yul\":6603:6604   */\n      0x00\n        /* \"#utility.yul\":6592:6601   */\n      dup4\n        /* \"#utility.yul\":6588:6605   */\n      add\n        /* \"#utility.yul\":6581:6628   */\n      mstore\n        /* \"#utility.yul\":6645:6776   */\n      tag_291\n        /* \"#utility.yul\":6771:6775   */\n      dup2\n        /* \"#utility.yul\":6645:6776   */\n      tag_203\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6637:6776   */\n      swap1\n      pop\n        /* \"#utility.yul\":6364:6783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6789:7026   */\n    tag_204:\n        /* \"#utility.yul\":6929:6963   */\n      0x526566756e64457363726f773a2063616e206f6e6c7920656e61626c65207265\n        /* \"#utility.yul\":6925:6926   */\n      0x00\n        /* \"#utility.yul\":6917:6923   */\n      dup3\n        /* \"#utility.yul\":6913:6927   */\n      add\n        /* \"#utility.yul\":6906:6964   */\n      mstore\n        /* \"#utility.yul\":6998:7018   */\n      0x66756e6473207768696c65206163746976650000000000000000000000000000\n        /* \"#utility.yul\":6993:6995   */\n      0x20\n        /* \"#utility.yul\":6985:6991   */\n      dup3\n        /* \"#utility.yul\":6981:6996   */\n      add\n        /* \"#utility.yul\":6974:7019   */\n      mstore\n        /* \"#utility.yul\":6789:7026   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7032:7398   */\n    tag_205:\n        /* \"#utility.yul\":7174:7177   */\n      0x00\n        /* \"#utility.yul\":7195:7262   */\n      tag_294\n        /* \"#utility.yul\":7259:7261   */\n      0x32\n        /* \"#utility.yul\":7254:7257   */\n      dup4\n        /* \"#utility.yul\":7195:7262   */\n      tag_199\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7188:7262   */\n      swap2\n      pop\n        /* \"#utility.yul\":7271:7364   */\n      tag_295\n        /* \"#utility.yul\":7360:7363   */\n      dup3\n        /* \"#utility.yul\":7271:7364   */\n      tag_204\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7389:7391   */\n      0x40\n        /* \"#utility.yul\":7384:7387   */\n      dup3\n        /* \"#utility.yul\":7380:7392   */\n      add\n        /* \"#utility.yul\":7373:7392   */\n      swap1\n      pop\n        /* \"#utility.yul\":7032:7398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7404:7823   */\n    tag_111:\n        /* \"#utility.yul\":7570:7574   */\n      0x00\n        /* \"#utility.yul\":7608:7610   */\n      0x20\n        /* \"#utility.yul\":7597:7606   */\n      dup3\n        /* \"#utility.yul\":7593:7611   */\n      add\n        /* \"#utility.yul\":7585:7611   */\n      swap1\n      pop\n        /* \"#utility.yul\":7657:7666   */\n      dup2\n        /* \"#utility.yul\":7651:7655   */\n      dup2\n        /* \"#utility.yul\":7647:7667   */\n      sub\n        /* \"#utility.yul\":7643:7644   */\n      0x00\n        /* \"#utility.yul\":7632:7641   */\n      dup4\n        /* \"#utility.yul\":7628:7645   */\n      add\n        /* \"#utility.yul\":7621:7668   */\n      mstore\n        /* \"#utility.yul\":7685:7816   */\n      tag_297\n        /* \"#utility.yul\":7811:7815   */\n      dup2\n        /* \"#utility.yul\":7685:7816   */\n      tag_205\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7677:7816   */\n      swap1\n      pop\n        /* \"#utility.yul\":7404:7823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7829:8072   */\n    tag_206:\n        /* \"#utility.yul\":7969:8003   */\n      0x526566756e64457363726f773a2062656e65666963696172792063616e206f6e\n        /* \"#utility.yul\":7965:7966   */\n      0x00\n        /* \"#utility.yul\":7957:7963   */\n      dup3\n        /* \"#utility.yul\":7953:7967   */\n      add\n        /* \"#utility.yul\":7946:8004   */\n      mstore\n        /* \"#utility.yul\":8038:8064   */\n      0x6c79207769746864726177207768696c6520636c6f7365640000000000000000\n        /* \"#utility.yul\":8033:8035   */\n      0x20\n        /* \"#utility.yul\":8025:8031   */\n      dup3\n        /* \"#utility.yul\":8021:8036   */\n      add\n        /* \"#utility.yul\":8014:8065   */\n      mstore\n        /* \"#utility.yul\":7829:8072   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8078:8444   */\n    tag_207:\n        /* \"#utility.yul\":8220:8223   */\n      0x00\n        /* \"#utility.yul\":8241:8308   */\n      tag_300\n        /* \"#utility.yul\":8305:8307   */\n      0x38\n        /* \"#utility.yul\":8300:8303   */\n      dup4\n        /* \"#utility.yul\":8241:8308   */\n      tag_199\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8234:8308   */\n      swap2\n      pop\n        /* \"#utility.yul\":8317:8410   */\n      tag_301\n        /* \"#utility.yul\":8406:8409   */\n      dup3\n        /* \"#utility.yul\":8317:8410   */\n      tag_206\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8435:8437   */\n      0x40\n        /* \"#utility.yul\":8430:8433   */\n      dup3\n        /* \"#utility.yul\":8426:8438   */\n      add\n        /* \"#utility.yul\":8419:8438   */\n      swap1\n      pop\n        /* \"#utility.yul\":8078:8444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8450:8869   */\n    tag_123:\n        /* \"#utility.yul\":8616:8620   */\n      0x00\n        /* \"#utility.yul\":8654:8656   */\n      0x20\n        /* \"#utility.yul\":8643:8652   */\n      dup3\n        /* \"#utility.yul\":8639:8657   */\n      add\n        /* \"#utility.yul\":8631:8657   */\n      swap1\n      pop\n        /* \"#utility.yul\":8703:8712   */\n      dup2\n        /* \"#utility.yul\":8697:8701   */\n      dup2\n        /* \"#utility.yul\":8693:8713   */\n      sub\n        /* \"#utility.yul\":8689:8690   */\n      0x00\n        /* \"#utility.yul\":8678:8687   */\n      dup4\n        /* \"#utility.yul\":8674:8691   */\n      add\n        /* \"#utility.yul\":8667:8714   */\n      mstore\n        /* \"#utility.yul\":8731:8862   */\n      tag_303\n        /* \"#utility.yul\":8857:8861   */\n      dup2\n        /* \"#utility.yul\":8731:8862   */\n      tag_207\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":8723:8862   */\n      swap1\n      pop\n        /* \"#utility.yul\":8450:8869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8875:9100   */\n    tag_208:\n        /* \"#utility.yul\":9015:9049   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9011:9012   */\n      0x00\n        /* \"#utility.yul\":9003:9009   */\n      dup3\n        /* \"#utility.yul\":8999:9013   */\n      add\n        /* \"#utility.yul\":8992:9050   */\n      mstore\n        /* \"#utility.yul\":9084:9092   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9079:9081   */\n      0x20\n        /* \"#utility.yul\":9071:9077   */\n      dup3\n        /* \"#utility.yul\":9067:9082   */\n      add\n        /* \"#utility.yul\":9060:9093   */\n      mstore\n        /* \"#utility.yul\":8875:9100   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9106:9472   */\n    tag_209:\n        /* \"#utility.yul\":9248:9251   */\n      0x00\n        /* \"#utility.yul\":9269:9336   */\n      tag_306\n        /* \"#utility.yul\":9333:9335   */\n      0x26\n        /* \"#utility.yul\":9328:9331   */\n      dup4\n        /* \"#utility.yul\":9269:9336   */\n      tag_199\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9262:9336   */\n      swap2\n      pop\n        /* \"#utility.yul\":9345:9438   */\n      tag_307\n        /* \"#utility.yul\":9434:9437   */\n      dup3\n        /* \"#utility.yul\":9345:9438   */\n      tag_208\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9463:9465   */\n      0x40\n        /* \"#utility.yul\":9458:9461   */\n      dup3\n        /* \"#utility.yul\":9454:9466   */\n      add\n        /* \"#utility.yul\":9447:9466   */\n      swap1\n      pop\n        /* \"#utility.yul\":9106:9472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9478:9897   */\n    tag_134:\n        /* \"#utility.yul\":9644:9648   */\n      0x00\n        /* \"#utility.yul\":9682:9684   */\n      0x20\n        /* \"#utility.yul\":9671:9680   */\n      dup3\n        /* \"#utility.yul\":9667:9685   */\n      add\n        /* \"#utility.yul\":9659:9685   */\n      swap1\n      pop\n        /* \"#utility.yul\":9731:9740   */\n      dup2\n        /* \"#utility.yul\":9725:9729   */\n      dup2\n        /* \"#utility.yul\":9721:9741   */\n      sub\n        /* \"#utility.yul\":9717:9718   */\n      0x00\n        /* \"#utility.yul\":9706:9715   */\n      dup4\n        /* \"#utility.yul\":9702:9719   */\n      add\n        /* \"#utility.yul\":9695:9742   */\n      mstore\n        /* \"#utility.yul\":9759:9890   */\n      tag_309\n        /* \"#utility.yul\":9885:9889   */\n      dup2\n        /* \"#utility.yul\":9759:9890   */\n      tag_209\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":9751:9890   */\n      swap1\n      pop\n        /* \"#utility.yul\":9478:9897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9903:10133   */\n    tag_210:\n        /* \"#utility.yul\":10043:10077   */\n      0x526566756e64457363726f773a2063616e206f6e6c79206465706f7369742077\n        /* \"#utility.yul\":10039:10040   */\n      0x00\n        /* \"#utility.yul\":10031:10037   */\n      dup3\n        /* \"#utility.yul\":10027:10041   */\n      add\n        /* \"#utility.yul\":10020:10078   */\n      mstore\n        /* \"#utility.yul\":10112:10125   */\n      0x68696c6520616374697665000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10107:10109   */\n      0x20\n        /* \"#utility.yul\":10099:10105   */\n      dup3\n        /* \"#utility.yul\":10095:10110   */\n      add\n        /* \"#utility.yul\":10088:10126   */\n      mstore\n        /* \"#utility.yul\":9903:10133   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10139:10505   */\n    tag_211:\n        /* \"#utility.yul\":10281:10284   */\n      0x00\n        /* \"#utility.yul\":10302:10369   */\n      tag_312\n        /* \"#utility.yul\":10366:10368   */\n      0x2b\n        /* \"#utility.yul\":10361:10364   */\n      dup4\n        /* \"#utility.yul\":10302:10369   */\n      tag_199\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10295:10369   */\n      swap2\n      pop\n        /* \"#utility.yul\":10378:10471   */\n      tag_313\n        /* \"#utility.yul\":10467:10470   */\n      dup3\n        /* \"#utility.yul\":10378:10471   */\n      tag_210\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":10496:10498   */\n      0x40\n        /* \"#utility.yul\":10491:10494   */\n      dup3\n        /* \"#utility.yul\":10487:10499   */\n      add\n        /* \"#utility.yul\":10480:10499   */\n      swap1\n      pop\n        /* \"#utility.yul\":10139:10505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10511:10930   */\n    tag_144:\n        /* \"#utility.yul\":10677:10681   */\n      0x00\n        /* \"#utility.yul\":10715:10717   */\n      0x20\n        /* \"#utility.yul\":10704:10713   */\n      dup3\n        /* \"#utility.yul\":10700:10718   */\n      add\n        /* \"#utility.yul\":10692:10718   */\n      swap1\n      pop\n        /* \"#utility.yul\":10764:10773   */\n      dup2\n        /* \"#utility.yul\":10758:10762   */\n      dup2\n        /* \"#utility.yul\":10754:10774   */\n      sub\n        /* \"#utility.yul\":10750:10751   */\n      0x00\n        /* \"#utility.yul\":10739:10748   */\n      dup4\n        /* \"#utility.yul\":10735:10752   */\n      add\n        /* \"#utility.yul\":10728:10775   */\n      mstore\n        /* \"#utility.yul\":10792:10923   */\n      tag_315\n        /* \"#utility.yul\":10918:10922   */\n      dup2\n        /* \"#utility.yul\":10792:10923   */\n      tag_211\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":10784:10923   */\n      swap1\n      pop\n        /* \"#utility.yul\":10511:10930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10936:11118   */\n    tag_212:\n        /* \"#utility.yul\":11076:11110   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11072:11073   */\n      0x00\n        /* \"#utility.yul\":11064:11070   */\n      dup3\n        /* \"#utility.yul\":11060:11074   */\n      add\n        /* \"#utility.yul\":11053:11111   */\n      mstore\n        /* \"#utility.yul\":10936:11118   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11124:11490   */\n    tag_213:\n        /* \"#utility.yul\":11266:11269   */\n      0x00\n        /* \"#utility.yul\":11287:11354   */\n      tag_318\n        /* \"#utility.yul\":11351:11353   */\n      0x20\n        /* \"#utility.yul\":11346:11349   */\n      dup4\n        /* \"#utility.yul\":11287:11354   */\n      tag_199\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":11280:11354   */\n      swap2\n      pop\n        /* \"#utility.yul\":11363:11456   */\n      tag_319\n        /* \"#utility.yul\":11452:11455   */\n      dup3\n        /* \"#utility.yul\":11363:11456   */\n      tag_212\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11481:11483   */\n      0x20\n        /* \"#utility.yul\":11476:11479   */\n      dup3\n        /* \"#utility.yul\":11472:11484   */\n      add\n        /* \"#utility.yul\":11465:11484   */\n      swap1\n      pop\n        /* \"#utility.yul\":11124:11490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11496:11915   */\n    tag_153:\n        /* \"#utility.yul\":11662:11666   */\n      0x00\n        /* \"#utility.yul\":11700:11702   */\n      0x20\n        /* \"#utility.yul\":11689:11698   */\n      dup3\n        /* \"#utility.yul\":11685:11703   */\n      add\n        /* \"#utility.yul\":11677:11703   */\n      swap1\n      pop\n        /* \"#utility.yul\":11749:11758   */\n      dup2\n        /* \"#utility.yul\":11743:11747   */\n      dup2\n        /* \"#utility.yul\":11739:11759   */\n      sub\n        /* \"#utility.yul\":11735:11736   */\n      0x00\n        /* \"#utility.yul\":11724:11733   */\n      dup4\n        /* \"#utility.yul\":11720:11737   */\n      add\n        /* \"#utility.yul\":11713:11760   */\n      mstore\n        /* \"#utility.yul\":11777:11908   */\n      tag_321\n        /* \"#utility.yul\":11903:11907   */\n      dup2\n        /* \"#utility.yul\":11777:11908   */\n      tag_213\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":11769:11908   */\n      swap1\n      pop\n        /* \"#utility.yul\":11496:11915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11921:12100   */\n    tag_214:\n        /* \"#utility.yul\":12061:12092   */\n      0x416464726573733a20696e73756666696369656e742062616c616e6365000000\n        /* \"#utility.yul\":12057:12058   */\n      0x00\n        /* \"#utility.yul\":12049:12055   */\n      dup3\n        /* \"#utility.yul\":12045:12059   */\n      add\n        /* \"#utility.yul\":12038:12093   */\n      mstore\n        /* \"#utility.yul\":11921:12100   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12106:12472   */\n    tag_215:\n        /* \"#utility.yul\":12248:12251   */\n      0x00\n        /* \"#utility.yul\":12269:12336   */\n      tag_324\n        /* \"#utility.yul\":12333:12335   */\n      0x1d\n        /* \"#utility.yul\":12328:12331   */\n      dup4\n        /* \"#utility.yul\":12269:12336   */\n      tag_199\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12262:12336   */\n      swap2\n      pop\n        /* \"#utility.yul\":12345:12438   */\n      tag_325\n        /* \"#utility.yul\":12434:12437   */\n      dup3\n        /* \"#utility.yul\":12345:12438   */\n      tag_214\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":12463:12465   */\n      0x20\n        /* \"#utility.yul\":12458:12461   */\n      dup3\n        /* \"#utility.yul\":12454:12466   */\n      add\n        /* \"#utility.yul\":12447:12466   */\n      swap1\n      pop\n        /* \"#utility.yul\":12106:12472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12478:12897   */\n    tag_163:\n        /* \"#utility.yul\":12644:12648   */\n      0x00\n        /* \"#utility.yul\":12682:12684   */\n      0x20\n        /* \"#utility.yul\":12671:12680   */\n      dup3\n        /* \"#utility.yul\":12667:12685   */\n      add\n        /* \"#utility.yul\":12659:12685   */\n      swap1\n      pop\n        /* \"#utility.yul\":12731:12740   */\n      dup2\n        /* \"#utility.yul\":12725:12729   */\n      dup2\n        /* \"#utility.yul\":12721:12741   */\n      sub\n        /* \"#utility.yul\":12717:12718   */\n      0x00\n        /* \"#utility.yul\":12706:12715   */\n      dup4\n        /* \"#utility.yul\":12702:12719   */\n      add\n        /* \"#utility.yul\":12695:12742   */\n      mstore\n        /* \"#utility.yul\":12759:12890   */\n      tag_327\n        /* \"#utility.yul\":12885:12889   */\n      dup2\n        /* \"#utility.yul\":12759:12890   */\n      tag_215\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12751:12890   */\n      swap1\n      pop\n        /* \"#utility.yul\":12478:12897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12903:13050   */\n    tag_216:\n        /* \"#utility.yul\":13004:13015   */\n      0x00\n        /* \"#utility.yul\":13041:13044   */\n      dup2\n        /* \"#utility.yul\":13026:13044   */\n      swap1\n      pop\n        /* \"#utility.yul\":12903:13050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13056:13170   */\n    tag_217:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13176:13574   */\n    tag_218:\n        /* \"#utility.yul\":13335:13338   */\n      0x00\n        /* \"#utility.yul\":13356:13439   */\n      tag_331\n        /* \"#utility.yul\":13437:13438   */\n      0x00\n        /* \"#utility.yul\":13432:13435   */\n      dup4\n        /* \"#utility.yul\":13356:13439   */\n      tag_216\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13349:13439   */\n      swap2\n      pop\n        /* \"#utility.yul\":13448:13541   */\n      tag_332\n        /* \"#utility.yul\":13537:13540   */\n      dup3\n        /* \"#utility.yul\":13448:13541   */\n      tag_217\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":13566:13567   */\n      0x00\n        /* \"#utility.yul\":13561:13564   */\n      dup3\n        /* \"#utility.yul\":13557:13568   */\n      add\n        /* \"#utility.yul\":13550:13568   */\n      swap1\n      pop\n        /* \"#utility.yul\":13176:13574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13580:13959   */\n    tag_165:\n        /* \"#utility.yul\":13764:13767   */\n      0x00\n        /* \"#utility.yul\":13786:13933   */\n      tag_334\n        /* \"#utility.yul\":13929:13932   */\n      dup3\n        /* \"#utility.yul\":13786:13933   */\n      tag_218\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":13779:13933   */\n      swap2\n      pop\n        /* \"#utility.yul\":13950:13953   */\n      dup2\n        /* \"#utility.yul\":13943:13953   */\n      swap1\n      pop\n        /* \"#utility.yul\":13580:13959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13965:14210   */\n    tag_219:\n        /* \"#utility.yul\":14105:14139   */\n      0x416464726573733a20756e61626c6520746f2073656e642076616c75652c2072\n        /* \"#utility.yul\":14101:14102   */\n      0x00\n        /* \"#utility.yul\":14093:14099   */\n      dup3\n        /* \"#utility.yul\":14089:14103   */\n      add\n        /* \"#utility.yul\":14082:14140   */\n      mstore\n        /* \"#utility.yul\":14174:14202   */\n      0x6563697069656e74206d61792068617665207265766572746564000000000000\n        /* \"#utility.yul\":14169:14171   */\n      0x20\n        /* \"#utility.yul\":14161:14167   */\n      dup3\n        /* \"#utility.yul\":14157:14172   */\n      add\n        /* \"#utility.yul\":14150:14203   */\n      mstore\n        /* \"#utility.yul\":13965:14210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14216:14582   */\n    tag_220:\n        /* \"#utility.yul\":14358:14361   */\n      0x00\n        /* \"#utility.yul\":14379:14446   */\n      tag_337\n        /* \"#utility.yul\":14443:14445   */\n      0x3a\n        /* \"#utility.yul\":14438:14441   */\n      dup4\n        /* \"#utility.yul\":14379:14446   */\n      tag_199\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":14372:14446   */\n      swap2\n      pop\n        /* \"#utility.yul\":14455:14548   */\n      tag_338\n        /* \"#utility.yul\":14544:14547   */\n      dup3\n        /* \"#utility.yul\":14455:14548   */\n      tag_219\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":14573:14575   */\n      0x40\n        /* \"#utility.yul\":14568:14571   */\n      dup3\n        /* \"#utility.yul\":14564:14576   */\n      add\n        /* \"#utility.yul\":14557:14576   */\n      swap1\n      pop\n        /* \"#utility.yul\":14216:14582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14588:15007   */\n    tag_171:\n        /* \"#utility.yul\":14754:14758   */\n      0x00\n        /* \"#utility.yul\":14792:14794   */\n      0x20\n        /* \"#utility.yul\":14781:14790   */\n      dup3\n        /* \"#utility.yul\":14777:14795   */\n      add\n        /* \"#utility.yul\":14769:14795   */\n      swap1\n      pop\n        /* \"#utility.yul\":14841:14850   */\n      dup2\n        /* \"#utility.yul\":14835:14839   */\n      dup2\n        /* \"#utility.yul\":14831:14851   */\n      sub\n        /* \"#utility.yul\":14827:14828   */\n      0x00\n        /* \"#utility.yul\":14816:14825   */\n      dup4\n        /* \"#utility.yul\":14812:14829   */\n      add\n        /* \"#utility.yul\":14805:14852   */\n      mstore\n        /* \"#utility.yul\":14869:15000   */\n      tag_340\n        /* \"#utility.yul\":14995:14999   */\n      dup2\n        /* \"#utility.yul\":14869:15000   */\n      tag_220\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":14861:15000   */\n      swap1\n      pop\n        /* \"#utility.yul\":14588:15007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15013:15193   */\n    tag_221:\n        /* \"#utility.yul\":15061:15138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15058:15059   */\n      0x00\n        /* \"#utility.yul\":15051:15139   */\n      mstore\n        /* \"#utility.yul\":15158:15162   */\n      0x11\n        /* \"#utility.yul\":15155:15156   */\n      0x04\n        /* \"#utility.yul\":15148:15163   */\n      mstore\n        /* \"#utility.yul\":15182:15186   */\n      0x24\n        /* \"#utility.yul\":15179:15180   */\n      0x00\n        /* \"#utility.yul\":15172:15187   */\n      revert\n        /* \"#utility.yul\":15199:15390   */\n    tag_176:\n        /* \"#utility.yul\":15239:15242   */\n      0x00\n        /* \"#utility.yul\":15258:15278   */\n      tag_343\n        /* \"#utility.yul\":15276:15277   */\n      dup3\n        /* \"#utility.yul\":15258:15278   */\n      tag_197\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":15253:15278   */\n      swap2\n      pop\n        /* \"#utility.yul\":15292:15312   */\n      tag_344\n        /* \"#utility.yul\":15310:15311   */\n      dup4\n        /* \"#utility.yul\":15292:15312   */\n      tag_197\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":15287:15312   */\n      swap3\n      pop\n        /* \"#utility.yul\":15335:15336   */\n      dup3\n        /* \"#utility.yul\":15332:15333   */\n      dup3\n        /* \"#utility.yul\":15328:15337   */\n      add\n        /* \"#utility.yul\":15321:15337   */\n      swap1\n      pop\n        /* \"#utility.yul\":15356:15359   */\n      dup1\n        /* \"#utility.yul\":15353:15354   */\n      dup3\n        /* \"#utility.yul\":15350:15360   */\n      gt\n        /* \"#utility.yul\":15347:15383   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":15363:15381   */\n      tag_346\n      tag_221\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":15347:15383   */\n    tag_345:\n        /* \"#utility.yul\":15199:15390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122098841cf023c6b48aeb57c3b8af4fe7aa1d6c1f55c2029fcff1e494e45a16af5064736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1306": {
									"entryPoint": null,
									"id": 1306,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1117": {
									"entryPoint": 302,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 309,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2651:18",
										"nodeType": "YulBlock",
										"src": "0:2651:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "379:81:18",
													"nodeType": "YulBlock",
													"src": "379:81:18",
													"statements": [
														{
															"nativeSrc": "389:65:18",
															"nodeType": "YulAssignment",
															"src": "389:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:18",
																		"nodeType": "YulLiteral",
																		"src": "411:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:18"
																},
																"nativeSrc": "400:54:18",
																"nodeType": "YulFunctionCall",
																"src": "400:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:18",
														"nodeType": "YulTypedName",
														"src": "361:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:18",
														"nodeType": "YulTypedName",
														"src": "371:7:18",
														"type": ""
													}
												],
												"src": "334:126:18"
											},
											{
												"body": {
													"nativeSrc": "519:51:18",
													"nodeType": "YulBlock",
													"src": "519:51:18",
													"statements": [
														{
															"nativeSrc": "529:35:18",
															"nodeType": "YulAssignment",
															"src": "529:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "558:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "558:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "540:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "540:17:18"
																},
																"nativeSrc": "540:24:18",
																"nodeType": "YulFunctionCall",
																"src": "540:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "529:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "529:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "466:104:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "501:5:18",
														"nodeType": "YulTypedName",
														"src": "501:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "511:7:18",
														"nodeType": "YulTypedName",
														"src": "511:7:18",
														"type": ""
													}
												],
												"src": "466:104:18"
											},
											{
												"body": {
													"nativeSrc": "627:87:18",
													"nodeType": "YulBlock",
													"src": "627:87:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "692:16:18",
																"nodeType": "YulBlock",
																"src": "692:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "701:1:18",
																					"nodeType": "YulLiteral",
																					"src": "701:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "704:1:18",
																					"nodeType": "YulLiteral",
																					"src": "704:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "694:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:18"
																			},
																			"nativeSrc": "694:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:18"
																		},
																		"nativeSrc": "694:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "650:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "650:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "683:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "683:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "657:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "657:25:18"
																				},
																				"nativeSrc": "657:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "657:32:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "647:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "647:2:18"
																		},
																		"nativeSrc": "647:43:18",
																		"nodeType": "YulFunctionCall",
																		"src": "647:43:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "640:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:18"
																},
																"nativeSrc": "640:51:18",
																"nodeType": "YulFunctionCall",
																"src": "640:51:18"
															},
															"nativeSrc": "637:71:18",
															"nodeType": "YulIf",
															"src": "637:71:18"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "576:138:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:18",
														"nodeType": "YulTypedName",
														"src": "620:5:18",
														"type": ""
													}
												],
												"src": "576:138:18"
											},
											{
												"body": {
													"nativeSrc": "791:88:18",
													"nodeType": "YulBlock",
													"src": "791:88:18",
													"statements": [
														{
															"nativeSrc": "801:22:18",
															"nodeType": "YulAssignment",
															"src": "801:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "816:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "810:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "810:5:18"
																},
																"nativeSrc": "810:13:18",
																"nodeType": "YulFunctionCall",
																"src": "810:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "801:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "801:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "867:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "867:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "832:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "832:34:18"
																},
																"nativeSrc": "832:41:18",
																"nodeType": "YulFunctionCall",
																"src": "832:41:18"
															},
															"nativeSrc": "832:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "832:41:18"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "720:159:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "769:6:18",
														"nodeType": "YulTypedName",
														"src": "769:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "777:3:18",
														"nodeType": "YulTypedName",
														"src": "777:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "785:5:18",
														"nodeType": "YulTypedName",
														"src": "785:5:18",
														"type": ""
													}
												],
												"src": "720:159:18"
											},
											{
												"body": {
													"nativeSrc": "970:282:18",
													"nodeType": "YulBlock",
													"src": "970:282:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1016:83:18",
																"nodeType": "YulBlock",
																"src": "1016:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1018:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "1018:77:18"
																			},
																			"nativeSrc": "1018:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1018:79:18"
																		},
																		"nativeSrc": "1018:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1018:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "991:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "991:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1000:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1000:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "987:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "987:3:18"
																		},
																		"nativeSrc": "987:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "987:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1012:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1012:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "983:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "983:3:18"
																},
																"nativeSrc": "983:32:18",
																"nodeType": "YulFunctionCall",
																"src": "983:32:18"
															},
															"nativeSrc": "980:119:18",
															"nodeType": "YulIf",
															"src": "980:119:18"
														},
														{
															"nativeSrc": "1109:136:18",
															"nodeType": "YulBlock",
															"src": "1109:136:18",
															"statements": [
																{
																	"nativeSrc": "1124:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1124:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1138:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1128:6:18",
																			"nodeType": "YulTypedName",
																			"src": "1128:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1153:82:18",
																	"nodeType": "YulAssignment",
																	"src": "1153:82:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1207:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1207:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1218:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1218:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1203:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1203:3:18"
																				},
																				"nativeSrc": "1203:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1203:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1227:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1227:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "1163:39:18",
																			"nodeType": "YulIdentifier",
																			"src": "1163:39:18"
																		},
																		"nativeSrc": "1163:72:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:72:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1153:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1153:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nativeSrc": "885:367:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "940:9:18",
														"nodeType": "YulTypedName",
														"src": "940:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "951:7:18",
														"nodeType": "YulTypedName",
														"src": "951:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "963:6:18",
														"nodeType": "YulTypedName",
														"src": "963:6:18",
														"type": ""
													}
												],
												"src": "885:367:18"
											},
											{
												"body": {
													"nativeSrc": "1354:73:18",
													"nodeType": "YulBlock",
													"src": "1354:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1371:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1371:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1376:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1376:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1364:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1364:6:18"
																},
																"nativeSrc": "1364:19:18",
																"nodeType": "YulFunctionCall",
																"src": "1364:19:18"
															},
															"nativeSrc": "1364:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "1364:19:18"
														},
														{
															"nativeSrc": "1392:29:18",
															"nodeType": "YulAssignment",
															"src": "1392:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1411:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1411:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1416:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1416:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1407:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:18"
																},
																"nativeSrc": "1407:14:18",
																"nodeType": "YulFunctionCall",
																"src": "1407:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1392:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "1392:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1258:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1326:3:18",
														"nodeType": "YulTypedName",
														"src": "1326:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1331:6:18",
														"nodeType": "YulTypedName",
														"src": "1331:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1342:11:18",
														"nodeType": "YulTypedName",
														"src": "1342:11:18",
														"type": ""
													}
												],
												"src": "1258:169:18"
											},
											{
												"body": {
													"nativeSrc": "1539:126:18",
													"nodeType": "YulBlock",
													"src": "1539:126:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1561:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1561:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1569:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1569:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1557:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1557:3:18"
																		},
																		"nativeSrc": "1557:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1557:14:18"
																	},
																	{
																		"hexValue": "526566756e64457363726f773a2062656e656669636961727920697320746865",
																		"kind": "string",
																		"nativeSrc": "1573:34:18",
																		"nodeType": "YulLiteral",
																		"src": "1573:34:18",
																		"type": "",
																		"value": "RefundEscrow: beneficiary is the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1550:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:18"
																},
																"nativeSrc": "1550:58:18",
																"nodeType": "YulFunctionCall",
																"src": "1550:58:18"
															},
															"nativeSrc": "1550:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "1550:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1629:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1629:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1637:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1637:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1625:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1625:3:18"
																		},
																		"nativeSrc": "1625:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1625:15:18"
																	},
																	{
																		"hexValue": "207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1642:15:18",
																		"nodeType": "YulLiteral",
																		"src": "1642:15:18",
																		"type": "",
																		"value": " zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1618:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1618:6:18"
																},
																"nativeSrc": "1618:40:18",
																"nodeType": "YulFunctionCall",
																"src": "1618:40:18"
															},
															"nativeSrc": "1618:40:18",
															"nodeType": "YulExpressionStatement",
															"src": "1618:40:18"
														}
													]
												},
												"name": "store_literal_in_memory_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
												"nativeSrc": "1433:232:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1531:6:18",
														"nodeType": "YulTypedName",
														"src": "1531:6:18",
														"type": ""
													}
												],
												"src": "1433:232:18"
											},
											{
												"body": {
													"nativeSrc": "1817:220:18",
													"nodeType": "YulBlock",
													"src": "1817:220:18",
													"statements": [
														{
															"nativeSrc": "1827:74:18",
															"nodeType": "YulAssignment",
															"src": "1827:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1893:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1893:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1898:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1898:2:18",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1834:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "1834:58:18"
																},
																"nativeSrc": "1834:67:18",
																"nodeType": "YulFunctionCall",
																"src": "1834:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1827:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1827:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1999:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1999:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
																	"nativeSrc": "1910:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "1910:88:18"
																},
																"nativeSrc": "1910:93:18",
																"nodeType": "YulFunctionCall",
																"src": "1910:93:18"
															},
															"nativeSrc": "1910:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "1910:93:18"
														},
														{
															"nativeSrc": "2012:19:18",
															"nodeType": "YulAssignment",
															"src": "2012:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2023:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2028:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2028:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2019:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:18"
																},
																"nativeSrc": "2019:12:18",
																"nodeType": "YulFunctionCall",
																"src": "2019:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2012:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2012:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1671:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1805:3:18",
														"nodeType": "YulTypedName",
														"src": "1805:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1813:3:18",
														"nodeType": "YulTypedName",
														"src": "1813:3:18",
														"type": ""
													}
												],
												"src": "1671:366:18"
											},
											{
												"body": {
													"nativeSrc": "2214:248:18",
													"nodeType": "YulBlock",
													"src": "2214:248:18",
													"statements": [
														{
															"nativeSrc": "2224:26:18",
															"nodeType": "YulAssignment",
															"src": "2224:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2236:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2236:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2247:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2247:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2232:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2232:3:18"
																},
																"nativeSrc": "2232:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2232:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2224:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2224:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2271:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2271:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2282:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2282:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2267:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2267:3:18"
																		},
																		"nativeSrc": "2267:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2267:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2290:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "2290:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2296:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2296:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2286:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2286:3:18"
																		},
																		"nativeSrc": "2286:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2286:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2260:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2260:6:18"
																},
																"nativeSrc": "2260:47:18",
																"nodeType": "YulFunctionCall",
																"src": "2260:47:18"
															},
															"nativeSrc": "2260:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "2260:47:18"
														},
														{
															"nativeSrc": "2316:139:18",
															"nodeType": "YulAssignment",
															"src": "2316:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2450:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2450:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2324:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "2324:124:18"
																},
																"nativeSrc": "2324:131:18",
																"nodeType": "YulFunctionCall",
																"src": "2324:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2316:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2316:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2043:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2194:9:18",
														"nodeType": "YulTypedName",
														"src": "2194:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2209:4:18",
														"nodeType": "YulTypedName",
														"src": "2209:4:18",
														"type": ""
													}
												],
												"src": "2043:419:18"
											},
											{
												"body": {
													"nativeSrc": "2496:152:18",
													"nodeType": "YulBlock",
													"src": "2496:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2513:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2513:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2516:77:18",
																		"nodeType": "YulLiteral",
																		"src": "2516:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2506:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:18"
																},
																"nativeSrc": "2506:88:18",
																"nodeType": "YulFunctionCall",
																"src": "2506:88:18"
															},
															"nativeSrc": "2506:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "2506:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2610:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2613:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2613:4:18",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2603:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:18"
																},
																"nativeSrc": "2603:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2603:15:18"
															},
															"nativeSrc": "2603:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2603:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2634:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2634:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2637:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2637:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2627:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:18"
																},
																"nativeSrc": "2627:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2627:15:18"
															},
															"nativeSrc": "2627:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2627:15:18"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "2468:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "2468:180:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d(memPtr) {\n\n        mstore(add(memPtr, 0), \"RefundEscrow: beneficiary is the\")\n\n        mstore(add(memPtr, 32), \" zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b50604051620016083803806200160883398181016040528101906200003691906200025b565b620000566200004a6200012e60201b60201c565b6200013560201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000c7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000be906200030f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505f60025f6101000a81548160ff021916908360028111156200012257620001216200032f565b5b0217905550506200035c565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200022582620001fa565b9050919050565b620002378162000219565b811462000242575f80fd5b50565b5f8151905062000255816200022c565b92915050565b5f60208284031215620002735762000272620001f6565b5b5f620002828482850162000245565b91505092915050565b5f82825260208201905092915050565b7f526566756e64457363726f773a2062656e6566696369617279206973207468655f8201527f207a65726f206164647265737300000000000000000000000000000000000000602082015250565b5f620002f7602d836200028b565b915062000304826200029b565b604082019050919050565b5f6020820190508181035f8301526200032881620002e9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b608051611293620003755f395f61026701526112935ff3fe6080604052600436106100a6575f3560e01c80638da5cb5b116100635780638da5cb5b1461017a5780639af6549a146101a4578063c19d93fb146101ba578063e3a9db1a146101e4578063f2fde38b14610220578063f340fa0114610248576100a6565b806338af3eed146100aa57806343d726d6146100d457806351cff8d9146100ea578063685ca19414610112578063715018a61461014e5780638c52dc4114610164575b5f80fd5b3480156100b5575f80fd5b506100be610264565b6040516100cb9190610b0a565b60405180910390f35b3480156100df575f80fd5b506100e861028b565b005b3480156100f5575f80fd5b50610110600480360381019061010b9190610b51565b610357565b005b34801561011d575f80fd5b5061013860048036038101906101339190610bb7565b6103ab565b6040516101459190610bfc565b60405180910390f35b348015610159575f80fd5b506101626103e2565b005b34801561016f575f80fd5b506101786103f5565b005b348015610185575f80fd5b5061018e6104c2565b60405161019b9190610c24565b60405180910390f35b3480156101af575f80fd5b506101b86104e9565b005b3480156101c5575f80fd5b506101ce610588565b6040516101db9190610cb0565b60405180910390f35b3480156101ef575f80fd5b5061020a60048036038101906102059190610bb7565b61059d565b6040516102179190610ce1565b60405180910390f35b34801561022b575f80fd5b5061024660048036038101906102419190610bb7565b6105e3565b005b610262600480360381019061025d9190610bb7565b610665565b005b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b6102936106de565b5f60028111156102a6576102a5610c3d565b5b6102ae610588565b60028111156102c0576102bf610c3d565b5b14610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f790610d7a565b60405180910390fd5b6002805f6101000a81548160ff0219169083600281111561032457610323610c3d565b5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b610360816103ab565b61039f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039690610e08565b60405180910390fd5b6103a88161075c565b50565b5f600160028111156103c0576103bf610c3d565b5b6103c8610588565b60028111156103da576103d9610c3d565b5b149050919050565b6103ea6106de565b6103f35f610862565b565b6103fd6106de565b5f60028111156104105761040f610c3d565b5b610418610588565b600281111561042a57610429610c3d565b5b1461046a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046190610e96565b60405180910390fd5b600160025f6101000a81548160ff0219169083600281111561048f5761048e610c3d565b5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002808111156104fc576104fb610c3d565b5b610504610588565b600281111561051657610515610c3d565b5b14610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90610f24565b60405180910390fd5b61058647610562610264565b73ffffffffffffffffffffffffffffffffffffffff1661092390919063ffffffff16565b565b5f60025f9054906101000a900460ff16905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105eb6106de565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090610fb2565b60405180910390fd5b61066281610862565b50565b5f600281111561067857610677610c3d565b5b610680610588565b600281111561069257610691610c3d565b5b146106d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c990611040565b60405180910390fd5b6106db81610a13565b50565b6106e6610ac4565b73ffffffffffffffffffffffffffffffffffffffff166107046104c2565b73ffffffffffffffffffffffffffffffffffffffff161461075a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610751906110a8565b60405180910390fd5b565b6107646106de565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610810818373ffffffffffffffffffffffffffffffffffffffff1661092390919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516108569190610ce1565b60405180910390a25050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80471015610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d90611110565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff168260405161098b9061115b565b5f6040518083038185875af1925050503d805f81146109c5576040519150601f19603f3d011682016040523d82523d5f602084013e6109ca565b606091505b5050905080610a0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a05906111df565b60405180910390fd5b505050565b610a1b6106de565b5f3490508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a6b919061122a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c482604051610ab89190610ce1565b60405180910390a25050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610af482610acb565b9050919050565b610b0481610aea565b82525050565b5f602082019050610b1d5f830184610afb565b92915050565b5f80fd5b610b3081610aea565b8114610b3a575f80fd5b50565b5f81359050610b4b81610b27565b92915050565b5f60208284031215610b6657610b65610b23565b5b5f610b7384828501610b3d565b91505092915050565b5f610b8682610acb565b9050919050565b610b9681610b7c565b8114610ba0575f80fd5b50565b5f81359050610bb181610b8d565b92915050565b5f60208284031215610bcc57610bcb610b23565b5b5f610bd984828501610ba3565b91505092915050565b5f8115159050919050565b610bf681610be2565b82525050565b5f602082019050610c0f5f830184610bed565b92915050565b610c1e81610b7c565b82525050565b5f602082019050610c375f830184610c15565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60038110610c7b57610c7a610c3d565b5b50565b5f819050610c8b82610c6a565b919050565b5f610c9a82610c7e565b9050919050565b610caa81610c90565b82525050565b5f602082019050610cc35f830184610ca1565b92915050565b5f819050919050565b610cdb81610cc9565b82525050565b5f602082019050610cf45f830184610cd2565b92915050565b5f82825260208201905092915050565b7f526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768695f8201527f6c65206163746976650000000000000000000000000000000000000000000000602082015250565b5f610d64602983610cfa565b9150610d6f82610d0a565b604082019050919050565b5f6020820190508181035f830152610d9181610d58565b9050919050565b7f436f6e646974696f6e616c457363726f773a207061796565206973206e6f74205f8201527f616c6c6f77656420746f20776974686472617700000000000000000000000000602082015250565b5f610df2603383610cfa565b9150610dfd82610d98565b604082019050919050565b5f6020820190508181035f830152610e1f81610de6565b9050919050565b7f526566756e64457363726f773a2063616e206f6e6c7920656e61626c652072655f8201527f66756e6473207768696c65206163746976650000000000000000000000000000602082015250565b5f610e80603283610cfa565b9150610e8b82610e26565b604082019050919050565b5f6020820190508181035f830152610ead81610e74565b9050919050565b7f526566756e64457363726f773a2062656e65666963696172792063616e206f6e5f8201527f6c79207769746864726177207768696c6520636c6f7365640000000000000000602082015250565b5f610f0e603883610cfa565b9150610f1982610eb4565b604082019050919050565b5f6020820190508181035f830152610f3b81610f02565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610f9c602683610cfa565b9150610fa782610f42565b604082019050919050565b5f6020820190508181035f830152610fc981610f90565b9050919050565b7f526566756e64457363726f773a2063616e206f6e6c79206465706f73697420775f8201527f68696c6520616374697665000000000000000000000000000000000000000000602082015250565b5f61102a602b83610cfa565b915061103582610fd0565b604082019050919050565b5f6020820190508181035f8301526110578161101e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f611092602083610cfa565b915061109d8261105e565b602082019050919050565b5f6020820190508181035f8301526110bf81611086565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e63650000005f82015250565b5f6110fa601d83610cfa565b9150611105826110c6565b602082019050919050565b5f6020820190508181035f830152611127816110ee565b9050919050565b5f81905092915050565b50565b5f6111465f8361112e565b915061115182611138565b5f82019050919050565b5f6111658261113b565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c20725f8201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b5f6111c9603a83610cfa565b91506111d48261116f565b604082019050919050565b5f6020820190508181035f8301526111f6816111bd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61123482610cc9565b915061123f83610cc9565b9250828201905080821115611257576112566111fd565b5b9291505056fea264697066735822122098841cf023c6b48aeb57c3b8af4fe7aa1d6c1f55c2029fcff1e494e45a16af5064736f6c63430008150033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1608 CODESIZE SUB DUP1 PUSH3 0x1608 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x25B JUMP JUMPDEST PUSH3 0x56 PUSH3 0x4A PUSH3 0x12E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x135 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xBE SWAP1 PUSH3 0x30F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x122 JUMPI PUSH3 0x121 PUSH3 0x32F JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH3 0x35C JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x225 DUP3 PUSH3 0x1FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x237 DUP2 PUSH3 0x219 JUMP JUMPDEST DUP2 EQ PUSH3 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x255 DUP2 PUSH3 0x22C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x273 JUMPI PUSH3 0x272 PUSH3 0x1F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x282 DUP5 DUP3 DUP6 ADD PUSH3 0x245 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526566756E64457363726F773A2062656E656669636961727920697320746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F206164647265737300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x2F7 PUSH1 0x2D DUP4 PUSH3 0x28B JUMP JUMPDEST SWAP2 POP PUSH3 0x304 DUP3 PUSH3 0x29B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x328 DUP2 PUSH3 0x2E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1293 PUSH3 0x375 PUSH0 CODECOPY PUSH0 PUSH2 0x267 ADD MSTORE PUSH2 0x1293 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x9AF6549A EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x248 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x685CA194 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8C52DC41 EQ PUSH2 0x164 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x6DE JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x2A5 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x2AE PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F7 SWAP1 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x324 JUMPI PUSH2 0x323 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x88672C3A6E342F7CD94A65BA63B79DF24A8973927B4D05D803C44BBF787D12F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x360 DUP2 PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x396 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A8 DUP2 PUSH2 0x75C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C0 JUMPI PUSH2 0x3BF PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x3C8 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3DA JUMPI PUSH2 0x3D9 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x3F3 PUSH0 PUSH2 0x862 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x6DE JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x410 JUMPI PUSH2 0x40F PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x418 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x42A JUMPI PUSH2 0x429 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x461 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x48F JUMPI PUSH2 0x48E PUSH2 0xC3D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x599D8E5A83CFFB867D051598C4D70E805D59802D8081C1C7D6DFFC5B6ACA2B89 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x504 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x586 SELFBALANCE PUSH2 0x562 PUSH2 0x264 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x923 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EB PUSH2 0x6DE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x662 DUP2 PUSH2 0x862 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x678 JUMPI PUSH2 0x677 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x680 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x692 JUMPI PUSH2 0x691 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C9 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DB DUP2 PUSH2 0xA13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6E6 PUSH2 0xAC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x704 PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x764 PUSH2 0x6DE JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x810 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x923 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x856 SWAP2 SWAP1 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x98B SWAP1 PUSH2 0x115B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA05 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA1B PUSH2 0x6DE JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF4 DUP3 PUSH2 0xACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB04 DUP2 PUSH2 0xAEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1D PUSH0 DUP4 ADD DUP5 PUSH2 0xAFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xAEA JUMP JUMPDEST DUP2 EQ PUSH2 0xB3A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4B DUP2 PUSH2 0xB27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB66 JUMPI PUSH2 0xB65 PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB73 DUP5 DUP3 DUP6 ADD PUSH2 0xB3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB86 DUP3 PUSH2 0xACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB96 DUP2 PUSH2 0xB7C JUMP JUMPDEST DUP2 EQ PUSH2 0xBA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB1 DUP2 PUSH2 0xB8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD9 DUP5 DUP3 DUP6 ADD PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF6 DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC0F PUSH0 DUP4 ADD DUP5 PUSH2 0xBED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC1E DUP2 PUSH2 0xB7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH0 DUP4 ADD DUP5 PUSH2 0xC15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xC7B JUMPI PUSH2 0xC7A PUSH2 0xC3D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0xC8B DUP3 PUSH2 0xC6A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC9A DUP3 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAA DUP2 PUSH2 0xC90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCC3 PUSH0 DUP4 ADD DUP5 PUSH2 0xCA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDB DUP2 PUSH2 0xCC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF4 PUSH0 DUP4 ADD DUP5 PUSH2 0xCD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526566756E64457363726F773A2063616E206F6E6C7920636C6F736520776869 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C65206163746976650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD64 PUSH1 0x29 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xD6F DUP3 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD91 DUP2 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E646974696F6E616C457363726F773A207061796565206973206E6F7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C6C6F77656420746F20776974686472617700000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDF2 PUSH1 0x33 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xDFD DUP3 PUSH2 0xD98 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE1F DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566756E64457363726F773A2063616E206F6E6C7920656E61626C65207265 PUSH0 DUP3 ADD MSTORE PUSH32 0x66756E6473207768696C65206163746976650000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE80 PUSH1 0x32 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xE8B DUP3 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAD DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566756E64457363726F773A2062656E65666963696172792063616E206F6E PUSH0 DUP3 ADD MSTORE PUSH32 0x6C79207769746864726177207768696C6520636C6F7365640000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF0E PUSH1 0x38 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xF19 DUP3 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF3B DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF9C PUSH1 0x26 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xFA7 DUP3 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFC9 DUP2 PUSH2 0xF90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566756E64457363726F773A2063616E206F6E6C79206465706F7369742077 PUSH0 DUP3 ADD MSTORE PUSH32 0x68696C6520616374697665000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x102A PUSH1 0x2B DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1035 DUP3 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1057 DUP2 PUSH2 0x101E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1092 PUSH1 0x20 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0x109D DUP3 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10BF DUP2 PUSH2 0x1086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10FA PUSH1 0x1D DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1105 DUP3 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1127 DUP2 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1146 PUSH0 DUP4 PUSH2 0x112E JUMP JUMPDEST SWAP2 POP PUSH2 0x1151 DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1165 DUP3 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH0 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11C9 PUSH1 0x3A DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0x11D4 DUP3 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11F6 DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1234 DUP3 PUSH2 0xCC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x123F DUP4 PUSH2 0xCC9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1257 JUMPI PUSH2 0x1256 PUSH2 0x11FD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP5 SHR CREATE 0x23 0xC6 0xB4 DUP11 0xEB JUMPI 0xC3 0xB8 0xAF 0x4F 0xE7 0xAA SAR PUSH13 0x1F55C2029FCFF1E494E45A16AF POP PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "638:2551:10:-:0;;;1037:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1121:1:10;1097:26;;:12;:26;;;1089:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1198:12;1183:27;;;;;;;;;;1229:12;1220:6;;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1037:211;638:2551;;656:96:7;709:7;735:10;728:17;;656:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:18:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:367::-;963:6;1012:2;1000:9;991:7;987:23;983:32;980:119;;;1018:79;;:::i;:::-;980:119;1138:1;1163:72;1227:7;1218:6;1207:9;1203:22;1163:72;:::i;:::-;1153:82;;1109:136;885:367;;;;:::o;1258:169::-;1342:11;1376:6;1371:3;1364:19;1416:4;1411:3;1407:14;1392:29;;1258:169;;;;:::o;1433:232::-;1573:34;1569:1;1561:6;1557:14;1550:58;1642:15;1637:2;1629:6;1625:15;1618:40;1433:232;:::o;1671:366::-;1813:3;1834:67;1898:2;1893:3;1834:67;:::i;:::-;1827:74;;1910:93;1999:3;1910:93;:::i;:::-;2028:2;2023:3;2019:12;2012:19;;1671:366;;;:::o;2043:419::-;2209:4;2247:2;2236:9;2232:18;2224:26;;2296:9;2290:4;2286:20;2282:1;2271:9;2267:17;2260:47;2324:131;2450:4;2324:131;:::i;:::-;2316:139;;2043:419;;;:::o;2468:180::-;2516:77;2513:1;2506:88;2613:4;2610:1;2603:15;2637:4;2634:1;2627:15;638:2551:10;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1758,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1117": {
									"entryPoint": 2756,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2146,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@beneficiaryWithdraw_1420": {
									"entryPoint": 1257,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@beneficiary_1325": {
									"entryPoint": 612,
									"id": 1325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@close_1372": {
									"entryPoint": 651,
									"id": 1372,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1225": {
									"entryPoint": 2579,
									"id": 1225,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_1348": {
									"entryPoint": 1637,
									"id": 1348,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositsOf_1200": {
									"entryPoint": 1437,
									"id": 1200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@enableRefunds_1396": {
									"entryPoint": 1013,
									"id": 1396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 1218,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 994,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendValue_827": {
									"entryPoint": 2339,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@state_1316": {
									"entryPoint": 1416,
									"id": 1316,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 1507,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1161": {
									"entryPoint": 855,
									"id": 1161,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1257": {
									"entryPoint": 1884,
									"id": 1257,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawalAllowed_1436": {
									"entryPoint": 939,
									"id": 1436,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 2897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_State_$1271_to_t_uint8_fromStack": {
									"entryPoint": 3233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_State_$1271__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_State_$1271": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_State_$1271_to_t_uint8": {
									"entryPoint": 3216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 3133,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae": {
									"entryPoint": 4463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_State_$1271": {
									"entryPoint": 3178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15393:18",
										"nodeType": "YulBlock",
										"src": "0:15393:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:18",
													"nodeType": "YulBlock",
													"src": "52:81:18",
													"statements": [
														{
															"nativeSrc": "62:65:18",
															"nodeType": "YulAssignment",
															"src": "62:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:18",
																		"nodeType": "YulLiteral",
																		"src": "84:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:18"
																},
																"nativeSrc": "73:54:18",
																"nodeType": "YulFunctionCall",
																"src": "73:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:18",
														"nodeType": "YulTypedName",
														"src": "34:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:18",
														"nodeType": "YulTypedName",
														"src": "44:7:18",
														"type": ""
													}
												],
												"src": "7:126:18"
											},
											{
												"body": {
													"nativeSrc": "192:51:18",
													"nodeType": "YulBlock",
													"src": "192:51:18",
													"statements": [
														{
															"nativeSrc": "202:35:18",
															"nodeType": "YulAssignment",
															"src": "202:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "231:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "231:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "213:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "213:17:18"
																},
																"nativeSrc": "213:24:18",
																"nodeType": "YulFunctionCall",
																"src": "213:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "202:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "202:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "139:104:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "174:5:18",
														"nodeType": "YulTypedName",
														"src": "174:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "184:7:18",
														"nodeType": "YulTypedName",
														"src": "184:7:18",
														"type": ""
													}
												],
												"src": "139:104:18"
											},
											{
												"body": {
													"nativeSrc": "330:61:18",
													"nodeType": "YulBlock",
													"src": "330:61:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "347:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "347:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "378:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "378:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "352:25:18",
																			"nodeType": "YulIdentifier",
																			"src": "352:25:18"
																		},
																		"nativeSrc": "352:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "352:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "340:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "340:6:18"
																},
																"nativeSrc": "340:45:18",
																"nodeType": "YulFunctionCall",
																"src": "340:45:18"
															},
															"nativeSrc": "340:45:18",
															"nodeType": "YulExpressionStatement",
															"src": "340:45:18"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "249:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "318:5:18",
														"nodeType": "YulTypedName",
														"src": "318:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "325:3:18",
														"nodeType": "YulTypedName",
														"src": "325:3:18",
														"type": ""
													}
												],
												"src": "249:142:18"
											},
											{
												"body": {
													"nativeSrc": "511:140:18",
													"nodeType": "YulBlock",
													"src": "511:140:18",
													"statements": [
														{
															"nativeSrc": "521:26:18",
															"nodeType": "YulAssignment",
															"src": "521:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "533:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "544:2:18",
																		"nodeType": "YulLiteral",
																		"src": "544:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "529:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:18"
																},
																"nativeSrc": "529:18:18",
																"nodeType": "YulFunctionCall",
																"src": "529:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "521:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "617:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "617:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "630:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "630:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "641:1:18",
																				"nodeType": "YulLiteral",
																				"src": "641:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "626:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "626:3:18"
																		},
																		"nativeSrc": "626:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "626:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "557:59:18",
																	"nodeType": "YulIdentifier",
																	"src": "557:59:18"
																},
																"nativeSrc": "557:87:18",
																"nodeType": "YulFunctionCall",
																"src": "557:87:18"
															},
															"nativeSrc": "557:87:18",
															"nodeType": "YulExpressionStatement",
															"src": "557:87:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "397:254:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "483:9:18",
														"nodeType": "YulTypedName",
														"src": "483:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "495:6:18",
														"nodeType": "YulTypedName",
														"src": "495:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "506:4:18",
														"nodeType": "YulTypedName",
														"src": "506:4:18",
														"type": ""
													}
												],
												"src": "397:254:18"
											},
											{
												"body": {
													"nativeSrc": "697:35:18",
													"nodeType": "YulBlock",
													"src": "697:35:18",
													"statements": [
														{
															"nativeSrc": "707:19:18",
															"nodeType": "YulAssignment",
															"src": "707:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "723:2:18",
																		"nodeType": "YulLiteral",
																		"src": "723:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "717:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "717:5:18"
																},
																"nativeSrc": "717:9:18",
																"nodeType": "YulFunctionCall",
																"src": "717:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "707:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "707:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "657:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "690:6:18",
														"nodeType": "YulTypedName",
														"src": "690:6:18",
														"type": ""
													}
												],
												"src": "657:75:18"
											},
											{
												"body": {
													"nativeSrc": "827:28:18",
													"nodeType": "YulBlock",
													"src": "827:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "844:1:18",
																		"nodeType": "YulLiteral",
																		"src": "844:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "847:1:18",
																		"nodeType": "YulLiteral",
																		"src": "847:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "837:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "837:6:18"
																},
																"nativeSrc": "837:12:18",
																"nodeType": "YulFunctionCall",
																"src": "837:12:18"
															},
															"nativeSrc": "837:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "837:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "738:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "738:117:18"
											},
											{
												"body": {
													"nativeSrc": "950:28:18",
													"nodeType": "YulBlock",
													"src": "950:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "967:1:18",
																		"nodeType": "YulLiteral",
																		"src": "967:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "970:1:18",
																		"nodeType": "YulLiteral",
																		"src": "970:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "960:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:18"
																},
																"nativeSrc": "960:12:18",
																"nodeType": "YulFunctionCall",
																"src": "960:12:18"
															},
															"nativeSrc": "960:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "960:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "861:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "861:117:18"
											},
											{
												"body": {
													"nativeSrc": "1035:87:18",
													"nodeType": "YulBlock",
													"src": "1035:87:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1100:16:18",
																"nodeType": "YulBlock",
																"src": "1100:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1109:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1102:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1102:6:18"
																			},
																			"nativeSrc": "1102:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1102:12:18"
																		},
																		"nativeSrc": "1102:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1102:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1058:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1058:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1091:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1091:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "1065:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "1065:25:18"
																				},
																				"nativeSrc": "1065:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1065:32:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1055:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1055:2:18"
																		},
																		"nativeSrc": "1055:43:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1055:43:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1048:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1048:6:18"
																},
																"nativeSrc": "1048:51:18",
																"nodeType": "YulFunctionCall",
																"src": "1048:51:18"
															},
															"nativeSrc": "1045:71:18",
															"nodeType": "YulIf",
															"src": "1045:71:18"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "984:138:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1028:5:18",
														"nodeType": "YulTypedName",
														"src": "1028:5:18",
														"type": ""
													}
												],
												"src": "984:138:18"
											},
											{
												"body": {
													"nativeSrc": "1188:95:18",
													"nodeType": "YulBlock",
													"src": "1188:95:18",
													"statements": [
														{
															"nativeSrc": "1198:29:18",
															"nodeType": "YulAssignment",
															"src": "1198:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1220:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1220:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1207:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1207:12:18"
																},
																"nativeSrc": "1207:20:18",
																"nodeType": "YulFunctionCall",
																"src": "1207:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1198:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1198:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1271:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1271:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "1236:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "1236:34:18"
																},
																"nativeSrc": "1236:41:18",
																"nodeType": "YulFunctionCall",
																"src": "1236:41:18"
															},
															"nativeSrc": "1236:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "1236:41:18"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "1128:155:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1166:6:18",
														"nodeType": "YulTypedName",
														"src": "1166:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1174:3:18",
														"nodeType": "YulTypedName",
														"src": "1174:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1182:5:18",
														"nodeType": "YulTypedName",
														"src": "1182:5:18",
														"type": ""
													}
												],
												"src": "1128:155:18"
											},
											{
												"body": {
													"nativeSrc": "1363:271:18",
													"nodeType": "YulBlock",
													"src": "1363:271:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1409:83:18",
																"nodeType": "YulBlock",
																"src": "1409:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1411:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "1411:77:18"
																			},
																			"nativeSrc": "1411:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1411:79:18"
																		},
																		"nativeSrc": "1411:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1411:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1384:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1384:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1393:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1393:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1380:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1380:3:18"
																		},
																		"nativeSrc": "1380:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1380:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1405:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1405:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1376:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:18"
																},
																"nativeSrc": "1376:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1376:32:18"
															},
															"nativeSrc": "1373:119:18",
															"nodeType": "YulIf",
															"src": "1373:119:18"
														},
														{
															"nativeSrc": "1502:125:18",
															"nodeType": "YulBlock",
															"src": "1502:125:18",
															"statements": [
																{
																	"nativeSrc": "1517:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1517:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1531:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1531:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1521:6:18",
																			"nodeType": "YulTypedName",
																			"src": "1521:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1546:71:18",
																	"nodeType": "YulAssignment",
																	"src": "1546:71:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1589:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1589:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1600:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1600:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1585:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1585:3:18"
																				},
																				"nativeSrc": "1585:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1585:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1609:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1609:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "1556:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "1556:28:18"
																		},
																		"nativeSrc": "1556:61:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1556:61:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1546:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1546:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nativeSrc": "1289:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1333:9:18",
														"nodeType": "YulTypedName",
														"src": "1333:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1344:7:18",
														"nodeType": "YulTypedName",
														"src": "1344:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1356:6:18",
														"nodeType": "YulTypedName",
														"src": "1356:6:18",
														"type": ""
													}
												],
												"src": "1289:345:18"
											},
											{
												"body": {
													"nativeSrc": "1685:51:18",
													"nodeType": "YulBlock",
													"src": "1685:51:18",
													"statements": [
														{
															"nativeSrc": "1695:35:18",
															"nodeType": "YulAssignment",
															"src": "1695:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1724:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1724:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1706:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1706:17:18"
																},
																"nativeSrc": "1706:24:18",
																"nodeType": "YulFunctionCall",
																"src": "1706:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1695:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1695:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1640:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1667:5:18",
														"nodeType": "YulTypedName",
														"src": "1667:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1677:7:18",
														"nodeType": "YulTypedName",
														"src": "1677:7:18",
														"type": ""
													}
												],
												"src": "1640:96:18"
											},
											{
												"body": {
													"nativeSrc": "1785:79:18",
													"nodeType": "YulBlock",
													"src": "1785:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1842:16:18",
																"nodeType": "YulBlock",
																"src": "1842:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1851:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1851:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1854:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1854:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1844:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1844:6:18"
																			},
																			"nativeSrc": "1844:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1844:12:18"
																		},
																		"nativeSrc": "1844:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1844:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1808:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1808:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1833:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1833:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1815:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1815:17:18"
																				},
																				"nativeSrc": "1815:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1815:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1805:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1805:2:18"
																		},
																		"nativeSrc": "1805:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1798:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1798:6:18"
																},
																"nativeSrc": "1798:43:18",
																"nodeType": "YulFunctionCall",
																"src": "1798:43:18"
															},
															"nativeSrc": "1795:63:18",
															"nodeType": "YulIf",
															"src": "1795:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1742:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1778:5:18",
														"nodeType": "YulTypedName",
														"src": "1778:5:18",
														"type": ""
													}
												],
												"src": "1742:122:18"
											},
											{
												"body": {
													"nativeSrc": "1922:87:18",
													"nodeType": "YulBlock",
													"src": "1922:87:18",
													"statements": [
														{
															"nativeSrc": "1932:29:18",
															"nodeType": "YulAssignment",
															"src": "1932:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1954:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1954:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1941:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1941:12:18"
																},
																"nativeSrc": "1941:20:18",
																"nodeType": "YulFunctionCall",
																"src": "1941:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1932:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1932:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1997:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1997:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1970:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "1970:26:18"
																},
																"nativeSrc": "1970:33:18",
																"nodeType": "YulFunctionCall",
																"src": "1970:33:18"
															},
															"nativeSrc": "1970:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "1970:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1870:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1900:6:18",
														"nodeType": "YulTypedName",
														"src": "1900:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1908:3:18",
														"nodeType": "YulTypedName",
														"src": "1908:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1916:5:18",
														"nodeType": "YulTypedName",
														"src": "1916:5:18",
														"type": ""
													}
												],
												"src": "1870:139:18"
											},
											{
												"body": {
													"nativeSrc": "2081:263:18",
													"nodeType": "YulBlock",
													"src": "2081:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2127:83:18",
																"nodeType": "YulBlock",
																"src": "2127:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2129:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "2129:77:18"
																			},
																			"nativeSrc": "2129:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2129:79:18"
																		},
																		"nativeSrc": "2129:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2129:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2102:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2102:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2111:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2111:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2098:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2098:3:18"
																		},
																		"nativeSrc": "2098:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2098:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2123:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2123:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2094:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:18"
																},
																"nativeSrc": "2094:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2094:32:18"
															},
															"nativeSrc": "2091:119:18",
															"nodeType": "YulIf",
															"src": "2091:119:18"
														},
														{
															"nativeSrc": "2220:117:18",
															"nodeType": "YulBlock",
															"src": "2220:117:18",
															"statements": [
																{
																	"nativeSrc": "2235:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2235:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2249:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2249:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2239:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2239:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2264:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2264:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2299:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2299:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2295:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2295:3:18"
																				},
																				"nativeSrc": "2295:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2295:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2319:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2319:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2274:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2274:20:18"
																		},
																		"nativeSrc": "2274:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2274:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2264:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2264:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2015:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2051:9:18",
														"nodeType": "YulTypedName",
														"src": "2051:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2062:7:18",
														"nodeType": "YulTypedName",
														"src": "2062:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2074:6:18",
														"nodeType": "YulTypedName",
														"src": "2074:6:18",
														"type": ""
													}
												],
												"src": "2015:329:18"
											},
											{
												"body": {
													"nativeSrc": "2392:48:18",
													"nodeType": "YulBlock",
													"src": "2392:48:18",
													"statements": [
														{
															"nativeSrc": "2402:32:18",
															"nodeType": "YulAssignment",
															"src": "2402:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2427:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2427:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2420:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2420:6:18"
																		},
																		"nativeSrc": "2420:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2420:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2413:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2413:6:18"
																},
																"nativeSrc": "2413:21:18",
																"nodeType": "YulFunctionCall",
																"src": "2413:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2402:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2402:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2350:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2374:5:18",
														"nodeType": "YulTypedName",
														"src": "2374:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2384:7:18",
														"nodeType": "YulTypedName",
														"src": "2384:7:18",
														"type": ""
													}
												],
												"src": "2350:90:18"
											},
											{
												"body": {
													"nativeSrc": "2505:50:18",
													"nodeType": "YulBlock",
													"src": "2505:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2522:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2522:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2542:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2542:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2527:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "2527:14:18"
																		},
																		"nativeSrc": "2527:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2515:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2515:6:18"
																},
																"nativeSrc": "2515:34:18",
																"nodeType": "YulFunctionCall",
																"src": "2515:34:18"
															},
															"nativeSrc": "2515:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "2515:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2446:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2493:5:18",
														"nodeType": "YulTypedName",
														"src": "2493:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2500:3:18",
														"nodeType": "YulTypedName",
														"src": "2500:3:18",
														"type": ""
													}
												],
												"src": "2446:109:18"
											},
											{
												"body": {
													"nativeSrc": "2653:118:18",
													"nodeType": "YulBlock",
													"src": "2653:118:18",
													"statements": [
														{
															"nativeSrc": "2663:26:18",
															"nodeType": "YulAssignment",
															"src": "2663:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2675:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2675:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2686:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2686:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2671:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2671:3:18"
																},
																"nativeSrc": "2671:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2671:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2663:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2663:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2737:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2737:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2750:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2750:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2761:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2761:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2746:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:18"
																		},
																		"nativeSrc": "2746:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2699:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "2699:37:18"
																},
																"nativeSrc": "2699:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2699:65:18"
															},
															"nativeSrc": "2699:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2699:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2561:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2625:9:18",
														"nodeType": "YulTypedName",
														"src": "2625:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2637:6:18",
														"nodeType": "YulTypedName",
														"src": "2637:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2648:4:18",
														"nodeType": "YulTypedName",
														"src": "2648:4:18",
														"type": ""
													}
												],
												"src": "2561:210:18"
											},
											{
												"body": {
													"nativeSrc": "2842:53:18",
													"nodeType": "YulBlock",
													"src": "2842:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2859:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2859:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2882:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2882:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2864:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "2864:17:18"
																		},
																		"nativeSrc": "2864:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2864:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2852:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2852:6:18"
																},
																"nativeSrc": "2852:37:18",
																"nodeType": "YulFunctionCall",
																"src": "2852:37:18"
															},
															"nativeSrc": "2852:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "2852:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2777:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2830:5:18",
														"nodeType": "YulTypedName",
														"src": "2830:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2837:3:18",
														"nodeType": "YulTypedName",
														"src": "2837:3:18",
														"type": ""
													}
												],
												"src": "2777:118:18"
											},
											{
												"body": {
													"nativeSrc": "2999:124:18",
													"nodeType": "YulBlock",
													"src": "2999:124:18",
													"statements": [
														{
															"nativeSrc": "3009:26:18",
															"nodeType": "YulAssignment",
															"src": "3009:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3021:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3021:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3032:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3032:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3017:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:18"
																},
																"nativeSrc": "3017:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3017:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3009:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3009:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3089:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3089:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3102:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3102:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3113:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3113:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3098:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3098:3:18"
																		},
																		"nativeSrc": "3098:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3098:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3045:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "3045:43:18"
																},
																"nativeSrc": "3045:71:18",
																"nodeType": "YulFunctionCall",
																"src": "3045:71:18"
															},
															"nativeSrc": "3045:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "3045:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2901:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2971:9:18",
														"nodeType": "YulTypedName",
														"src": "2971:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2983:6:18",
														"nodeType": "YulTypedName",
														"src": "2983:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2994:4:18",
														"nodeType": "YulTypedName",
														"src": "2994:4:18",
														"type": ""
													}
												],
												"src": "2901:222:18"
											},
											{
												"body": {
													"nativeSrc": "3157:152:18",
													"nodeType": "YulBlock",
													"src": "3157:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3174:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3174:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3177:77:18",
																		"nodeType": "YulLiteral",
																		"src": "3177:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3167:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3167:6:18"
																},
																"nativeSrc": "3167:88:18",
																"nodeType": "YulFunctionCall",
																"src": "3167:88:18"
															},
															"nativeSrc": "3167:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "3167:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3271:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3271:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3274:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3274:4:18",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3264:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3264:6:18"
																},
																"nativeSrc": "3264:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3264:15:18"
															},
															"nativeSrc": "3264:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "3264:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3295:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3295:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3298:4:18",
																		"nodeType": "YulLiteral",
																		"src": "3298:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3288:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3288:6:18"
																},
																"nativeSrc": "3288:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3288:15:18"
															},
															"nativeSrc": "3288:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "3288:15:18"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "3129:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "3129:180:18"
											},
											{
												"body": {
													"nativeSrc": "3368:62:18",
													"nodeType": "YulBlock",
													"src": "3368:62:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3402:22:18",
																"nodeType": "YulBlock",
																"src": "3402:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "3404:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "3404:16:18"
																			},
																			"nativeSrc": "3404:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3404:18:18"
																		},
																		"nativeSrc": "3404:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3404:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3391:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3391:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3398:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3398:1:18",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3388:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3388:2:18"
																		},
																		"nativeSrc": "3388:12:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3388:12:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3381:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3381:6:18"
																},
																"nativeSrc": "3381:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3381:20:18"
															},
															"nativeSrc": "3378:46:18",
															"nodeType": "YulIf",
															"src": "3378:46:18"
														}
													]
												},
												"name": "validator_assert_t_enum$_State_$1271",
												"nativeSrc": "3315:115:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3361:5:18",
														"nodeType": "YulTypedName",
														"src": "3361:5:18",
														"type": ""
													}
												],
												"src": "3315:115:18"
											},
											{
												"body": {
													"nativeSrc": "3491:76:18",
													"nodeType": "YulBlock",
													"src": "3491:76:18",
													"statements": [
														{
															"nativeSrc": "3501:16:18",
															"nodeType": "YulAssignment",
															"src": "3501:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "3512:5:18",
																"nodeType": "YulIdentifier",
																"src": "3512:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3501:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3501:7:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3555:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3555:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_State_$1271",
																	"nativeSrc": "3518:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "3518:36:18"
																},
																"nativeSrc": "3518:43:18",
																"nodeType": "YulFunctionCall",
																"src": "3518:43:18"
															},
															"nativeSrc": "3518:43:18",
															"nodeType": "YulExpressionStatement",
															"src": "3518:43:18"
														}
													]
												},
												"name": "cleanup_t_enum$_State_$1271",
												"nativeSrc": "3436:131:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3473:5:18",
														"nodeType": "YulTypedName",
														"src": "3473:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3483:7:18",
														"nodeType": "YulTypedName",
														"src": "3483:7:18",
														"type": ""
													}
												],
												"src": "3436:131:18"
											},
											{
												"body": {
													"nativeSrc": "3641:63:18",
													"nodeType": "YulBlock",
													"src": "3641:63:18",
													"statements": [
														{
															"nativeSrc": "3651:47:18",
															"nodeType": "YulAssignment",
															"src": "3651:47:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3692:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3692:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_State_$1271",
																	"nativeSrc": "3664:27:18",
																	"nodeType": "YulIdentifier",
																	"src": "3664:27:18"
																},
																"nativeSrc": "3664:34:18",
																"nodeType": "YulFunctionCall",
																"src": "3664:34:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3651:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "3651:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_State_$1271_to_t_uint8",
												"nativeSrc": "3573:131:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3621:5:18",
														"nodeType": "YulTypedName",
														"src": "3621:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3631:9:18",
														"nodeType": "YulTypedName",
														"src": "3631:9:18",
														"type": ""
													}
												],
												"src": "3573:131:18"
											},
											{
												"body": {
													"nativeSrc": "3783:74:18",
													"nodeType": "YulBlock",
													"src": "3783:74:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3800:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3800:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3844:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3844:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_State_$1271_to_t_uint8",
																			"nativeSrc": "3805:38:18",
																			"nodeType": "YulIdentifier",
																			"src": "3805:38:18"
																		},
																		"nativeSrc": "3805:45:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3805:45:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3793:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3793:6:18"
																},
																"nativeSrc": "3793:58:18",
																"nodeType": "YulFunctionCall",
																"src": "3793:58:18"
															},
															"nativeSrc": "3793:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "3793:58:18"
														}
													]
												},
												"name": "abi_encode_t_enum$_State_$1271_to_t_uint8_fromStack",
												"nativeSrc": "3710:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3771:5:18",
														"nodeType": "YulTypedName",
														"src": "3771:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3778:3:18",
														"nodeType": "YulTypedName",
														"src": "3778:3:18",
														"type": ""
													}
												],
												"src": "3710:147:18"
											},
											{
												"body": {
													"nativeSrc": "3969:132:18",
													"nodeType": "YulBlock",
													"src": "3969:132:18",
													"statements": [
														{
															"nativeSrc": "3979:26:18",
															"nodeType": "YulAssignment",
															"src": "3979:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3991:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3991:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4002:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4002:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3987:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3987:3:18"
																},
																"nativeSrc": "3987:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3987:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3979:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3979:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4067:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4067:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4080:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4080:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4091:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4091:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4076:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:18"
																		},
																		"nativeSrc": "4076:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4076:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_State_$1271_to_t_uint8_fromStack",
																	"nativeSrc": "4015:51:18",
																	"nodeType": "YulIdentifier",
																	"src": "4015:51:18"
																},
																"nativeSrc": "4015:79:18",
																"nodeType": "YulFunctionCall",
																"src": "4015:79:18"
															},
															"nativeSrc": "4015:79:18",
															"nodeType": "YulExpressionStatement",
															"src": "4015:79:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_State_$1271__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3863:238:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3941:9:18",
														"nodeType": "YulTypedName",
														"src": "3941:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3953:6:18",
														"nodeType": "YulTypedName",
														"src": "3953:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3964:4:18",
														"nodeType": "YulTypedName",
														"src": "3964:4:18",
														"type": ""
													}
												],
												"src": "3863:238:18"
											},
											{
												"body": {
													"nativeSrc": "4152:32:18",
													"nodeType": "YulBlock",
													"src": "4152:32:18",
													"statements": [
														{
															"nativeSrc": "4162:16:18",
															"nodeType": "YulAssignment",
															"src": "4162:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "4173:5:18",
																"nodeType": "YulIdentifier",
																"src": "4173:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4162:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "4162:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4107:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4134:5:18",
														"nodeType": "YulTypedName",
														"src": "4134:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4144:7:18",
														"nodeType": "YulTypedName",
														"src": "4144:7:18",
														"type": ""
													}
												],
												"src": "4107:77:18"
											},
											{
												"body": {
													"nativeSrc": "4255:53:18",
													"nodeType": "YulBlock",
													"src": "4255:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4272:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4272:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4295:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4295:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4277:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "4277:17:18"
																		},
																		"nativeSrc": "4277:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4277:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4265:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4265:6:18"
																},
																"nativeSrc": "4265:37:18",
																"nodeType": "YulFunctionCall",
																"src": "4265:37:18"
															},
															"nativeSrc": "4265:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "4265:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4190:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4243:5:18",
														"nodeType": "YulTypedName",
														"src": "4243:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4250:3:18",
														"nodeType": "YulTypedName",
														"src": "4250:3:18",
														"type": ""
													}
												],
												"src": "4190:118:18"
											},
											{
												"body": {
													"nativeSrc": "4412:124:18",
													"nodeType": "YulBlock",
													"src": "4412:124:18",
													"statements": [
														{
															"nativeSrc": "4422:26:18",
															"nodeType": "YulAssignment",
															"src": "4422:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4434:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4434:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4445:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4445:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4430:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4430:3:18"
																},
																"nativeSrc": "4430:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4430:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4422:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4422:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4502:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4502:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4515:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4515:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4526:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4526:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4511:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:18"
																		},
																		"nativeSrc": "4511:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4511:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4458:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "4458:43:18"
																},
																"nativeSrc": "4458:71:18",
																"nodeType": "YulFunctionCall",
																"src": "4458:71:18"
															},
															"nativeSrc": "4458:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "4458:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4314:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4384:9:18",
														"nodeType": "YulTypedName",
														"src": "4384:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4396:6:18",
														"nodeType": "YulTypedName",
														"src": "4396:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4407:4:18",
														"nodeType": "YulTypedName",
														"src": "4407:4:18",
														"type": ""
													}
												],
												"src": "4314:222:18"
											},
											{
												"body": {
													"nativeSrc": "4638:73:18",
													"nodeType": "YulBlock",
													"src": "4638:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4655:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4655:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4660:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4660:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4648:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4648:6:18"
																},
																"nativeSrc": "4648:19:18",
																"nodeType": "YulFunctionCall",
																"src": "4648:19:18"
															},
															"nativeSrc": "4648:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "4648:19:18"
														},
														{
															"nativeSrc": "4676:29:18",
															"nodeType": "YulAssignment",
															"src": "4676:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4695:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4695:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4700:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4700:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4691:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4691:3:18"
																},
																"nativeSrc": "4691:14:18",
																"nodeType": "YulFunctionCall",
																"src": "4691:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4676:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "4676:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4542:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4610:3:18",
														"nodeType": "YulTypedName",
														"src": "4610:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4615:6:18",
														"nodeType": "YulTypedName",
														"src": "4615:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4626:11:18",
														"nodeType": "YulTypedName",
														"src": "4626:11:18",
														"type": ""
													}
												],
												"src": "4542:169:18"
											},
											{
												"body": {
													"nativeSrc": "4823:122:18",
													"nodeType": "YulBlock",
													"src": "4823:122:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4845:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4845:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4853:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4853:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4841:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4841:3:18"
																		},
																		"nativeSrc": "4841:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4841:14:18"
																	},
																	{
																		"hexValue": "526566756e64457363726f773a2063616e206f6e6c7920636c6f736520776869",
																		"kind": "string",
																		"nativeSrc": "4857:34:18",
																		"nodeType": "YulLiteral",
																		"src": "4857:34:18",
																		"type": "",
																		"value": "RefundEscrow: can only close whi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4834:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4834:6:18"
																},
																"nativeSrc": "4834:58:18",
																"nodeType": "YulFunctionCall",
																"src": "4834:58:18"
															},
															"nativeSrc": "4834:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "4834:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4913:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4913:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4921:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4921:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4909:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4909:3:18"
																		},
																		"nativeSrc": "4909:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4909:15:18"
																	},
																	{
																		"hexValue": "6c6520616374697665",
																		"kind": "string",
																		"nativeSrc": "4926:11:18",
																		"nodeType": "YulLiteral",
																		"src": "4926:11:18",
																		"type": "",
																		"value": "le active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4902:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4902:6:18"
																},
																"nativeSrc": "4902:36:18",
																"nodeType": "YulFunctionCall",
																"src": "4902:36:18"
															},
															"nativeSrc": "4902:36:18",
															"nodeType": "YulExpressionStatement",
															"src": "4902:36:18"
														}
													]
												},
												"name": "store_literal_in_memory_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
												"nativeSrc": "4717:228:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4815:6:18",
														"nodeType": "YulTypedName",
														"src": "4815:6:18",
														"type": ""
													}
												],
												"src": "4717:228:18"
											},
											{
												"body": {
													"nativeSrc": "5097:220:18",
													"nodeType": "YulBlock",
													"src": "5097:220:18",
													"statements": [
														{
															"nativeSrc": "5107:74:18",
															"nodeType": "YulAssignment",
															"src": "5107:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5173:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5173:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5178:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:18",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5114:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "5114:58:18"
																},
																"nativeSrc": "5114:67:18",
																"nodeType": "YulFunctionCall",
																"src": "5114:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5107:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5107:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5279:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5279:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
																	"nativeSrc": "5190:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "5190:88:18"
																},
																"nativeSrc": "5190:93:18",
																"nodeType": "YulFunctionCall",
																"src": "5190:93:18"
															},
															"nativeSrc": "5190:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "5190:93:18"
														},
														{
															"nativeSrc": "5292:19:18",
															"nodeType": "YulAssignment",
															"src": "5292:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5303:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5303:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5308:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5308:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5299:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5299:3:18"
																},
																"nativeSrc": "5299:12:18",
																"nodeType": "YulFunctionCall",
																"src": "5299:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5292:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5292:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4951:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5085:3:18",
														"nodeType": "YulTypedName",
														"src": "5085:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5093:3:18",
														"nodeType": "YulTypedName",
														"src": "5093:3:18",
														"type": ""
													}
												],
												"src": "4951:366:18"
											},
											{
												"body": {
													"nativeSrc": "5494:248:18",
													"nodeType": "YulBlock",
													"src": "5494:248:18",
													"statements": [
														{
															"nativeSrc": "5504:26:18",
															"nodeType": "YulAssignment",
															"src": "5504:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5516:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5516:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5527:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5527:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5512:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:18"
																},
																"nativeSrc": "5512:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5512:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5504:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5504:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5551:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5551:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5562:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5562:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5547:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5547:3:18"
																		},
																		"nativeSrc": "5547:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5547:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5570:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "5570:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5576:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5566:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5566:3:18"
																		},
																		"nativeSrc": "5566:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5566:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5540:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:18"
																},
																"nativeSrc": "5540:47:18",
																"nodeType": "YulFunctionCall",
																"src": "5540:47:18"
															},
															"nativeSrc": "5540:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "5540:47:18"
														},
														{
															"nativeSrc": "5596:139:18",
															"nodeType": "YulAssignment",
															"src": "5596:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5730:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "5730:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5604:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "5604:124:18"
																},
																"nativeSrc": "5604:131:18",
																"nodeType": "YulFunctionCall",
																"src": "5604:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5596:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5596:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5323:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5474:9:18",
														"nodeType": "YulTypedName",
														"src": "5474:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5489:4:18",
														"nodeType": "YulTypedName",
														"src": "5489:4:18",
														"type": ""
													}
												],
												"src": "5323:419:18"
											},
											{
												"body": {
													"nativeSrc": "5854:132:18",
													"nodeType": "YulBlock",
													"src": "5854:132:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5876:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5876:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5884:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5884:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5872:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5872:3:18"
																		},
																		"nativeSrc": "5872:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5872:14:18"
																	},
																	{
																		"hexValue": "436f6e646974696f6e616c457363726f773a207061796565206973206e6f7420",
																		"kind": "string",
																		"nativeSrc": "5888:34:18",
																		"nodeType": "YulLiteral",
																		"src": "5888:34:18",
																		"type": "",
																		"value": "ConditionalEscrow: payee is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5865:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:18"
																},
																"nativeSrc": "5865:58:18",
																"nodeType": "YulFunctionCall",
																"src": "5865:58:18"
															},
															"nativeSrc": "5865:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "5865:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5944:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5944:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5952:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5952:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5940:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5940:3:18"
																		},
																		"nativeSrc": "5940:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5940:15:18"
																	},
																	{
																		"hexValue": "616c6c6f77656420746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "5957:21:18",
																		"nodeType": "YulLiteral",
																		"src": "5957:21:18",
																		"type": "",
																		"value": "allowed to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5933:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5933:6:18"
																},
																"nativeSrc": "5933:46:18",
																"nodeType": "YulFunctionCall",
																"src": "5933:46:18"
															},
															"nativeSrc": "5933:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "5933:46:18"
														}
													]
												},
												"name": "store_literal_in_memory_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a",
												"nativeSrc": "5748:238:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5846:6:18",
														"nodeType": "YulTypedName",
														"src": "5846:6:18",
														"type": ""
													}
												],
												"src": "5748:238:18"
											},
											{
												"body": {
													"nativeSrc": "6138:220:18",
													"nodeType": "YulBlock",
													"src": "6138:220:18",
													"statements": [
														{
															"nativeSrc": "6148:74:18",
															"nodeType": "YulAssignment",
															"src": "6148:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6214:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6214:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6219:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6219:2:18",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6155:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "6155:58:18"
																},
																"nativeSrc": "6155:67:18",
																"nodeType": "YulFunctionCall",
																"src": "6155:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6148:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6148:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6320:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6320:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a",
																	"nativeSrc": "6231:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "6231:88:18"
																},
																"nativeSrc": "6231:93:18",
																"nodeType": "YulFunctionCall",
																"src": "6231:93:18"
															},
															"nativeSrc": "6231:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "6231:93:18"
														},
														{
															"nativeSrc": "6333:19:18",
															"nodeType": "YulAssignment",
															"src": "6333:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6344:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6344:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6349:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6349:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6340:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:18"
																},
																"nativeSrc": "6340:12:18",
																"nodeType": "YulFunctionCall",
																"src": "6340:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6333:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6333:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5992:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6126:3:18",
														"nodeType": "YulTypedName",
														"src": "6126:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6134:3:18",
														"nodeType": "YulTypedName",
														"src": "6134:3:18",
														"type": ""
													}
												],
												"src": "5992:366:18"
											},
											{
												"body": {
													"nativeSrc": "6535:248:18",
													"nodeType": "YulBlock",
													"src": "6535:248:18",
													"statements": [
														{
															"nativeSrc": "6545:26:18",
															"nodeType": "YulAssignment",
															"src": "6545:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6557:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6557:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6568:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6568:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6553:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:18"
																},
																"nativeSrc": "6553:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6553:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6545:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6545:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6592:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6592:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6603:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6603:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6588:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6588:3:18"
																		},
																		"nativeSrc": "6588:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6588:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6611:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6611:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6617:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6617:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6607:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6607:3:18"
																		},
																		"nativeSrc": "6607:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6607:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6581:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6581:6:18"
																},
																"nativeSrc": "6581:47:18",
																"nodeType": "YulFunctionCall",
																"src": "6581:47:18"
															},
															"nativeSrc": "6581:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "6581:47:18"
														},
														{
															"nativeSrc": "6637:139:18",
															"nodeType": "YulAssignment",
															"src": "6637:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6771:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "6771:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6645:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "6645:124:18"
																},
																"nativeSrc": "6645:131:18",
																"nodeType": "YulFunctionCall",
																"src": "6645:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6637:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6637:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6364:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6515:9:18",
														"nodeType": "YulTypedName",
														"src": "6515:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6530:4:18",
														"nodeType": "YulTypedName",
														"src": "6530:4:18",
														"type": ""
													}
												],
												"src": "6364:419:18"
											},
											{
												"body": {
													"nativeSrc": "6895:131:18",
													"nodeType": "YulBlock",
													"src": "6895:131:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6917:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6917:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6925:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6925:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6913:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6913:3:18"
																		},
																		"nativeSrc": "6913:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6913:14:18"
																	},
																	{
																		"hexValue": "526566756e64457363726f773a2063616e206f6e6c7920656e61626c65207265",
																		"kind": "string",
																		"nativeSrc": "6929:34:18",
																		"nodeType": "YulLiteral",
																		"src": "6929:34:18",
																		"type": "",
																		"value": "RefundEscrow: can only enable re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6906:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6906:6:18"
																},
																"nativeSrc": "6906:58:18",
																"nodeType": "YulFunctionCall",
																"src": "6906:58:18"
															},
															"nativeSrc": "6906:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "6906:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6985:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6985:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6993:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6993:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6981:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6981:3:18"
																		},
																		"nativeSrc": "6981:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6981:15:18"
																	},
																	{
																		"hexValue": "66756e6473207768696c6520616374697665",
																		"kind": "string",
																		"nativeSrc": "6998:20:18",
																		"nodeType": "YulLiteral",
																		"src": "6998:20:18",
																		"type": "",
																		"value": "funds while active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6974:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:18"
																},
																"nativeSrc": "6974:45:18",
																"nodeType": "YulFunctionCall",
																"src": "6974:45:18"
															},
															"nativeSrc": "6974:45:18",
															"nodeType": "YulExpressionStatement",
															"src": "6974:45:18"
														}
													]
												},
												"name": "store_literal_in_memory_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
												"nativeSrc": "6789:237:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6887:6:18",
														"nodeType": "YulTypedName",
														"src": "6887:6:18",
														"type": ""
													}
												],
												"src": "6789:237:18"
											},
											{
												"body": {
													"nativeSrc": "7178:220:18",
													"nodeType": "YulBlock",
													"src": "7178:220:18",
													"statements": [
														{
															"nativeSrc": "7188:74:18",
															"nodeType": "YulAssignment",
															"src": "7188:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7254:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7254:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7259:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7259:2:18",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7195:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "7195:58:18"
																},
																"nativeSrc": "7195:67:18",
																"nodeType": "YulFunctionCall",
																"src": "7195:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7188:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7360:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7360:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
																	"nativeSrc": "7271:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "7271:88:18"
																},
																"nativeSrc": "7271:93:18",
																"nodeType": "YulFunctionCall",
																"src": "7271:93:18"
															},
															"nativeSrc": "7271:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "7271:93:18"
														},
														{
															"nativeSrc": "7373:19:18",
															"nodeType": "YulAssignment",
															"src": "7373:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7384:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7384:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7389:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7389:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7380:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7380:3:18"
																},
																"nativeSrc": "7380:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7380:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7373:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7373:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7032:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7166:3:18",
														"nodeType": "YulTypedName",
														"src": "7166:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7174:3:18",
														"nodeType": "YulTypedName",
														"src": "7174:3:18",
														"type": ""
													}
												],
												"src": "7032:366:18"
											},
											{
												"body": {
													"nativeSrc": "7575:248:18",
													"nodeType": "YulBlock",
													"src": "7575:248:18",
													"statements": [
														{
															"nativeSrc": "7585:26:18",
															"nodeType": "YulAssignment",
															"src": "7585:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7597:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7597:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7608:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7608:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7593:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7593:3:18"
																},
																"nativeSrc": "7593:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7593:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7585:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7585:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7632:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7632:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7643:1:18",
																				"nodeType": "YulLiteral",
																				"src": "7643:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7628:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7628:3:18"
																		},
																		"nativeSrc": "7628:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7628:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7651:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "7651:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7657:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7657:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7647:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7647:3:18"
																		},
																		"nativeSrc": "7647:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7647:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7621:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7621:6:18"
																},
																"nativeSrc": "7621:47:18",
																"nodeType": "YulFunctionCall",
																"src": "7621:47:18"
															},
															"nativeSrc": "7621:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "7621:47:18"
														},
														{
															"nativeSrc": "7677:139:18",
															"nodeType": "YulAssignment",
															"src": "7677:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7811:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7811:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7685:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "7685:124:18"
																},
																"nativeSrc": "7685:131:18",
																"nodeType": "YulFunctionCall",
																"src": "7685:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7677:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7677:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7404:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7555:9:18",
														"nodeType": "YulTypedName",
														"src": "7555:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7570:4:18",
														"nodeType": "YulTypedName",
														"src": "7570:4:18",
														"type": ""
													}
												],
												"src": "7404:419:18"
											},
											{
												"body": {
													"nativeSrc": "7935:137:18",
													"nodeType": "YulBlock",
													"src": "7935:137:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7957:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7957:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7965:1:18",
																				"nodeType": "YulLiteral",
																				"src": "7965:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7953:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7953:3:18"
																		},
																		"nativeSrc": "7953:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7953:14:18"
																	},
																	{
																		"hexValue": "526566756e64457363726f773a2062656e65666963696172792063616e206f6e",
																		"kind": "string",
																		"nativeSrc": "7969:34:18",
																		"nodeType": "YulLiteral",
																		"src": "7969:34:18",
																		"type": "",
																		"value": "RefundEscrow: beneficiary can on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7946:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7946:6:18"
																},
																"nativeSrc": "7946:58:18",
																"nodeType": "YulFunctionCall",
																"src": "7946:58:18"
															},
															"nativeSrc": "7946:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "7946:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8025:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8025:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8033:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8033:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8021:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8021:3:18"
																		},
																		"nativeSrc": "8021:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8021:15:18"
																	},
																	{
																		"hexValue": "6c79207769746864726177207768696c6520636c6f736564",
																		"kind": "string",
																		"nativeSrc": "8038:26:18",
																		"nodeType": "YulLiteral",
																		"src": "8038:26:18",
																		"type": "",
																		"value": "ly withdraw while closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8014:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8014:6:18"
																},
																"nativeSrc": "8014:51:18",
																"nodeType": "YulFunctionCall",
																"src": "8014:51:18"
															},
															"nativeSrc": "8014:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "8014:51:18"
														}
													]
												},
												"name": "store_literal_in_memory_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
												"nativeSrc": "7829:243:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7927:6:18",
														"nodeType": "YulTypedName",
														"src": "7927:6:18",
														"type": ""
													}
												],
												"src": "7829:243:18"
											},
											{
												"body": {
													"nativeSrc": "8224:220:18",
													"nodeType": "YulBlock",
													"src": "8224:220:18",
													"statements": [
														{
															"nativeSrc": "8234:74:18",
															"nodeType": "YulAssignment",
															"src": "8234:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8300:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8300:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8305:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8305:2:18",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8241:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "8241:58:18"
																},
																"nativeSrc": "8241:67:18",
																"nodeType": "YulFunctionCall",
																"src": "8241:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8234:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8234:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8406:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8406:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
																	"nativeSrc": "8317:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "8317:88:18"
																},
																"nativeSrc": "8317:93:18",
																"nodeType": "YulFunctionCall",
																"src": "8317:93:18"
															},
															"nativeSrc": "8317:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "8317:93:18"
														},
														{
															"nativeSrc": "8419:19:18",
															"nodeType": "YulAssignment",
															"src": "8419:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8430:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8430:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8435:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8435:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8426:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8426:3:18"
																},
																"nativeSrc": "8426:12:18",
																"nodeType": "YulFunctionCall",
																"src": "8426:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8419:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8419:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8078:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8212:3:18",
														"nodeType": "YulTypedName",
														"src": "8212:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8220:3:18",
														"nodeType": "YulTypedName",
														"src": "8220:3:18",
														"type": ""
													}
												],
												"src": "8078:366:18"
											},
											{
												"body": {
													"nativeSrc": "8621:248:18",
													"nodeType": "YulBlock",
													"src": "8621:248:18",
													"statements": [
														{
															"nativeSrc": "8631:26:18",
															"nodeType": "YulAssignment",
															"src": "8631:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8643:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8643:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8654:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8654:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8639:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8639:3:18"
																},
																"nativeSrc": "8639:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8639:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8631:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8631:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8678:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8678:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8689:1:18",
																				"nodeType": "YulLiteral",
																				"src": "8689:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8674:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:18"
																		},
																		"nativeSrc": "8674:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8697:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "8697:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8703:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8703:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8693:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8693:3:18"
																		},
																		"nativeSrc": "8693:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8693:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8667:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:18"
																},
																"nativeSrc": "8667:47:18",
																"nodeType": "YulFunctionCall",
																"src": "8667:47:18"
															},
															"nativeSrc": "8667:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "8667:47:18"
														},
														{
															"nativeSrc": "8723:139:18",
															"nodeType": "YulAssignment",
															"src": "8723:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8857:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8857:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8731:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "8731:124:18"
																},
																"nativeSrc": "8731:131:18",
																"nodeType": "YulFunctionCall",
																"src": "8731:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8723:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8723:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8450:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8601:9:18",
														"nodeType": "YulTypedName",
														"src": "8601:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8616:4:18",
														"nodeType": "YulTypedName",
														"src": "8616:4:18",
														"type": ""
													}
												],
												"src": "8450:419:18"
											},
											{
												"body": {
													"nativeSrc": "8981:119:18",
													"nodeType": "YulBlock",
													"src": "8981:119:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9003:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:1:18",
																				"nodeType": "YulLiteral",
																				"src": "9011:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:18"
																		},
																		"nativeSrc": "8999:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:14:18"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "9015:34:18",
																		"nodeType": "YulLiteral",
																		"src": "9015:34:18",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8992:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8992:6:18"
																},
																"nativeSrc": "8992:58:18",
																"nodeType": "YulFunctionCall",
																"src": "8992:58:18"
															},
															"nativeSrc": "8992:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "8992:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9071:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9071:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9079:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9079:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9067:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:18"
																		},
																		"nativeSrc": "9067:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9067:15:18"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "9084:8:18",
																		"nodeType": "YulLiteral",
																		"src": "9084:8:18",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9060:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9060:6:18"
																},
																"nativeSrc": "9060:33:18",
																"nodeType": "YulFunctionCall",
																"src": "9060:33:18"
															},
															"nativeSrc": "9060:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "9060:33:18"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "8875:225:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8973:6:18",
														"nodeType": "YulTypedName",
														"src": "8973:6:18",
														"type": ""
													}
												],
												"src": "8875:225:18"
											},
											{
												"body": {
													"nativeSrc": "9252:220:18",
													"nodeType": "YulBlock",
													"src": "9252:220:18",
													"statements": [
														{
															"nativeSrc": "9262:74:18",
															"nodeType": "YulAssignment",
															"src": "9262:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9328:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9328:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9333:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9333:2:18",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9269:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "9269:58:18"
																},
																"nativeSrc": "9269:67:18",
																"nodeType": "YulFunctionCall",
																"src": "9269:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9262:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9262:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9434:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9434:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "9345:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "9345:88:18"
																},
																"nativeSrc": "9345:93:18",
																"nodeType": "YulFunctionCall",
																"src": "9345:93:18"
															},
															"nativeSrc": "9345:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "9345:93:18"
														},
														{
															"nativeSrc": "9447:19:18",
															"nodeType": "YulAssignment",
															"src": "9447:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9458:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9458:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9463:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9463:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9454:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9454:3:18"
																},
																"nativeSrc": "9454:12:18",
																"nodeType": "YulFunctionCall",
																"src": "9454:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9447:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9447:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9106:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9240:3:18",
														"nodeType": "YulTypedName",
														"src": "9240:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9248:3:18",
														"nodeType": "YulTypedName",
														"src": "9248:3:18",
														"type": ""
													}
												],
												"src": "9106:366:18"
											},
											{
												"body": {
													"nativeSrc": "9649:248:18",
													"nodeType": "YulBlock",
													"src": "9649:248:18",
													"statements": [
														{
															"nativeSrc": "9659:26:18",
															"nodeType": "YulAssignment",
															"src": "9659:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9671:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9671:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9682:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9682:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9667:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9667:3:18"
																},
																"nativeSrc": "9667:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9667:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9659:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9659:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9706:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9706:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9717:1:18",
																				"nodeType": "YulLiteral",
																				"src": "9717:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9702:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9702:3:18"
																		},
																		"nativeSrc": "9702:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9702:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9725:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "9725:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9731:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9731:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9721:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9721:3:18"
																		},
																		"nativeSrc": "9721:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9721:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9695:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9695:6:18"
																},
																"nativeSrc": "9695:47:18",
																"nodeType": "YulFunctionCall",
																"src": "9695:47:18"
															},
															"nativeSrc": "9695:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "9695:47:18"
														},
														{
															"nativeSrc": "9751:139:18",
															"nodeType": "YulAssignment",
															"src": "9751:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9885:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "9885:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9759:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "9759:124:18"
																},
																"nativeSrc": "9759:131:18",
																"nodeType": "YulFunctionCall",
																"src": "9759:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9751:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9751:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9478:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9629:9:18",
														"nodeType": "YulTypedName",
														"src": "9629:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9644:4:18",
														"nodeType": "YulTypedName",
														"src": "9644:4:18",
														"type": ""
													}
												],
												"src": "9478:419:18"
											},
											{
												"body": {
													"nativeSrc": "10009:124:18",
													"nodeType": "YulBlock",
													"src": "10009:124:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10031:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10031:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10039:1:18",
																				"nodeType": "YulLiteral",
																				"src": "10039:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10027:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10027:3:18"
																		},
																		"nativeSrc": "10027:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10027:14:18"
																	},
																	{
																		"hexValue": "526566756e64457363726f773a2063616e206f6e6c79206465706f7369742077",
																		"kind": "string",
																		"nativeSrc": "10043:34:18",
																		"nodeType": "YulLiteral",
																		"src": "10043:34:18",
																		"type": "",
																		"value": "RefundEscrow: can only deposit w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10020:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10020:6:18"
																},
																"nativeSrc": "10020:58:18",
																"nodeType": "YulFunctionCall",
																"src": "10020:58:18"
															},
															"nativeSrc": "10020:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "10020:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10099:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10099:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10107:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10107:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10095:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10095:3:18"
																		},
																		"nativeSrc": "10095:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10095:15:18"
																	},
																	{
																		"hexValue": "68696c6520616374697665",
																		"kind": "string",
																		"nativeSrc": "10112:13:18",
																		"nodeType": "YulLiteral",
																		"src": "10112:13:18",
																		"type": "",
																		"value": "hile active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10088:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10088:6:18"
																},
																"nativeSrc": "10088:38:18",
																"nodeType": "YulFunctionCall",
																"src": "10088:38:18"
															},
															"nativeSrc": "10088:38:18",
															"nodeType": "YulExpressionStatement",
															"src": "10088:38:18"
														}
													]
												},
												"name": "store_literal_in_memory_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
												"nativeSrc": "9903:230:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10001:6:18",
														"nodeType": "YulTypedName",
														"src": "10001:6:18",
														"type": ""
													}
												],
												"src": "9903:230:18"
											},
											{
												"body": {
													"nativeSrc": "10285:220:18",
													"nodeType": "YulBlock",
													"src": "10285:220:18",
													"statements": [
														{
															"nativeSrc": "10295:74:18",
															"nodeType": "YulAssignment",
															"src": "10295:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10361:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10361:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10366:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10366:2:18",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10302:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "10302:58:18"
																},
																"nativeSrc": "10302:67:18",
																"nodeType": "YulFunctionCall",
																"src": "10302:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10295:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10295:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10467:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10467:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
																	"nativeSrc": "10378:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "10378:88:18"
																},
																"nativeSrc": "10378:93:18",
																"nodeType": "YulFunctionCall",
																"src": "10378:93:18"
															},
															"nativeSrc": "10378:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "10378:93:18"
														},
														{
															"nativeSrc": "10480:19:18",
															"nodeType": "YulAssignment",
															"src": "10480:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10491:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10491:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10496:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10496:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10487:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10487:3:18"
																},
																"nativeSrc": "10487:12:18",
																"nodeType": "YulFunctionCall",
																"src": "10487:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10480:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10480:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10139:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10273:3:18",
														"nodeType": "YulTypedName",
														"src": "10273:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10281:3:18",
														"nodeType": "YulTypedName",
														"src": "10281:3:18",
														"type": ""
													}
												],
												"src": "10139:366:18"
											},
											{
												"body": {
													"nativeSrc": "10682:248:18",
													"nodeType": "YulBlock",
													"src": "10682:248:18",
													"statements": [
														{
															"nativeSrc": "10692:26:18",
															"nodeType": "YulAssignment",
															"src": "10692:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10704:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10704:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10715:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10715:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10700:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10700:3:18"
																},
																"nativeSrc": "10700:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10700:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10692:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10692:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10739:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10739:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10750:1:18",
																				"nodeType": "YulLiteral",
																				"src": "10750:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10735:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10735:3:18"
																		},
																		"nativeSrc": "10735:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10735:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10758:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "10758:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10764:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10764:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10754:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10754:3:18"
																		},
																		"nativeSrc": "10754:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10754:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10728:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10728:6:18"
																},
																"nativeSrc": "10728:47:18",
																"nodeType": "YulFunctionCall",
																"src": "10728:47:18"
															},
															"nativeSrc": "10728:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "10728:47:18"
														},
														{
															"nativeSrc": "10784:139:18",
															"nodeType": "YulAssignment",
															"src": "10784:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10918:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "10918:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10792:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "10792:124:18"
																},
																"nativeSrc": "10792:131:18",
																"nodeType": "YulFunctionCall",
																"src": "10792:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10784:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10784:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10511:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10662:9:18",
														"nodeType": "YulTypedName",
														"src": "10662:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10677:4:18",
														"nodeType": "YulTypedName",
														"src": "10677:4:18",
														"type": ""
													}
												],
												"src": "10511:419:18"
											},
											{
												"body": {
													"nativeSrc": "11042:76:18",
													"nodeType": "YulBlock",
													"src": "11042:76:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11064:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11064:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11072:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11072:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11060:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11060:3:18"
																		},
																		"nativeSrc": "11060:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11060:14:18"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "11076:34:18",
																		"nodeType": "YulLiteral",
																		"src": "11076:34:18",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11053:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11053:6:18"
																},
																"nativeSrc": "11053:58:18",
																"nodeType": "YulFunctionCall",
																"src": "11053:58:18"
															},
															"nativeSrc": "11053:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "11053:58:18"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "10936:182:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11034:6:18",
														"nodeType": "YulTypedName",
														"src": "11034:6:18",
														"type": ""
													}
												],
												"src": "10936:182:18"
											},
											{
												"body": {
													"nativeSrc": "11270:220:18",
													"nodeType": "YulBlock",
													"src": "11270:220:18",
													"statements": [
														{
															"nativeSrc": "11280:74:18",
															"nodeType": "YulAssignment",
															"src": "11280:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11346:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11346:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11351:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11351:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11287:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "11287:58:18"
																},
																"nativeSrc": "11287:67:18",
																"nodeType": "YulFunctionCall",
																"src": "11287:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11280:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11280:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11452:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11452:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "11363:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "11363:88:18"
																},
																"nativeSrc": "11363:93:18",
																"nodeType": "YulFunctionCall",
																"src": "11363:93:18"
															},
															"nativeSrc": "11363:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "11363:93:18"
														},
														{
															"nativeSrc": "11465:19:18",
															"nodeType": "YulAssignment",
															"src": "11465:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11476:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11476:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11481:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11481:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11472:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11472:3:18"
																},
																"nativeSrc": "11472:12:18",
																"nodeType": "YulFunctionCall",
																"src": "11472:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11465:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11465:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11124:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11258:3:18",
														"nodeType": "YulTypedName",
														"src": "11258:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11266:3:18",
														"nodeType": "YulTypedName",
														"src": "11266:3:18",
														"type": ""
													}
												],
												"src": "11124:366:18"
											},
											{
												"body": {
													"nativeSrc": "11667:248:18",
													"nodeType": "YulBlock",
													"src": "11667:248:18",
													"statements": [
														{
															"nativeSrc": "11677:26:18",
															"nodeType": "YulAssignment",
															"src": "11677:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11689:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11689:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11700:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11700:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11685:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11685:3:18"
																},
																"nativeSrc": "11685:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11685:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11677:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11677:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11724:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11724:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11735:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11735:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11720:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11720:3:18"
																		},
																		"nativeSrc": "11720:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11720:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11743:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "11743:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11749:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11749:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11739:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11739:3:18"
																		},
																		"nativeSrc": "11739:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11739:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11713:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11713:6:18"
																},
																"nativeSrc": "11713:47:18",
																"nodeType": "YulFunctionCall",
																"src": "11713:47:18"
															},
															"nativeSrc": "11713:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "11713:47:18"
														},
														{
															"nativeSrc": "11769:139:18",
															"nodeType": "YulAssignment",
															"src": "11769:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11903:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "11903:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11777:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "11777:124:18"
																},
																"nativeSrc": "11777:131:18",
																"nodeType": "YulFunctionCall",
																"src": "11777:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11769:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11769:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11496:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11647:9:18",
														"nodeType": "YulTypedName",
														"src": "11647:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11662:4:18",
														"nodeType": "YulTypedName",
														"src": "11662:4:18",
														"type": ""
													}
												],
												"src": "11496:419:18"
											},
											{
												"body": {
													"nativeSrc": "12027:73:18",
													"nodeType": "YulBlock",
													"src": "12027:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12049:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12049:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12057:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12057:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12045:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12045:3:18"
																		},
																		"nativeSrc": "12045:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12045:14:18"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12061:31:18",
																		"nodeType": "YulLiteral",
																		"src": "12061:31:18",
																		"type": "",
																		"value": "Address: insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12038:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12038:6:18"
																},
																"nativeSrc": "12038:55:18",
																"nodeType": "YulFunctionCall",
																"src": "12038:55:18"
															},
															"nativeSrc": "12038:55:18",
															"nodeType": "YulExpressionStatement",
															"src": "12038:55:18"
														}
													]
												},
												"name": "store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
												"nativeSrc": "11921:179:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12019:6:18",
														"nodeType": "YulTypedName",
														"src": "12019:6:18",
														"type": ""
													}
												],
												"src": "11921:179:18"
											},
											{
												"body": {
													"nativeSrc": "12252:220:18",
													"nodeType": "YulBlock",
													"src": "12252:220:18",
													"statements": [
														{
															"nativeSrc": "12262:74:18",
															"nodeType": "YulAssignment",
															"src": "12262:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12328:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12328:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12333:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12333:2:18",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12269:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "12269:58:18"
																},
																"nativeSrc": "12269:67:18",
																"nodeType": "YulFunctionCall",
																"src": "12269:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12262:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12262:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12434:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12434:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																	"nativeSrc": "12345:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "12345:88:18"
																},
																"nativeSrc": "12345:93:18",
																"nodeType": "YulFunctionCall",
																"src": "12345:93:18"
															},
															"nativeSrc": "12345:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "12345:93:18"
														},
														{
															"nativeSrc": "12447:19:18",
															"nodeType": "YulAssignment",
															"src": "12447:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12458:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12458:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12463:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12463:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12454:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12454:3:18"
																},
																"nativeSrc": "12454:12:18",
																"nodeType": "YulFunctionCall",
																"src": "12454:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12447:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12447:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12106:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12240:3:18",
														"nodeType": "YulTypedName",
														"src": "12240:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12248:3:18",
														"nodeType": "YulTypedName",
														"src": "12248:3:18",
														"type": ""
													}
												],
												"src": "12106:366:18"
											},
											{
												"body": {
													"nativeSrc": "12649:248:18",
													"nodeType": "YulBlock",
													"src": "12649:248:18",
													"statements": [
														{
															"nativeSrc": "12659:26:18",
															"nodeType": "YulAssignment",
															"src": "12659:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12671:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12671:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12682:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12682:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12667:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12667:3:18"
																},
																"nativeSrc": "12667:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12667:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12659:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12659:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12706:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12706:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12717:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12717:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12702:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12702:3:18"
																		},
																		"nativeSrc": "12702:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12702:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12725:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "12725:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12731:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12731:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12721:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12721:3:18"
																		},
																		"nativeSrc": "12721:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12721:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12695:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12695:6:18"
																},
																"nativeSrc": "12695:47:18",
																"nodeType": "YulFunctionCall",
																"src": "12695:47:18"
															},
															"nativeSrc": "12695:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "12695:47:18"
														},
														{
															"nativeSrc": "12751:139:18",
															"nodeType": "YulAssignment",
															"src": "12751:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12885:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "12885:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12759:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "12759:124:18"
																},
																"nativeSrc": "12759:131:18",
																"nodeType": "YulFunctionCall",
																"src": "12759:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12751:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12751:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12478:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12629:9:18",
														"nodeType": "YulTypedName",
														"src": "12629:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12644:4:18",
														"nodeType": "YulTypedName",
														"src": "12644:4:18",
														"type": ""
													}
												],
												"src": "12478:419:18"
											},
											{
												"body": {
													"nativeSrc": "13016:34:18",
													"nodeType": "YulBlock",
													"src": "13016:34:18",
													"statements": [
														{
															"nativeSrc": "13026:18:18",
															"nodeType": "YulAssignment",
															"src": "13026:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "13041:3:18",
																"nodeType": "YulIdentifier",
																"src": "13041:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13026:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "13026:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12903:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12988:3:18",
														"nodeType": "YulTypedName",
														"src": "12988:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12993:6:18",
														"nodeType": "YulTypedName",
														"src": "12993:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13004:11:18",
														"nodeType": "YulTypedName",
														"src": "13004:11:18",
														"type": ""
													}
												],
												"src": "12903:147:18"
											},
											{
												"body": {
													"nativeSrc": "13162:8:18",
													"nodeType": "YulBlock",
													"src": "13162:8:18",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "13056:114:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13154:6:18",
														"nodeType": "YulTypedName",
														"src": "13154:6:18",
														"type": ""
													}
												],
												"src": "13056:114:18"
											},
											{
												"body": {
													"nativeSrc": "13339:235:18",
													"nodeType": "YulBlock",
													"src": "13339:235:18",
													"statements": [
														{
															"nativeSrc": "13349:90:18",
															"nodeType": "YulAssignment",
															"src": "13349:90:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13432:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13432:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13437:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13437:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13356:75:18",
																	"nodeType": "YulIdentifier",
																	"src": "13356:75:18"
																},
																"nativeSrc": "13356:83:18",
																"nodeType": "YulFunctionCall",
																"src": "13356:83:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13349:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13349:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13537:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13537:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "13448:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "13448:88:18"
																},
																"nativeSrc": "13448:93:18",
																"nodeType": "YulFunctionCall",
																"src": "13448:93:18"
															},
															"nativeSrc": "13448:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "13448:93:18"
														},
														{
															"nativeSrc": "13550:18:18",
															"nodeType": "YulAssignment",
															"src": "13550:18:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13561:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13561:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13566:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13566:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13557:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13557:3:18"
																},
																"nativeSrc": "13557:11:18",
																"nodeType": "YulFunctionCall",
																"src": "13557:11:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13550:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13550:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13176:398:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13327:3:18",
														"nodeType": "YulTypedName",
														"src": "13327:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13335:3:18",
														"nodeType": "YulTypedName",
														"src": "13335:3:18",
														"type": ""
													}
												],
												"src": "13176:398:18"
											},
											{
												"body": {
													"nativeSrc": "13768:191:18",
													"nodeType": "YulBlock",
													"src": "13768:191:18",
													"statements": [
														{
															"nativeSrc": "13779:154:18",
															"nodeType": "YulAssignment",
															"src": "13779:154:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13929:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13929:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13786:141:18",
																	"nodeType": "YulIdentifier",
																	"src": "13786:141:18"
																},
																"nativeSrc": "13786:147:18",
																"nodeType": "YulFunctionCall",
																"src": "13786:147:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13779:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13779:3:18"
																}
															]
														},
														{
															"nativeSrc": "13943:10:18",
															"nodeType": "YulAssignment",
															"src": "13943:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "13950:3:18",
																"nodeType": "YulIdentifier",
																"src": "13950:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13943:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13943:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13580:379:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13755:3:18",
														"nodeType": "YulTypedName",
														"src": "13755:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13764:3:18",
														"nodeType": "YulTypedName",
														"src": "13764:3:18",
														"type": ""
													}
												],
												"src": "13580:379:18"
											},
											{
												"body": {
													"nativeSrc": "14071:139:18",
													"nodeType": "YulBlock",
													"src": "14071:139:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14093:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14093:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14101:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14101:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14089:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14089:3:18"
																		},
																		"nativeSrc": "14089:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14089:14:18"
																	},
																	{
																		"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c2072",
																		"kind": "string",
																		"nativeSrc": "14105:34:18",
																		"nodeType": "YulLiteral",
																		"src": "14105:34:18",
																		"type": "",
																		"value": "Address: unable to send value, r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14082:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14082:6:18"
																},
																"nativeSrc": "14082:58:18",
																"nodeType": "YulFunctionCall",
																"src": "14082:58:18"
															},
															"nativeSrc": "14082:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "14082:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14161:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14161:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14169:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14169:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14157:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14157:3:18"
																		},
																		"nativeSrc": "14157:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14157:15:18"
																	},
																	{
																		"hexValue": "6563697069656e74206d61792068617665207265766572746564",
																		"kind": "string",
																		"nativeSrc": "14174:28:18",
																		"nodeType": "YulLiteral",
																		"src": "14174:28:18",
																		"type": "",
																		"value": "ecipient may have reverted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14150:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14150:6:18"
																},
																"nativeSrc": "14150:53:18",
																"nodeType": "YulFunctionCall",
																"src": "14150:53:18"
															},
															"nativeSrc": "14150:53:18",
															"nodeType": "YulExpressionStatement",
															"src": "14150:53:18"
														}
													]
												},
												"name": "store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
												"nativeSrc": "13965:245:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14063:6:18",
														"nodeType": "YulTypedName",
														"src": "14063:6:18",
														"type": ""
													}
												],
												"src": "13965:245:18"
											},
											{
												"body": {
													"nativeSrc": "14362:220:18",
													"nodeType": "YulBlock",
													"src": "14362:220:18",
													"statements": [
														{
															"nativeSrc": "14372:74:18",
															"nodeType": "YulAssignment",
															"src": "14372:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14438:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14438:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14443:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14443:2:18",
																		"type": "",
																		"value": "58"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14379:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "14379:58:18"
																},
																"nativeSrc": "14379:67:18",
																"nodeType": "YulFunctionCall",
																"src": "14379:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14372:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14372:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14544:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14544:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																	"nativeSrc": "14455:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "14455:88:18"
																},
																"nativeSrc": "14455:93:18",
																"nodeType": "YulFunctionCall",
																"src": "14455:93:18"
															},
															"nativeSrc": "14455:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "14455:93:18"
														},
														{
															"nativeSrc": "14557:19:18",
															"nodeType": "YulAssignment",
															"src": "14557:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14568:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14568:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14573:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14573:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14564:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14564:3:18"
																},
																"nativeSrc": "14564:12:18",
																"nodeType": "YulFunctionCall",
																"src": "14564:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14557:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14557:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14216:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14350:3:18",
														"nodeType": "YulTypedName",
														"src": "14350:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14358:3:18",
														"nodeType": "YulTypedName",
														"src": "14358:3:18",
														"type": ""
													}
												],
												"src": "14216:366:18"
											},
											{
												"body": {
													"nativeSrc": "14759:248:18",
													"nodeType": "YulBlock",
													"src": "14759:248:18",
													"statements": [
														{
															"nativeSrc": "14769:26:18",
															"nodeType": "YulAssignment",
															"src": "14769:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14781:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14781:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14792:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14792:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14777:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14777:3:18"
																},
																"nativeSrc": "14777:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14777:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14769:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14769:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14816:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14816:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14827:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14827:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14812:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14812:3:18"
																		},
																		"nativeSrc": "14812:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14812:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14835:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "14835:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14841:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14841:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14831:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14831:3:18"
																		},
																		"nativeSrc": "14831:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14831:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14805:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14805:6:18"
																},
																"nativeSrc": "14805:47:18",
																"nodeType": "YulFunctionCall",
																"src": "14805:47:18"
															},
															"nativeSrc": "14805:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "14805:47:18"
														},
														{
															"nativeSrc": "14861:139:18",
															"nodeType": "YulAssignment",
															"src": "14861:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14995:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "14995:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14869:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "14869:124:18"
																},
																"nativeSrc": "14869:131:18",
																"nodeType": "YulFunctionCall",
																"src": "14869:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14861:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14861:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14588:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14739:9:18",
														"nodeType": "YulTypedName",
														"src": "14739:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14754:4:18",
														"nodeType": "YulTypedName",
														"src": "14754:4:18",
														"type": ""
													}
												],
												"src": "14588:419:18"
											},
											{
												"body": {
													"nativeSrc": "15041:152:18",
													"nodeType": "YulBlock",
													"src": "15041:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15058:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15058:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15061:77:18",
																		"nodeType": "YulLiteral",
																		"src": "15061:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15051:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15051:6:18"
																},
																"nativeSrc": "15051:88:18",
																"nodeType": "YulFunctionCall",
																"src": "15051:88:18"
															},
															"nativeSrc": "15051:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "15051:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15155:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15155:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15158:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15158:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15148:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15148:6:18"
																},
																"nativeSrc": "15148:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15148:15:18"
															},
															"nativeSrc": "15148:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15148:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15179:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15179:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15182:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15182:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15172:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15172:6:18"
																},
																"nativeSrc": "15172:15:18",
																"nodeType": "YulFunctionCall",
																"src": "15172:15:18"
															},
															"nativeSrc": "15172:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "15172:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15013:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "15013:180:18"
											},
											{
												"body": {
													"nativeSrc": "15243:147:18",
													"nodeType": "YulBlock",
													"src": "15243:147:18",
													"statements": [
														{
															"nativeSrc": "15253:25:18",
															"nodeType": "YulAssignment",
															"src": "15253:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15276:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15276:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15258:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "15258:17:18"
																},
																"nativeSrc": "15258:20:18",
																"nodeType": "YulFunctionCall",
																"src": "15258:20:18"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15253:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "15253:1:18"
																}
															]
														},
														{
															"nativeSrc": "15287:25:18",
															"nodeType": "YulAssignment",
															"src": "15287:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15310:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15310:1:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15292:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "15292:17:18"
																},
																"nativeSrc": "15292:20:18",
																"nodeType": "YulFunctionCall",
																"src": "15292:20:18"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15287:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "15287:1:18"
																}
															]
														},
														{
															"nativeSrc": "15321:16:18",
															"nodeType": "YulAssignment",
															"src": "15321:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15332:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15332:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15335:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15335:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15328:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15328:3:18"
																},
																"nativeSrc": "15328:9:18",
																"nodeType": "YulFunctionCall",
																"src": "15328:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15321:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15321:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15361:22:18",
																"nodeType": "YulBlock",
																"src": "15361:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15363:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "15363:16:18"
																			},
																			"nativeSrc": "15363:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15363:18:18"
																		},
																		"nativeSrc": "15363:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15363:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15353:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "15353:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15356:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15356:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15350:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "15350:2:18"
																},
																"nativeSrc": "15350:10:18",
																"nodeType": "YulFunctionCall",
																"src": "15350:10:18"
															},
															"nativeSrc": "15347:36:18",
															"nodeType": "YulIf",
															"src": "15347:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15199:191:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15230:1:18",
														"nodeType": "YulTypedName",
														"src": "15230:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15233:1:18",
														"nodeType": "YulTypedName",
														"src": "15233:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15239:3:18",
														"nodeType": "YulTypedName",
														"src": "15239:3:18",
														"type": ""
													}
												],
												"src": "15199:191:18"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$1271(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$1271(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$1271(value)\n    }\n\n    function convert_t_enum$_State_$1271_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$1271(value)\n    }\n\n    function abi_encode_t_enum$_State_$1271_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$1271_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_State_$1271__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$1271_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100(memPtr) {\n\n        mstore(add(memPtr, 0), \"RefundEscrow: can only close whi\")\n\n        mstore(add(memPtr, 32), \"le active\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ConditionalEscrow: payee is not \")\n\n        mstore(add(memPtr, 32), \"allowed to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200(memPtr) {\n\n        mstore(add(memPtr, 0), \"RefundEscrow: can only enable re\")\n\n        mstore(add(memPtr, 32), \"funds while active\")\n\n    }\n\n    function abi_encode_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc(memPtr) {\n\n        mstore(add(memPtr, 0), \"RefundEscrow: beneficiary can on\")\n\n        mstore(add(memPtr, 32), \"ly withdraw while closed\")\n\n    }\n\n    function abi_encode_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f(memPtr) {\n\n        mstore(add(memPtr, 0), \"RefundEscrow: can only deposit w\")\n\n        mstore(add(memPtr, 32), \"hile active\")\n\n    }\n\n    function abi_encode_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: unable to send value, r\")\n\n        mstore(add(memPtr, 32), \"ecipient may have reverted\")\n\n    }\n\n    function abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 58)\n        store_literal_in_memory_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1280": [
									{
										"length": 32,
										"start": 615
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100a6575f3560e01c80638da5cb5b116100635780638da5cb5b1461017a5780639af6549a146101a4578063c19d93fb146101ba578063e3a9db1a146101e4578063f2fde38b14610220578063f340fa0114610248576100a6565b806338af3eed146100aa57806343d726d6146100d457806351cff8d9146100ea578063685ca19414610112578063715018a61461014e5780638c52dc4114610164575b5f80fd5b3480156100b5575f80fd5b506100be610264565b6040516100cb9190610b0a565b60405180910390f35b3480156100df575f80fd5b506100e861028b565b005b3480156100f5575f80fd5b50610110600480360381019061010b9190610b51565b610357565b005b34801561011d575f80fd5b5061013860048036038101906101339190610bb7565b6103ab565b6040516101459190610bfc565b60405180910390f35b348015610159575f80fd5b506101626103e2565b005b34801561016f575f80fd5b506101786103f5565b005b348015610185575f80fd5b5061018e6104c2565b60405161019b9190610c24565b60405180910390f35b3480156101af575f80fd5b506101b86104e9565b005b3480156101c5575f80fd5b506101ce610588565b6040516101db9190610cb0565b60405180910390f35b3480156101ef575f80fd5b5061020a60048036038101906102059190610bb7565b61059d565b6040516102179190610ce1565b60405180910390f35b34801561022b575f80fd5b5061024660048036038101906102419190610bb7565b6105e3565b005b610262600480360381019061025d9190610bb7565b610665565b005b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b6102936106de565b5f60028111156102a6576102a5610c3d565b5b6102ae610588565b60028111156102c0576102bf610c3d565b5b14610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f790610d7a565b60405180910390fd5b6002805f6101000a81548160ff0219169083600281111561032457610323610c3d565b5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b610360816103ab565b61039f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039690610e08565b60405180910390fd5b6103a88161075c565b50565b5f600160028111156103c0576103bf610c3d565b5b6103c8610588565b60028111156103da576103d9610c3d565b5b149050919050565b6103ea6106de565b6103f35f610862565b565b6103fd6106de565b5f60028111156104105761040f610c3d565b5b610418610588565b600281111561042a57610429610c3d565b5b1461046a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046190610e96565b60405180910390fd5b600160025f6101000a81548160ff0219169083600281111561048f5761048e610c3d565b5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002808111156104fc576104fb610c3d565b5b610504610588565b600281111561051657610515610c3d565b5b14610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90610f24565b60405180910390fd5b61058647610562610264565b73ffffffffffffffffffffffffffffffffffffffff1661092390919063ffffffff16565b565b5f60025f9054906101000a900460ff16905090565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6105eb6106de565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065090610fb2565b60405180910390fd5b61066281610862565b50565b5f600281111561067857610677610c3d565b5b610680610588565b600281111561069257610691610c3d565b5b146106d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c990611040565b60405180910390fd5b6106db81610a13565b50565b6106e6610ac4565b73ffffffffffffffffffffffffffffffffffffffff166107046104c2565b73ffffffffffffffffffffffffffffffffffffffff161461075a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610751906110a8565b60405180910390fd5b565b6107646106de565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610810818373ffffffffffffffffffffffffffffffffffffffff1661092390919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516108569190610ce1565b60405180910390a25050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b80471015610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d90611110565b60405180910390fd5b5f8273ffffffffffffffffffffffffffffffffffffffff168260405161098b9061115b565b5f6040518083038185875af1925050503d805f81146109c5576040519150601f19603f3d011682016040523d82523d5f602084013e6109ca565b606091505b5050905080610a0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a05906111df565b60405180910390fd5b505050565b610a1b6106de565b5f3490508060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a6b919061122a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c482604051610ab89190610ce1565b60405180910390a25050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610af482610acb565b9050919050565b610b0481610aea565b82525050565b5f602082019050610b1d5f830184610afb565b92915050565b5f80fd5b610b3081610aea565b8114610b3a575f80fd5b50565b5f81359050610b4b81610b27565b92915050565b5f60208284031215610b6657610b65610b23565b5b5f610b7384828501610b3d565b91505092915050565b5f610b8682610acb565b9050919050565b610b9681610b7c565b8114610ba0575f80fd5b50565b5f81359050610bb181610b8d565b92915050565b5f60208284031215610bcc57610bcb610b23565b5b5f610bd984828501610ba3565b91505092915050565b5f8115159050919050565b610bf681610be2565b82525050565b5f602082019050610c0f5f830184610bed565b92915050565b610c1e81610b7c565b82525050565b5f602082019050610c375f830184610c15565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60038110610c7b57610c7a610c3d565b5b50565b5f819050610c8b82610c6a565b919050565b5f610c9a82610c7e565b9050919050565b610caa81610c90565b82525050565b5f602082019050610cc35f830184610ca1565b92915050565b5f819050919050565b610cdb81610cc9565b82525050565b5f602082019050610cf45f830184610cd2565b92915050565b5f82825260208201905092915050565b7f526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768695f8201527f6c65206163746976650000000000000000000000000000000000000000000000602082015250565b5f610d64602983610cfa565b9150610d6f82610d0a565b604082019050919050565b5f6020820190508181035f830152610d9181610d58565b9050919050565b7f436f6e646974696f6e616c457363726f773a207061796565206973206e6f74205f8201527f616c6c6f77656420746f20776974686472617700000000000000000000000000602082015250565b5f610df2603383610cfa565b9150610dfd82610d98565b604082019050919050565b5f6020820190508181035f830152610e1f81610de6565b9050919050565b7f526566756e64457363726f773a2063616e206f6e6c7920656e61626c652072655f8201527f66756e6473207768696c65206163746976650000000000000000000000000000602082015250565b5f610e80603283610cfa565b9150610e8b82610e26565b604082019050919050565b5f6020820190508181035f830152610ead81610e74565b9050919050565b7f526566756e64457363726f773a2062656e65666963696172792063616e206f6e5f8201527f6c79207769746864726177207768696c6520636c6f7365640000000000000000602082015250565b5f610f0e603883610cfa565b9150610f1982610eb4565b604082019050919050565b5f6020820190508181035f830152610f3b81610f02565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f610f9c602683610cfa565b9150610fa782610f42565b604082019050919050565b5f6020820190508181035f830152610fc981610f90565b9050919050565b7f526566756e64457363726f773a2063616e206f6e6c79206465706f73697420775f8201527f68696c6520616374697665000000000000000000000000000000000000000000602082015250565b5f61102a602b83610cfa565b915061103582610fd0565b604082019050919050565b5f6020820190508181035f8301526110578161101e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f611092602083610cfa565b915061109d8261105e565b602082019050919050565b5f6020820190508181035f8301526110bf81611086565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e63650000005f82015250565b5f6110fa601d83610cfa565b9150611105826110c6565b602082019050919050565b5f6020820190508181035f830152611127816110ee565b9050919050565b5f81905092915050565b50565b5f6111465f8361112e565b915061115182611138565b5f82019050919050565b5f6111658261113b565b9150819050919050565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c20725f8201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b5f6111c9603a83610cfa565b91506111d48261116f565b604082019050919050565b5f6020820190508181035f8301526111f6816111bd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61123482610cc9565b915061123f83610cc9565b9250828201905080821115611257576112566111fd565b5b9291505056fea264697066735822122098841cf023c6b48aeb57c3b8af4fe7aa1d6c1f55c2029fcff1e494e45a16af5064736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x9AF6549A EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0xF340FA01 EQ PUSH2 0x248 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x38AF3EED EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x685CA194 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x8C52DC41 EQ PUSH2 0x164 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x357 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x4E9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH2 0x588 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x217 SWAP2 SWAP1 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x6DE JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x2A5 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x2AE PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2C0 JUMPI PUSH2 0x2BF PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F7 SWAP1 PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x324 JUMPI PUSH2 0x323 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x88672C3A6E342F7CD94A65BA63B79DF24A8973927B4D05D803C44BBF787D12F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x360 DUP2 PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x39F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x396 SWAP1 PUSH2 0xE08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3A8 DUP2 PUSH2 0x75C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3C0 JUMPI PUSH2 0x3BF PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x3C8 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x3DA JUMPI PUSH2 0x3D9 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x3F3 PUSH0 PUSH2 0x862 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x6DE JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x410 JUMPI PUSH2 0x40F PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x418 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x42A JUMPI PUSH2 0x429 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x46A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x461 SWAP1 PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x48F JUMPI PUSH2 0x48E PUSH2 0xC3D JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x599D8E5A83CFFB867D051598C4D70E805D59802D8081C1C7D6DFFC5B6ACA2B89 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x504 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0xF24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x586 SELFBALANCE PUSH2 0x562 PUSH2 0x264 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x923 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5EB PUSH2 0x6DE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x650 SWAP1 PUSH2 0xFB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x662 DUP2 PUSH2 0x862 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x678 JUMPI PUSH2 0x677 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST PUSH2 0x680 PUSH2 0x588 JUMP JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x692 JUMPI PUSH2 0x691 PUSH2 0xC3D JUMP JUMPDEST JUMPDEST EQ PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C9 SWAP1 PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DB DUP2 PUSH2 0xA13 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6E6 PUSH2 0xAC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x704 PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x764 PUSH2 0x6DE JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x810 DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x923 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x856 SWAP2 SWAP1 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x98B SWAP1 PUSH2 0x115B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA05 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA1B PUSH2 0x6DE JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP DUP1 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x122A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xAB8 SWAP2 SWAP1 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAF4 DUP3 PUSH2 0xACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB04 DUP2 PUSH2 0xAEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1D PUSH0 DUP4 ADD DUP5 PUSH2 0xAFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB30 DUP2 PUSH2 0xAEA JUMP JUMPDEST DUP2 EQ PUSH2 0xB3A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB4B DUP2 PUSH2 0xB27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB66 JUMPI PUSH2 0xB65 PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB73 DUP5 DUP3 DUP6 ADD PUSH2 0xB3D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB86 DUP3 PUSH2 0xACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB96 DUP2 PUSH2 0xB7C JUMP JUMPDEST DUP2 EQ PUSH2 0xBA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB1 DUP2 PUSH2 0xB8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCC JUMPI PUSH2 0xBCB PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBD9 DUP5 DUP3 DUP6 ADD PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF6 DUP2 PUSH2 0xBE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC0F PUSH0 DUP4 ADD DUP5 PUSH2 0xBED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC1E DUP2 PUSH2 0xB7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH0 DUP4 ADD DUP5 PUSH2 0xC15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xC7B JUMPI PUSH2 0xC7A PUSH2 0xC3D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0xC8B DUP3 PUSH2 0xC6A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC9A DUP3 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCAA DUP2 PUSH2 0xC90 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCC3 PUSH0 DUP4 ADD DUP5 PUSH2 0xCA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDB DUP2 PUSH2 0xCC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF4 PUSH0 DUP4 ADD DUP5 PUSH2 0xCD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526566756E64457363726F773A2063616E206F6E6C7920636C6F736520776869 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C65206163746976650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD64 PUSH1 0x29 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xD6F DUP3 PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD91 DUP2 PUSH2 0xD58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E646974696F6E616C457363726F773A207061796565206973206E6F7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C6C6F77656420746F20776974686472617700000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDF2 PUSH1 0x33 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xDFD DUP3 PUSH2 0xD98 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE1F DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566756E64457363726F773A2063616E206F6E6C7920656E61626C65207265 PUSH0 DUP3 ADD MSTORE PUSH32 0x66756E6473207768696C65206163746976650000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE80 PUSH1 0x32 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xE8B DUP3 PUSH2 0xE26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAD DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566756E64457363726F773A2062656E65666963696172792063616E206F6E PUSH0 DUP3 ADD MSTORE PUSH32 0x6C79207769746864726177207768696C6520636C6F7365640000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF0E PUSH1 0x38 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xF19 DUP3 PUSH2 0xEB4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF3B DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF9C PUSH1 0x26 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0xFA7 DUP3 PUSH2 0xF42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFC9 DUP2 PUSH2 0xF90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526566756E64457363726F773A2063616E206F6E6C79206465706F7369742077 PUSH0 DUP3 ADD MSTORE PUSH32 0x68696C6520616374697665000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x102A PUSH1 0x2B DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1035 DUP3 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1057 DUP2 PUSH2 0x101E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1092 PUSH1 0x20 DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0x109D DUP3 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10BF DUP2 PUSH2 0x1086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10FA PUSH1 0x1D DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1105 DUP3 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1127 DUP2 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1146 PUSH0 DUP4 PUSH2 0x112E JUMP JUMPDEST SWAP2 POP PUSH2 0x1151 DUP3 PUSH2 0x1138 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1165 DUP3 PUSH2 0x113B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20756E61626C6520746F2073656E642076616C75652C2072 PUSH0 DUP3 ADD MSTORE PUSH32 0x6563697069656E74206D61792068617665207265766572746564000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11C9 PUSH1 0x3A DUP4 PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP PUSH2 0x11D4 DUP3 PUSH2 0x116F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11F6 DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1234 DUP3 PUSH2 0xCC9 JUMP JUMPDEST SWAP2 POP PUSH2 0x123F DUP4 PUSH2 0xCC9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1257 JUMPI PUSH2 0x1256 PUSH2 0x11FD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 DUP5 SHR CREATE 0x23 0xC6 0xB4 DUP11 0xEB JUMPI 0xC3 0xB8 0xAF 0x4F 0xE7 0xAA SAR PUSH13 0x1F55C2029FCFF1E494E45A16AF POP PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "638:2551:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1469:105;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2043:197;;;;;;;;;;;;;:::i;:::-;;668:201:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3065:122:10;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;;;;;;;;;;;:::i;:::-;;2336:218:10;;;;;;;;;;;;;:::i;:::-;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2623:211:10;;;;;;;;;;;;;:::i;:::-;;1318:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1077:105:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1726:196:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1469:105;1521:15;1555:12;1548:19;;1469:105;:::o;2043:197::-;1094:13:0;:11;:13::i;:::-;2114:12:10::1;2103:23;;;;;;;;:::i;:::-;;:7;:5;:7::i;:::-;:23;;;;;;;;:::i;:::-;;;2095:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2191:12;2182:6:::0;::::1;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2218:15;;;;;;;;;;2043:197::o:0;668:201:8:-;751:24;769:5;751:17;:24::i;:::-;743:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;841:21;856:5;841:14;:21::i;:::-;668:201;:::o;3065:122:10:-;3131:4;3165:15;3154:26;;;;;;;;:::i;:::-;;:7;:5;:7::i;:::-;:26;;;;;;;;:::i;:::-;;;3147:33;;3065:122;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2336:218:10:-;1094:13:0;:11;:13::i;:::-;2415:12:10::1;2404:23;;;;;;;;:::i;:::-;;:7;:5;:7::i;:::-;:23;;;;;;;;:::i;:::-;;;2396:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2501:15;2492:6;;:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2531:16;;;;;;;;;;2336:218::o:0;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2623:211:10:-;2698:12;2687:23;;;;;;;;:::i;:::-;;:7;:5;:7::i;:::-;:23;;;;;;;;:::i;:::-;;;2679:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;2781:46;2805:21;2781:13;:11;:13::i;:::-;:23;;;;:46;;;;:::i;:::-;2623:211::o;1318:83::-;1364:5;1388:6;;;;;;;;;;;1381:13;;1318:83;:::o;1077:105:9:-;1133:7;1159:9;:16;1169:5;1159:16;;;;;;;;;;;;;;;;1152:23;;1077:105;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1726:196:10:-;1822:12;1811:23;;;;;;;;:::i;:::-;;:7;:5;:7::i;:::-;:23;;;;;;;;:::i;:::-;;;1803:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1892:23;1906:8;1892:13;:23::i;:::-;1726:196;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2027:224:9:-;1094:13:0;:11;:13::i;:::-;2103:15:9::1;2121:9;:16;2131:5;2121:16;;;;;;;;;;;;;;;;2103:34;;2167:1;2148:9;:16;2158:5;2148:16;;;;;;;;;;;;;;;:20;;;;2179:24;2195:7;2179:5;:15;;;;:24;;;;:::i;:::-;2229:5;2219:25;;;2236:7;2219:25;;;;;;:::i;:::-;;;;;;;;2093:158;2027:224:::0;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;2647:312:6:-;2761:6;2736:21;:31;;2728:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2813:12;2831:9;:14;;2853:6;2831:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2718:241;2647:312;;:::o;1365:183:9:-;1094:13:0;:11;:13::i;:::-;1440:14:9::1;1457:9;1440:26;;1496:6;1476:9;:16;1486:5;1476:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;1527:5;1517:24;;;1534:6;1517:24;;;;;;:::i;:::-;;;;;;;;1430:118;1365:183:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7:126:18:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;738:117::-;847:1;844;837:12;984:138;1065:32;1091:5;1065:32;:::i;:::-;1058:5;1055:43;1045:71;;1112:1;1109;1102:12;1045:71;984:138;:::o;1128:155::-;1182:5;1220:6;1207:20;1198:29;;1236:41;1271:5;1236:41;:::i;:::-;1128:155;;;;:::o;1289:345::-;1356:6;1405:2;1393:9;1384:7;1380:23;1376:32;1373:119;;;1411:79;;:::i;:::-;1373:119;1531:1;1556:61;1609:7;1600:6;1589:9;1585:22;1556:61;:::i;:::-;1546:71;;1502:125;1289:345;;;;:::o;1640:96::-;1677:7;1706:24;1724:5;1706:24;:::i;:::-;1695:35;;1640:96;;;:::o;1742:122::-;1815:24;1833:5;1815:24;:::i;:::-;1808:5;1805:35;1795:63;;1854:1;1851;1844:12;1795:63;1742:122;:::o;1870:139::-;1916:5;1954:6;1941:20;1932:29;;1970:33;1997:5;1970:33;:::i;:::-;1870:139;;;;:::o;2015:329::-;2074:6;2123:2;2111:9;2102:7;2098:23;2094:32;2091:119;;;2129:79;;:::i;:::-;2091:119;2249:1;2274:53;2319:7;2310:6;2299:9;2295:22;2274:53;:::i;:::-;2264:63;;2220:117;2015:329;;;;:::o;2350:90::-;2384:7;2427:5;2420:13;2413:21;2402:32;;2350:90;;;:::o;2446:109::-;2527:21;2542:5;2527:21;:::i;:::-;2522:3;2515:34;2446:109;;:::o;2561:210::-;2648:4;2686:2;2675:9;2671:18;2663:26;;2699:65;2761:1;2750:9;2746:17;2737:6;2699:65;:::i;:::-;2561:210;;;;:::o;2777:118::-;2864:24;2882:5;2864:24;:::i;:::-;2859:3;2852:37;2777:118;;:::o;2901:222::-;2994:4;3032:2;3021:9;3017:18;3009:26;;3045:71;3113:1;3102:9;3098:17;3089:6;3045:71;:::i;:::-;2901:222;;;;:::o;3129:180::-;3177:77;3174:1;3167:88;3274:4;3271:1;3264:15;3298:4;3295:1;3288:15;3315:115;3398:1;3391:5;3388:12;3378:46;;3404:18;;:::i;:::-;3378:46;3315:115;:::o;3436:131::-;3483:7;3512:5;3501:16;;3518:43;3555:5;3518:43;:::i;:::-;3436:131;;;:::o;3573:::-;3631:9;3664:34;3692:5;3664:34;:::i;:::-;3651:47;;3573:131;;;:::o;3710:147::-;3805:45;3844:5;3805:45;:::i;:::-;3800:3;3793:58;3710:147;;:::o;3863:238::-;3964:4;4002:2;3991:9;3987:18;3979:26;;4015:79;4091:1;4080:9;4076:17;4067:6;4015:79;:::i;:::-;3863:238;;;;:::o;4107:77::-;4144:7;4173:5;4162:16;;4107:77;;;:::o;4190:118::-;4277:24;4295:5;4277:24;:::i;:::-;4272:3;4265:37;4190:118;;:::o;4314:222::-;4407:4;4445:2;4434:9;4430:18;4422:26;;4458:71;4526:1;4515:9;4511:17;4502:6;4458:71;:::i;:::-;4314:222;;;;:::o;4542:169::-;4626:11;4660:6;4655:3;4648:19;4700:4;4695:3;4691:14;4676:29;;4542:169;;;;:::o;4717:228::-;4857:34;4853:1;4845:6;4841:14;4834:58;4926:11;4921:2;4913:6;4909:15;4902:36;4717:228;:::o;4951:366::-;5093:3;5114:67;5178:2;5173:3;5114:67;:::i;:::-;5107:74;;5190:93;5279:3;5190:93;:::i;:::-;5308:2;5303:3;5299:12;5292:19;;4951:366;;;:::o;5323:419::-;5489:4;5527:2;5516:9;5512:18;5504:26;;5576:9;5570:4;5566:20;5562:1;5551:9;5547:17;5540:47;5604:131;5730:4;5604:131;:::i;:::-;5596:139;;5323:419;;;:::o;5748:238::-;5888:34;5884:1;5876:6;5872:14;5865:58;5957:21;5952:2;5944:6;5940:15;5933:46;5748:238;:::o;5992:366::-;6134:3;6155:67;6219:2;6214:3;6155:67;:::i;:::-;6148:74;;6231:93;6320:3;6231:93;:::i;:::-;6349:2;6344:3;6340:12;6333:19;;5992:366;;;:::o;6364:419::-;6530:4;6568:2;6557:9;6553:18;6545:26;;6617:9;6611:4;6607:20;6603:1;6592:9;6588:17;6581:47;6645:131;6771:4;6645:131;:::i;:::-;6637:139;;6364:419;;;:::o;6789:237::-;6929:34;6925:1;6917:6;6913:14;6906:58;6998:20;6993:2;6985:6;6981:15;6974:45;6789:237;:::o;7032:366::-;7174:3;7195:67;7259:2;7254:3;7195:67;:::i;:::-;7188:74;;7271:93;7360:3;7271:93;:::i;:::-;7389:2;7384:3;7380:12;7373:19;;7032:366;;;:::o;7404:419::-;7570:4;7608:2;7597:9;7593:18;7585:26;;7657:9;7651:4;7647:20;7643:1;7632:9;7628:17;7621:47;7685:131;7811:4;7685:131;:::i;:::-;7677:139;;7404:419;;;:::o;7829:243::-;7969:34;7965:1;7957:6;7953:14;7946:58;8038:26;8033:2;8025:6;8021:15;8014:51;7829:243;:::o;8078:366::-;8220:3;8241:67;8305:2;8300:3;8241:67;:::i;:::-;8234:74;;8317:93;8406:3;8317:93;:::i;:::-;8435:2;8430:3;8426:12;8419:19;;8078:366;;;:::o;8450:419::-;8616:4;8654:2;8643:9;8639:18;8631:26;;8703:9;8697:4;8693:20;8689:1;8678:9;8674:17;8667:47;8731:131;8857:4;8731:131;:::i;:::-;8723:139;;8450:419;;;:::o;8875:225::-;9015:34;9011:1;9003:6;8999:14;8992:58;9084:8;9079:2;9071:6;9067:15;9060:33;8875:225;:::o;9106:366::-;9248:3;9269:67;9333:2;9328:3;9269:67;:::i;:::-;9262:74;;9345:93;9434:3;9345:93;:::i;:::-;9463:2;9458:3;9454:12;9447:19;;9106:366;;;:::o;9478:419::-;9644:4;9682:2;9671:9;9667:18;9659:26;;9731:9;9725:4;9721:20;9717:1;9706:9;9702:17;9695:47;9759:131;9885:4;9759:131;:::i;:::-;9751:139;;9478:419;;;:::o;9903:230::-;10043:34;10039:1;10031:6;10027:14;10020:58;10112:13;10107:2;10099:6;10095:15;10088:38;9903:230;:::o;10139:366::-;10281:3;10302:67;10366:2;10361:3;10302:67;:::i;:::-;10295:74;;10378:93;10467:3;10378:93;:::i;:::-;10496:2;10491:3;10487:12;10480:19;;10139:366;;;:::o;10511:419::-;10677:4;10715:2;10704:9;10700:18;10692:26;;10764:9;10758:4;10754:20;10750:1;10739:9;10735:17;10728:47;10792:131;10918:4;10792:131;:::i;:::-;10784:139;;10511:419;;;:::o;10936:182::-;11076:34;11072:1;11064:6;11060:14;11053:58;10936:182;:::o;11124:366::-;11266:3;11287:67;11351:2;11346:3;11287:67;:::i;:::-;11280:74;;11363:93;11452:3;11363:93;:::i;:::-;11481:2;11476:3;11472:12;11465:19;;11124:366;;;:::o;11496:419::-;11662:4;11700:2;11689:9;11685:18;11677:26;;11749:9;11743:4;11739:20;11735:1;11724:9;11720:17;11713:47;11777:131;11903:4;11777:131;:::i;:::-;11769:139;;11496:419;;;:::o;11921:179::-;12061:31;12057:1;12049:6;12045:14;12038:55;11921:179;:::o;12106:366::-;12248:3;12269:67;12333:2;12328:3;12269:67;:::i;:::-;12262:74;;12345:93;12434:3;12345:93;:::i;:::-;12463:2;12458:3;12454:12;12447:19;;12106:366;;;:::o;12478:419::-;12644:4;12682:2;12671:9;12667:18;12659:26;;12731:9;12725:4;12721:20;12717:1;12706:9;12702:17;12695:47;12759:131;12885:4;12759:131;:::i;:::-;12751:139;;12478:419;;;:::o;12903:147::-;13004:11;13041:3;13026:18;;12903:147;;;;:::o;13056:114::-;;:::o;13176:398::-;13335:3;13356:83;13437:1;13432:3;13356:83;:::i;:::-;13349:90;;13448:93;13537:3;13448:93;:::i;:::-;13566:1;13561:3;13557:11;13550:18;;13176:398;;;:::o;13580:379::-;13764:3;13786:147;13929:3;13786:147;:::i;:::-;13779:154;;13950:3;13943:10;;13580:379;;;:::o;13965:245::-;14105:34;14101:1;14093:6;14089:14;14082:58;14174:28;14169:2;14161:6;14157:15;14150:53;13965:245;:::o;14216:366::-;14358:3;14379:67;14443:2;14438:3;14379:67;:::i;:::-;14372:74;;14455:93;14544:3;14455:93;:::i;:::-;14573:2;14568:3;14564:12;14557:19;;14216:366;;;:::o;14588:419::-;14754:4;14792:2;14781:9;14777:18;14769:26;;14841:9;14835:4;14831:20;14827:1;14816:9;14812:17;14805:47;14869:131;14995:4;14869:131;:::i;:::-;14861:139;;14588:419;;;:::o;15013:180::-;15061:77;15058:1;15051:88;15158:4;15155:1;15148:15;15182:4;15179:1;15172:15;15199:191;15239:3;15258:20;15276:1;15258:20;:::i;:::-;15253:25;;15292:20;15310:1;15292:20;:::i;:::-;15287:25;;15335:1;15332;15328:9;15321:16;;15356:3;15353:1;15350:10;15347:36;;;15363:18;;:::i;:::-;15347:36;15199:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "951000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "infinite",
								"beneficiaryWithdraw()": "infinite",
								"close()": "29733",
								"deposit(address)": "infinite",
								"depositsOf(address)": "2895",
								"enableRefunds()": "29821",
								"owner()": "2515",
								"renounceOwnership()": "30479",
								"state()": "2605",
								"transferOwnership(address)": "30819",
								"withdraw(address)": "infinite",
								"withdrawalAllowed(address)": "2941"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1037,
									"end": 1248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1121,
									"end": 1122,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1123,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1097,
									"end": 1123,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1109,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1123,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1097,
									"end": 1123,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1097,
									"end": 1123,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "PUSH",
									"source": 10,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1089,
									"end": 1173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 1089,
									"end": 1173,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1183,
									"end": 1210,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1229,
									"end": 1241,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 1226,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1220,
									"end": 1226,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 1220,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1220,
									"end": 1241,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1037,
									"end": 1248,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 570,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 466,
									"end": 570,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 511,
									"end": 518,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 558,
									"end": 563,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 540,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 540,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 540,
									"end": 564,
									"name": "tag",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 540,
									"end": 564,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 529,
									"end": 564,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 529,
									"end": 564,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 466,
									"end": 570,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 466,
									"end": 570,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 466,
									"end": 570,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 576,
									"end": 714,
									"name": "tag",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 576,
									"end": 714,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 683,
									"end": 688,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 657,
									"end": 689,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 657,
									"end": 689,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 657,
									"end": 689,
									"name": "tag",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 657,
									"end": 689,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 650,
									"end": 655,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 647,
									"end": 690,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 637,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 704,
									"end": 705,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 702,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 694,
									"end": 706,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 637,
									"end": 708,
									"name": "tag",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 637,
									"end": 708,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 576,
									"end": 714,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 576,
									"end": 714,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 720,
									"end": 879,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 720,
									"end": 879,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 785,
									"end": 790,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 822,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 810,
									"end": 823,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 801,
									"end": 823,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 801,
									"end": 823,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 867,
									"end": 872,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 832,
									"end": 873,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 832,
									"end": 873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 832,
									"end": 873,
									"name": "tag",
									"source": 18,
									"value": "42"
								},
								{
									"begin": 832,
									"end": 873,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 720,
									"end": 879,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 720,
									"end": 879,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 720,
									"end": 879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "tag",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 963,
									"end": 969,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1012,
									"end": 1014,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 991,
									"end": 998,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 987,
									"end": 1010,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 983,
									"end": 1015,
									"name": "SLT",
									"source": 18
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "44"
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 1018,
									"end": 1097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "tag",
									"source": 18,
									"value": "45"
								},
								{
									"begin": 1018,
									"end": 1097,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "tag",
									"source": 18,
									"value": "44"
								},
								{
									"begin": 980,
									"end": 1099,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1138,
									"end": 1139,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 1227,
									"end": 1234,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1218,
									"end": 1224,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1207,
									"end": 1216,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 1203,
									"end": 1225,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 1163,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "tag",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 1163,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1153,
									"end": 1235,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1153,
									"end": 1235,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1109,
									"end": 1245,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 885,
									"end": 1252,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 885,
									"end": 1252,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1342,
									"end": 1353,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1376,
									"end": 1382,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1371,
									"end": 1374,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1364,
									"end": 1383,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1416,
									"end": 1420,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1411,
									"end": 1414,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1407,
									"end": 1421,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1392,
									"end": 1421,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1392,
									"end": 1421,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1258,
									"end": 1427,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1258,
									"end": 1427,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1433,
									"end": 1665,
									"name": "tag",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1433,
									"end": 1665,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1573,
									"end": 1607,
									"name": "PUSH",
									"source": 18,
									"value": "526566756E64457363726F773A2062656E656669636961727920697320746865"
								},
								{
									"begin": 1569,
									"end": 1570,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1567,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1557,
									"end": 1571,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1550,
									"end": 1608,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1642,
									"end": 1657,
									"name": "PUSH",
									"source": 18,
									"value": "207A65726F206164647265737300000000000000000000000000000000000000"
								},
								{
									"begin": 1637,
									"end": 1639,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1629,
									"end": 1635,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1625,
									"end": 1640,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1618,
									"end": 1658,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1433,
									"end": 1665,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1433,
									"end": 1665,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 2037,
									"name": "tag",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1671,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1813,
									"end": 1816,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1834,
									"end": 1901,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 1898,
									"end": 1900,
									"name": "PUSH",
									"source": 18,
									"value": "2D"
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1834,
									"end": 1901,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 1834,
									"end": 1901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1834,
									"end": 1901,
									"name": "tag",
									"source": 18,
									"value": "50"
								},
								{
									"begin": 1834,
									"end": 1901,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1901,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1901,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1910,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 1999,
									"end": 2002,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1910,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1910,
									"end": 2003,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1910,
									"end": 2003,
									"name": "tag",
									"source": 18,
									"value": "51"
								},
								{
									"begin": 1910,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2028,
									"end": 2030,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 2023,
									"end": 2026,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2019,
									"end": 2031,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2012,
									"end": 2031,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2012,
									"end": 2031,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 2037,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 2037,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 2037,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1671,
									"end": 2037,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2043,
									"end": 2462,
									"name": "tag",
									"source": 18,
									"value": "14"
								},
								{
									"begin": 2043,
									"end": 2462,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2209,
									"end": 2213,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2247,
									"end": 2249,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 2236,
									"end": 2245,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2232,
									"end": 2250,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2224,
									"end": 2250,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2224,
									"end": 2250,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2296,
									"end": 2305,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2286,
									"end": 2306,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 2282,
									"end": 2283,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2271,
									"end": 2280,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2267,
									"end": 2284,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2260,
									"end": 2307,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2324,
									"end": 2455,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 2450,
									"end": 2454,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2324,
									"end": 2455,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 2324,
									"end": 2455,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2324,
									"end": 2455,
									"name": "tag",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 2324,
									"end": 2455,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2316,
									"end": 2455,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2316,
									"end": 2455,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2043,
									"end": 2462,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 2043,
									"end": 2462,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2043,
									"end": 2462,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2043,
									"end": 2462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2468,
									"end": 2648,
									"name": "tag",
									"source": 18,
									"value": "17"
								},
								{
									"begin": 2468,
									"end": 2648,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2516,
									"end": 2593,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2513,
									"end": 2514,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2506,
									"end": 2594,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2613,
									"end": 2617,
									"name": "PUSH",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 2610,
									"end": 2611,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 2603,
									"end": 2618,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 2637,
									"end": 2641,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 2634,
									"end": 2635,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2642,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "1280"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 3189,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098841cf023c6b48aeb57c3b8af4fe7aa1d6c1f55c2029fcff1e494e45a16af5064736f6c63430008150033",
									".code": [
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "9AF6549A"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "C19D93FB"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "E3A9DB1A"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "F340FA01"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "38AF3EED"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "43D726D6"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "51CFF8D9"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "685CA194"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "8C52DC41"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 638,
											"end": 3189,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1469,
											"end": 1574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1469,
											"end": 1574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2043,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 668,
											"end": 869,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 668,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 668,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 3065,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3065,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 3065,
											"end": 3187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2623,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1318,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1318,
											"end": 1401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1077,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1077,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1077,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 1726,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1726,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1521,
											"end": 1536,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1567,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1280"
										},
										{
											"begin": 1548,
											"end": 1567,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1548,
											"end": 1567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1469,
											"end": 1574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2043,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2114,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2103,
											"end": 2126,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2103,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2103,
											"end": 2110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2103,
											"end": 2110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2103,
											"end": 2126,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2103,
											"end": 2126,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2095,
											"end": 2172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 2095,
											"end": 2172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2182,
											"end": 2203,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2182,
											"end": 2203,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "88672C3A6E342F7CD94A65BA63B79DF24A8973927B4D05D803C44BBF787D12F"
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2218,
											"end": 2233,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 668,
											"end": 869,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 668,
											"end": 869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 751,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 769,
											"end": 774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 751,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 751,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 751,
											"end": 775,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 751,
											"end": 775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 743,
											"end": 831,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 831,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 743,
											"end": 831,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 831,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 743,
											"end": 831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 743,
											"end": 831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 743,
											"end": 831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 831,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 743,
											"end": 831,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 743,
											"end": 831,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 841,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 856,
											"end": 861,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 841,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 841,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 862,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 841,
											"end": 862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 668,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3131,
											"end": 3135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3154,
											"end": 3180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3154,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 3154,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3154,
											"end": 3180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3180,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3180,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2404,
											"end": 2427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2404,
											"end": 2409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2404,
											"end": 2411,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2411,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2404,
											"end": 2411,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2404,
											"end": 2427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2427,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2396,
											"end": 2482,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2396,
											"end": 2482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2501,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2492,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2492,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2492,
											"end": 2516,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2492,
											"end": 2516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "599D8E5A83CFFB867D051598C4D70E805D59802D8081C1C7D6DFFC5B6ACA2B89"
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2547,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2623,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2710,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2687,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2687,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2687,
											"end": 2694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2694,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2687,
											"end": 2694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2687,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 2679,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 2679,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2805,
											"end": 2826,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2781,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2781,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 2781,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2781,
											"end": 2804,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2827,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2827,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 2781,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2623,
											"end": 2834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1168,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1169,
											"end": 1174,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1175,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1822,
											"end": 1834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1811,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1811,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1811,
											"end": 1834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1834,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 1803,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 1803,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 1906,
											"end": 1914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 1892,
											"end": 1915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 1892,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2136,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2163,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2164,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2168,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2168,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2195,
											"end": 2202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2184,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 2179,
											"end": 2194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2179,
											"end": 2203,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2229,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 2236,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2219,
											"end": 2244,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2244,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2093,
											"end": 2251,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2959,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2647,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2757,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2767,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2728,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2728,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2840,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2831,
											"end": 2845,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2831,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2831,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2874,
											"end": 2952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2874,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1440,
											"end": 1454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1466,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1466,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1502,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1491,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1476,
											"end": 1502,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 1534,
											"end": 1540,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1517,
											"end": 1541,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1517,
											"end": 1541,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1548,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 139,
											"end": 243,
											"name": "tag",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 139,
											"end": 243,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 184,
											"end": 191,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "225"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 213,
											"end": 237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 213,
											"end": 237,
											"name": "tag",
											"source": 18,
											"value": "225"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 202,
											"end": 237,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 202,
											"end": 237,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 139,
											"end": 243,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 139,
											"end": 243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 249,
											"end": 391,
											"name": "tag",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 249,
											"end": 391,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "227"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 352,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 352,
											"end": 384,
											"name": "tag",
											"source": 18,
											"value": "227"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 347,
											"end": 350,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 249,
											"end": 391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 397,
											"end": 651,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 397,
											"end": 651,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 506,
											"end": 510,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 546,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 529,
											"end": 547,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 521,
											"end": 547,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 521,
											"end": 547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "229"
										},
										{
											"begin": 641,
											"end": 642,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 626,
											"end": 643,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 617,
											"end": 623,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 557,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 557,
											"end": 644,
											"name": "tag",
											"source": 18,
											"value": "229"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 397,
											"end": 651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 738,
											"end": 855,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 738,
											"end": 855,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 837,
											"end": 849,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 984,
											"end": 1122,
											"name": "tag",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 984,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1065,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "234"
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1065,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 1065,
											"end": 1097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1065,
											"end": 1097,
											"name": "tag",
											"source": 18,
											"value": "234"
										},
										{
											"begin": 1065,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1058,
											"end": 1063,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1055,
											"end": 1098,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1045,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "235"
										},
										{
											"begin": 1045,
											"end": 1116,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1102,
											"end": 1114,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1045,
											"end": 1116,
											"name": "tag",
											"source": 18,
											"value": "235"
										},
										{
											"begin": 1045,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 984,
											"end": 1122,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 984,
											"end": 1122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1128,
											"end": 1283,
											"name": "tag",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 1128,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1198,
											"end": 1227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1236,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "237"
										},
										{
											"begin": 1271,
											"end": 1276,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1236,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 1236,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1236,
											"end": 1277,
											"name": "tag",
											"source": 18,
											"value": "237"
										},
										{
											"begin": 1236,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1128,
											"end": 1283,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1128,
											"end": 1283,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1128,
											"end": 1283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1128,
											"end": 1283,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1128,
											"end": 1283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1634,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 1289,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1407,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1402,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1380,
											"end": 1403,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1376,
											"end": 1408,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "239"
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "240"
										},
										{
											"begin": 1411,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 1411,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1490,
											"name": "tag",
											"source": 18,
											"value": "240"
										},
										{
											"begin": 1411,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "tag",
											"source": 18,
											"value": "239"
										},
										{
											"begin": 1373,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1532,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "241"
										},
										{
											"begin": 1609,
											"end": 1616,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1589,
											"end": 1598,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1585,
											"end": 1607,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1556,
											"end": 1617,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 1556,
											"end": 1617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1556,
											"end": 1617,
											"name": "tag",
											"source": 18,
											"value": "241"
										},
										{
											"begin": 1556,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1546,
											"end": 1617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1546,
											"end": 1617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1502,
											"end": 1627,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1634,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1634,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1634,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1634,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1289,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1640,
											"end": 1736,
											"name": "tag",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 1640,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1677,
											"end": 1684,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "243"
										},
										{
											"begin": 1724,
											"end": 1729,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 1706,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "tag",
											"source": 18,
											"value": "243"
										},
										{
											"begin": 1706,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1695,
											"end": 1730,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1695,
											"end": 1730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1640,
											"end": 1736,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1640,
											"end": 1736,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1640,
											"end": 1736,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1640,
											"end": 1736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1742,
											"end": 1864,
											"name": "tag",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 1742,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1815,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "245"
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1815,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 1815,
											"end": 1839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1815,
											"end": 1839,
											"name": "tag",
											"source": 18,
											"value": "245"
										},
										{
											"begin": 1815,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1808,
											"end": 1813,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1805,
											"end": 1840,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1795,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "246"
										},
										{
											"begin": 1795,
											"end": 1858,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1795,
											"end": 1858,
											"name": "tag",
											"source": 18,
											"value": "246"
										},
										{
											"begin": 1795,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1742,
											"end": 1864,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1742,
											"end": 1864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1870,
											"end": 2009,
											"name": "tag",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 1870,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1916,
											"end": 1921,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1932,
											"end": 1961,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1932,
											"end": 1961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1970,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "248"
										},
										{
											"begin": 1997,
											"end": 2002,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1970,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 1970,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1970,
											"end": 2003,
											"name": "tag",
											"source": 18,
											"value": "248"
										},
										{
											"begin": 1970,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1870,
											"end": 2009,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1870,
											"end": 2009,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1870,
											"end": 2009,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1870,
											"end": 2009,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1870,
											"end": 2009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2015,
											"end": 2344,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 2015,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2125,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2102,
											"end": 2109,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2094,
											"end": 2126,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2210,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "250"
										},
										{
											"begin": 2091,
											"end": 2210,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2129,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "251"
										},
										{
											"begin": 2129,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 2129,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2129,
											"end": 2208,
											"name": "tag",
											"source": 18,
											"value": "251"
										},
										{
											"begin": 2129,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2210,
											"name": "tag",
											"source": 18,
											"value": "250"
										},
										{
											"begin": 2091,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2249,
											"end": 2250,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "252"
										},
										{
											"begin": 2319,
											"end": 2326,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2295,
											"end": 2317,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 2274,
											"end": 2327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "tag",
											"source": 18,
											"value": "252"
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2264,
											"end": 2327,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2264,
											"end": 2327,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2220,
											"end": 2337,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2015,
											"end": 2344,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2015,
											"end": 2344,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2015,
											"end": 2344,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2015,
											"end": 2344,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2015,
											"end": 2344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2350,
											"end": 2440,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 2350,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2384,
											"end": 2391,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2432,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2413,
											"end": 2434,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2402,
											"end": 2434,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2402,
											"end": 2434,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2350,
											"end": 2440,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2350,
											"end": 2440,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2350,
											"end": 2440,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2350,
											"end": 2440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2446,
											"end": 2555,
											"name": "tag",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 2446,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2527,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 2542,
											"end": 2547,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2527,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 2527,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2527,
											"end": 2548,
											"name": "tag",
											"source": 18,
											"value": "255"
										},
										{
											"begin": 2527,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2522,
											"end": 2525,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2515,
											"end": 2549,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2446,
											"end": 2555,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2446,
											"end": 2555,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2446,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2771,
											"name": "tag",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 2561,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2688,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2684,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2689,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2689,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2699,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "257"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2759,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2746,
											"end": 2763,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2737,
											"end": 2743,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2699,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "191"
										},
										{
											"begin": 2699,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2699,
											"end": 2764,
											"name": "tag",
											"source": 18,
											"value": "257"
										},
										{
											"begin": 2699,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2771,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2771,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2771,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2771,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2777,
											"end": 2895,
											"name": "tag",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 2777,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2864,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2864,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 2864,
											"end": 2888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2864,
											"end": 2888,
											"name": "tag",
											"source": 18,
											"value": "259"
										},
										{
											"begin": 2864,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2859,
											"end": 2862,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2852,
											"end": 2889,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2777,
											"end": 2895,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2777,
											"end": 2895,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2777,
											"end": 2895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2901,
											"end": 3123,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 2901,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2994,
											"end": 2998,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3034,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3021,
											"end": 3030,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3017,
											"end": 3035,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3009,
											"end": 3035,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3009,
											"end": 3035,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3111,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3089,
											"end": 3095,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 3045,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3116,
											"name": "tag",
											"source": 18,
											"value": "261"
										},
										{
											"begin": 3045,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2901,
											"end": 3123,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2901,
											"end": 3123,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2901,
											"end": 3123,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2901,
											"end": 3123,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2901,
											"end": 3123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3129,
											"end": 3309,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 3129,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3177,
											"end": 3254,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3255,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3274,
											"end": 3278,
											"name": "PUSH",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 3271,
											"end": 3272,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3279,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3298,
											"end": 3302,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 3295,
											"end": 3296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3303,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3315,
											"end": 3430,
											"name": "tag",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 3315,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3398,
											"end": 3399,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3388,
											"end": 3400,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 3378,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 3378,
											"end": 3424,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 3404,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "tag",
											"source": 18,
											"value": "265"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3378,
											"end": 3424,
											"name": "tag",
											"source": 18,
											"value": "264"
										},
										{
											"begin": 3378,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3315,
											"end": 3430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3315,
											"end": 3430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3436,
											"end": 3567,
											"name": "tag",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 3436,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3483,
											"end": 3490,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3517,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3501,
											"end": 3517,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3501,
											"end": 3517,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3518,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "267"
										},
										{
											"begin": 3555,
											"end": 3560,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3518,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 3518,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3518,
											"end": 3561,
											"name": "tag",
											"source": 18,
											"value": "267"
										},
										{
											"begin": 3518,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3436,
											"end": 3567,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3436,
											"end": 3567,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3436,
											"end": 3567,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3436,
											"end": 3567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3573,
											"end": 3704,
											"name": "tag",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 3573,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3631,
											"end": 3640,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 3692,
											"end": 3697,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3664,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 3664,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3664,
											"end": 3698,
											"name": "tag",
											"source": 18,
											"value": "269"
										},
										{
											"begin": 3664,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3651,
											"end": 3698,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3651,
											"end": 3698,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3573,
											"end": 3704,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3573,
											"end": 3704,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3573,
											"end": 3704,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3573,
											"end": 3704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3710,
											"end": 3857,
											"name": "tag",
											"source": 18,
											"value": "196"
										},
										{
											"begin": 3710,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3805,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "271"
										},
										{
											"begin": 3844,
											"end": 3849,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3805,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 3805,
											"end": 3850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3805,
											"end": 3850,
											"name": "tag",
											"source": 18,
											"value": "271"
										},
										{
											"begin": 3805,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3800,
											"end": 3803,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3793,
											"end": 3851,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3710,
											"end": 3857,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3710,
											"end": 3857,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3710,
											"end": 3857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3863,
											"end": 4101,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 3863,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3964,
											"end": 3968,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3987,
											"end": 4005,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3979,
											"end": 4005,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3979,
											"end": 4005,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4015,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 4091,
											"end": 4092,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4089,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4076,
											"end": 4093,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4067,
											"end": 4073,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4015,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "196"
										},
										{
											"begin": 4015,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4015,
											"end": 4094,
											"name": "tag",
											"source": 18,
											"value": "273"
										},
										{
											"begin": 4015,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3863,
											"end": 4101,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3863,
											"end": 4101,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3863,
											"end": 4101,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3863,
											"end": 4101,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3863,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4107,
											"end": 4184,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 4107,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4144,
											"end": 4151,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4178,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4162,
											"end": 4178,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4107,
											"end": 4184,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4107,
											"end": 4184,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4107,
											"end": 4184,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4107,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4308,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 4190,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4277,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "276"
										},
										{
											"begin": 4295,
											"end": 4300,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4277,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 4277,
											"end": 4301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4277,
											"end": 4301,
											"name": "tag",
											"source": 18,
											"value": "276"
										},
										{
											"begin": 4277,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4272,
											"end": 4275,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4308,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4308,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4407,
											"end": 4411,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4434,
											"end": 4443,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4430,
											"end": 4448,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4422,
											"end": 4448,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4422,
											"end": 4448,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4458,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "278"
										},
										{
											"begin": 4526,
											"end": 4527,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4524,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4511,
											"end": 4528,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4502,
											"end": 4508,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4458,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 4458,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4458,
											"end": 4529,
											"name": "tag",
											"source": 18,
											"value": "278"
										},
										{
											"begin": 4458,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4314,
											"end": 4536,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4314,
											"end": 4536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4711,
											"name": "tag",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 4542,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4626,
											"end": 4637,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4660,
											"end": 4666,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4655,
											"end": 4658,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4648,
											"end": 4667,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4695,
											"end": 4698,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4691,
											"end": 4705,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4705,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4711,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4711,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4711,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4711,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4542,
											"end": 4711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4717,
											"end": 4945,
											"name": "tag",
											"source": 18,
											"value": "200"
										},
										{
											"begin": 4717,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4857,
											"end": 4891,
											"name": "PUSH",
											"source": 18,
											"value": "526566756E64457363726F773A2063616E206F6E6C7920636C6F736520776869"
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4851,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4841,
											"end": 4855,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4834,
											"end": 4892,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4926,
											"end": 4937,
											"name": "PUSH",
											"source": 18,
											"value": "6C65206163746976650000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4921,
											"end": 4923,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4913,
											"end": 4919,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4909,
											"end": 4924,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4902,
											"end": 4938,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4717,
											"end": 4945,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4717,
											"end": 4945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4951,
											"end": 5317,
											"name": "tag",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 4951,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5093,
											"end": 5096,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 5173,
											"end": 5176,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5114,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 5114,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5114,
											"end": 5181,
											"name": "tag",
											"source": 18,
											"value": "282"
										},
										{
											"begin": 5114,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5107,
											"end": 5181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5107,
											"end": 5181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5190,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 5279,
											"end": 5282,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5190,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "200"
										},
										{
											"begin": 5190,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5190,
											"end": 5283,
											"name": "tag",
											"source": 18,
											"value": "283"
										},
										{
											"begin": 5190,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5308,
											"end": 5310,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5303,
											"end": 5306,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5299,
											"end": 5311,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5292,
											"end": 5311,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5292,
											"end": 5311,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4951,
											"end": 5317,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4951,
											"end": 5317,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4951,
											"end": 5317,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4951,
											"end": 5317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5323,
											"end": 5742,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 5323,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5489,
											"end": 5493,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5529,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5525,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5512,
											"end": 5530,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5504,
											"end": 5530,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5504,
											"end": 5530,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5576,
											"end": 5585,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5570,
											"end": 5574,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5566,
											"end": 5586,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5562,
											"end": 5563,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5560,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5540,
											"end": 5587,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5604,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "285"
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5604,
											"end": 5735,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 5604,
											"end": 5735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5604,
											"end": 5735,
											"name": "tag",
											"source": 18,
											"value": "285"
										},
										{
											"begin": 5604,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5596,
											"end": 5735,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5596,
											"end": 5735,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5323,
											"end": 5742,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5323,
											"end": 5742,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5323,
											"end": 5742,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5323,
											"end": 5742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5748,
											"end": 5986,
											"name": "tag",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 5748,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5888,
											"end": 5922,
											"name": "PUSH",
											"source": 18,
											"value": "436F6E646974696F6E616C457363726F773A207061796565206973206E6F7420"
										},
										{
											"begin": 5884,
											"end": 5885,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5882,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5872,
											"end": 5886,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5865,
											"end": 5923,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5957,
											"end": 5978,
											"name": "PUSH",
											"source": 18,
											"value": "616C6C6F77656420746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5940,
											"end": 5955,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5933,
											"end": 5979,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5748,
											"end": 5986,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5748,
											"end": 5986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5992,
											"end": 6358,
											"name": "tag",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 5992,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6134,
											"end": 6137,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6155,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "288"
										},
										{
											"begin": 6219,
											"end": 6221,
											"name": "PUSH",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 6214,
											"end": 6217,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 6155,
											"end": 6222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6155,
											"end": 6222,
											"name": "tag",
											"source": 18,
											"value": "288"
										},
										{
											"begin": 6155,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6148,
											"end": 6222,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6148,
											"end": 6222,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6231,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "289"
										},
										{
											"begin": 6320,
											"end": 6323,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6231,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 6231,
											"end": 6324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6231,
											"end": 6324,
											"name": "tag",
											"source": 18,
											"value": "289"
										},
										{
											"begin": 6231,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6344,
											"end": 6347,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6340,
											"end": 6352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6333,
											"end": 6352,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6333,
											"end": 6352,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5992,
											"end": 6358,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5992,
											"end": 6358,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5992,
											"end": 6358,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5992,
											"end": 6358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6364,
											"end": 6783,
											"name": "tag",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 6364,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6530,
											"end": 6534,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6570,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6566,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6553,
											"end": 6571,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6545,
											"end": 6571,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6545,
											"end": 6571,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6617,
											"end": 6626,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6611,
											"end": 6615,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6607,
											"end": 6627,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6603,
											"end": 6604,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6601,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6588,
											"end": 6605,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6581,
											"end": 6628,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6645,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "291"
										},
										{
											"begin": 6771,
											"end": 6775,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6645,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 6645,
											"end": 6776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6645,
											"end": 6776,
											"name": "tag",
											"source": 18,
											"value": "291"
										},
										{
											"begin": 6645,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6637,
											"end": 6776,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6637,
											"end": 6776,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6364,
											"end": 6783,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6364,
											"end": 6783,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6364,
											"end": 6783,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6364,
											"end": 6783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6789,
											"end": 7026,
											"name": "tag",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 6789,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6929,
											"end": 6963,
											"name": "PUSH",
											"source": 18,
											"value": "526566756E64457363726F773A2063616E206F6E6C7920656E61626C65207265"
										},
										{
											"begin": 6925,
											"end": 6926,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6917,
											"end": 6923,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6913,
											"end": 6927,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6906,
											"end": 6964,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6998,
											"end": 7018,
											"name": "PUSH",
											"source": 18,
											"value": "66756E6473207768696C65206163746976650000000000000000000000000000"
										},
										{
											"begin": 6993,
											"end": 6995,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6981,
											"end": 6996,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6974,
											"end": 7019,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6789,
											"end": 7026,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6789,
											"end": 7026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7032,
											"end": 7398,
											"name": "tag",
											"source": 18,
											"value": "205"
										},
										{
											"begin": 7032,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7174,
											"end": 7177,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "294"
										},
										{
											"begin": 7259,
											"end": 7261,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 7254,
											"end": 7257,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7195,
											"end": 7262,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 7195,
											"end": 7262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7195,
											"end": 7262,
											"name": "tag",
											"source": 18,
											"value": "294"
										},
										{
											"begin": 7195,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7188,
											"end": 7262,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7188,
											"end": 7262,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7271,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "295"
										},
										{
											"begin": 7360,
											"end": 7363,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7271,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 7271,
											"end": 7364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7271,
											"end": 7364,
											"name": "tag",
											"source": 18,
											"value": "295"
										},
										{
											"begin": 7271,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7389,
											"end": 7391,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7384,
											"end": 7387,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7380,
											"end": 7392,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7373,
											"end": 7392,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7373,
											"end": 7392,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7032,
											"end": 7398,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7032,
											"end": 7398,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7032,
											"end": 7398,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7032,
											"end": 7398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7823,
											"name": "tag",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 7404,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7570,
											"end": 7574,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7608,
											"end": 7610,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7597,
											"end": 7606,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7585,
											"end": 7611,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7585,
											"end": 7611,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7651,
											"end": 7655,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7647,
											"end": 7667,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7643,
											"end": 7644,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7641,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7628,
											"end": 7645,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7621,
											"end": 7668,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7685,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "297"
										},
										{
											"begin": 7811,
											"end": 7815,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7685,
											"end": 7816,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "205"
										},
										{
											"begin": 7685,
											"end": 7816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7685,
											"end": 7816,
											"name": "tag",
											"source": 18,
											"value": "297"
										},
										{
											"begin": 7685,
											"end": 7816,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7677,
											"end": 7816,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7677,
											"end": 7816,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7823,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7823,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7823,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7404,
											"end": 7823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7829,
											"end": 8072,
											"name": "tag",
											"source": 18,
											"value": "206"
										},
										{
											"begin": 7829,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7969,
											"end": 8003,
											"name": "PUSH",
											"source": 18,
											"value": "526566756E64457363726F773A2062656E65666963696172792063616E206F6E"
										},
										{
											"begin": 7965,
											"end": 7966,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7963,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7953,
											"end": 7967,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7946,
											"end": 8004,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8038,
											"end": 8064,
											"name": "PUSH",
											"source": 18,
											"value": "6C79207769746864726177207768696C6520636C6F7365640000000000000000"
										},
										{
											"begin": 8033,
											"end": 8035,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8021,
											"end": 8036,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8014,
											"end": 8065,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7829,
											"end": 8072,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7829,
											"end": 8072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8078,
											"end": 8444,
											"name": "tag",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 8078,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8220,
											"end": 8223,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 8305,
											"end": 8307,
											"name": "PUSH",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 8300,
											"end": 8303,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8241,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 8241,
											"end": 8308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8241,
											"end": 8308,
											"name": "tag",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 8241,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8234,
											"end": 8308,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8234,
											"end": 8308,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8317,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "301"
										},
										{
											"begin": 8406,
											"end": 8409,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8317,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "206"
										},
										{
											"begin": 8317,
											"end": 8410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8317,
											"end": 8410,
											"name": "tag",
											"source": 18,
											"value": "301"
										},
										{
											"begin": 8317,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8435,
											"end": 8437,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 8430,
											"end": 8433,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8426,
											"end": 8438,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8419,
											"end": 8438,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8419,
											"end": 8438,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8078,
											"end": 8444,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8078,
											"end": 8444,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8078,
											"end": 8444,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8078,
											"end": 8444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8869,
											"name": "tag",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 8450,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8656,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8639,
											"end": 8657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8631,
											"end": 8657,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8631,
											"end": 8657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8703,
											"end": 8712,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8697,
											"end": 8701,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8693,
											"end": 8713,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8678,
											"end": 8687,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8674,
											"end": 8691,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8667,
											"end": 8714,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8731,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 8857,
											"end": 8861,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8731,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 8731,
											"end": 8862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8731,
											"end": 8862,
											"name": "tag",
											"source": 18,
											"value": "303"
										},
										{
											"begin": 8731,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8723,
											"end": 8862,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8723,
											"end": 8862,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8869,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8869,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8869,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8875,
											"end": 9100,
											"name": "tag",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 8875,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9015,
											"end": 9049,
											"name": "PUSH",
											"source": 18,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9011,
											"end": 9012,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8999,
											"end": 9013,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8992,
											"end": 9050,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9084,
											"end": 9092,
											"name": "PUSH",
											"source": 18,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9079,
											"end": 9081,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9071,
											"end": 9077,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9067,
											"end": 9082,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9060,
											"end": 9093,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8875,
											"end": 9100,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8875,
											"end": 9100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9472,
											"name": "tag",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 9106,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9248,
											"end": 9251,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9269,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "306"
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "PUSH",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 9328,
											"end": 9331,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9269,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 9269,
											"end": 9336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9269,
											"end": 9336,
											"name": "tag",
											"source": 18,
											"value": "306"
										},
										{
											"begin": 9269,
											"end": 9336,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9262,
											"end": 9336,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9262,
											"end": 9336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9345,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "307"
										},
										{
											"begin": 9434,
											"end": 9437,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9345,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 9345,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9345,
											"end": 9438,
											"name": "tag",
											"source": 18,
											"value": "307"
										},
										{
											"begin": 9345,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9463,
											"end": 9465,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9458,
											"end": 9461,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9454,
											"end": 9466,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9447,
											"end": 9466,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9447,
											"end": 9466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9472,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9472,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9472,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9106,
											"end": 9472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9478,
											"end": 9897,
											"name": "tag",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 9478,
											"end": 9897,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9644,
											"end": 9648,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9684,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9671,
											"end": 9680,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9667,
											"end": 9685,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9659,
											"end": 9685,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9659,
											"end": 9685,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9731,
											"end": 9740,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9725,
											"end": 9729,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9721,
											"end": 9741,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 9717,
											"end": 9718,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9706,
											"end": 9715,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9702,
											"end": 9719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9695,
											"end": 9742,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9759,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 9885,
											"end": 9889,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9759,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 9759,
											"end": 9890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9759,
											"end": 9890,
											"name": "tag",
											"source": 18,
											"value": "309"
										},
										{
											"begin": 9759,
											"end": 9890,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9751,
											"end": 9890,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9751,
											"end": 9890,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9478,
											"end": 9897,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9478,
											"end": 9897,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9478,
											"end": 9897,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9478,
											"end": 9897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9903,
											"end": 10133,
											"name": "tag",
											"source": 18,
											"value": "210"
										},
										{
											"begin": 9903,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10043,
											"end": 10077,
											"name": "PUSH",
											"source": 18,
											"value": "526566756E64457363726F773A2063616E206F6E6C79206465706F7369742077"
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10031,
											"end": 10037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10027,
											"end": 10041,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10020,
											"end": 10078,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10112,
											"end": 10125,
											"name": "PUSH",
											"source": 18,
											"value": "68696C6520616374697665000000000000000000000000000000000000000000"
										},
										{
											"begin": 10107,
											"end": 10109,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10099,
											"end": 10105,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10095,
											"end": 10110,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10088,
											"end": 10126,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9903,
											"end": 10133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9903,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10139,
											"end": 10505,
											"name": "tag",
											"source": 18,
											"value": "211"
										},
										{
											"begin": 10139,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10281,
											"end": 10284,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10302,
											"end": 10369,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 10366,
											"end": 10368,
											"name": "PUSH",
											"source": 18,
											"value": "2B"
										},
										{
											"begin": 10361,
											"end": 10364,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10302,
											"end": 10369,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 10302,
											"end": 10369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10302,
											"end": 10369,
											"name": "tag",
											"source": 18,
											"value": "312"
										},
										{
											"begin": 10302,
											"end": 10369,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10295,
											"end": 10369,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10295,
											"end": 10369,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10378,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "313"
										},
										{
											"begin": 10467,
											"end": 10470,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10378,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "210"
										},
										{
											"begin": 10378,
											"end": 10471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10378,
											"end": 10471,
											"name": "tag",
											"source": 18,
											"value": "313"
										},
										{
											"begin": 10378,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10496,
											"end": 10498,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 10491,
											"end": 10494,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10487,
											"end": 10499,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10480,
											"end": 10499,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10480,
											"end": 10499,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10139,
											"end": 10505,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10139,
											"end": 10505,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10139,
											"end": 10505,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10139,
											"end": 10505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10511,
											"end": 10930,
											"name": "tag",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 10511,
											"end": 10930,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10677,
											"end": 10681,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10715,
											"end": 10717,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10704,
											"end": 10713,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10700,
											"end": 10718,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10692,
											"end": 10718,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10692,
											"end": 10718,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10764,
											"end": 10773,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10758,
											"end": 10762,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10754,
											"end": 10774,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 10751,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10748,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10735,
											"end": 10752,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10728,
											"end": 10775,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10792,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "315"
										},
										{
											"begin": 10918,
											"end": 10922,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10792,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "211"
										},
										{
											"begin": 10792,
											"end": 10923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10792,
											"end": 10923,
											"name": "tag",
											"source": 18,
											"value": "315"
										},
										{
											"begin": 10792,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10784,
											"end": 10923,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10784,
											"end": 10923,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10511,
											"end": 10930,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10511,
											"end": 10930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10511,
											"end": 10930,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10511,
											"end": 10930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10936,
											"end": 11118,
											"name": "tag",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 10936,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11076,
											"end": 11110,
											"name": "PUSH",
											"source": 18,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11072,
											"end": 11073,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11064,
											"end": 11070,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11060,
											"end": 11074,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11053,
											"end": 11111,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10936,
											"end": 11118,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10936,
											"end": 11118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11124,
											"end": 11490,
											"name": "tag",
											"source": 18,
											"value": "213"
										},
										{
											"begin": 11124,
											"end": 11490,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11266,
											"end": 11269,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11287,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "318"
										},
										{
											"begin": 11351,
											"end": 11353,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11346,
											"end": 11349,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11287,
											"end": 11354,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 11287,
											"end": 11354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11287,
											"end": 11354,
											"name": "tag",
											"source": 18,
											"value": "318"
										},
										{
											"begin": 11287,
											"end": 11354,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11280,
											"end": 11354,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11280,
											"end": 11354,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11363,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 11452,
											"end": 11455,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11363,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 11363,
											"end": 11456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11363,
											"end": 11456,
											"name": "tag",
											"source": 18,
											"value": "319"
										},
										{
											"begin": 11363,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11481,
											"end": 11483,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11476,
											"end": 11479,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11472,
											"end": 11484,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11465,
											"end": 11484,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11465,
											"end": 11484,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11124,
											"end": 11490,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11124,
											"end": 11490,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11124,
											"end": 11490,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11124,
											"end": 11490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11496,
											"end": 11915,
											"name": "tag",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 11496,
											"end": 11915,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11662,
											"end": 11666,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11700,
											"end": 11702,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11689,
											"end": 11698,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11685,
											"end": 11703,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11677,
											"end": 11703,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11677,
											"end": 11703,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11749,
											"end": 11758,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11743,
											"end": 11747,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11739,
											"end": 11759,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11735,
											"end": 11736,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11724,
											"end": 11733,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11720,
											"end": 11737,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11713,
											"end": 11760,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11777,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 11903,
											"end": 11907,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11777,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "213"
										},
										{
											"begin": 11777,
											"end": 11908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11777,
											"end": 11908,
											"name": "tag",
											"source": 18,
											"value": "321"
										},
										{
											"begin": 11777,
											"end": 11908,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11769,
											"end": 11908,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11769,
											"end": 11908,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11496,
											"end": 11915,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11496,
											"end": 11915,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11496,
											"end": 11915,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11496,
											"end": 11915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11921,
											"end": 12100,
											"name": "tag",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 11921,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12061,
											"end": 12092,
											"name": "PUSH",
											"source": 18,
											"value": "416464726573733A20696E73756666696369656E742062616C616E6365000000"
										},
										{
											"begin": 12057,
											"end": 12058,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12049,
											"end": 12055,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12045,
											"end": 12059,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12038,
											"end": 12093,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11921,
											"end": 12100,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11921,
											"end": 12100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "tag",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12248,
											"end": 12251,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12269,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 12333,
											"end": 12335,
											"name": "PUSH",
											"source": 18,
											"value": "1D"
										},
										{
											"begin": 12328,
											"end": 12331,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12269,
											"end": 12336,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 12269,
											"end": 12336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12269,
											"end": 12336,
											"name": "tag",
											"source": 18,
											"value": "324"
										},
										{
											"begin": 12269,
											"end": 12336,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12262,
											"end": 12336,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12262,
											"end": 12336,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12345,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12345,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 12345,
											"end": 12438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12345,
											"end": 12438,
											"name": "tag",
											"source": 18,
											"value": "325"
										},
										{
											"begin": 12345,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12463,
											"end": 12465,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12458,
											"end": 12461,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12454,
											"end": 12466,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12447,
											"end": 12466,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12447,
											"end": 12466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12106,
											"end": 12472,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12106,
											"end": 12472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "tag",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12644,
											"end": 12648,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12682,
											"end": 12684,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12671,
											"end": 12680,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12659,
											"end": 12685,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12659,
											"end": 12685,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12731,
											"end": 12740,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12725,
											"end": 12729,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12721,
											"end": 12741,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 12717,
											"end": 12718,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12706,
											"end": 12715,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12702,
											"end": 12719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12695,
											"end": 12742,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12759,
											"end": 12890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 12885,
											"end": 12889,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12759,
											"end": 12890,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 12759,
											"end": 12890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12759,
											"end": 12890,
											"name": "tag",
											"source": 18,
											"value": "327"
										},
										{
											"begin": 12759,
											"end": 12890,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12751,
											"end": 12890,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12751,
											"end": 12890,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12478,
											"end": 12897,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12478,
											"end": 12897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12903,
											"end": 13050,
											"name": "tag",
											"source": 18,
											"value": "216"
										},
										{
											"begin": 12903,
											"end": 13050,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13004,
											"end": 13015,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13041,
											"end": 13044,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13026,
											"end": 13044,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13026,
											"end": 13044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12903,
											"end": 13050,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12903,
											"end": 13050,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12903,
											"end": 13050,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12903,
											"end": 13050,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12903,
											"end": 13050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13056,
											"end": 13170,
											"name": "tag",
											"source": 18,
											"value": "217"
										},
										{
											"begin": 13056,
											"end": 13170,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13056,
											"end": 13170,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13056,
											"end": 13170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13176,
											"end": 13574,
											"name": "tag",
											"source": 18,
											"value": "218"
										},
										{
											"begin": 13176,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13335,
											"end": 13338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 13437,
											"end": 13438,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13432,
											"end": 13435,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13356,
											"end": 13439,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "216"
										},
										{
											"begin": 13356,
											"end": 13439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13356,
											"end": 13439,
											"name": "tag",
											"source": 18,
											"value": "331"
										},
										{
											"begin": 13356,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13349,
											"end": 13439,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13349,
											"end": 13439,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13448,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 13537,
											"end": 13540,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13448,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "217"
										},
										{
											"begin": 13448,
											"end": 13541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13448,
											"end": 13541,
											"name": "tag",
											"source": 18,
											"value": "332"
										},
										{
											"begin": 13448,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13566,
											"end": 13567,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13561,
											"end": 13564,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13557,
											"end": 13568,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13550,
											"end": 13568,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13550,
											"end": 13568,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13176,
											"end": 13574,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13176,
											"end": 13574,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13176,
											"end": 13574,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13176,
											"end": 13574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13580,
											"end": 13959,
											"name": "tag",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 13580,
											"end": 13959,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13764,
											"end": 13767,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13786,
											"end": 13933,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 13929,
											"end": 13932,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13786,
											"end": 13933,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "218"
										},
										{
											"begin": 13786,
											"end": 13933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13786,
											"end": 13933,
											"name": "tag",
											"source": 18,
											"value": "334"
										},
										{
											"begin": 13786,
											"end": 13933,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13779,
											"end": 13933,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13779,
											"end": 13933,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13950,
											"end": 13953,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13943,
											"end": 13953,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13943,
											"end": 13953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13580,
											"end": 13959,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13580,
											"end": 13959,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13580,
											"end": 13959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13580,
											"end": 13959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13965,
											"end": 14210,
											"name": "tag",
											"source": 18,
											"value": "219"
										},
										{
											"begin": 13965,
											"end": 14210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14105,
											"end": 14139,
											"name": "PUSH",
											"source": 18,
											"value": "416464726573733A20756E61626C6520746F2073656E642076616C75652C2072"
										},
										{
											"begin": 14101,
											"end": 14102,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14093,
											"end": 14099,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14089,
											"end": 14103,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14082,
											"end": 14140,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14174,
											"end": 14202,
											"name": "PUSH",
											"source": 18,
											"value": "6563697069656E74206D61792068617665207265766572746564000000000000"
										},
										{
											"begin": 14169,
											"end": 14171,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14161,
											"end": 14167,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14157,
											"end": 14172,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14150,
											"end": 14203,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13965,
											"end": 14210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13965,
											"end": 14210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14216,
											"end": 14582,
											"name": "tag",
											"source": 18,
											"value": "220"
										},
										{
											"begin": 14216,
											"end": 14582,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14358,
											"end": 14361,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14379,
											"end": 14446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 14443,
											"end": 14445,
											"name": "PUSH",
											"source": 18,
											"value": "3A"
										},
										{
											"begin": 14438,
											"end": 14441,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14379,
											"end": 14446,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "199"
										},
										{
											"begin": 14379,
											"end": 14446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14379,
											"end": 14446,
											"name": "tag",
											"source": 18,
											"value": "337"
										},
										{
											"begin": 14379,
											"end": 14446,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14372,
											"end": 14446,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14372,
											"end": 14446,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14455,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 14544,
											"end": 14547,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14455,
											"end": 14548,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "219"
										},
										{
											"begin": 14455,
											"end": 14548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14455,
											"end": 14548,
											"name": "tag",
											"source": 18,
											"value": "338"
										},
										{
											"begin": 14455,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14573,
											"end": 14575,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14568,
											"end": 14571,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14564,
											"end": 14576,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14557,
											"end": 14576,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14557,
											"end": 14576,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14216,
											"end": 14582,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14216,
											"end": 14582,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14216,
											"end": 14582,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14216,
											"end": 14582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14588,
											"end": 15007,
											"name": "tag",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 14588,
											"end": 15007,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14754,
											"end": 14758,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14792,
											"end": 14794,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14781,
											"end": 14790,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14777,
											"end": 14795,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14769,
											"end": 14795,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14769,
											"end": 14795,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14841,
											"end": 14850,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14835,
											"end": 14839,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14831,
											"end": 14851,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14827,
											"end": 14828,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14816,
											"end": 14825,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14812,
											"end": 14829,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14805,
											"end": 14852,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14869,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "340"
										},
										{
											"begin": 14995,
											"end": 14999,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14869,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "220"
										},
										{
											"begin": 14869,
											"end": 15000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14869,
											"end": 15000,
											"name": "tag",
											"source": 18,
											"value": "340"
										},
										{
											"begin": 14869,
											"end": 15000,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14861,
											"end": 15000,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14861,
											"end": 15000,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14588,
											"end": 15007,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14588,
											"end": 15007,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14588,
											"end": 15007,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14588,
											"end": 15007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15013,
											"end": 15193,
											"name": "tag",
											"source": 18,
											"value": "221"
										},
										{
											"begin": 15013,
											"end": 15193,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15061,
											"end": 15138,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15058,
											"end": 15059,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15051,
											"end": 15139,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15158,
											"end": 15162,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 15155,
											"end": 15156,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 15148,
											"end": 15163,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15182,
											"end": 15186,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 15179,
											"end": 15180,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15172,
											"end": 15187,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 15199,
											"end": 15390,
											"name": "tag",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 15199,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15239,
											"end": 15242,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15258,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 15276,
											"end": 15277,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15258,
											"end": 15278,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 15258,
											"end": 15278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15258,
											"end": 15278,
											"name": "tag",
											"source": 18,
											"value": "343"
										},
										{
											"begin": 15258,
											"end": 15278,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15253,
											"end": 15278,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15253,
											"end": 15278,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15292,
											"end": 15312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "344"
										},
										{
											"begin": 15310,
											"end": 15311,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15292,
											"end": 15312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 15292,
											"end": 15312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15292,
											"end": 15312,
											"name": "tag",
											"source": 18,
											"value": "344"
										},
										{
											"begin": 15292,
											"end": 15312,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15287,
											"end": 15312,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15287,
											"end": 15312,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15335,
											"end": 15336,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15332,
											"end": 15333,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15328,
											"end": 15337,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15321,
											"end": 15337,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15321,
											"end": 15337,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15356,
											"end": 15359,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15353,
											"end": 15354,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15350,
											"end": 15360,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 15347,
											"end": 15383,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 15347,
											"end": 15383,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 15347,
											"end": 15383,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "221"
										},
										{
											"begin": 15363,
											"end": 15381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "tag",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 15363,
											"end": 15381,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15347,
											"end": 15383,
											"name": "tag",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 15347,
											"end": 15383,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15199,
											"end": 15390,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15199,
											"end": 15390,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15199,
											"end": 15390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15199,
											"end": 15390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15199,
											"end": 15390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol",
								"@openzeppelin/contracts/utils/escrow/Escrow.sol",
								"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/abstractions/finalizable.sol",
								"crowdsale/abstractions/refundable.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/distribution/finalizableCrowdsale.sol",
								"crowdsale/distribution/refundableCrowdsale.sol",
								"crowdsale/validation/timedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"beneficiaryWithdraw()": "9af6549a",
							"close()": "43d726d6",
							"deposit(address)": "f340fa01",
							"depositsOf(address)": "e3a9db1a",
							"enableRefunds()": "8c52dc41",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"state()": "c19d93fb",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9",
							"withdrawalAllowed(address)": "685ca194"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"beneficiary_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RefundsClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RefundsEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiaryWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum RefundEscrow.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawalAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Escrow that holds funds for a beneficiary, deposited from multiple parties.Intended usage: See {Escrow}. Same usage guidelines apply here.The owner account (that is, the contract that instantiates this contract) may deposit, close the deposit period, and allow for either withdrawal by the beneficiary, or refunds to the depositors. All interactions with `RefundEscrow` will be made through the owner contract.\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"returns\":{\"_0\":\"The beneficiary of the escrow.\"}},\"beneficiaryWithdraw()\":{\"details\":\"Withdraws the beneficiary's funds.\"},\"close()\":{\"details\":\"Allows for the beneficiary to withdraw their funds, rejecting further deposits.\"},\"constructor\":{\"details\":\"Constructor.\",\"params\":{\"beneficiary_\":\"The beneficiary of the deposits.\"}},\"deposit(address)\":{\"details\":\"Stores funds that may later be refunded.\",\"params\":{\"refundee\":\"The address funds will be sent to if a refund occurs.\"}},\"enableRefunds()\":{\"details\":\"Allows for refunds to take place, rejecting further deposits.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"state()\":{\"returns\":{\"_0\":\"The current state of the escrow.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"The address whose funds will be withdrawn and transferred to. Emits a {Withdrawn} event.\"}},\"withdrawalAllowed(address)\":{\"details\":\"Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a 'payee' argument, but we ignore it here since the condition is global, not per-payee.\"}},\"title\":\"RefundEscrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":\"RefundEscrow\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0xf71d228abc2df1a5020ba208b237718e22cad6b3532f5e8f1021f4f15068e290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e42465b2c37a5d9286678ad167ed75691cb7bd2f6abcb677e7820ac58263a723\",\"dweb:/ipfs/QmdxVmnFC6ELiJLcQauqJxR353hjT2eNQ5ELHv1j46KeHi\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xabdff382f93edb8bd94b227798fc0daf64abe891403e1e525f5870c2cae8bf65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402701e1bf7c6314463211809668b51986f27695b5d552dcd51aed0730c66680\",\"dweb:/ipfs/QmRLv8Tr9ZV7QABCSr2ri4N1EsKGebFC87ti9794GMGLiL\"]},\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xcfcaa88a5cbc8d21c14550a6051708a03e902ded254fc0b0bbd44500386d3860\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d7707cbf9bbbf30893035c3c18d74edb42ab87b2ac95c61c62d71beff18a532\",\"dweb:/ipfs/QmYQrGDB3PoTMFU54FNC5EPToQo7uzwmXhEYgVnjciYnV5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol:RefundEscrow",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1188,
								"contract": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol:RefundEscrow",
								"label": "_deposits",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1278,
								"contract": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol:RefundEscrow",
								"label": "_state",
								"offset": 0,
								"slot": "2",
								"type": "t_enum(State)1271"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_enum(State)1271": {
								"encoding": "inplace",
								"label": "enum RefundEscrow.State",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol",
								"@openzeppelin/contracts/utils/escrow/Escrow.sol",
								"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"crowdsale/abstractions/finalizable.sol",
								"crowdsale/abstractions/refundable.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/distribution/finalizableCrowdsale.sol",
								"crowdsale/distribution/refundableCrowdsale.sol",
								"crowdsale/validation/timedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/abstractions/finalizable.sol": {
				"FinalizableContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "ContractFinalized",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "finalize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of TimedCrowdsale with a one-off finalization action, where one can do extra work after finishing.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor, takes crowdsale opening and closing times."
							},
							"finalize()": {
								"details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
							},
							"finalized()": {
								"returns": {
									"_0": "true if the crowdsale is finalized, false otherwise."
								}
							}
						},
						"title": "FinalizableCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"finalize()": "4bb278f3",
							"finalized()": "b3f05b97"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractFinalized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of TimedCrowdsale with a one-off finalization action, where one can do extra work after finishing.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor, takes crowdsale opening and closing times.\"},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"finalized()\":{\"returns\":{\"_0\":\"true if the crowdsale is finalized, false otherwise.\"}}},\"title\":\"FinalizableCrowdsale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/abstractions/finalizable.sol\":\"FinalizableContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/abstractions/finalizable.sol\":{\"keccak256\":\"0x3bb9d2a3ae00b599fa092fb4162edda0412192dbf3fa14593e4ea4b69d3d8311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54ecc787ab1d357e0eb2bbaca78cefd416351877e38043e4d07ac43e0004d89a\",\"dweb:/ipfs/QmcWKfhqeJShrKZ1eQxGa2ZEqr33gpkpg9zfzduuvN9yzq\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]},\"crowdsale/validation/timedCrowdsale.sol\":{\"keccak256\":\"0x175f2234e9a0ea1bb28e9f79968b489b180559cdbac00cc5353c70ce1995ea44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28428ac576879268e5b2798b6bc5d841765a75aced5baca4b256a7c8b3a7af1d\",\"dweb:/ipfs/QmU5crGLqDoAXaBuTTQSHn1PMwijeSL6Jw9s5ZQenPM5o4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1759,
								"contract": "crowdsale/abstractions/finalizable.sol:FinalizableContract",
								"label": "_finalized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/abstractions/refundable.sol": {
				"RefundableContract": {
					"abi": [
						{
							"inputs": [],
							"name": "goal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users getting a refund if goal is not met. Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor, creates RefundEscrow.",
								"params": {
									"inGoal": "Funding goal"
								}
							},
							"goal()": {
								"returns": {
									"_0": "minimum amount of funds to be raised in wei."
								}
							}
						},
						"title": "RefundableCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"goal()": "40193883"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users getting a refund if goal is not met. Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor, creates RefundEscrow.\",\"params\":{\"inGoal\":\"Funding goal\"}},\"goal()\":{\"returns\":{\"_0\":\"minimum amount of funds to be raised in wei.\"}}},\"title\":\"RefundableCrowdsale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/abstractions/refundable.sol\":\"RefundableContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0xf71d228abc2df1a5020ba208b237718e22cad6b3532f5e8f1021f4f15068e290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e42465b2c37a5d9286678ad167ed75691cb7bd2f6abcb677e7820ac58263a723\",\"dweb:/ipfs/QmdxVmnFC6ELiJLcQauqJxR353hjT2eNQ5ELHv1j46KeHi\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xabdff382f93edb8bd94b227798fc0daf64abe891403e1e525f5870c2cae8bf65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402701e1bf7c6314463211809668b51986f27695b5d552dcd51aed0730c66680\",\"dweb:/ipfs/QmRLv8Tr9ZV7QABCSr2ri4N1EsKGebFC87ti9794GMGLiL\"]},\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xcfcaa88a5cbc8d21c14550a6051708a03e902ded254fc0b0bbd44500386d3860\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d7707cbf9bbbf30893035c3c18d74edb42ab87b2ac95c61c62d71beff18a532\",\"dweb:/ipfs/QmYQrGDB3PoTMFU54FNC5EPToQo7uzwmXhEYgVnjciYnV5\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/abstractions/refundable.sol\":{\"keccak256\":\"0x7ef134dcbf3bf9e35cf184b88cd8f487482cf6247b80617f0d59cf517cb949fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03196ab2bf6d9b40d6b592ba994977956447a47818a7886428698d71c8de988\",\"dweb:/ipfs/QmPwE4in6asu2B5VrBXP7bQaSxKYwrjrSNRgN1uAtmMMYz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1819,
								"contract": "crowdsale/abstractions/refundable.sol:RefundableContract",
								"label": "_goal",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1822,
								"contract": "crowdsale/abstractions/refundable.sol:RefundableContract",
								"label": "_escrow",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(RefundEscrow)1437"
							}
						],
						"types": {
							"t_contract(RefundEscrow)1437": {
								"encoding": "inplace",
								"label": "contract RefundEscrow",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"inRate": "Number of token units a buyer gets per wei",
									"inToken": "Address of the token being sold",
									"inWallet": "Address where collected funds will be forwarded to"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"inRate\":\"Number of token units a buyer gets per wei\",\"inToken\":\"Address of the token being sold\",\"inWallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1932,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)363"
							},
							{
								"astId": 1934,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1936,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1938,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)363": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/distribution/finalizableCrowdsale.sol": {
				"FinalizableCrowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "ContractFinalized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "prevClosingTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newClosingTime",
									"type": "uint256"
								}
							],
							"name": "TimedCrowdsaleExtended",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasClosed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Extension of TimedCrowdsale with a one-off finalization action, where one can do extra work after finishing.",
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"params": {
									"newClosingTime": "new closing time",
									"prevClosingTime": "old closing time"
								}
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"closingTime()": {
								"returns": {
									"_0": "the crowdsale closing time."
								}
							},
							"constructor": {
								"details": "Constructor, takes crowdsale opening and closing times.",
								"params": {
									"inClosingTime": "Crowdsale closing time",
									"inOpeningTime": "Crowdsale opening time",
									"inRate": "Crowdsale rate",
									"inToken": "Crowdsale token",
									"inWallet": "Crowdsale wallet"
								}
							},
							"finalize()": {
								"details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
							},
							"finalized()": {
								"returns": {
									"_0": "true if the crowdsale is finalized, false otherwise."
								}
							},
							"hasClosed()": {
								"details": "Checks whether the period in which the crowdsale is open has already elapsed.",
								"returns": {
									"_0": "Whether crowdsale period has elapsed"
								}
							},
							"isOpen()": {
								"returns": {
									"_0": "true if the crowdsale is open, false otherwise."
								}
							},
							"openingTime()": {
								"returns": {
									"_0": "the crowdsale opening time."
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "FinalizableCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"closingTime()": "4b6753bc",
							"finalize()": "4bb278f3",
							"finalized()": "b3f05b97",
							"hasClosed()": "1515bc2b",
							"isOpen()": "47535d7b",
							"openingTime()": "b7a8807c",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of TimedCrowdsale with a one-off finalization action, where one can do extra work after finishing.\",\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"params\":{\"newClosingTime\":\"new closing time\",\"prevClosingTime\":\"old closing time\"}},\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"closingTime()\":{\"returns\":{\"_0\":\"the crowdsale closing time.\"}},\"constructor\":{\"details\":\"Constructor, takes crowdsale opening and closing times.\",\"params\":{\"inClosingTime\":\"Crowdsale closing time\",\"inOpeningTime\":\"Crowdsale opening time\",\"inRate\":\"Crowdsale rate\",\"inToken\":\"Crowdsale token\",\"inWallet\":\"Crowdsale wallet\"}},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"finalized()\":{\"returns\":{\"_0\":\"true if the crowdsale is finalized, false otherwise.\"}},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"isOpen()\":{\"returns\":{\"_0\":\"true if the crowdsale is open, false otherwise.\"}},\"openingTime()\":{\"returns\":{\"_0\":\"the crowdsale opening time.\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"FinalizableCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"notice\":\"Event for crowdsale extending\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/distribution/finalizableCrowdsale.sol\":\"FinalizableCrowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/abstractions/finalizable.sol\":{\"keccak256\":\"0x3bb9d2a3ae00b599fa092fb4162edda0412192dbf3fa14593e4ea4b69d3d8311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54ecc787ab1d357e0eb2bbaca78cefd416351877e38043e4d07ac43e0004d89a\",\"dweb:/ipfs/QmcWKfhqeJShrKZ1eQxGa2ZEqr33gpkpg9zfzduuvN9yzq\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]},\"crowdsale/distribution/finalizableCrowdsale.sol\":{\"keccak256\":\"0xe0218c80b8d1cf9a38b3be04a338b3f506cdd744ff086d090973dd9ce5c358c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e2b7e3fef5791dece333b88f34f4752a68a12947b2d6d8253472e2fec45401f\",\"dweb:/ipfs/QmX9zKVpV31wvgX5WxqpiNg9F8ZW1nRT3ALhrx5vAuQvzL\"]},\"crowdsale/validation/timedCrowdsale.sol\":{\"keccak256\":\"0x175f2234e9a0ea1bb28e9f79968b489b180559cdbac00cc5353c70ce1995ea44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28428ac576879268e5b2798b6bc5d841765a75aced5baca4b256a7c8b3a7af1d\",\"dweb:/ipfs/QmU5crGLqDoAXaBuTTQSHn1PMwijeSL6Jw9s5ZQenPM5o4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "crowdsale/distribution/finalizableCrowdsale.sol:FinalizableCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1932,
								"contract": "crowdsale/distribution/finalizableCrowdsale.sol:FinalizableCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)363"
							},
							{
								"astId": 1934,
								"contract": "crowdsale/distribution/finalizableCrowdsale.sol:FinalizableCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1936,
								"contract": "crowdsale/distribution/finalizableCrowdsale.sol:FinalizableCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1938,
								"contract": "crowdsale/distribution/finalizableCrowdsale.sol:FinalizableCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2403,
								"contract": "crowdsale/distribution/finalizableCrowdsale.sol:FinalizableCrowdsale",
								"label": "_openingTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2405,
								"contract": "crowdsale/distribution/finalizableCrowdsale.sol:FinalizableCrowdsale",
								"label": "_closingTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1759,
								"contract": "crowdsale/distribution/finalizableCrowdsale.sol:FinalizableCrowdsale",
								"label": "_finalized",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)363": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"notice": "Event for crowdsale extending"
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/distribution/refundableCrowdsale.sol": {
				"RefundableCrowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "ContractFinalized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "prevClosingTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newClosingTime",
									"type": "uint256"
								}
							],
							"name": "TimedCrowdsaleExtended",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "refundee",
									"type": "address"
								}
							],
							"name": "claimRefund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "goal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "goalReached",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasClosed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users getting a refund if goal is not met. Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.",
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"params": {
									"newClosingTime": "new closing time",
									"prevClosingTime": "old closing time"
								}
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"claimRefund(address)": {
								"details": "Investors can claim refunds here if crowdsale is unsuccessful.",
								"params": {
									"refundee": "Whose refund will be claimed."
								}
							},
							"closingTime()": {
								"returns": {
									"_0": "the crowdsale closing time."
								}
							},
							"constructor": {
								"details": "Constructor, creates RefundEscrow.",
								"params": {
									"inGoal": "Funding goal"
								}
							},
							"finalize()": {
								"details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
							},
							"finalized()": {
								"returns": {
									"_0": "true if the crowdsale is finalized, false otherwise."
								}
							},
							"goal()": {
								"returns": {
									"_0": "minimum amount of funds to be raised in wei."
								}
							},
							"goalReached()": {
								"details": "Checks whether funding goal was reached.",
								"returns": {
									"_0": "Whether funding goal was reached"
								}
							},
							"hasClosed()": {
								"details": "Checks whether the period in which the crowdsale is open has already elapsed.",
								"returns": {
									"_0": "Whether crowdsale period has elapsed"
								}
							},
							"isOpen()": {
								"returns": {
									"_0": "true if the crowdsale is open, false otherwise."
								}
							},
							"openingTime()": {
								"returns": {
									"_0": "the crowdsale opening time."
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "RefundableCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"claimRefund(address)": "bffa55d5",
							"closingTime()": "4b6753bc",
							"finalize()": "4bb278f3",
							"finalized()": "b3f05b97",
							"goal()": "40193883",
							"goalReached()": "7d3d6522",
							"hasClosed()": "1515bc2b",
							"isOpen()": "47535d7b",
							"openingTime()": "b7a8807c",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"ContractFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users getting a refund if goal is not met. Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens.\",\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"params\":{\"newClosingTime\":\"new closing time\",\"prevClosingTime\":\"old closing time\"}},\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"claimRefund(address)\":{\"details\":\"Investors can claim refunds here if crowdsale is unsuccessful.\",\"params\":{\"refundee\":\"Whose refund will be claimed.\"}},\"closingTime()\":{\"returns\":{\"_0\":\"the crowdsale closing time.\"}},\"constructor\":{\"details\":\"Constructor, creates RefundEscrow.\",\"params\":{\"inGoal\":\"Funding goal\"}},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"finalized()\":{\"returns\":{\"_0\":\"true if the crowdsale is finalized, false otherwise.\"}},\"goal()\":{\"returns\":{\"_0\":\"minimum amount of funds to be raised in wei.\"}},\"goalReached()\":{\"details\":\"Checks whether funding goal was reached.\",\"returns\":{\"_0\":\"Whether funding goal was reached\"}},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"isOpen()\":{\"returns\":{\"_0\":\"true if the crowdsale is open, false otherwise.\"}},\"openingTime()\":{\"returns\":{\"_0\":\"the crowdsale opening time.\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"RefundableCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"notice\":\"Event for crowdsale extending\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/distribution/refundableCrowdsale.sol\":\"RefundableCrowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0xf71d228abc2df1a5020ba208b237718e22cad6b3532f5e8f1021f4f15068e290\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e42465b2c37a5d9286678ad167ed75691cb7bd2f6abcb677e7820ac58263a723\",\"dweb:/ipfs/QmdxVmnFC6ELiJLcQauqJxR353hjT2eNQ5ELHv1j46KeHi\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xabdff382f93edb8bd94b227798fc0daf64abe891403e1e525f5870c2cae8bf65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402701e1bf7c6314463211809668b51986f27695b5d552dcd51aed0730c66680\",\"dweb:/ipfs/QmRLv8Tr9ZV7QABCSr2ri4N1EsKGebFC87ti9794GMGLiL\"]},\"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xcfcaa88a5cbc8d21c14550a6051708a03e902ded254fc0b0bbd44500386d3860\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d7707cbf9bbbf30893035c3c18d74edb42ab87b2ac95c61c62d71beff18a532\",\"dweb:/ipfs/QmYQrGDB3PoTMFU54FNC5EPToQo7uzwmXhEYgVnjciYnV5\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/abstractions/finalizable.sol\":{\"keccak256\":\"0x3bb9d2a3ae00b599fa092fb4162edda0412192dbf3fa14593e4ea4b69d3d8311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54ecc787ab1d357e0eb2bbaca78cefd416351877e38043e4d07ac43e0004d89a\",\"dweb:/ipfs/QmcWKfhqeJShrKZ1eQxGa2ZEqr33gpkpg9zfzduuvN9yzq\"]},\"crowdsale/abstractions/refundable.sol\":{\"keccak256\":\"0x7ef134dcbf3bf9e35cf184b88cd8f487482cf6247b80617f0d59cf517cb949fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03196ab2bf6d9b40d6b592ba994977956447a47818a7886428698d71c8de988\",\"dweb:/ipfs/QmPwE4in6asu2B5VrBXP7bQaSxKYwrjrSNRgN1uAtmMMYz\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]},\"crowdsale/distribution/finalizableCrowdsale.sol\":{\"keccak256\":\"0xe0218c80b8d1cf9a38b3be04a338b3f506cdd744ff086d090973dd9ce5c358c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e2b7e3fef5791dece333b88f34f4752a68a12947b2d6d8253472e2fec45401f\",\"dweb:/ipfs/QmX9zKVpV31wvgX5WxqpiNg9F8ZW1nRT3ALhrx5vAuQvzL\"]},\"crowdsale/distribution/refundableCrowdsale.sol\":{\"keccak256\":\"0x6af28020637d7d214e8b92d41424f9ad95c59c7cb73796b7f4d79552a5731968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf4980d9976d11e1a2bbe900ba3bf416c6018967281751471d463ca11e5e1419\",\"dweb:/ipfs/QmR7XGeSe7aiS97xtsSoGXtFT4cuxXGFdSSdAXRPvNorhf\"]},\"crowdsale/validation/timedCrowdsale.sol\":{\"keccak256\":\"0x175f2234e9a0ea1bb28e9f79968b489b180559cdbac00cc5353c70ce1995ea44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28428ac576879268e5b2798b6bc5d841765a75aced5baca4b256a7c8b3a7af1d\",\"dweb:/ipfs/QmU5crGLqDoAXaBuTTQSHn1PMwijeSL6Jw9s5ZQenPM5o4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1932,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)363"
							},
							{
								"astId": 1934,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1936,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1938,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2403,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_openingTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2405,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_closingTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1759,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_finalized",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1819,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_goal",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1822,
								"contract": "crowdsale/distribution/refundableCrowdsale.sol:RefundableCrowdsale",
								"label": "_escrow",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(RefundEscrow)1437"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)363": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(RefundEscrow)1437": {
								"encoding": "inplace",
								"label": "contract RefundEscrow",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"notice": "Event for crowdsale extending"
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/validation/timedCrowdsale.sol": {
				"TimedCrowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "prevClosingTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newClosingTime",
									"type": "uint256"
								}
							],
							"name": "TimedCrowdsaleExtended",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "closingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hasClosed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "openingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale accepting contributions only within a time frame.",
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"params": {
									"newClosingTime": "new closing time",
									"prevClosingTime": "old closing time"
								}
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"closingTime()": {
								"returns": {
									"_0": "the crowdsale closing time."
								}
							},
							"constructor": {
								"details": "Constructor, takes crowdsale opening and closing times.",
								"params": {
									"inClosingTime": "Crowdsale closing time",
									"inOpeningTime": "Crowdsale opening time"
								}
							},
							"hasClosed()": {
								"details": "Checks whether the period in which the crowdsale is open has already elapsed.",
								"returns": {
									"_0": "Whether crowdsale period has elapsed"
								}
							},
							"isOpen()": {
								"returns": {
									"_0": "true if the crowdsale is open, false otherwise."
								}
							},
							"openingTime()": {
								"returns": {
									"_0": "the crowdsale opening time."
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "TimedCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"closingTime()": "4b6753bc",
							"hasClosed()": "1515bc2b",
							"isOpen()": "47535d7b",
							"openingTime()": "b7a8807c",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale accepting contributions only within a time frame.\",\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"params\":{\"newClosingTime\":\"new closing time\",\"prevClosingTime\":\"old closing time\"}},\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"closingTime()\":{\"returns\":{\"_0\":\"the crowdsale closing time.\"}},\"constructor\":{\"details\":\"Constructor, takes crowdsale opening and closing times.\",\"params\":{\"inClosingTime\":\"Crowdsale closing time\",\"inOpeningTime\":\"Crowdsale opening time\"}},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"returns\":{\"_0\":\"Whether crowdsale period has elapsed\"}},\"isOpen()\":{\"returns\":{\"_0\":\"true if the crowdsale is open, false otherwise.\"}},\"openingTime()\":{\"returns\":{\"_0\":\"the crowdsale opening time.\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"TimedCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TimedCrowdsaleExtended(uint256,uint256)\":{\"notice\":\"Event for crowdsale extending\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/validation/timedCrowdsale.sol\":\"TimedCrowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]},\"crowdsale/validation/timedCrowdsale.sol\":{\"keccak256\":\"0x175f2234e9a0ea1bb28e9f79968b489b180559cdbac00cc5353c70ce1995ea44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28428ac576879268e5b2798b6bc5d841765a75aced5baca4b256a7c8b3a7af1d\",\"dweb:/ipfs/QmU5crGLqDoAXaBuTTQSHn1PMwijeSL6Jw9s5ZQenPM5o4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1932,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)363"
							},
							{
								"astId": 1934,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 1936,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1938,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2403,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_openingTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2405,
								"contract": "crowdsale/validation/timedCrowdsale.sol:TimedCrowdsale",
								"label": "_closingTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)363": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TimedCrowdsaleExtended(uint256,uint256)": {
								"notice": "Event for crowdsale extending"
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1127
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1128,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1127
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1127
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 1128,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								1127
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": [],
							"usedEvents": [
								123,
								128
							]
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							285
						]
					},
					"id": 286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 285,
							"linearizedBaseContracts": [
								285
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 226,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 229,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 228,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 231,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 234,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 235,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 239,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 285,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 242,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 245,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 246,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 250,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 255,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 285,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 268,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 269,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 285,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 279,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 280,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 278,
												"id": 282,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 285,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 286,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							363
						]
					},
					"id": 364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 363,
							"linearizedBaseContracts": [
								363
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 297,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 306,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 363,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 363,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 363,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 363,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 363,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 363,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 364,
							"src": "202:2534:3",
							"usedErrors": [],
							"usedEvents": [
								297,
								306
							]
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							399
						]
					},
					"id": 400,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 365,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 366,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 399,
							"linearizedBaseContracts": [
								399
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 376,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 399,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 399,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 399,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 400,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"IERC20": [
							363
						],
						"IERC20Permit": [
							399
						],
						"SafeERC20": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 401,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 364,
							"src": "140:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 400,
							"src": "164:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 404,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 1106,
							"src": "205:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 405,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 408,
									"libraryName": {
										"id": 406,
										"name": "Address",
										"nameLocations": [
											"731:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1105,
										"src": "731:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:5",
									"typeName": {
										"id": 407,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1013:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1043:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 423,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "1073:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$363",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 330,
																		"src": "1073:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 426,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "1098:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "1102:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 421,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 419,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "1023:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:5"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "963:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 410,
														"name": "IERC20",
														"nameLocations": [
															"963:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "963:6:5"
													},
													"referencedDeclaration": 363,
													"src": "963:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "977:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:5"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:5"
									},
									"scope": 775,
									"src": "941:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "1445:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "1475:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 449,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "1505:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$363",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 362,
																		"src": "1505:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 452,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "1534:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 453,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "1540:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 454,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "1544:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 447,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 445,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "1455:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:5"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1381:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 435,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 434,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "1381:6:5"
													},
													"referencedDeclaration": 363,
													"src": "1381:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1395:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1409:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1421:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:5"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:5"
									},
									"scope": 775,
									"src": "1355:203:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "1894:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 471,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "2143:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 474,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 479,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$775",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$775",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 478,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 477,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 480,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 481,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 465,
																					"src": "2190:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 475,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 463,
																					"src": "2159:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$363",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 340,
																				"src": "2159:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 485,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 494,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "2344:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$363",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 350,
																		"src": "2344:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 497,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "2368:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2377:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 492,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 490,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2294:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:5"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1839:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "1839:6:5"
													},
													"referencedDeclaration": 363,
													"src": "1839:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1870:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:5"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:5"
									},
									"scope": 775,
									"src": "1818:573:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "2668:194:5",
										"statements": [
											{
												"assignments": [
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 539,
														"src": "2678:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 514,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$775",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$775",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "2732:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 516,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "2701:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "2701:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "2770:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 529,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 507,
																			"src": "2800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$363",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 350,
																		"src": "2800:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 532,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "2824:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 533,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "2833:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 534,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "2848:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 527,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2750:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:5"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2613:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 506,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 505,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "2613:6:5"
													},
													"referencedDeclaration": 363,
													"src": "2613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2627:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2644:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:5"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:5"
									},
									"scope": 775,
									"src": "2582:280:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "3139:321:5",
										"statements": [
											{
												"id": 583,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:5",
												"statements": [
													{
														"assignments": [
															552
														],
														"declarations": [
															{
																"constant": false,
																"id": 552,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 583,
																"src": "3173:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 551,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 561,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 557,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$775",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$775",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 555,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 559,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "3227:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 553,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "3196:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "3196:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 563,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "3257:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 564,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "3273:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 562,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 568,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 570,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "3358:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 573,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 544,
																					"src": "3388:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$363",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 350,
																				"src": "3388:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 576,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "3412:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 577,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "3421:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 578,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 548,
																				"src": "3436:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 571,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 569,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "3338:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 582,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3084:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 542,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "3084:6:5"
													},
													"referencedDeclaration": 363,
													"src": "3084:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3098:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3115:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:5"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:5"
									},
									"scope": 775,
									"src": "3053:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "3856:333:5",
										"statements": [
											{
												"assignments": [
													597
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "3866:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 596,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 600,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "3917:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:5",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "3917:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:5",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 603,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "3941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "3950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 598,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:5",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:5"
											},
											{
												"condition": {
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 608,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "3996:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$363",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 609,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "4003:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$363",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 607,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "3972:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"nodeType": "IfStatement",
												"src": "3967:216:5",
												"trueBody": {
													"id": 629,
													"nodeType": "Block",
													"src": "4018:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 613,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "4052:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 616,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 589,
																						"src": "4082:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$363",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 617,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:5",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 350,
																					"src": "4082:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:5",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 619,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 591,
																				"src": "4106:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 614,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:5",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 612,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "4032:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "4152:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 626,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "4159:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 624,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "4132:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 628,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3801:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 587,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "3801:6:5"
													},
													"referencedDeclaration": 363,
													"src": "3801:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3815:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3832:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:5"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:5"
									},
									"scope": 775,
									"src": "3779:410:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "4556:257:5",
										"statements": [
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "4566:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 659,
												"initialValue": {
													"arguments": [
														{
															"id": 657,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4601:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 655,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$399",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "4588:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4630:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4637:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "4646:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 666,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "4653:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 667,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "4663:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 668,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "4666:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 669,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4669:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 660,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4617:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$399",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 384,
														"src": "4617:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:5"
											},
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "4681:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 678,
												"initialValue": {
													"arguments": [
														{
															"id": 676,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4715:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 674,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4702:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$399",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "4702:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 680,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "4739:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 681,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "4753:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 679,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:5"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:5",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4370:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$399",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 399,
														"src": "4370:12:5"
													},
													"referencedDeclaration": 399,
													"src": "4370:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$399",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4398:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4421:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4469:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4495:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 645,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4512:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 647,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4531:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:5"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:5"
									},
									"scope": 775,
									"src": "4341:472:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "5266:572:5",
										"statements": [
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5615:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 698,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"arguments": [
														{
															"id": 705,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5669:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 702,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "5649:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 700,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 865,
														"src": "5641:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 710,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "5728:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 716,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "5765:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 717,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 719,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 714,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:5",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:5"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5225:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 692,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 691,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "5225:6:5"
													},
													"referencedDeclaration": 363,
													"src": "5225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5239:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:5"
									},
									"scope": 775,
									"src": "5196:642:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "6428:505:5",
										"statements": [
											{
												"assignments": [
													738,
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "6724:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 737,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "6738:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 739,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"arguments": [
														{
															"id": 746,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6785:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "6773:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 749,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "6819:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 750,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "6831:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 756,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "6868:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 758,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 757,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 759,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 754,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 762,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 768,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "6919:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 764,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "6892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$1105_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:5",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "6892:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 736,
												"id": 772,
												"nodeType": "Return",
												"src": "6800:126:5"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "6372:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 728,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "6372:6:5"
													},
													"referencedDeclaration": 363,
													"src": "6372:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "6386:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 731,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "6422:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:5"
									},
									"scope": 775,
									"src": "6339:594:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 776,
							"src": "701:6234:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6821:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1105
						]
					},
					"id": 1106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 778,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1105,
							"linearizedBaseContracts": [
								1105
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "1478:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 786,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "1702:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 785,
												"id": 791,
												"nodeType": "Return",
												"src": "1695:30:6"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1432:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:6"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1472:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:6"
									},
									"scope": 1105,
									"src": "1412:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "2718:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 804,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1105",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1105",
																				"typeString": "library Address"
																			}
																		],
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 802,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 807,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2761:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:6"
											},
											{
												"assignments": [
													813,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "2813:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 812,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 820,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 814,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "2831:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 816,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2853:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 822,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:6"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2666:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2693:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:6"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:6"
									},
									"scope": 1105,
									"src": "2647:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "3790:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "3829:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "3837:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 837,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															885,
															929
														],
														"referencedDeclaration": 929,
														"src": "3807:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 836,
												"id": 843,
												"nodeType": "Return",
												"src": "3800:79:6"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "3723:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "3739:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:6"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "3776:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:6"
									},
									"scope": 1105,
									"src": "3701:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "4255:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 858,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "4294:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "4302:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 861,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "4311:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 857,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															885,
															929
														],
														"referencedDeclaration": 929,
														"src": "4272:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 856,
												"id": 863,
												"nodeType": "Return",
												"src": "4265:59:6"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4163:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4190:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:6"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4241:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:6"
									},
									"scope": 1105,
									"src": "4108:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "4806:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "4845:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "4853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "4859:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 877,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															885,
															929
														],
														"referencedDeclaration": 929,
														"src": "4823:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 883,
												"nodeType": "Return",
												"src": "4816:94:6"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4724:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4740:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4759:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:6"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4792:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:6"
									},
									"scope": 1105,
									"src": "4693:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "5344:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 902,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1105",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1105",
																				"typeString": "library Address"
																			}
																		],
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 900,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 905,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "5387:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:6"
											},
											{
												"assignments": [
													911,
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "5446:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 910,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "5460:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 912,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"arguments": [
														{
															"id": 918,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "5513:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 914,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "5487:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 916,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "5506:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "5562:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "5570:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 924,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "5579:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 925,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "5591:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 921,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "5535:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 898,
												"id": 927,
												"nodeType": "Return",
												"src": "5528:76:6"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5205:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5229:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 889,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5256:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5279:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:6"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5330:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:6"
									},
									"scope": 1105,
									"src": "5165:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "5888:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "5924:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5932:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 939,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															946,
															975
														],
														"referencedDeclaration": 975,
														"src": "5905:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 938,
												"id": 944,
												"nodeType": "Return",
												"src": "5898:80:6"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5816:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:6"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5874:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 936,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:6"
									},
									"scope": 1105,
									"src": "5788:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "6327:168:6",
										"statements": [
											{
												"assignments": [
													959,
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 974,
														"src": "6338:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 958,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 974,
														"src": "6352:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 960,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 966,
												"initialValue": {
													"arguments": [
														{
															"id": 964,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "6397:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 962,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "6379:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "6446:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "6454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 970,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "6463:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 971,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "6475:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 967,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "6419:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 957,
												"id": 973,
												"nodeType": "Return",
												"src": "6412:76:6"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6206:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6230:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6257:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6313:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:6"
									},
									"scope": 1105,
									"src": "6169:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "6771:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 986,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "6809:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "6817:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 985,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															992,
															1021
														],
														"referencedDeclaration": 1021,
														"src": "6788:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 984,
												"id": 990,
												"nodeType": "Return",
												"src": "6781:84:6"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "6704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "6720:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "6757:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:6"
									},
									"scope": 1105,
									"src": "6674:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "7213:170:6",
										"statements": [
											{
												"assignments": [
													1005,
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "7224:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "7238:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1006,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"arguments": [
														{
															"id": 1010,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "7285:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1008,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "7265:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1014,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "7334:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "7342:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1016,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "7351:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1017,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "7363:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1013,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "7307:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1003,
												"id": 1019,
												"nodeType": "Return",
												"src": "7300:76:6"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7097:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7121:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7148:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:6"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7199:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:6"
									},
									"scope": 1105,
									"src": "7058:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "7865:434:6",
										"statements": [
											{
												"condition": {
													"id": 1035,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1026,
													"src": "7879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1057,
													"nodeType": "Block",
													"src": "8235:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1053,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "8257:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1054,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "8269:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1052,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "8249:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1056,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:6"
														}
													]
												},
												"id": 1058,
												"nodeType": "IfStatement",
												"src": "7875:418:6",
												"trueBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "7888:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1036,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "7906:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1048,
															"nodeType": "IfStatement",
															"src": "7902:286:6",
															"trueBody": {
																"id": 1047,
																"nodeType": "Block",
																"src": "7930:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1042,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1024,
																							"src": "8132:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1041,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 793,
																						"src": "8121:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1043,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1044,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1040,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1046,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1049,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "8208:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1034,
															"id": 1050,
															"nodeType": "Return",
															"src": "8201:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7716:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7740:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7762:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7795:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1029,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7851:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:6"
									},
									"scope": 1105,
									"src": "7671:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "8680:135:6",
										"statements": [
											{
												"condition": {
													"id": 1072,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1063,
													"src": "8694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "8751:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1077,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "8773:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1078,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "8785:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1076,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "8765:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1080,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:6"
														}
													]
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "8690:119:6",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "8703:42:6",
													"statements": [
														{
															"expression": {
																"id": 1073,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "8724:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1071,
															"id": 1074,
															"nodeType": "Return",
															"src": "8717:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8555:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8577:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8610:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8666:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1069,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:6"
									},
									"scope": 1105,
									"src": "8520:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "8904:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1091,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "8980:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "9310:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1098,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "9331:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1097,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1100,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:6"
														}
													]
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "8976:379:6",
												"trueBody": {
													"id": 1096,
													"nodeType": "Block",
													"src": "9003:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:6",
																"nodeType": "YulBlock",
																"src": "9161:133:6",
																"statements": [
																	{
																		"nativeSrc": "9179:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:6"
																			},
																			"nativeSrc": "9202:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:6",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:6",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:6"
																					},
																					"nativeSrc": "9243:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:6"
																			},
																			"nativeSrc": "9236:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:6"
																		},
																		"nativeSrc": "9236:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1086,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1086,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:6",
																	"valueSize": 1
																}
															],
															"id": 1095,
															"nodeType": "InlineAssembly",
															"src": "9152:142:6"
														}
													]
												}
											}
										]
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8838:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1085,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8863:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:6"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:6"
									},
									"scope": 1105,
									"src": "8821:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1106,
							"src": "194:9169:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1127
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1108,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1113,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1115,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1127,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1122,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1124,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1127,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1128,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"ConditionalEscrow": [
							1162
						],
						"Context": [
							1127
						],
						"Escrow": [
							1258
						],
						"Ownable": [
							112
						]
					},
					"id": 1163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1129,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/escrow/Escrow.sol",
							"file": "./Escrow.sol",
							"id": 1130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1163,
							"sourceUnit": 1259,
							"src": "128:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1132,
										"name": "Escrow",
										"nameLocations": [
											"376:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1258,
										"src": "376:6:8"
									},
									"id": 1133,
									"nodeType": "InheritanceSpecifier",
									"src": "376:6:8"
								}
							],
							"canonicalName": "ConditionalEscrow",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1131,
								"nodeType": "StructuredDocumentation",
								"src": "152:184:8",
								"text": " @title ConditionalEscrow\n @dev Base abstract escrow to only allow withdrawal if a condition is met.\n @dev Intended usage: See {Escrow}. Same usage guidelines apply here."
							},
							"fullyImplemented": false,
							"id": 1162,
							"linearizedBaseContracts": [
								1162,
								1258,
								112,
								1127
							],
							"name": "ConditionalEscrow",
							"nameLocation": "355:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "389:191:8",
										"text": " @dev Returns whether an address is allowed to withdraw their funds. To be\n implemented by derived contracts.\n @param payee The destination address of the funds."
									},
									"functionSelector": "685ca194",
									"id": 1141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalAllowed",
									"nameLocation": "594:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "620:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "612:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:15:8"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "656:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "656:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:6:8"
									},
									"scope": 1162,
									"src": "585:77:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1257
									],
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "733:136:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1149,
																	"name": "payee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "769:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1148,
																"name": "withdrawalAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "751:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "751:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e646974696f6e616c457363726f773a207061796565206973206e6f7420616c6c6f77656420746f207769746864726177",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "777:53:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a",
																"typeString": "literal_string \"ConditionalEscrow: payee is not allowed to withdraw\""
															},
															"value": "ConditionalEscrow: payee is not allowed to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a",
																"typeString": "literal_string \"ConditionalEscrow: payee is not allowed to withdraw\""
															}
														],
														"id": 1147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "743:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "743:88:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "743:88:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "856:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 1154,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "841:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ConditionalEscrow_$1162_$",
																"typeString": "type(contract super ConditionalEscrow)"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "847:8:8",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1257,
														"src": "841:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "841:21:8"
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "677:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "724:8:8"
									},
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "702:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "686:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:23:8"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:8"
									},
									"scope": 1162,
									"src": "668:201:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1163,
							"src": "337:534:8",
							"usedErrors": [],
							"usedEvents": [
								13,
								1178,
								1184
							]
						}
					],
					"src": "103:769:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/escrow/Escrow.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/escrow/Escrow.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"Context": [
							1127
						],
						"Escrow": [
							1258
						],
						"Ownable": [
							112
						]
					},
					"id": 1259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "../../access/Ownable.sol",
							"id": 1165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1259,
							"sourceUnit": 113,
							"src": "132:34:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../Address.sol",
							"id": 1166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1259,
							"sourceUnit": 1106,
							"src": "167:24:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1168,
										"name": "Ownable",
										"nameLocations": [
											"844:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "844:7:9"
									},
									"id": 1169,
									"nodeType": "InheritanceSpecifier",
									"src": "844:7:9"
								}
							],
							"canonicalName": "Escrow",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1167,
								"nodeType": "StructuredDocumentation",
								"src": "193:631:9",
								"text": " @title Escrow\n @dev Base escrow contract, holds funds designated for a payee until they\n withdraw them.\n Intended usage: This contract (and derived escrow contracts) should be a\n standalone contract, that only interacts with the contract that instantiated\n it. That way, it is guaranteed that all Ether will be handled according to\n the `Escrow` rules, and there is no need to check for payable functions or\n transfers in the inheritance tree. The contract that uses the escrow as its\n payment method should be its owner, and provide public methods redirecting\n to the escrow's deposit and withdraw."
							},
							"fullyImplemented": true,
							"id": 1258,
							"linearizedBaseContracts": [
								1258,
								112,
								1127
							],
							"name": "Escrow",
							"nameLocation": "834:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1172,
									"libraryName": {
										"id": 1170,
										"name": "Address",
										"nameLocations": [
											"864:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1105,
										"src": "864:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "858:34:9",
									"typeName": {
										"id": 1171,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "876:15:9",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 1178,
									"name": "Deposited",
									"nameLocation": "904:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "930:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "914:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"indexed": false,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "945:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "937:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:42:9"
									},
									"src": "898:58:9"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 1184,
									"name": "Withdrawn",
									"nameLocation": "967:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"indexed": true,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "993:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "977:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"indexed": false,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "1008:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1000:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:42:9"
									},
									"src": "961:58:9"
								},
								{
									"constant": false,
									"id": 1188,
									"mutability": "mutable",
									"name": "_deposits",
									"nameLocation": "1061:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1258,
									"src": "1025:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1187,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1185,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1033:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1025:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1186,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1044:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "1142:40:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1195,
														"name": "_deposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "1159:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1197,
													"indexExpression": {
														"id": 1196,
														"name": "payee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "1169:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1159:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1194,
												"id": 1198,
												"nodeType": "Return",
												"src": "1152:23:9"
											}
										]
									},
									"functionSelector": "e3a9db1a",
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositsOf",
									"nameLocation": "1086:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "1105:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1097:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:15:9"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "1133:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:9"
									},
									"scope": 1258,
									"src": "1077:105:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "1430:118:9",
										"statements": [
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1448:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "1440:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1440:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"expression": {
														"id": 1210,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1457:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1461:5:9",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "1457:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1440:26:9"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1213,
															"name": "_deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "1476:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1215,
														"indexExpression": {
															"id": 1214,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "1486:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1476:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1216,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "1496:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1476:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "1476:26:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1220,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "1527:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1209,
															"src": "1534:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1219,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1517:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1517:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "EmitStatement",
												"src": "1512:29:9"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "1188:172:9",
										"text": " @dev Stores the sent amount as credit to be withdrawn.\n @param payee The destination address of the funds.\n Emits a {Deposited} event."
									},
									"functionSelector": "f340fa01",
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1206,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1205,
												"name": "onlyOwner",
												"nameLocations": [
													"1420:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1420:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1420:9:9"
										}
									],
									"name": "deposit",
									"nameLocation": "1374:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "1390:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1382:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:15:9"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1430:0:9"
									},
									"scope": 1258,
									"src": "1365:183:9",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "2093:158:9",
										"statements": [
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "payment",
														"nameLocation": "2111:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1256,
														"src": "2103:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1233,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2103:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"baseExpression": {
														"id": 1235,
														"name": "_deposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "2121:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1237,
													"indexExpression": {
														"id": 1236,
														"name": "payee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2131:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2121:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2103:34:9"
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1239,
															"name": "_deposits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "2148:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1241,
														"indexExpression": {
															"id": 1240,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "2158:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2148:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2167:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2148:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "2148:20:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1248,
															"name": "payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "2195:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1245,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "2179:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2185:9:9",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 827,
														"src": "2179:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "2179:24:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1252,
															"name": "payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "2229:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1253,
															"name": "payment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "2236:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1251,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "2219:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2219:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "EmitStatement",
												"src": "2214:30:9"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "1554:468:9",
										"text": " @dev Withdraw accumulated balance for a payee, forwarding all gas to the\n recipient.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee The address whose funds will be withdrawn and transferred to.\n Emits a {Withdrawn} event."
									},
									"functionSelector": "51cff8d9",
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1231,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1230,
												"name": "onlyOwner",
												"nameLocations": [
													"2083:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2083:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2083:9:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "2036:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "2061:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2045:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2045:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:23:9"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2093:0:9"
									},
									"scope": 1258,
									"src": "2027:224:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1259,
							"src": "825:1428:9",
							"usedErrors": [],
							"usedEvents": [
								13,
								1178,
								1184
							]
						}
					],
					"src": "107:2147:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/escrow/RefundEscrow.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"ConditionalEscrow": [
							1162
						],
						"Context": [
							1127
						],
						"Escrow": [
							1258
						],
						"Ownable": [
							112
						],
						"RefundEscrow": [
							1437
						]
					},
					"id": 1438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1260,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/escrow/ConditionalEscrow.sol",
							"file": "./ConditionalEscrow.sol",
							"id": 1261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1438,
							"sourceUnit": 1163,
							"src": "123:33:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1263,
										"name": "ConditionalEscrow",
										"nameLocations": [
											"663:17:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1162,
										"src": "663:17:10"
									},
									"id": 1264,
									"nodeType": "InheritanceSpecifier",
									"src": "663:17:10"
								}
							],
							"canonicalName": "RefundEscrow",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1262,
								"nodeType": "StructuredDocumentation",
								"src": "158:479:10",
								"text": " @title RefundEscrow\n @dev Escrow that holds funds for a beneficiary, deposited from multiple\n parties.\n @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n @dev The owner account (that is, the contract that instantiates this\n contract) may deposit, close the deposit period, and allow for either\n withdrawal by the beneficiary, or refunds to the depositors. All interactions\n with `RefundEscrow` will be made through the owner contract."
							},
							"fullyImplemented": true,
							"id": 1437,
							"linearizedBaseContracts": [
								1437,
								1162,
								1258,
								112,
								1127
							],
							"name": "RefundEscrow",
							"nameLocation": "647:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1267,
									"libraryName": {
										"id": 1265,
										"name": "Address",
										"nameLocations": [
											"693:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1105,
										"src": "693:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "687:34:10",
									"typeName": {
										"id": 1266,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:15:10",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									}
								},
								{
									"canonicalName": "RefundEscrow.State",
									"id": 1271,
									"members": [
										{
											"id": 1268,
											"name": "Active",
											"nameLocation": "748:6:10",
											"nodeType": "EnumValue",
											"src": "748:6:10"
										},
										{
											"id": 1269,
											"name": "Refunding",
											"nameLocation": "764:9:10",
											"nodeType": "EnumValue",
											"src": "764:9:10"
										},
										{
											"id": 1270,
											"name": "Closed",
											"nameLocation": "783:6:10",
											"nodeType": "EnumValue",
											"src": "783:6:10"
										}
									],
									"name": "State",
									"nameLocation": "732:5:10",
									"nodeType": "EnumDefinition",
									"src": "727:68:10"
								},
								{
									"anonymous": false,
									"eventSelector": "088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f",
									"id": 1273,
									"name": "RefundsClosed",
									"nameLocation": "807:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:10"
									},
									"src": "801:22:10"
								},
								{
									"anonymous": false,
									"eventSelector": "599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b89",
									"id": 1275,
									"name": "RefundsEnabled",
									"nameLocation": "834:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "848:2:10"
									},
									"src": "828:23:10"
								},
								{
									"constant": false,
									"id": 1278,
									"mutability": "mutable",
									"name": "_state",
									"nameLocation": "871:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "857:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_State_$1271",
										"typeString": "enum RefundEscrow.State"
									},
									"typeName": {
										"id": 1277,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1276,
											"name": "State",
											"nameLocations": [
												"857:5:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1271,
											"src": "857:5:10"
										},
										"referencedDeclaration": 1271,
										"src": "857:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_State_$1271",
											"typeString": "enum RefundEscrow.State"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1280,
									"mutability": "immutable",
									"name": "_beneficiary",
									"nameLocation": "917:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1437,
									"src": "883:46:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1279,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "883:15:10",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "1079:169:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1287,
																"name": "beneficiary_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "1097:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1121:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1113:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1288,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1113:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1113:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1097:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566756e64457363726f773a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1125:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
																"typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
															},
															"value": "RefundEscrow: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
																"typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
															}
														],
														"id": 1286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1089:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1089:84:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "1089:84:10"
											},
											{
												"expression": {
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1296,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "1183:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1297,
														"name": "beneficiary_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "1198:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1183:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "1183:27:10"
											},
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1300,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "1220:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$1271",
															"typeString": "enum RefundEscrow.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1301,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "1229:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$1271_$",
																"typeString": "type(enum RefundEscrow.State)"
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1235:6:10",
														"memberName": "Active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "1229:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$1271",
															"typeString": "enum RefundEscrow.State"
														}
													},
													"src": "1220:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$1271",
														"typeString": "enum RefundEscrow.State"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "1220:21:10"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "936:96:10",
										"text": " @dev Constructor.\n @param beneficiary_ The beneficiary of the deposits."
									},
									"id": 1306,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "beneficiary_",
												"nameLocation": "1065:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1049:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:30:10"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1079:0:10"
									},
									"scope": 1437,
									"src": "1037:211:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "1371:30:10",
										"statements": [
											{
												"expression": {
													"id": 1313,
													"name": "_state",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1278,
													"src": "1388:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$1271",
														"typeString": "enum RefundEscrow.State"
													}
												},
												"functionReturnParameters": 1312,
												"id": 1314,
												"nodeType": "Return",
												"src": "1381:13:10"
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "1254:59:10",
										"text": " @return The current state of the escrow."
									},
									"functionSelector": "c19d93fb",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "state",
									"nameLocation": "1327:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1332:2:10"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1364:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$1271",
													"typeString": "enum RefundEscrow.State"
												},
												"typeName": {
													"id": 1310,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1309,
														"name": "State",
														"nameLocations": [
															"1364:5:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1271,
														"src": "1364:5:10"
													},
													"referencedDeclaration": 1271,
													"src": "1364:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$1271",
														"typeString": "enum RefundEscrow.State"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:10"
									},
									"scope": 1437,
									"src": "1318:83:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "1538:36:10",
										"statements": [
											{
												"expression": {
													"id": 1322,
													"name": "_beneficiary",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1280,
													"src": "1555:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1321,
												"id": 1323,
												"nodeType": "Return",
												"src": "1548:19:10"
											}
										]
									},
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "1407:57:10",
										"text": " @return The beneficiary of the escrow."
									},
									"functionSelector": "38af3eed",
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiary",
									"nameLocation": "1478:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1489:2:10"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "1521:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1521:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:17:10"
									},
									"scope": 1437,
									"src": "1469:105:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1225
									],
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "1793:129:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$1271",
																"typeString": "enum RefundEscrow.State"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1333,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "1811:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$1271_$",
																		"typeString": "function () view returns (enum RefundEscrow.State)"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1811:7:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$1271",
																	"typeString": "enum RefundEscrow.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1335,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "1822:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$1271_$",
																		"typeString": "type(enum RefundEscrow.State)"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1828:6:10",
																"memberName": "Active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1268,
																"src": "1822:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$1271",
																	"typeString": "enum RefundEscrow.State"
																}
															},
															"src": "1811:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566756e64457363726f773a2063616e206f6e6c79206465706f736974207768696c6520616374697665",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1836:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
																"typeString": "literal_string \"RefundEscrow: can only deposit while active\""
															},
															"value": "RefundEscrow: can only deposit while active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
																"typeString": "literal_string \"RefundEscrow: can only deposit while active\""
															}
														],
														"id": 1332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1803:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1803:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "1803:79:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1344,
															"name": "refundee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "1906:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1341,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1892:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RefundEscrow_$1437_$",
																"typeString": "type(contract super RefundEscrow)"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1898:7:10",
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1225,
														"src": "1892:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "1892:23:10"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "1580:141:10",
										"text": " @dev Stores funds that may later be refunded.\n @param refundee The address funds will be sent to if a refund occurs."
									},
									"functionSelector": "f340fa01",
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1735:7:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1330,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1784:8:10"
									},
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "refundee",
												"nameLocation": "1751:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "1743:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:18:10"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:0:10"
									},
									"scope": 1437,
									"src": "1726:196:10",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "2085:155:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$1271",
																"typeString": "enum RefundEscrow.State"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1355,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "2103:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$1271_$",
																		"typeString": "function () view returns (enum RefundEscrow.State)"
																	}
																},
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2103:7:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$1271",
																	"typeString": "enum RefundEscrow.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1357,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "2114:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$1271_$",
																		"typeString": "type(enum RefundEscrow.State)"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2120:6:10",
																"memberName": "Active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1268,
																"src": "2114:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$1271",
																	"typeString": "enum RefundEscrow.State"
																}
															},
															"src": "2103:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696c6520616374697665",
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2128:43:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
																"typeString": "literal_string \"RefundEscrow: can only close while active\""
															},
															"value": "RefundEscrow: can only close while active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
																"typeString": "literal_string \"RefundEscrow: can only close while active\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2095:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2095:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "2095:77:10"
											},
											{
												"expression": {
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1363,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "2182:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$1271",
															"typeString": "enum RefundEscrow.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1364,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2191:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$1271_$",
																"typeString": "type(enum RefundEscrow.State)"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2197:6:10",
														"memberName": "Closed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1270,
														"src": "2191:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$1271",
															"typeString": "enum RefundEscrow.State"
														}
													},
													"src": "2182:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$1271",
														"typeString": "enum RefundEscrow.State"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "2182:21:10"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1368,
														"name": "RefundsClosed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "2218:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:15:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "EmitStatement",
												"src": "2213:20:10"
											}
										]
									},
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "1928:110:10",
										"text": " @dev Allows for the beneficiary to withdraw their funds, rejecting\n further deposits."
									},
									"functionSelector": "43d726d6",
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1352,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1351,
												"name": "onlyOwner",
												"nameLocations": [
													"2075:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2075:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2075:9:10"
										}
									],
									"name": "close",
									"nameLocation": "2052:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:10"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2085:0:10"
									},
									"scope": 1437,
									"src": "2043:197:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "2386:168:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$1271",
																"typeString": "enum RefundEscrow.State"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1379,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "2404:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$1271_$",
																		"typeString": "function () view returns (enum RefundEscrow.State)"
																	}
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2404:7:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$1271",
																	"typeString": "enum RefundEscrow.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1381,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "2415:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$1271_$",
																		"typeString": "type(enum RefundEscrow.State)"
																	}
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2421:6:10",
																"memberName": "Active",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1268,
																"src": "2415:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$1271",
																	"typeString": "enum RefundEscrow.State"
																}
															},
															"src": "2404:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726566756e6473207768696c6520616374697665",
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2429:52:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
																"typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
															},
															"value": "RefundEscrow: can only enable refunds while active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
																"typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
															}
														],
														"id": 1378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2396:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2396:86:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "2396:86:10"
											},
											{
												"expression": {
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1387,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "2492:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$1271",
															"typeString": "enum RefundEscrow.State"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1388,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2501:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$1271_$",
																"typeString": "type(enum RefundEscrow.State)"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2507:9:10",
														"memberName": "Refunding",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1269,
														"src": "2501:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$1271",
															"typeString": "enum RefundEscrow.State"
														}
													},
													"src": "2492:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_State_$1271",
														"typeString": "enum RefundEscrow.State"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "2492:24:10"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1392,
														"name": "RefundsEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "2531:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2531:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "EmitStatement",
												"src": "2526:21:10"
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "2246:85:10",
										"text": " @dev Allows for refunds to take place, rejecting further deposits."
									},
									"functionSelector": "8c52dc41",
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1375,
												"name": "onlyOwner",
												"nameLocations": [
													"2376:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2376:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2376:9:10"
										}
									],
									"name": "enableRefunds",
									"nameLocation": "2345:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2358:2:10"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:10"
									},
									"scope": 1437,
									"src": "2336:218:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "2669:165:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$1271",
																"typeString": "enum RefundEscrow.State"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1401,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "2687:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$1271_$",
																		"typeString": "function () view returns (enum RefundEscrow.State)"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2687:7:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$1271",
																	"typeString": "enum RefundEscrow.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1403,
																	"name": "State",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "2698:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$1271_$",
																		"typeString": "type(enum RefundEscrow.State)"
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2704:6:10",
																"memberName": "Closed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1270,
																"src": "2698:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$1271",
																	"typeString": "enum RefundEscrow.State"
																}
															},
															"src": "2687:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566756e64457363726f773a2062656e65666963696172792063616e206f6e6c79207769746864726177207768696c6520636c6f736564",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2712:58:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
																"typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
															},
															"value": "RefundEscrow: beneficiary can only withdraw while closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
																"typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
															}
														],
														"id": 1400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2679:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:92:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "2679:92:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1414,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2813:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_RefundEscrow_$1437",
																			"typeString": "contract RefundEscrow"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_RefundEscrow_$1437",
																			"typeString": "contract RefundEscrow"
																		}
																	],
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2805:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2805:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2805:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2819:7:10",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2805:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1409,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "2781:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2781:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2795:9:10",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 827,
														"src": "2781:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "2781:46:10"
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "2560:58:10",
										"text": " @dev Withdraws the beneficiary's funds."
									},
									"functionSelector": "9af6549a",
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "beneficiaryWithdraw",
									"nameLocation": "2632:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2651:2:10"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:10"
									},
									"scope": 1437,
									"src": "2623:211:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1141
									],
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "3137:50:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_enum$_State_$1271",
														"typeString": "enum RefundEscrow.State"
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1429,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "3154:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$1271_$",
																"typeString": "function () view returns (enum RefundEscrow.State)"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3154:7:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$1271",
															"typeString": "enum RefundEscrow.State"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1431,
															"name": "State",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "3165:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_State_$1271_$",
																"typeString": "type(enum RefundEscrow.State)"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3171:9:10",
														"memberName": "Refunding",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1269,
														"src": "3165:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_State_$1271",
															"typeString": "enum RefundEscrow.State"
														}
													},
													"src": "3154:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1434,
												"nodeType": "Return",
												"src": "3147:33:10"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "2840:220:10",
										"text": " @dev Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a\n 'payee' argument, but we ignore it here since the condition is global, not per-payee."
									},
									"functionSelector": "685ca194",
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalAllowed",
									"nameLocation": "3074:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1425,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3113:8:10"
									},
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "3092:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3091:9:10"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "3131:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3131:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:6:10"
									},
									"scope": 1437,
									"src": "3065:122:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1438,
							"src": "638:2551:10",
							"usedErrors": [],
							"usedEvents": [
								13,
								1178,
								1184,
								1273,
								1275
							]
						}
					],
					"src": "98:3092:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1749
						]
					},
					"id": 1750,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1439,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1440,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:11",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1749,
							"linearizedBaseContracts": [
								1749
							],
							"name": "SafeMath",
							"nameLocation": "490:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "717:140:11",
										"statements": [
											{
												"id": 1470,
												"nodeType": "UncheckedBlock",
												"src": "727:124:11",
												"statements": [
													{
														"assignments": [
															1453
														],
														"declarations": [
															{
																"constant": false,
																"id": 1453,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1470,
																"src": "751:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1452,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1457,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1454,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "763:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1455,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "767:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1458,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1453,
																"src": "786:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1459,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "790:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1465,
														"nodeType": "IfStatement",
														"src": "782:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1463,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1451,
															"id": 1464,
															"nodeType": "Return",
															"src": "793:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1467,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "838:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1468,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1451,
														"id": 1469,
														"nodeType": "Return",
														"src": "824:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1441,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "657:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "668:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:11"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "702:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "708:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:11"
									},
									"scope": 1749,
									"src": "641:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "1078:113:11",
										"statements": [
											{
												"id": 1498,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1484,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1477,
																"src": "1116:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1485,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "1120:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1491,
														"nodeType": "IfStatement",
														"src": "1112:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1489,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1483,
															"id": 1490,
															"nodeType": "Return",
															"src": "1123:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1493,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "1168:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1494,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "1172:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1496,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1483,
														"id": 1497,
														"nodeType": "Return",
														"src": "1154:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1018:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1029:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:11"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1063:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "1069:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:11"
									},
									"scope": 1749,
									"src": "1002:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "1415:417:11",
										"statements": [
											{
												"id": 1540,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1512,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "1683:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1519,
														"nodeType": "IfStatement",
														"src": "1679:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1517,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1511,
															"id": 1518,
															"nodeType": "Return",
															"src": "1691:16:11"
														}
													},
													{
														"assignments": [
															1521
														],
														"declarations": [
															{
																"constant": false,
																"id": 1521,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1540,
																"src": "1721:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1520,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1525,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1522,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "1733:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1523,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "1737:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1526,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "1756:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1527,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "1760:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1529,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "1765:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1535,
														"nodeType": "IfStatement",
														"src": "1752:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1533,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1511,
															"id": 1534,
															"nodeType": "Return",
															"src": "1768:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1537,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "1813:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1538,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1511,
														"id": 1539,
														"nodeType": "Return",
														"src": "1799:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1355:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1366:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:11"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1400:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1507,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1406:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:11"
									},
									"scope": 1749,
									"src": "1339:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "2057:114:11",
										"statements": [
											{
												"id": 1568,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1554,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1547,
																"src": "2095:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1561,
														"nodeType": "IfStatement",
														"src": "2091:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1559,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1553,
															"id": 1560,
															"nodeType": "Return",
															"src": "2103:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1563,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "2148:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1564,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1547,
																		"src": "2152:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1566,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1553,
														"id": 1567,
														"nodeType": "Return",
														"src": "2134:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "1997:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2008:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:11"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2042:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2048:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:11"
									},
									"scope": 1749,
									"src": "1981:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "2406:114:11",
										"statements": [
											{
												"id": 1596,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1582,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "2444:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1589,
														"nodeType": "IfStatement",
														"src": "2440:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1587,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1581,
															"id": 1588,
															"nodeType": "Return",
															"src": "2452:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1591,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1573,
																		"src": "2497:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1592,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1575,
																		"src": "2501:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1594,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1581,
														"id": 1595,
														"nodeType": "Return",
														"src": "2483:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "2346:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "2357:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:11"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "2391:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "2397:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:11"
									},
									"scope": 1749,
									"src": "2330:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "2822:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1608,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "2839:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1609,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "2843:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1611,
												"nodeType": "Return",
												"src": "2832:12:11"
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:11",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2768:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2779:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:11"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2813:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:11"
									},
									"scope": 1749,
									"src": "2755:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "3189:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1623,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "3206:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1624,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "3210:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1622,
												"id": 1626,
												"nodeType": "Return",
												"src": "3199:12:11"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:11",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "3135:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "3146:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:11"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "3180:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:11"
									},
									"scope": 1749,
									"src": "3122:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "3532:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1638,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "3549:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1639,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "3553:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1641,
												"nodeType": "Return",
												"src": "3542:12:11"
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:11",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3478:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3489:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:11"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "3523:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:11"
									},
									"scope": 1749,
									"src": "3465:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "3917:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1653,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "3934:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1654,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "3938:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1652,
												"id": 1656,
												"nodeType": "Return",
												"src": "3927:12:11"
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:11",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "3863:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "3874:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:11"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "3908:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:11"
									},
									"scope": 1749,
									"src": "3850:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1672,
										"nodeType": "Block",
										"src": "4466:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1668,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "4483:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1669,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "4487:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1667,
												"id": 1671,
												"nodeType": "Return",
												"src": "4476:12:11"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "4412:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "4423:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:11"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "4457:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:11"
									},
									"scope": 1749,
									"src": "4399:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "5054:106:11",
										"statements": [
											{
												"id": 1696,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1686,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "5096:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1687,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "5101:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1689,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "5104:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1685,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1691,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1692,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "5138:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1693,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "5142:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1684,
														"id": 1695,
														"nodeType": "Return",
														"src": "5131:12:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:11",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4972:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4983:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4994:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:11"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "5045:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:11"
									},
									"scope": 1749,
									"src": "4959:201:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "5739:105:11",
										"statements": [
											{
												"id": 1721,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1711,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1703,
																		"src": "5781:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1714,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "5788:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1710,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1716,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1717,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "5822:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1718,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "5826:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1709,
														"id": 1720,
														"nodeType": "Return",
														"src": "5815:12:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:11",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5657:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5668:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5679:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1704,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:11"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "5730:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:11"
									},
									"scope": 1749,
									"src": "5644:200:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1747,
										"nodeType": "Block",
										"src": "6585:105:11",
										"statements": [
											{
												"id": 1746,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1736,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "6627:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1739,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "6634:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1735,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1741,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1742,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "6668:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1743,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "6672:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1734,
														"id": 1745,
														"nodeType": "Return",
														"src": "6661:12:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "6503:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "6514:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "6525:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:11"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "6576:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:11"
									},
									"scope": 1749,
									"src": "6490:200:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1750,
							"src": "482:6210:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:11"
				},
				"id": 11
			},
			"crowdsale/abstractions/finalizable.sol": {
				"ast": {
					"absolutePath": "crowdsale/abstractions/finalizable.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"Context": [
							1127
						],
						"Crowdsale": [
							2220
						],
						"FinalizableContract": [
							1806
						],
						"IERC20": [
							363
						],
						"IERC20Permit": [
							399
						],
						"Pausable": [
							220
						],
						"ReentrancyGuard": [
							285
						],
						"SafeERC20": [
							775
						],
						"SafeMath": [
							1749
						],
						"TimedCrowdsale": [
							2564
						]
					},
					"id": 1807,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1751,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1752,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1807,
							"sourceUnit": 1750,
							"src": "62:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/validation/timedCrowdsale.sol",
							"file": "crowdsale/validation/timedCrowdsale.sol",
							"id": 1753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1807,
							"sourceUnit": 2565,
							"src": "121:49:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "FinalizableContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1754,
								"nodeType": "StructuredDocumentation",
								"src": "174:162:12",
								"text": " @title FinalizableCrowdsale\n @dev Extension of TimedCrowdsale with a one-off finalization action, where one\n can do extra work after finishing."
							},
							"fullyImplemented": true,
							"id": 1806,
							"linearizedBaseContracts": [
								1806
							],
							"name": "FinalizableContract",
							"nameLocation": "356:19:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1757,
									"libraryName": {
										"id": 1755,
										"name": "SafeMath",
										"nameLocations": [
											"389:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "389:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "383:27:12",
									"typeName": {
										"id": 1756,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "402:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1759,
									"mutability": "mutable",
									"name": "_finalized",
									"nameLocation": "431:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1806,
									"src": "418:23:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1758,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "418:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "9c6ac702ac1e5e834d54fae35fa20f6dbab76180a01317ec37a7e4ce9f86fe51",
									"id": 1761,
									"name": "ContractFinalized",
									"nameLocation": "456:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:12"
									},
									"src": "450:26:12"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "592:33:12",
										"statements": [
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1765,
														"name": "_finalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "599:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "612:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "599:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "599:18:12"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "484:81:12",
										"text": " @dev Constructor, takes crowdsale opening and closing times."
									},
									"id": 1770,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:2:12"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:12"
									},
									"scope": 1806,
									"src": "571:54:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "768:36:12",
										"statements": [
											{
												"expression": {
													"id": 1776,
													"name": "_finalized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1759,
													"src": "786:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1775,
												"id": 1777,
												"nodeType": "Return",
												"src": "779:17:12"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "633:81:12",
										"text": " @return true if the crowdsale is finalized, false otherwise."
									},
									"functionSelector": "b3f05b97",
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finalized",
									"nameLocation": "729:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:2:12"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "762:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "762:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:6:12"
									},
									"scope": 1806,
									"src": "720:84:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "1004:173:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1023:11:12",
															"subExpression": {
																"id": 1784,
																"name": "_finalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "1024:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46696e616c697a61626c6543726f776473616c653a20616c72656164792066696e616c697a6564",
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1036:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_add3851407fb271b99f0a6c77295a889f6e9c9fd75a445c71c8bcc137e138dde",
																"typeString": "literal_string \"FinalizableCrowdsale: already finalized\""
															},
															"value": "FinalizableCrowdsale: already finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_add3851407fb271b99f0a6c77295a889f6e9c9fd75a445c71c8bcc137e138dde",
																"typeString": "literal_string \"FinalizableCrowdsale: already finalized\""
															}
														],
														"id": 1783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1015:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1015:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "1015:63:12"
											},
											{
												"expression": {
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1789,
														"name": "_finalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "1089:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1102:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1089:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "1089:17:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1793,
														"name": "_finalization",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "1119:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1795,
												"nodeType": "ExpressionStatement",
												"src": "1119:15:12"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1796,
														"name": "ContractFinalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "1150:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1150:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "EmitStatement",
												"src": "1145:24:12"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "812:150:12",
										"text": " @dev Must be called after crowdsale ends, to do some extra finalization\n work. Calls the contract's finalization function."
									},
									"functionSelector": "4bb278f3",
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finalize",
									"nameLocation": "977:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:2:12"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:0:12"
									},
									"scope": 1806,
									"src": "968:209:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1804,
										"nodeType": "Block",
										"src": "1435:66:12",
										"statements": []
									},
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "1185:202:12",
										"text": " @dev Can be overridden to add finalization logic. The overriding function\n should call super._finalization() to ensure the chain of finalization is\n executed entirely."
									},
									"id": 1805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_finalization",
									"nameLocation": "1402:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1415:2:12"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:0:12"
									},
									"scope": 1806,
									"src": "1393:108:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1807,
							"src": "338:1166:12",
							"usedErrors": [],
							"usedEvents": [
								1761
							]
						}
					],
					"src": "33:1471:12"
				},
				"id": 12
			},
			"crowdsale/abstractions/refundable.sol": {
				"ast": {
					"absolutePath": "crowdsale/abstractions/refundable.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"ConditionalEscrow": [
							1162
						],
						"Context": [
							1127
						],
						"Escrow": [
							1258
						],
						"Ownable": [
							112
						],
						"RefundEscrow": [
							1437
						],
						"RefundableContract": [
							1910
						],
						"SafeMath": [
							1749
						]
					},
					"id": 1911,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1808,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1809,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1911,
							"sourceUnit": 1128,
							"src": "62:51:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1810,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1911,
							"sourceUnit": 1750,
							"src": "115:57:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
							"file": "@openzeppelin/contracts/utils/escrow/RefundEscrow.sol",
							"id": 1811,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1911,
							"sourceUnit": 1438,
							"src": "174:63:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1813,
										"name": "Context",
										"nameLocations": [
											"946:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "946:7:13"
									},
									"id": 1814,
									"nodeType": "InheritanceSpecifier",
									"src": "946:7:13"
								}
							],
							"canonicalName": "RefundableContract",
							"contractDependencies": [
								1437
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1812,
								"nodeType": "StructuredDocumentation",
								"src": "241:663:13",
								"text": " @title RefundableCrowdsale\n @dev Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users\n getting a refund if goal is not met.\n Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal\n is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\n the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\n the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens."
							},
							"fullyImplemented": true,
							"id": 1910,
							"linearizedBaseContracts": [
								1910,
								1127
							],
							"name": "RefundableContract",
							"nameLocation": "924:18:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1817,
									"libraryName": {
										"id": 1815,
										"name": "SafeMath",
										"nameLocations": [
											"967:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "967:8:13"
									},
									"nodeType": "UsingForDirective",
									"src": "961:27:13",
									"typeName": {
										"id": 1816,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "980:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1819,
									"mutability": "mutable",
									"name": "_goal",
									"nameLocation": "1065:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 1910,
									"src": "1049:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1049:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1822,
									"mutability": "mutable",
									"name": "_escrow",
									"nameLocation": "1168:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1910,
									"src": "1147:28:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_RefundEscrow_$1437",
										"typeString": "contract RefundEscrow"
									},
									"typeName": {
										"id": 1821,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1820,
											"name": "RefundEscrow",
											"nameLocations": [
												"1147:12:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1437,
											"src": "1147:12:13"
										},
										"referencedDeclaration": 1437,
										"src": "1147:12:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_RefundEscrow_$1437",
											"typeString": "contract RefundEscrow"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "1346:144:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1831,
																"name": "inGoal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "1365:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1374:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1365:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566756e6461626c6543726f776473616c653a20676f616c2069732030",
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1377:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15b425ad47b38bd9f192781c8e42c99d6e1ccf6762c7d5fcf31d9a14db02b056",
																"typeString": "literal_string \"RefundableCrowdsale: goal is 0\""
															},
															"value": "RefundableCrowdsale: goal is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15b425ad47b38bd9f192781c8e42c99d6e1ccf6762c7d5fcf31d9a14db02b056",
																"typeString": "literal_string \"RefundableCrowdsale: goal is 0\""
															}
														],
														"id": 1830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1357:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1357:53:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1836,
												"nodeType": "ExpressionStatement",
												"src": "1357:53:13"
											},
											{
												"expression": {
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1837,
														"name": "_escrow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "1421:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_RefundEscrow_$1437",
															"typeString": "contract RefundEscrow"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1841,
																"name": "inWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "1448:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1431:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_creation_nonpayable$_t_address_payable_$returns$_t_contract$_RefundEscrow_$1437_$",
																"typeString": "function (address payable) returns (contract RefundEscrow)"
															},
															"typeName": {
																"id": 1839,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1838,
																	"name": "RefundEscrow",
																	"nameLocations": [
																		"1435:12:13"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 1437,
																	"src": "1435:12:13"
																},
																"referencedDeclaration": 1437,
																"src": "1435:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RefundEscrow_$1437",
																	"typeString": "contract RefundEscrow"
																}
															}
														},
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1431:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_RefundEscrow_$1437",
															"typeString": "contract RefundEscrow"
														}
													},
													"src": "1421:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_RefundEscrow_$1437",
														"typeString": "contract RefundEscrow"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "1421:36:13"
											},
											{
												"expression": {
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1845,
														"name": "_goal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "1468:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1846,
														"name": "inGoal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "1476:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1468:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "1468:14:13"
											}
										]
									},
									"documentation": {
										"id": 1823,
										"nodeType": "StructuredDocumentation",
										"src": "1184:95:13",
										"text": " @dev Constructor, creates RefundEscrow.\n @param inGoal Funding goal"
									},
									"id": 1850,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "inGoal",
												"nameLocation": "1306:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "1298:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "1330:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "1314:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1314:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:42:13"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1346:0:13"
									},
									"scope": 1910,
									"src": "1285:205:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "1623:31:13",
										"statements": [
											{
												"expression": {
													"id": 1856,
													"name": "_goal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1819,
													"src": "1641:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1855,
												"id": 1857,
												"nodeType": "Return",
												"src": "1634:12:13"
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "1498:73:13",
										"text": " @return minimum amount of funds to be raised in wei."
									},
									"functionSelector": "40193883",
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "goal",
									"nameLocation": "1586:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1590:2:13"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "1614:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:9:13"
									},
									"scope": 1910,
									"src": "1577:77:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "1871:45:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1868,
															"name": "refundee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "1899:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"id": 1865,
															"name": "_escrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "1882:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_RefundEscrow_$1437",
																"typeString": "contract RefundEscrow"
															}
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1890:8:13",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1161,
														"src": "1882:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable) external"
														}
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1882:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1870,
												"nodeType": "ExpressionStatement",
												"src": "1882:26:13"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "1666:142:13",
										"text": " @dev Investors can claim refunds here if crowdsale is unsuccessful.\n @param refundee Whose refund will be claimed."
									},
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimRefund",
									"nameLocation": "1823:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "refundee",
												"nameLocation": "1852:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1836:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:26:13"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:0:13"
									},
									"scope": 1910,
									"src": "1814:102:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "1962:74:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1875,
															"name": "_escrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "1973:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_RefundEscrow_$1437",
																"typeString": "contract RefundEscrow"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1981:5:13",
														"memberName": "close",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1372,
														"src": "1973:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1973:15:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "1973:15:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1880,
															"name": "_escrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "1999:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_RefundEscrow_$1437",
																"typeString": "contract RefundEscrow"
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2007:19:13",
														"memberName": "beneficiaryWithdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1420,
														"src": "1999:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:29:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "1999:29:13"
											}
										]
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_closeAndWithdraw",
									"nameLocation": "1933:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:2:13"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1962:0:13"
									},
									"scope": 1910,
									"src": "1924:112:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "2080:42:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1889,
															"name": "_escrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "2091:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_RefundEscrow_$1437",
																"typeString": "contract RefundEscrow"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2099:13:13",
														"memberName": "enableRefunds",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1396,
														"src": "2091:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "2091:23:13"
											}
										]
									},
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_enableRefunds",
									"nameLocation": "2053:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:2:13"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:13"
									},
									"scope": 1910,
									"src": "2044:78:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "2167:66:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1904,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2212:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2212:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1898,
																"name": "_escrow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "2178:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_RefundEscrow_$1437",
																	"typeString": "contract RefundEscrow"
																}
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2186:7:13",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1348,
															"src": "2178:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
																"typeString": "function (address) payable external"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 1901,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2201:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2205:5:13",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2201:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2178:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
															"typeString": "function (address) payable external"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:47:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1907,
												"nodeType": "ExpressionStatement",
												"src": "2178:47:13"
											}
										]
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_depositInEscrow",
									"nameLocation": "2139:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:2:13"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:13"
									},
									"scope": 1910,
									"src": "2130:103:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1911,
							"src": "906:1330:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2203:13"
				},
				"id": 13
			},
			"crowdsale/crowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"Context": [
							1127
						],
						"Crowdsale": [
							2220
						],
						"IERC20": [
							363
						],
						"IERC20Permit": [
							399
						],
						"ReentrancyGuard": [
							285
						],
						"SafeERC20": [
							775
						],
						"SafeMath": [
							1749
						]
					},
					"id": 2221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1912,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 1913,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2221,
							"sourceUnit": 1128,
							"src": "60:51:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1914,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2221,
							"sourceUnit": 364,
							"src": "113:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2221,
							"sourceUnit": 286,
							"src": "171:62:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1916,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2221,
							"sourceUnit": 776,
							"src": "235:65:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1917,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2221,
							"sourceUnit": 1750,
							"src": "302:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1919,
										"name": "Context",
										"nameLocations": [
											"1102:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "1102:7:14"
									},
									"id": 1920,
									"nodeType": "InheritanceSpecifier",
									"src": "1102:7:14"
								},
								{
									"baseName": {
										"id": 1921,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1111:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 285,
										"src": "1111:15:14"
									},
									"id": 1922,
									"nodeType": "InheritanceSpecifier",
									"src": "1111:15:14"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1918,
								"nodeType": "StructuredDocumentation",
								"src": "363:706:14",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 2220,
							"linearizedBaseContracts": [
								2220,
								285,
								1127
							],
							"name": "Crowdsale",
							"nameLocation": "1089:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1925,
									"libraryName": {
										"id": 1923,
										"name": "SafeMath",
										"nameLocations": [
											"1140:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "1140:8:14"
									},
									"nodeType": "UsingForDirective",
									"src": "1134:27:14",
									"typeName": {
										"id": 1924,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1153:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1929,
									"libraryName": {
										"id": 1926,
										"name": "SafeERC20",
										"nameLocations": [
											"1173:9:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "1173:9:14"
									},
									"nodeType": "UsingForDirective",
									"src": "1167:27:14",
									"typeName": {
										"id": 1928,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1927,
											"name": "IERC20",
											"nameLocations": [
												"1187:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 363,
											"src": "1187:6:14"
										},
										"referencedDeclaration": 363,
										"src": "1187:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$363",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 1932,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1246:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 2220,
									"src": "1231:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$363",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1931,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1930,
											"name": "IERC20",
											"nameLocations": [
												"1231:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 363,
											"src": "1231:6:14"
										},
										"referencedDeclaration": 363,
										"src": "1231:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$363",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1934,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1327:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 2220,
									"src": "1303:31:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 1933,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1303:15:14",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1936,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1647:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 2220,
									"src": "1631:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1935,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1938,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1706:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 2220,
									"src": "1690:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "1725:241:14",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 1949,
									"name": "TokensPurchased",
									"nameLocation": "1978:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "2010:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "1994:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2037:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "2021:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2058:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "2050:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2073:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "2065:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:87:14"
									},
									"src": "1972:109:14"
								},
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "2616:318:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1961,
																"name": "inRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1952,
																"src": "2635:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2644:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2635:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 1960,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2627:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "2627:43:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1968,
																"name": "inWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1954,
																"src": "2689:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2709:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2701:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1969,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2701:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2701:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2689:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2713:39:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 1967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2681:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:72:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "2681:72:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1980,
																		"name": "inToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1957,
																		"src": "2780:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2772:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1978,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2772:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2772:16:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2800:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2792:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1982,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2792:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2792:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2772:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 1977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2764:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:79:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "2764:79:14"
											},
											{
												"expression": {
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1990,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "2856:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1991,
														"name": "inRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "2864:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1993,
												"nodeType": "ExpressionStatement",
												"src": "2856:14:14"
											},
											{
												"expression": {
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1994,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "2881:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1995,
														"name": "inWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "2891:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2881:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 1997,
												"nodeType": "ExpressionStatement",
												"src": "2881:18:14"
											},
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1998,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "2910:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$363",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1999,
														"name": "inToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "2919:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$363",
															"typeString": "contract IERC20"
														}
													},
													"src": "2910:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "2910:16:14"
											}
										]
									},
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "2089:450:14",
										"text": " @param inRate Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param inWallet Address where collected funds will be forwarded to\n @param inToken Address of the token being sold"
									},
									"id": 2003,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "2566:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "2558:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "2590:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "2574:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "2607:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "2600:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1956,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1955,
														"name": "IERC20",
														"nameLocations": [
															"2600:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "2600:6:14"
													},
													"referencedDeclaration": 363,
													"src": "2600:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:58:14"
									},
									"returnParameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:14"
									},
									"scope": 2220,
									"src": "2545:389:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "3259:42:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2008,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "3280:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3280:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2007,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "3270:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "3270:23:14"
											}
										]
									},
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "2942:283:14",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 2013,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:2:14"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:14"
									},
									"scope": 2220,
									"src": "3231:70:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "3340:42:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2017,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "3361:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3361:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2016,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "3351:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "3351:23:14"
											}
										]
									},
									"id": 2022,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:2:14"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:0:14"
									},
									"scope": 2220,
									"src": "3313:69:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "3492:32:14",
										"statements": [
											{
												"expression": {
													"id": 2029,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1932,
													"src": "3510:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 2028,
												"id": 2030,
												"nodeType": "Return",
												"src": "3503:13:14"
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "3390:50:14",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3455:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:2:14"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "3484:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "IERC20",
														"nameLocations": [
															"3484:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "3484:6:14"
													},
													"referencedDeclaration": 363,
													"src": "3484:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:8:14"
									},
									"scope": 2220,
									"src": "3446:78:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2040,
										"nodeType": "Block",
										"src": "3661:33:14",
										"statements": [
											{
												"expression": {
													"id": 2038,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1934,
													"src": "3679:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 2037,
												"id": 2039,
												"nodeType": "Return",
												"src": "3672:14:14"
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "3532:67:14",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 2041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3614:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3620:2:14"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2041,
												"src": "3644:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3644:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3643:17:14"
									},
									"scope": 2220,
									"src": "3605:89:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "3838:31:14",
										"statements": [
											{
												"expression": {
													"id": 2047,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1936,
													"src": "3856:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2046,
												"id": 2048,
												"nodeType": "Return",
												"src": "3849:12:14"
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "3702:76:14",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3793:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3797:2:14"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "3829:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:9:14"
									},
									"scope": 2220,
									"src": "3784:85:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "3988:36:14",
										"statements": [
											{
												"expression": {
													"id": 2056,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1938,
													"src": "4006:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2055,
												"id": 2057,
												"nodeType": "Return",
												"src": "3999:17:14"
											}
										]
									},
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "3877:54:14",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "3946:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:2:14"
									},
									"returnParameters": {
										"id": 2055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "3979:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:9:14"
									},
									"scope": 2220,
									"src": "3937:87:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2116,
										"nodeType": "Block",
										"src": "4357:554:14",
										"statements": [
											{
												"assignments": [
													2068
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4376:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 2116,
														"src": "4368:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4368:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2071,
												"initialValue": {
													"expression": {
														"id": 2069,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4388:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4392:5:14",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4388:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4368:29:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2073,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "4429:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2074,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "4442:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2072,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2145,
														"src": "4408:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4408:44:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "4408:44:14"
											},
											{
												"assignments": [
													2078
												],
												"declarations": [
													{
														"constant": false,
														"id": 2078,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4522:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2116,
														"src": "4514:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4514:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2082,
												"initialValue": {
													"arguments": [
														{
															"id": 2080,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "4547:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2079,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2207,
														"src": "4531:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4514:43:14"
											},
											{
												"expression": {
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2083,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "4595:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2086,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "4623:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2084,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "4608:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4619:3:14",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1613,
															"src": "4608:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4595:38:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "4595:38:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2091,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "4663:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2092,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "4676:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2090,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "4646:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2094,
												"nodeType": "ExpressionStatement",
												"src": "4646:37:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2096,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "4715:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4715:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2098,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "4729:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2099,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "4742:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2100,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "4753:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2095,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "4699:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:61:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2102,
												"nodeType": "EmitStatement",
												"src": "4694:66:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2104,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "4796:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2105,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "4809:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2103,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2193,
														"src": "4773:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4773:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "4773:46:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2108,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "4832:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:15:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "4832:15:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2112,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "4880:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2113,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "4893:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2111,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2154,
														"src": "4858:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4858:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2115,
												"nodeType": "ExpressionStatement",
												"src": "4858:45:14"
											}
										]
									},
									"documentation": {
										"id": 2060,
										"nodeType": "StructuredDocumentation",
										"src": "4032:251:14",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 2117,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2065,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2064,
												"name": "nonReentrant",
												"nameLocations": [
													"4336:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "4336:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4336:12:14"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4298:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4316:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "4308:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:21:14"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4357:0:14"
									},
									"scope": 2220,
									"src": "4289:622:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "5556:296:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2126,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "5575:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5598:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5590:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2127,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5590:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5575:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5602:44:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 2125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5567:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:80:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "5567:80:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2136,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2122,
																"src": "5666:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5679:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5666:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5682:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 2135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5658:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5658:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "5658:52:14"
											},
											{
												"expression": {
													"id": 2142,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5721:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$2220",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "5721:4:14"
											}
										]
									},
									"documentation": {
										"id": 2118,
										"nodeType": "StructuredDocumentation",
										"src": "4919:539:14",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5473:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5502:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "5494:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5494:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5523:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "5515:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5493:40:14"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5556:0:14"
									},
									"scope": 2220,
									"src": "5464:388:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2153,
										"nodeType": "Block",
										"src": "6248:66:14",
										"statements": []
									},
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "5860:289:14",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 2154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6164:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6194:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "6186:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6215:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2154,
												"src": "6207:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:40:14"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6248:0:14"
									},
									"scope": 2220,
									"src": "6155:159:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "6685:64:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2165,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "6716:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2166,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "6729:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2162,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "6696:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6703:12:14",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 432,
														"src": "6696:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$363_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2168,
												"nodeType": "ExpressionStatement",
												"src": "6696:45:14"
											}
										]
									},
									"documentation": {
										"id": 2155,
										"nodeType": "StructuredDocumentation",
										"src": "6322:274:14",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6611:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6634:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "6626:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6626:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6655:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "6647:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6625:42:14"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6685:0:14"
									},
									"scope": 2220,
									"src": "6602:147:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "7108:59:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2179,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2173,
															"src": "7134:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2180,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2175,
															"src": "7147:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2178,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2170,
														"src": "7119:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2182,
												"nodeType": "ExpressionStatement",
												"src": "7119:40:14"
											}
										]
									},
									"documentation": {
										"id": 2171,
										"nodeType": "StructuredDocumentation",
										"src": "6757:260:14",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "7032:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7057:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "7049:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7078:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "7070:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7070:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7048:42:14"
									},
									"returnParameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7108:0:14"
									},
									"scope": 2220,
									"src": "7023:144:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "7534:66:14",
										"statements": []
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "7175:264:14",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7454:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7485:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "7477:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7506:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "7498:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:40:14"
									},
									"returnParameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:14"
									},
									"scope": 2220,
									"src": "7445:155:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "7940:46:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2203,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "7972:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2201,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "7958:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7968:3:14",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1643,
														"src": "7958:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7958:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2200,
												"id": 2205,
												"nodeType": "Return",
												"src": "7951:27:14"
											}
										]
									},
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "7608:242:14",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7865:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7889:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "7881:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7881:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7880:19:14"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "7931:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7931:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7930:9:14"
									},
									"scope": 2220,
									"src": "7856:130:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2218,
										"nodeType": "Block",
										"src": "8120:46:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2214,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8148:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8152:5:14",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8148:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2211,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "8131:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8139:8:14",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8131:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8131:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2217,
												"nodeType": "ExpressionStatement",
												"src": "8131:27:14"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "7994:78:14",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 2219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "8087:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8100:2:14"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8120:0:14"
									},
									"scope": 2220,
									"src": "8078:88:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2221,
							"src": "1071:7098:14",
							"usedErrors": [],
							"usedEvents": [
								1949
							]
						}
					],
					"src": "33:8136:14"
				},
				"id": 14
			},
			"crowdsale/distribution/finalizableCrowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/distribution/finalizableCrowdsale.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"Context": [
							1127
						],
						"Crowdsale": [
							2220
						],
						"FinalizableContract": [
							1806
						],
						"FinalizableCrowdsale": [
							2276
						],
						"IERC20": [
							363
						],
						"IERC20Permit": [
							399
						],
						"Pausable": [
							220
						],
						"ReentrancyGuard": [
							285
						],
						"SafeERC20": [
							775
						],
						"SafeMath": [
							1749
						],
						"TimedCrowdsale": [
							2564
						]
					},
					"id": 2277,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2223,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2277,
							"sourceUnit": 1750,
							"src": "62:57:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/validation/timedCrowdsale.sol",
							"file": "crowdsale/validation/timedCrowdsale.sol",
							"id": 2224,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2277,
							"sourceUnit": 2565,
							"src": "121:49:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/abstractions/finalizable.sol",
							"file": "crowdsale/abstractions/finalizable.sol",
							"id": 2225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2277,
							"sourceUnit": 1807,
							"src": "172:48:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2227,
										"name": "TimedCrowdsale",
										"nameLocations": [
											"430:14:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2564,
										"src": "430:14:15"
									},
									"id": 2228,
									"nodeType": "InheritanceSpecifier",
									"src": "430:14:15"
								},
								{
									"baseName": {
										"id": 2229,
										"name": "FinalizableContract",
										"nameLocations": [
											"446:19:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1806,
										"src": "446:19:15"
									},
									"id": 2230,
									"nodeType": "InheritanceSpecifier",
									"src": "446:19:15"
								}
							],
							"canonicalName": "FinalizableCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2226,
								"nodeType": "StructuredDocumentation",
								"src": "224:162:15",
								"text": " @title FinalizableCrowdsale\n @dev Extension of TimedCrowdsale with a one-off finalization action, where one\n can do extra work after finishing."
							},
							"fullyImplemented": true,
							"id": 2276,
							"linearizedBaseContracts": [
								2276,
								1806,
								2564,
								2220,
								285,
								1127
							],
							"name": "FinalizableCrowdsale",
							"nameLocation": "406:20:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2233,
									"libraryName": {
										"id": 2231,
										"name": "SafeMath",
										"nameLocations": [
											"479:8:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "479:8:15"
									},
									"nodeType": "UsingForDirective",
									"src": "473:27:15",
									"typeName": {
										"id": 2232,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "492:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 2257,
										"nodeType": "Block",
										"src": "1038:8:15",
										"statements": []
									},
									"documentation": {
										"id": 2234,
										"nodeType": "StructuredDocumentation",
										"src": "508:302:15",
										"text": " @dev Constructor, takes crowdsale opening and closing times.\n @param inOpeningTime Crowdsale opening time\n @param inClosingTime Crowdsale closing time\n @param inRate Crowdsale rate\n @param inWallet Crowdsale wallet\n @param inToken Crowdsale token"
									},
									"id": 2258,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2248,
													"name": "inOpeningTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2236,
													"src": "954:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2249,
													"name": "inClosingTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2238,
													"src": "969:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2250,
													"name": "inRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2240,
													"src": "984:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2251,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2242,
													"src": "992:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 2252,
													"name": "inToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2245,
													"src": "1002:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												}
											],
											"id": 2253,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2247,
												"name": "TimedCrowdsale",
												"nameLocations": [
													"939:14:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2564,
												"src": "939:14:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "939:71:15"
										},
										{
											"arguments": [],
											"id": 2255,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2254,
												"name": "FinalizableContract",
												"nameLocations": [
													"1016:19:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1806,
												"src": "1016:19:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1016:21:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "inOpeningTime",
												"nameLocation": "837:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "829:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "inClosingTime",
												"nameLocation": "860:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "852:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "883:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "875:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "907:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "891:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:15:15",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "924:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "917:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2243,
														"name": "IERC20",
														"nameLocations": [
															"917:6:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "917:6:15"
													},
													"referencedDeclaration": 363,
													"src": "917:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:104:15"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:15"
									},
									"scope": 2276,
									"src": "816:230:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1800
									],
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "1246:102:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2264,
																"name": "hasClosed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2514,
																"src": "1265:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1265:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f736564",
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1278:34:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3248fca506ca48c5582f347404c127a5579310ae1e6ed4b284d29eb0ff216ace",
																"typeString": "literal_string \"FinalizableCrowdsale: not closed\""
															},
															"value": "FinalizableCrowdsale: not closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3248fca506ca48c5582f347404c127a5579310ae1e6ed4b284d29eb0ff216ace",
																"typeString": "literal_string \"FinalizableCrowdsale: not closed\""
															}
														],
														"id": 2263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1257:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1257:56:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2268,
												"nodeType": "ExpressionStatement",
												"src": "1257:56:15"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2269,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1324:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FinalizableCrowdsale_$2276_$",
																"typeString": "type(contract super FinalizableCrowdsale)"
															}
														},
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1330:8:15",
														"memberName": "finalize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1800,
														"src": "1324:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1324:16:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "1324:16:15"
											}
										]
									},
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "1054:150:15",
										"text": " @dev Must be called after crowdsale ends, to do some extra finalization\n work. Calls the contract's finalization function."
									},
									"functionSelector": "4bb278f3",
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "finalize",
									"nameLocation": "1219:8:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1237:8:15"
									},
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:15"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:15"
									},
									"scope": 2276,
									"src": "1210:138:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2277,
							"src": "388:963:15",
							"usedErrors": [],
							"usedEvents": [
								1761,
								1949,
								2412
							]
						}
					],
					"src": "33:1318:15"
				},
				"id": 15
			},
			"crowdsale/distribution/refundableCrowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/distribution/refundableCrowdsale.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"ConditionalEscrow": [
							1162
						],
						"Context": [
							1127
						],
						"Crowdsale": [
							2220
						],
						"Escrow": [
							1258
						],
						"FinalizableContract": [
							1806
						],
						"FinalizableCrowdsale": [
							2276
						],
						"IERC20": [
							363
						],
						"IERC20Permit": [
							399
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						],
						"ReentrancyGuard": [
							285
						],
						"RefundEscrow": [
							1437
						],
						"RefundableContract": [
							1910
						],
						"RefundableCrowdsale": [
							2390
						],
						"SafeERC20": [
							775
						],
						"SafeMath": [
							1749
						],
						"TimedCrowdsale": [
							2564
						]
					},
					"id": 2391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2278,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2391,
							"sourceUnit": 1128,
							"src": "62:51:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2280,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2391,
							"sourceUnit": 1750,
							"src": "115:57:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/distribution/finalizableCrowdsale.sol",
							"file": "crowdsale/distribution/finalizableCrowdsale.sol",
							"id": 2281,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2391,
							"sourceUnit": 2277,
							"src": "174:57:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/abstractions/refundable.sol",
							"file": "crowdsale/abstractions/refundable.sol",
							"id": 2282,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2391,
							"sourceUnit": 1911,
							"src": "233:47:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2284,
										"name": "Context",
										"nameLocations": [
											"990:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "990:7:16"
									},
									"id": 2285,
									"nodeType": "InheritanceSpecifier",
									"src": "990:7:16"
								},
								{
									"baseName": {
										"id": 2286,
										"name": "FinalizableCrowdsale",
										"nameLocations": [
											"999:20:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2276,
										"src": "999:20:16"
									},
									"id": 2287,
									"nodeType": "InheritanceSpecifier",
									"src": "999:20:16"
								},
								{
									"baseName": {
										"id": 2288,
										"name": "RefundableContract",
										"nameLocations": [
											"1021:18:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1910,
										"src": "1021:18:16"
									},
									"id": 2289,
									"nodeType": "InheritanceSpecifier",
									"src": "1021:18:16"
								}
							],
							"canonicalName": "RefundableCrowdsale",
							"contractDependencies": [
								1437
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2283,
								"nodeType": "StructuredDocumentation",
								"src": "284:663:16",
								"text": " @title RefundableCrowdsale\n @dev Extension of `FinalizableCrowdsale` contract that adds a funding goal, and the possibility of users\n getting a refund if goal is not met.\n Deprecated, use `RefundablePostDeliveryCrowdsale` instead. Note that if you allow tokens to be traded before the goal\n is met, then an attack is possible in which the attacker purchases tokens from the crowdsale and when they sees that\n the goal is unlikely to be met, they sell their tokens (possibly at a discount). The attacker will be refunded when\n the crowdsale is finalized, and the users that purchased from them will be left with worthless tokens."
							},
							"fullyImplemented": true,
							"id": 2390,
							"linearizedBaseContracts": [
								2390,
								1910,
								2276,
								1806,
								2564,
								2220,
								285,
								1127
							],
							"name": "RefundableCrowdsale",
							"nameLocation": "967:19:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2292,
									"libraryName": {
										"id": 2290,
										"name": "SafeMath",
										"nameLocations": [
											"1053:8:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "1053:8:16"
									},
									"nodeType": "UsingForDirective",
									"src": "1047:27:16",
									"typeName": {
										"id": 2291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1066:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 2320,
										"nodeType": "Block",
										"src": "1442:2:16",
										"statements": []
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "1082:95:16",
										"text": " @dev Constructor, creates RefundEscrow.\n @param inGoal Funding goal"
									},
									"id": 2321,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2309,
													"name": "inOpeningTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2297,
													"src": "1343:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2310,
													"name": "inClosingTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2299,
													"src": "1358:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2311,
													"name": "inRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2301,
													"src": "1373:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2312,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2303,
													"src": "1381:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 2313,
													"name": "inToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2306,
													"src": "1391:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												}
											],
											"id": 2314,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2308,
												"name": "FinalizableCrowdsale",
												"nameLocations": [
													"1322:20:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2276,
												"src": "1322:20:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1322:77:16"
										},
										{
											"arguments": [
												{
													"id": 2316,
													"name": "inGoal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2295,
													"src": "1424:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2317,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2303,
													"src": "1432:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 2318,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2315,
												"name": "RefundableContract",
												"nameLocations": [
													"1405:18:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1910,
												"src": "1405:18:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1405:36:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "inGoal",
												"nameLocation": "1204:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "1196:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "inOpeningTime",
												"nameLocation": "1220:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "1212:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "inClosingTime",
												"nameLocation": "1243:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "1235:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "1266:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "1258:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "1290:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "1274:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:15:16",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "1307:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "1300:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2305,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2304,
														"name": "IERC20",
														"nameLocations": [
															"1300:6:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "1300:6:16"
													},
													"referencedDeclaration": 363,
													"src": "1300:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:120:16"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1442:0:16"
									},
									"scope": 2390,
									"src": "1183:261:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2344,
										"nodeType": "Block",
										"src": "1654:181:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2328,
																"name": "finalized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "1673:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1673:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a6564",
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1686:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7b130393fa35ff0c09d9006f976400797070339a32be8777612f2bf172118ce",
																"typeString": "literal_string \"RefundableCrowdsale: not finalized\""
															},
															"value": "RefundableCrowdsale: not finalized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7b130393fa35ff0c09d9006f976400797070339a32be8777612f2bf172118ce",
																"typeString": "literal_string \"RefundableCrowdsale: not finalized\""
															}
														],
														"id": 2327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1665:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1665:58:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2332,
												"nodeType": "ExpressionStatement",
												"src": "1665:58:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1742:14:16",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2334,
																	"name": "goalReached",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "1743:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1743:13:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526566756e6461626c6543726f776473616c653a20676f616c2072656163686564",
															"id": 2337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1758:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b70f1607eed4c774d2a2f4c5a756430e404e5829ffeaa00f1b05542215391631",
																"typeString": "literal_string \"RefundableCrowdsale: goal reached\""
															},
															"value": "RefundableCrowdsale: goal reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b70f1607eed4c774d2a2f4c5a756430e404e5829ffeaa00f1b05542215391631",
																"typeString": "literal_string \"RefundableCrowdsale: goal reached\""
															}
														],
														"id": 2333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1734:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1734:60:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2339,
												"nodeType": "ExpressionStatement",
												"src": "1734:60:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2341,
															"name": "refundee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2324,
															"src": "1818:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2340,
														"name": "_claimRefund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "1805:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1805:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2343,
												"nodeType": "ExpressionStatement",
												"src": "1805:22:16"
											}
										]
									},
									"documentation": {
										"id": 2322,
										"nodeType": "StructuredDocumentation",
										"src": "1452:142:16",
										"text": " @dev Investors can claim refunds here if crowdsale is unsuccessful.\n @param refundee Whose refund will be claimed."
									},
									"functionSelector": "bffa55d5",
									"id": 2345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRefund",
									"nameLocation": "1609:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "refundee",
												"nameLocation": "1637:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "1621:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:15:16",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:26:16"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1654:0:16"
									},
									"scope": 2390,
									"src": "1600:235:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "2014:47:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2351,
															"name": "weiRaised",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "2032:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2032:11:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2353,
															"name": "goal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "2047:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2047:6:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2032:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2350,
												"id": 2356,
												"nodeType": "Return",
												"src": "2025:28:16"
											}
										]
									},
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "1843:115:16",
										"text": " @dev Checks whether funding goal was reached.\n @return Whether funding goal was reached"
									},
									"functionSelector": "7d3d6522",
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "goalReached",
									"nameLocation": "1973:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1984:2:16"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "2008:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2008:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:6:16"
									},
									"scope": 2390,
									"src": "1964:97:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1805
									],
									"body": {
										"id": 2379,
										"nodeType": "Block",
										"src": "2203:166:16",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2363,
														"name": "goalReached",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2358,
														"src": "2218:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:13:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2372,
													"nodeType": "Block",
													"src": "2285:43:16",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2369,
																	"name": "_enableRefunds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "2300:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2300:16:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2371,
															"nodeType": "ExpressionStatement",
															"src": "2300:16:16"
														}
													]
												},
												"id": 2373,
												"nodeType": "IfStatement",
												"src": "2214:114:16",
												"trueBody": {
													"id": 2368,
													"nodeType": "Block",
													"src": "2233:46:16",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2365,
																	"name": "_closeAndWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "2248:17:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:19:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2367,
															"nodeType": "ExpressionStatement",
															"src": "2248:19:16"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2374,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2340:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_RefundableCrowdsale_$2390_$",
																"typeString": "type(contract super RefundableCrowdsale)"
															}
														},
														"id": 2376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2346:13:16",
														"memberName": "_finalization",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1805,
														"src": "2340:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2340:21:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2378,
												"nodeType": "ExpressionStatement",
												"src": "2340:21:16"
											}
										]
									},
									"documentation": {
										"id": 2359,
										"nodeType": "StructuredDocumentation",
										"src": "2069:85:16",
										"text": " @dev Escrow finalization task, called when finalize() is called."
									},
									"id": 2380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_finalization",
									"nameLocation": "2169:13:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2361,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:16"
									},
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2182:2:16"
									},
									"returnParameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2203:0:16"
									},
									"scope": 2390,
									"src": "2160:209:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2219
									],
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "2522:37:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2385,
														"name": "_depositInEscrow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "2533:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:18:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2387,
												"nodeType": "ExpressionStatement",
												"src": "2533:18:16"
											}
										]
									},
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "2377:87:16",
										"text": " @dev Overrides Crowdsale fund forwarding, sending funds to escrow."
									},
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "2479:13:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2383,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2512:8:16"
									},
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2492:2:16"
									},
									"returnParameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2522:0:16"
									},
									"scope": 2390,
									"src": "2470:89:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2391,
							"src": "949:1613:16",
							"usedErrors": [],
							"usedEvents": [
								1761,
								1949,
								2412
							]
						}
					],
					"src": "33:2529:16"
				},
				"id": 16
			},
			"crowdsale/validation/timedCrowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/validation/timedCrowdsale.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"Context": [
							1127
						],
						"Crowdsale": [
							2220
						],
						"IERC20": [
							363
						],
						"IERC20Permit": [
							399
						],
						"Pausable": [
							220
						],
						"ReentrancyGuard": [
							285
						],
						"SafeERC20": [
							775
						],
						"SafeMath": [
							1749
						],
						"TimedCrowdsale": [
							2564
						]
					},
					"id": 2565,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2392,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2565,
							"sourceUnit": 1750,
							"src": "62:57:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2565,
							"sourceUnit": 221,
							"src": "121:55:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/crowdsale.sol",
							"file": "crowdsale/crowdsale.sol",
							"id": 2395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2565,
							"sourceUnit": 2221,
							"src": "178:33:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2397,
										"name": "Crowdsale",
										"nameLocations": [
											"356:9:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2220,
										"src": "356:9:17"
									},
									"id": 2398,
									"nodeType": "InheritanceSpecifier",
									"src": "356:9:17"
								}
							],
							"canonicalName": "TimedCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2396,
								"nodeType": "StructuredDocumentation",
								"src": "215:103:17",
								"text": " @title TimedCrowdsale\n @dev Crowdsale accepting contributions only within a time frame."
							},
							"fullyImplemented": true,
							"id": 2564,
							"linearizedBaseContracts": [
								2564,
								2220,
								285,
								1127
							],
							"name": "TimedCrowdsale",
							"nameLocation": "338:14:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2401,
									"libraryName": {
										"id": 2399,
										"name": "SafeMath",
										"nameLocations": [
											"379:8:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1749,
										"src": "379:8:17"
									},
									"nodeType": "UsingForDirective",
									"src": "373:27:17",
									"typeName": {
										"id": 2400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "392:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 2403,
									"mutability": "mutable",
									"name": "_openingTime",
									"nameLocation": "424:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 2564,
									"src": "408:28:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2405,
									"mutability": "mutable",
									"name": "_closingTime",
									"nameLocation": "459:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 2564,
									"src": "443:28:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2404,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2406,
										"nodeType": "StructuredDocumentation",
										"src": "480:145:17",
										"text": " Event for crowdsale extending\n @param newClosingTime new closing time\n @param prevClosingTime old closing time"
									},
									"eventSelector": "46711e222f558a07afd26e5e71b48ecb0a8b2cdcd40faeb1323e05e2c76a2f32",
									"id": 2412,
									"name": "TimedCrowdsaleExtended",
									"nameLocation": "637:22:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"indexed": false,
												"mutability": "mutable",
												"name": "prevClosingTime",
												"nameLocation": "668:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "660:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"indexed": false,
												"mutability": "mutable",
												"name": "newClosingTime",
												"nameLocation": "693:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "685:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:49:17"
									},
									"src": "631:78:17"
								},
								{
									"body": {
										"id": 2422,
										"nodeType": "Block",
										"src": "811:76:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2416,
																"name": "isOpen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2502,
																"src": "830:6:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "830:8:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206e6f74206f70656e",
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "840:26:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739",
																"typeString": "literal_string \"TimedCrowdsale: not open\""
															},
															"value": "TimedCrowdsale: not open"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bf2360fbfefd7b9839cf0bcb3fd2dde1898d3583a14ae764b84d5dfe6555739",
																"typeString": "literal_string \"TimedCrowdsale: not open\""
															}
														],
														"id": 2415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "822:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2420,
												"nodeType": "ExpressionStatement",
												"src": "822:45:17"
											},
											{
												"id": 2421,
												"nodeType": "PlaceholderStatement",
												"src": "878:1:17"
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "717:65:17",
										"text": " @dev Reverts if not in crowdsale time range."
									},
									"id": 2423,
									"name": "onlyWhileOpen",
									"nameLocation": "797:13:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:17"
									},
									"src": "788:99:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2466,
										"nodeType": "Block",
										"src": "1240:412:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2444,
																"name": "inOpeningTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "1314:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 2445,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1331:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1337:9:17",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1331:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1314:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206f70656e696e672074696d65206973206265666f72652063757272656e742074696d65",
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1348:53:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd",
																"typeString": "literal_string \"TimedCrowdsale: opening time is before current time\""
															},
															"value": "TimedCrowdsale: opening time is before current time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_049ff370aa07a5b137b2f9ceff31b2cbde98f43948a6244366d58c828d6914cd",
																"typeString": "literal_string \"TimedCrowdsale: opening time is before current time\""
															}
														],
														"id": 2443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1306:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1306:96:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2450,
												"nodeType": "ExpressionStatement",
												"src": "1306:96:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2452,
																"name": "inClosingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2428,
																"src": "1475:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2453,
																"name": "inOpeningTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "1491:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1475:29:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206f70656e696e672074696d65206973206e6f74206265666f726520636c6f73696e672074696d65",
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1506:57:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b",
																"typeString": "literal_string \"TimedCrowdsale: opening time is not before closing time\""
															},
															"value": "TimedCrowdsale: opening time is not before closing time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4568c1d5864c9af3db68fa3e123fb60f1806b0545cf51e08bc4fdd1258bd2e4b",
																"typeString": "literal_string \"TimedCrowdsale: opening time is not before closing time\""
															}
														],
														"id": 2451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1467:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:97:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2457,
												"nodeType": "ExpressionStatement",
												"src": "1467:97:17"
											},
											{
												"expression": {
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2458,
														"name": "_openingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "1577:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2459,
														"name": "inOpeningTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "1592:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1577:28:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2461,
												"nodeType": "ExpressionStatement",
												"src": "1577:28:17"
											},
											{
												"expression": {
													"id": 2464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2462,
														"name": "_closingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "1616:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2463,
														"name": "inClosingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2428,
														"src": "1631:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:28:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2465,
												"nodeType": "ExpressionStatement",
												"src": "1616:28:17"
											}
										]
									},
									"documentation": {
										"id": 2424,
										"nodeType": "StructuredDocumentation",
										"src": "895:185:17",
										"text": " @dev Constructor, takes crowdsale opening and closing times.\n @param inOpeningTime Crowdsale opening time\n @param inClosingTime Crowdsale closing time"
									},
									"id": 2467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2438,
													"name": "inRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2430,
													"src": "1213:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2439,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2432,
													"src": "1221:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 2440,
													"name": "inToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2435,
													"src": "1231:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												}
											],
											"id": 2441,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2437,
												"name": "Crowdsale",
												"nameLocations": [
													"1203:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2220,
												"src": "1203:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "1203:36:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "inOpeningTime",
												"nameLocation": "1107:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1099:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "inClosingTime",
												"nameLocation": "1130:13:17",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1122:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "1153:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1145:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "1177:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1161:24:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:15:17",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "1194:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1187:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2433,
														"name": "IERC20",
														"nameLocations": [
															"1187:6:17"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "1187:6:17"
													},
													"referencedDeclaration": 363,
													"src": "1187:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:104:17"
									},
									"returnParameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1240:0:17"
									},
									"scope": 2564,
									"src": "1086:566:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "1775:38:17",
										"statements": [
											{
												"expression": {
													"id": 2473,
													"name": "_openingTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2403,
													"src": "1793:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2472,
												"id": 2474,
												"nodeType": "Return",
												"src": "1786:19:17"
											}
										]
									},
									"documentation": {
										"id": 2468,
										"nodeType": "StructuredDocumentation",
										"src": "1660:56:17",
										"text": " @return the crowdsale opening time."
									},
									"functionSelector": "b7a8807c",
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "openingTime",
									"nameLocation": "1731:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1742:2:17"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "1766:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1765:9:17"
									},
									"scope": 2564,
									"src": "1722:91:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2484,
										"nodeType": "Block",
										"src": "1936:38:17",
										"statements": [
											{
												"expression": {
													"id": 2482,
													"name": "_closingTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2405,
													"src": "1954:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2481,
												"id": 2483,
												"nodeType": "Return",
												"src": "1947:19:17"
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "1821:56:17",
										"text": " @return the crowdsale closing time."
									},
									"functionSelector": "4b6753bc",
									"id": 2485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closingTime",
									"nameLocation": "1892:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1903:2:17"
									},
									"returnParameters": {
										"id": 2481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "1927:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1926:9:17"
									},
									"scope": 2564,
									"src": "1883:91:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2501,
										"nodeType": "Block",
										"src": "2109:147:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2491,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2182:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2188:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2182:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 2493,
															"name": "_openingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "2201:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2182:31:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2495,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2217:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2223:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2217:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2497,
															"name": "_closingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "2236:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2217:31:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2182:66:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2490,
												"id": 2500,
												"nodeType": "Return",
												"src": "2175:73:17"
											}
										]
									},
									"documentation": {
										"id": 2486,
										"nodeType": "StructuredDocumentation",
										"src": "1982:76:17",
										"text": " @return true if the crowdsale is open, false otherwise."
									},
									"functionSelector": "47535d7b",
									"id": 2502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOpen",
									"nameLocation": "2073:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2079:2:17"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "2103:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2103:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2102:6:17"
									},
									"scope": 2564,
									"src": "2064:192:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2513,
										"nodeType": "Block",
										"src": "2474:111:17",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2508,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2547:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2553:9:17",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2547:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2510,
														"name": "_closingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "2565:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2547:30:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2507,
												"id": 2512,
												"nodeType": "Return",
												"src": "2540:37:17"
											}
										]
									},
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "2264:156:17",
										"text": " @dev Checks whether the period in which the crowdsale is open has already elapsed.\n @return Whether crowdsale period has elapsed"
									},
									"functionSelector": "1515bc2b",
									"id": 2514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasClosed",
									"nameLocation": "2435:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:2:17"
									},
									"returnParameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "2468:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2468:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2467:6:17"
									},
									"scope": 2564,
									"src": "2426:159:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2145
									],
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "2892:69:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2528,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2517,
															"src": "2930:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2529,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "2943:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2525,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2903:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TimedCrowdsale_$2564_$",
																"typeString": "type(contract super TimedCrowdsale)"
															}
														},
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2909:20:17",
														"memberName": "_preValidatePurchase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2145,
														"src": "2903:26:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2903:50:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2531,
												"nodeType": "ExpressionStatement",
												"src": "2903:50:17"
											}
										]
									},
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "2593:186:17",
										"text": " @dev Extend parent behavior requiring to be within contributing period.\n @param beneficiary Token purchaser\n @param weiAmount Amount of wei contributed"
									},
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2523,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2522,
												"name": "onlyWhileOpen",
												"nameLocations": [
													"2873:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2423,
												"src": "2873:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2873:13:17"
										}
									],
									"name": "_preValidatePurchase",
									"nameLocation": "2794:20:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2521,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2864:8:17"
									},
									"parameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2823:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "2815:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2815:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "2844:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "2836:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:40:17"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2892:0:17"
									},
									"scope": 2564,
									"src": "2785:176:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2562,
										"nodeType": "Block",
										"src": "3125:354:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3144:12:17",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2540,
																	"name": "hasClosed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "3145:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3145:11:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a20616c726561647920636c6f736564",
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3158:32:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_634cbd3056ed66fa4fcc9199d612886e4e9f90ebde3b0c138adb38373b973e15",
																"typeString": "literal_string \"TimedCrowdsale: already closed\""
															},
															"value": "TimedCrowdsale: already closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_634cbd3056ed66fa4fcc9199d612886e4e9f90ebde3b0c138adb38373b973e15",
																"typeString": "literal_string \"TimedCrowdsale: already closed\""
															}
														],
														"id": 2539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3136:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3136:55:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2545,
												"nodeType": "ExpressionStatement",
												"src": "3136:55:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2547,
																"name": "newClosingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2536,
																"src": "3264:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2548,
																"name": "_closingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "3281:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3264:29:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d656443726f776473616c653a206e657720636c6f73696e672074696d65206973206265666f72652063757272656e7420636c6f73696e672074696d65",
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3295:65:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_800b650950b0df3fae7606c8f23fafd9964a9f77f965079b0fc21e897862f129",
																"typeString": "literal_string \"TimedCrowdsale: new closing time is before current closing time\""
															},
															"value": "TimedCrowdsale: new closing time is before current closing time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_800b650950b0df3fae7606c8f23fafd9964a9f77f965079b0fc21e897862f129",
																"typeString": "literal_string \"TimedCrowdsale: new closing time is before current closing time\""
															}
														],
														"id": 2546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3256:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:105:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2552,
												"nodeType": "ExpressionStatement",
												"src": "3256:105:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2554,
															"name": "_closingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "3402:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2555,
															"name": "newClosingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2536,
															"src": "3416:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2553,
														"name": "TimedCrowdsaleExtended",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2412,
														"src": "3379:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3379:52:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2557,
												"nodeType": "EmitStatement",
												"src": "3374:57:17"
											},
											{
												"expression": {
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2558,
														"name": "_closingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "3442:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2559,
														"name": "newClosingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2536,
														"src": "3457:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3442:29:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2561,
												"nodeType": "ExpressionStatement",
												"src": "3442:29:17"
											}
										]
									},
									"documentation": {
										"id": 2534,
										"nodeType": "StructuredDocumentation",
										"src": "2969:96:17",
										"text": " @dev Extend crowdsale.\n @param newClosingTime Crowdsale closing time"
									},
									"id": 2563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extendTime",
									"nameLocation": "3080:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "newClosingTime",
												"nameLocation": "3100:14:17",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "3092:22:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3091:24:17"
									},
									"returnParameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3125:0:17"
									},
									"scope": 2564,
									"src": "3071:408:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2565,
							"src": "320:3162:17",
							"usedErrors": [],
							"usedEvents": [
								1949,
								2412
							]
						}
					],
					"src": "33:3449:17"
				},
				"id": 17
			}
		}
	}
}