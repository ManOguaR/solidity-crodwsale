{
	"id": "c5c9428b18868f5daba8a9f712f2e2c7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"crowdsale/validation/individuallyCappedCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\n\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"crowdsale/crowdsale.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n/**\r\n * @title IndividuallyCappedCrowdsale\r\n * @dev Crowdsale with per-beneficiary caps.\r\n */\r\ncontract IndividuallyCappedCrowdsale is Crowdsale, AccessControl {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) private _contributions;\r\n    mapping(address => uint256) private _caps;\r\n    \r\n    constructor (\r\n        uint256 inRate, \r\n        address payable inWallet, \r\n        IERC20 inToken\r\n    ) Crowdsale(inRate, inWallet, inToken) {}\r\n    /**\r\n     * @dev Sets a specific beneficiary's maximum contribution.\r\n     * @param beneficiary Address to be capped\r\n     * @param cap Wei limit for individual contribution\r\n     */\r\n    function setCap(address beneficiary, uint256 cap) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _caps[beneficiary] = cap;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the cap of a specific beneficiary.\r\n     * @param beneficiary Address whose cap is to be checked\r\n     * @return Current cap for individual beneficiary\r\n     */\r\n    function getCap(address beneficiary) public view returns (uint256) {\r\n        return _caps[beneficiary];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the amount contributed so far by a specific beneficiary.\r\n     * @param beneficiary Address of contributor\r\n     * @return Beneficiary contribution so far\r\n     */\r\n    function getContribution(address beneficiary) public view returns (uint256) {\r\n        return _contributions[beneficiary];\r\n    }\r\n\r\n    /**\r\n     * @dev Extend parent behavior requiring purchase to respect the beneficiary's funding cap.\r\n     * @param beneficiary Token purchaser\r\n     * @param weiAmount Amount of wei contributed\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override view {\r\n        super._preValidatePurchase(beneficiary, weiAmount);\r\n        // solhint-disable-next-line max-line-length\r\n        require(_contributions[beneficiary].add(weiAmount) <= _caps[beneficiary], \"IndividuallyCappedCrowdsale: beneficiary's cap exceeded\");\r\n    }\r\n\r\n    /**\r\n     * @dev Extend parent behavior to update beneficiary contributions.\r\n     * @param beneficiary Token purchaser\r\n     * @param weiAmount Amount of wei contributed\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal override {\r\n        super._updatePurchasingState(beneficiary, weiAmount);\r\n        _contributions[beneficiary] = _contributions[beneficiary].add(weiAmount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"crowdsale/crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Crowdsale\r\n * @dev Crowdsale is a base contract for managing a token crowdsale,\r\n * allowing investors to purchase tokens with ether. This contract implements\r\n * such functionality in its most fundamental form and can be extended to provide additional\r\n * functionality and/or custom behavior.\r\n * The external interface represents the basic interface for purchasing tokens, and conforms\r\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\r\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\r\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\r\n * behavior.\r\n */\r\nabstract contract Crowdsale is Context, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The token being sold\r\n    IERC20 private _token;\r\n\r\n    // Address where funds are collected\r\n    address payable private _wallet;\r\n\r\n    // How many token units a buyer gets per wei.\r\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\r\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\r\n    // 1 wei will give you 1 unit, or 0.001 TOK.\r\n    uint256 private _rate;\r\n\r\n    // Amount of wei raised\r\n    uint256 private _weiRaised;\r\n\r\n    /**\r\n     * Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of tokens purchased\r\n     */\r\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    /**\r\n     * @param inRate Number of token units a buyer gets per wei\r\n     * @dev The rate is the conversion between wei and the smallest and indivisible\r\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\r\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\r\n     * @param inWallet Address where collected funds will be forwarded to\r\n     * @param inToken Address of the token being sold\r\n     */\r\n    constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {\r\n        require(inRate > 0, \"Crowdsale: rate is 0\");\r\n        require(inWallet != address(0), \"Crowdsale: wallet is the zero address\");\r\n        require(address(inToken) != address(0), \"Crowdsale: token is the zero address\");\r\n\r\n        _rate = inRate;\r\n        _wallet = inWallet;\r\n        _token = inToken;\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function ***DO NOT OVERRIDE***\r\n     * Note that other contracts will transfer funds with a base gas stipend\r\n     * of 2300, which is not enough to call buyTokens. Consider calling\r\n     * buyTokens directly when purchasing tokens from a contract.\r\n     */\r\n    fallback() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n    \r\n    receive() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @return the token being sold.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the address where funds are collected.\r\n     */\r\n    function wallet() public view returns (address payable) {\r\n        return _wallet;\r\n    }\r\n\r\n    /**\r\n     * @return the number of token units a buyer gets per wei.\r\n     */\r\n    function rate() public virtual view returns (uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    /**\r\n     * @return the amount of wei raised.\r\n     */\r\n    function weiRaised() public view returns (uint256) {\r\n        return _weiRaised;\r\n    }\r\n\r\n    /**\r\n     * @dev low level token purchase ***DO NOT OVERRIDE***\r\n     * This function has a non-reentrancy guard, so it shouldn't be called by\r\n     * another `nonReentrant` function.\r\n     * @param beneficiary Recipient of the token purchase\r\n     */\r\n    function buyTokens(address beneficiary) public nonReentrant payable {\r\n        uint256 weiAmount = msg.value;\r\n        _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n        // calculate token amount to be created\r\n        uint256 tokens = _getTokenAmount(weiAmount);\r\n\r\n        // update state\r\n        _weiRaised = _weiRaised.add(weiAmount);\r\n\r\n        _processPurchase(beneficiary, tokens);\r\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\r\n\r\n        _updatePurchasingState(beneficiary, weiAmount);\r\n\r\n        _forwardFunds();\r\n        _postValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\r\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\r\n     * conditions are not met.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\r\n     * its tokens.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param tokenAmount Number of tokens to be emitted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _token.safeTransfer(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\r\n     * tokens.\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param tokenAmount Number of tokens to be purchased\r\n     */\r\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _deliverTokens(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\r\n     * etc.)\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Override to extend the way in which ether is converted to tokens.\r\n     * @param weiAmount Value in wei to be converted into tokens\r\n     * @return Number of tokens that can be purchased with the specified _weiAmount\r\n     */\r\n    function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {\r\n        return weiAmount.mul(_rate);\r\n    }\r\n\r\n    /**\r\n     * @dev Determines how ETH is stored/forwarded on purchases.\r\n     */\r\n    function _forwardFunds() internal virtual {\r\n        _wallet.transfer(msg.value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 399,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/individuallyCappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/individuallyCappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205c24b455477bc2af814cafb59cb7bd4e26bd136094fee9d0a670479f3a12932c64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205c24b455477bc2af814cafb59cb7bd4e26bd136094fee9d0a670479f3a12932c64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x24 0xB4 SSTORE SELFBALANCE PUSH28 0xC2AF814CAFB59CB7BD4E26BD136094FEE9D0A670479F3A12932C6473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "220:2559:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205c24b455477bc2af814cafb59cb7bd4e26bd136094fee9d0a670479f3a12932c64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x24 0xB4 SSTORE SELFBALANCE PUSH28 0xC2AF814CAFB59CB7BD4E26BD136094FEE9D0A670479F3A12932C6473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "220:2559:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c24b455477bc2af814cafb59cb7bd4e26bd136094fee9d0a670479f3a12932c64736f6c63430008150033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/individuallyCappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x91664DBCF17BB45A6079AEDA4B705012075E80D52B551ABF072B32B46091AE64 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "202:12582:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x91664DBCF17BB45A6079AEDA4B705012075E80D52B551ABF072B32B46091AE64 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "202:12582:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/individuallyCappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/individuallyCappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f5e097cb597ed52993bfe45d336680951b11bf5d31ac976152129c8883b150bf64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f5e097cb597ed52993bfe45d336680951b11bf5d31ac976152129c8883b150bf64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xE0 SWAP8 0xCB MSIZE PUSH31 0xD52993BFE45D336680951B11BF5D31AC976152129C8883B150BF64736F6C63 NUMBER STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "215:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f5e097cb597ed52993bfe45d336680951b11bf5d31ac976152129c8883b150bf64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xE0 SWAP8 0xCB MSIZE PUSH31 0xD52993BFE45D336680951B11BF5D31AC976152129C8883B150BF64736F6C63 NUMBER STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "215:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5e097cb597ed52993bfe45d336680951b11bf5d31ac976152129c8883b150bf64736f6c63430008150033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/individuallyCappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"inRate": "Number of token units a buyer gets per wei",
									"inToken": "Address of the token being sold",
									"inWallet": "Address where collected funds will be forwarded to"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"inRate\":\"Number of token units a buyer gets per wei\",\"inToken\":\"Address of the token being sold\",\"inWallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 399,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2865,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)531"
							},
							{
								"astId": 2867,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 2869,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2871,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)531": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/validation/individuallyCappedCrowdsale.sol": {
				"IndividuallyCappedCrowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inRate",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "inWallet",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "inToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "getCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "getContribution",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "setCap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale with per-beneficiary caps.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"getCap(address)": {
								"details": "Returns the cap of a specific beneficiary.",
								"params": {
									"beneficiary": "Address whose cap is to be checked"
								},
								"returns": {
									"_0": "Current cap for individual beneficiary"
								}
							},
							"getContribution(address)": {
								"details": "Returns the amount contributed so far by a specific beneficiary.",
								"params": {
									"beneficiary": "Address of contributor"
								},
								"returns": {
									"_0": "Beneficiary contribution so far"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setCap(address,uint256)": {
								"details": "Sets a specific beneficiary's maximum contribution.",
								"params": {
									"beneficiary": "Address to be capped",
									"cap": "Wei limit for individual contribution"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "IndividuallyCappedCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":313:2659  contract IndividuallyCappedCrowdsale is Crowdsale, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":531:677  constructor (... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":648:654  inRate */\n  dup3\n    /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":656:664  inWallet */\n  dup3\n    /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":666:673  inToken */\n  dup3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2644:2645  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2635:2641  inRate */\n  dup4\n    /* \"crowdsale/crowdsale.sol\":2635:2645  inRate > 0 */\n  gt\n    /* \"crowdsale/crowdsale.sol\":2627:2670  require(inRate > 0, \"Crowdsale: rate is 0\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"crowdsale/crowdsale.sol\":2709:2710  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2689:2697  inWallet */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2681:2753  require(inWallet != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"crowdsale/crowdsale.sol\":2800:2801  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2780:2787  inToken */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2764:2843  require(address(inToken) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"crowdsale/crowdsale.sol\":2864:2870  inRate */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2856:2861  _rate */\n  0x03\n    /* \"crowdsale/crowdsale.sol\":2856:2870  _rate = inRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2891:2899  inWallet */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2881:2888  _wallet */\n  0x02\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2881:2899  _wallet = inWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2919:2926  inToken */\n  dup1\n    /* \"crowdsale/crowdsale.sol\":2910:2916  _token */\n  0x01\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2910:2926  _token = inToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2545:2934  constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {... */\n  pop\n  pop\n  pop\n    /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":531:677  constructor (... */\n  pop\n  pop\n  pop\n    /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":313:2659  contract IndividuallyCappedCrowdsale is Crowdsale, AccessControl {... */\n  jump(tag_19)\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_24:\n    /* \"#utility.yul\":490:514   */\n  tag_47\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_23\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_48:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_25:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_50\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_24\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_26:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:930   */\ntag_27:\n    /* \"#utility.yul\":871:878   */\n  0x00\n    /* \"#utility.yul\":900:924   */\n  tag_53\n    /* \"#utility.yul\":918:923   */\n  dup3\n    /* \"#utility.yul\":900:924   */\n  tag_26\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":889:924   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":936:1074   */\ntag_28:\n    /* \"#utility.yul\":1017:1049   */\n  tag_55\n    /* \"#utility.yul\":1043:1048   */\n  dup2\n    /* \"#utility.yul\":1017:1049   */\n  tag_27\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1010:1015   */\n  dup2\n    /* \"#utility.yul\":1007:1050   */\n  eq\n    /* \"#utility.yul\":997:1068   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1061:1062   */\n  dup1\n    /* \"#utility.yul\":1054:1066   */\n  revert\n    /* \"#utility.yul\":997:1068   */\ntag_56:\n    /* \"#utility.yul\":936:1074   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1080:1239   */\ntag_29:\n    /* \"#utility.yul\":1145:1150   */\n  0x00\n    /* \"#utility.yul\":1176:1182   */\n  dup2\n    /* \"#utility.yul\":1170:1183   */\n  mload\n    /* \"#utility.yul\":1161:1183   */\n  swap1\n  pop\n    /* \"#utility.yul\":1192:1233   */\n  tag_58\n    /* \"#utility.yul\":1227:1232   */\n  dup2\n    /* \"#utility.yul\":1192:1233   */\n  tag_28\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1080:1239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1245:1341   */\ntag_30:\n    /* \"#utility.yul\":1282:1289   */\n  0x00\n    /* \"#utility.yul\":1311:1335   */\n  tag_60\n    /* \"#utility.yul\":1329:1334   */\n  dup3\n    /* \"#utility.yul\":1311:1335   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1300:1335   */\n  swap1\n  pop\n    /* \"#utility.yul\":1245:1341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1347:1457   */\ntag_31:\n    /* \"#utility.yul\":1398:1405   */\n  0x00\n    /* \"#utility.yul\":1427:1451   */\n  tag_62\n    /* \"#utility.yul\":1445:1450   */\n  dup3\n    /* \"#utility.yul\":1427:1451   */\n  tag_30\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1416:1451   */\n  swap1\n  pop\n    /* \"#utility.yul\":1347:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1613   */\ntag_32:\n    /* \"#utility.yul\":1550:1588   */\n  tag_64\n    /* \"#utility.yul\":1582:1587   */\n  dup2\n    /* \"#utility.yul\":1550:1588   */\n  tag_31\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1543:1548   */\n  dup2\n    /* \"#utility.yul\":1540:1589   */\n  eq\n    /* \"#utility.yul\":1530:1607   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1603:1604   */\n  0x00\n    /* \"#utility.yul\":1600:1601   */\n  dup1\n    /* \"#utility.yul\":1593:1605   */\n  revert\n    /* \"#utility.yul\":1530:1607   */\ntag_65:\n    /* \"#utility.yul\":1463:1613   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1790   */\ntag_33:\n    /* \"#utility.yul\":1690:1695   */\n  0x00\n    /* \"#utility.yul\":1721:1727   */\n  dup2\n    /* \"#utility.yul\":1715:1728   */\n  mload\n    /* \"#utility.yul\":1706:1728   */\n  swap1\n  pop\n    /* \"#utility.yul\":1737:1784   */\n  tag_67\n    /* \"#utility.yul\":1778:1783   */\n  dup2\n    /* \"#utility.yul\":1737:1784   */\n  tag_32\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1619:1790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:2503   */\ntag_3:\n    /* \"#utility.yul\":1906:1912   */\n  0x00\n    /* \"#utility.yul\":1914:1920   */\n  dup1\n    /* \"#utility.yul\":1922:1928   */\n  0x00\n    /* \"#utility.yul\":1971:1973   */\n  0x60\n    /* \"#utility.yul\":1959:1968   */\n  dup5\n    /* \"#utility.yul\":1950:1957   */\n  dup7\n    /* \"#utility.yul\":1946:1969   */\n  sub\n    /* \"#utility.yul\":1942:1974   */\n  slt\n    /* \"#utility.yul\":1939:2058   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1977:2056   */\n  tag_70\n  tag_21\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1939:2058   */\ntag_69:\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2122:2186   */\n  tag_71\n    /* \"#utility.yul\":2178:2185   */\n  dup7\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2158:2167   */\n  dup8\n    /* \"#utility.yul\":2154:2176   */\n  add\n    /* \"#utility.yul\":2122:2186   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2112:2186   */\n  swap4\n  pop\n    /* \"#utility.yul\":2068:2196   */\n  pop\n    /* \"#utility.yul\":2235:2237   */\n  0x20\n    /* \"#utility.yul\":2261:2333   */\n  tag_72\n    /* \"#utility.yul\":2325:2332   */\n  dup7\n    /* \"#utility.yul\":2316:2322   */\n  dup3\n    /* \"#utility.yul\":2305:2314   */\n  dup8\n    /* \"#utility.yul\":2301:2323   */\n  add\n    /* \"#utility.yul\":2261:2333   */\n  tag_29\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2251:2333   */\n  swap3\n  pop\n    /* \"#utility.yul\":2206:2343   */\n  pop\n    /* \"#utility.yul\":2382:2384   */\n  0x40\n    /* \"#utility.yul\":2408:2486   */\n  tag_73\n    /* \"#utility.yul\":2478:2485   */\n  dup7\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2458:2467   */\n  dup8\n    /* \"#utility.yul\":2454:2476   */\n  add\n    /* \"#utility.yul\":2408:2486   */\n  tag_33\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2398:2486   */\n  swap2\n  pop\n    /* \"#utility.yul\":2353:2496   */\n  pop\n    /* \"#utility.yul\":1796:2503   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2509:2678   */\ntag_34:\n    /* \"#utility.yul\":2593:2604   */\n  0x00\n    /* \"#utility.yul\":2627:2633   */\n  dup3\n    /* \"#utility.yul\":2622:2625   */\n  dup3\n    /* \"#utility.yul\":2615:2634   */\n  mstore\n    /* \"#utility.yul\":2667:2671   */\n  0x20\n    /* \"#utility.yul\":2662:2665   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2643:2672   */\n  swap1\n  pop\n    /* \"#utility.yul\":2509:2678   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2684:2854   */\ntag_35:\n    /* \"#utility.yul\":2824:2846   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":2820:2821   */\n  0x00\n    /* \"#utility.yul\":2812:2818   */\n  dup3\n    /* \"#utility.yul\":2808:2822   */\n  add\n    /* \"#utility.yul\":2801:2847   */\n  mstore\n    /* \"#utility.yul\":2684:2854   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2860:3226   */\ntag_36:\n    /* \"#utility.yul\":3002:3005   */\n  0x00\n    /* \"#utility.yul\":3023:3090   */\n  tag_77\n    /* \"#utility.yul\":3087:3089   */\n  0x14\n    /* \"#utility.yul\":3082:3085   */\n  dup4\n    /* \"#utility.yul\":3023:3090   */\n  tag_34\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3016:3090   */\n  swap2\n  pop\n    /* \"#utility.yul\":3099:3192   */\n  tag_78\n    /* \"#utility.yul\":3188:3191   */\n  dup3\n    /* \"#utility.yul\":3099:3192   */\n  tag_35\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3217:3219   */\n  0x20\n    /* \"#utility.yul\":3212:3215   */\n  dup3\n    /* \"#utility.yul\":3208:3220   */\n  add\n    /* \"#utility.yul\":3201:3220   */\n  swap1\n  pop\n    /* \"#utility.yul\":2860:3226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3651   */\ntag_11:\n    /* \"#utility.yul\":3398:3402   */\n  0x00\n    /* \"#utility.yul\":3436:3438   */\n  0x20\n    /* \"#utility.yul\":3425:3434   */\n  dup3\n    /* \"#utility.yul\":3421:3439   */\n  add\n    /* \"#utility.yul\":3413:3439   */\n  swap1\n  pop\n    /* \"#utility.yul\":3485:3494   */\n  dup2\n    /* \"#utility.yul\":3479:3483   */\n  dup2\n    /* \"#utility.yul\":3475:3495   */\n  sub\n    /* \"#utility.yul\":3471:3472   */\n  0x00\n    /* \"#utility.yul\":3460:3469   */\n  dup4\n    /* \"#utility.yul\":3456:3473   */\n  add\n    /* \"#utility.yul\":3449:3496   */\n  mstore\n    /* \"#utility.yul\":3513:3644   */\n  tag_80\n    /* \"#utility.yul\":3639:3643   */\n  dup2\n    /* \"#utility.yul\":3513:3644   */\n  tag_36\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3505:3644   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3651   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3657:3881   */\ntag_37:\n    /* \"#utility.yul\":3797:3831   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":3793:3794   */\n  0x00\n    /* \"#utility.yul\":3785:3791   */\n  dup3\n    /* \"#utility.yul\":3781:3795   */\n  add\n    /* \"#utility.yul\":3774:3832   */\n  mstore\n    /* \"#utility.yul\":3866:3873   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3861:3863   */\n  0x20\n    /* \"#utility.yul\":3853:3859   */\n  dup3\n    /* \"#utility.yul\":3849:3864   */\n  add\n    /* \"#utility.yul\":3842:3874   */\n  mstore\n    /* \"#utility.yul\":3657:3881   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3887:4253   */\ntag_38:\n    /* \"#utility.yul\":4029:4032   */\n  0x00\n    /* \"#utility.yul\":4050:4117   */\n  tag_83\n    /* \"#utility.yul\":4114:4116   */\n  0x25\n    /* \"#utility.yul\":4109:4112   */\n  dup4\n    /* \"#utility.yul\":4050:4117   */\n  tag_34\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":4043:4117   */\n  swap2\n  pop\n    /* \"#utility.yul\":4126:4219   */\n  tag_84\n    /* \"#utility.yul\":4215:4218   */\n  dup3\n    /* \"#utility.yul\":4126:4219   */\n  tag_37\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4244:4246   */\n  0x40\n    /* \"#utility.yul\":4239:4242   */\n  dup3\n    /* \"#utility.yul\":4235:4247   */\n  add\n    /* \"#utility.yul\":4228:4247   */\n  swap1\n  pop\n    /* \"#utility.yul\":3887:4253   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4259:4678   */\ntag_14:\n    /* \"#utility.yul\":4425:4429   */\n  0x00\n    /* \"#utility.yul\":4463:4465   */\n  0x20\n    /* \"#utility.yul\":4452:4461   */\n  dup3\n    /* \"#utility.yul\":4448:4466   */\n  add\n    /* \"#utility.yul\":4440:4466   */\n  swap1\n  pop\n    /* \"#utility.yul\":4512:4521   */\n  dup2\n    /* \"#utility.yul\":4506:4510   */\n  dup2\n    /* \"#utility.yul\":4502:4522   */\n  sub\n    /* \"#utility.yul\":4498:4499   */\n  0x00\n    /* \"#utility.yul\":4487:4496   */\n  dup4\n    /* \"#utility.yul\":4483:4500   */\n  add\n    /* \"#utility.yul\":4476:4523   */\n  mstore\n    /* \"#utility.yul\":4540:4671   */\n  tag_86\n    /* \"#utility.yul\":4666:4670   */\n  dup2\n    /* \"#utility.yul\":4540:4671   */\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4532:4671   */\n  swap1\n  pop\n    /* \"#utility.yul\":4259:4678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4684:4907   */\ntag_39:\n    /* \"#utility.yul\":4824:4858   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":4820:4821   */\n  0x00\n    /* \"#utility.yul\":4812:4818   */\n  dup3\n    /* \"#utility.yul\":4808:4822   */\n  add\n    /* \"#utility.yul\":4801:4859   */\n  mstore\n    /* \"#utility.yul\":4893:4899   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4888:4890   */\n  0x20\n    /* \"#utility.yul\":4880:4886   */\n  dup3\n    /* \"#utility.yul\":4876:4891   */\n  add\n    /* \"#utility.yul\":4869:4900   */\n  mstore\n    /* \"#utility.yul\":4684:4907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4913:5279   */\ntag_40:\n    /* \"#utility.yul\":5055:5058   */\n  0x00\n    /* \"#utility.yul\":5076:5143   */\n  tag_89\n    /* \"#utility.yul\":5140:5142   */\n  0x24\n    /* \"#utility.yul\":5135:5138   */\n  dup4\n    /* \"#utility.yul\":5076:5143   */\n  tag_34\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":5069:5143   */\n  swap2\n  pop\n    /* \"#utility.yul\":5152:5245   */\n  tag_90\n    /* \"#utility.yul\":5241:5244   */\n  dup3\n    /* \"#utility.yul\":5152:5245   */\n  tag_39\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":5270:5272   */\n  0x40\n    /* \"#utility.yul\":5265:5268   */\n  dup3\n    /* \"#utility.yul\":5261:5273   */\n  add\n    /* \"#utility.yul\":5254:5273   */\n  swap1\n  pop\n    /* \"#utility.yul\":4913:5279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5285:5704   */\ntag_17:\n    /* \"#utility.yul\":5451:5455   */\n  0x00\n    /* \"#utility.yul\":5489:5491   */\n  0x20\n    /* \"#utility.yul\":5478:5487   */\n  dup3\n    /* \"#utility.yul\":5474:5492   */\n  add\n    /* \"#utility.yul\":5466:5492   */\n  swap1\n  pop\n    /* \"#utility.yul\":5538:5547   */\n  dup2\n    /* \"#utility.yul\":5532:5536   */\n  dup2\n    /* \"#utility.yul\":5528:5548   */\n  sub\n    /* \"#utility.yul\":5524:5525   */\n  0x00\n    /* \"#utility.yul\":5513:5522   */\n  dup4\n    /* \"#utility.yul\":5509:5526   */\n  add\n    /* \"#utility.yul\":5502:5549   */\n  mstore\n    /* \"#utility.yul\":5566:5697   */\n  tag_92\n    /* \"#utility.yul\":5692:5696   */\n  dup2\n    /* \"#utility.yul\":5566:5697   */\n  tag_40\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":5558:5697   */\n  swap1\n  pop\n    /* \"#utility.yul\":5285:5704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":313:2659  contract IndividuallyCappedCrowdsale is Crowdsale, AccessControl {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":313:2659  contract IndividuallyCappedCrowdsale is Crowdsale, AccessControl {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x521eb273\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb3aefb75\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb3aefb75\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x521eb273\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x80ad2cf3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x2c4e722e\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x21eff7fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      tag_23\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      tag_24\n        /* \"crowdsale/crowdsale.sol\":3361:3371  _msgSender */\n      tag_25\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      jump\t// in\n    tag_24:\n        /* \"crowdsale/crowdsale.sol\":3351:3360  buyTokens */\n      tag_26\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_23:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":313:2659  contract IndividuallyCappedCrowdsale is Crowdsale, AccessControl {... */\n      stop\n    tag_2:\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      tag_29\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      tag_30\n        /* \"crowdsale/crowdsale.sol\":3280:3290  _msgSender */\n      tag_25\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      jump\t// in\n    tag_30:\n        /* \"crowdsale/crowdsale.sol\":3270:3279  buyTokens */\n      tag_26\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_29:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":313:2659  contract IndividuallyCappedCrowdsale is Crowdsale, AccessControl {... */\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1514:1643  function getContribution(address beneficiary) public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":871:1002  function setCap(address beneficiary, uint256 cap) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1201:1312  function getCap(address beneficiary) public view returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_16:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_98:\n      tag_26\n      jump\t// in\n    tag_97:\n      stop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_106\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_106:\n        /* \"crowdsale/crowdsale.sol\":4368:4385  uint256 weiAmount */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4388:4397  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":4368:4397  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_109\n        /* \"crowdsale/crowdsale.sol\":4429:4440  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4442:4451  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4408:4428  _preValidatePurchase */\n      tag_110\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_109:\n        /* \"crowdsale/crowdsale.sol\":4514:4528  uint256 tokens */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      tag_111\n        /* \"crowdsale/crowdsale.sol\":4547:4556  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4531:4546  _getTokenAmount */\n      tag_112\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_111:\n        /* \"crowdsale/crowdsale.sol\":4514:4557  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      tag_113\n        /* \"crowdsale/crowdsale.sol\":4623:4632  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4608:4618  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":4608:4622  _weiRaised.add */\n      tag_114\n      swap1\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"crowdsale/crowdsale.sol\":4595:4605  _weiRaised */\n      0x04\n        /* \"crowdsale/crowdsale.sol\":4595:4633  _weiRaised = _weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      tag_115\n        /* \"crowdsale/crowdsale.sol\":4663:4674  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4676:4682  tokens */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4646:4662  _processPurchase */\n      tag_116\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_115:\n        /* \"crowdsale/crowdsale.sol\":4729:4740  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      tag_117\n        /* \"crowdsale/crowdsale.sol\":4715:4725  _msgSender */\n      tag_25\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"crowdsale/crowdsale.sol\":4742:4751  weiAmount */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4753:4759  tokens */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_120\n        /* \"crowdsale/crowdsale.sol\":4796:4807  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4809:4818  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4773:4795  _updatePurchasingState */\n      tag_121\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_120:\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      tag_122\n        /* \"crowdsale/crowdsale.sol\":4832:4845  _forwardFunds */\n      tag_123\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      jump\t// in\n    tag_122:\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_124\n        /* \"crowdsale/crowdsale.sol\":4880:4891  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4893:4902  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4858:4879  _postValidatePurchase */\n      tag_125\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_124:\n        /* \"crowdsale/crowdsale.sol\":4357:4911  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_126\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_127\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_126:\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2817:2821  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2855:2887  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2851  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_129\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2915:2926  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2914  super.supportsInterface */\n      tag_131\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2833:2927  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1514:1643  function getContribution(address beneficiary) public view returns (uint256) {... */\n    tag_42:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1581:1588  uint256 */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1608:1622  _contributions */\n      0x06\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1608:1635  _contributions[beneficiary] */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1623:1634  beneficiary */\n      dup4\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1608:1635  _contributions[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1601:1635  return _contributions[beneficiary] */\n      swap1\n      pop\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1514:1643  function getContribution(address beneficiary) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4578:4585  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4610  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4611:4615  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4626  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4597:4626  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_54:\n        /* \"crowdsale/crowdsale.sol\":3829:3836  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3856:3861  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":3849:3861  return _rate */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5025:5029  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5024  getRoleAdmin */\n      tag_49\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5053:5057  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5059:5066  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5052  _grantRole */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6154  _msgSender */\n      tag_25\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6140  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6125:6208  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6231:6235  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6237:6244  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6230  _revokeRole */\n      tag_148\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_67:\n        /* \"crowdsale/crowdsale.sol\":3979:3986  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4006:4016  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":3999:4016  return _weiRaised */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_71:\n        /* \"crowdsale/crowdsale.sol\":3644:3659  address payable */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3679:3686  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3672:3686  return _wallet */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":871:1002  function setCap(address beneficiary, uint256 cap) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":939:957  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_152:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":991:994  cap */\n      dup2\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":970:975  _caps */\n      0x07\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":970:988  _caps[beneficiary] */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":976:987  beneficiary */\n      dup6\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":970:988  _caps[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":970:994  _caps[beneficiary] = cap */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":871:1002  function setCap(address beneficiary, uint256 cap) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3107:3111  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3136  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3137:3141  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3150  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3151:3158  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3123:3159  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1201:1312  function getCap(address beneficiary) public view returns (uint256) {... */\n    tag_91:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1259:1266  uint256 */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1286:1291  _caps */\n      0x07\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1286:1304  _caps[beneficiary] */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1292:1303  beneficiary */\n      dup4\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1286:1304  _caps[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1279:1304  return _caps[beneficiary] */\n      swap1\n      pop\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1201:1312  function getCap(address beneficiary) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5451:5455  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5450  getRoleAdmin */\n      tag_49\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_138\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5480:5484  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5486:5493  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5479  _revokeRole */\n      tag_148\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_101:\n        /* \"crowdsale/crowdsale.sol\":3484:3490  IERC20 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3510:3516  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3503:3516  return _token */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1860:2219  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override view {... */\n    tag_110:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1964:2014  super._preValidatePurchase(beneficiary, weiAmount) */\n      tag_167\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1991:2002  beneficiary */\n      dup3\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2004:2013  weiAmount */\n      dup3\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1964:1990  super._preValidatePurchase */\n      tag_168\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1964:2014  super._preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_167:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2133:2138  _caps */\n      0x07\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2133:2151  _caps[beneficiary] */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2139:2150  beneficiary */\n      dup4\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2133:2151  _caps[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2087:2129  _contributions[beneficiary].add(weiAmount) */\n      tag_169\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2119:2128  weiAmount */\n      dup3\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2087:2101  _contributions */\n      0x06\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2087:2114  _contributions[beneficiary] */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2102:2113  beneficiary */\n      dup7\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2087:2114  _contributions[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2087:2118  _contributions[beneficiary].add */\n      tag_114\n      swap1\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2087:2129  _contributions[beneficiary].add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2087:2151  _contributions[beneficiary].add(weiAmount) <= _caps[beneficiary] */\n      gt\n      iszero\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2079:2211  require(_contributions[beneficiary].add(weiAmount) <= _caps[beneficiary], \"IndividuallyCappedCrowdsale: beneficiary's cap exceeded\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":1860:2219  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal override view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n    tag_112:\n        /* \"crowdsale/crowdsale.sol\":7931:7938  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      tag_174\n        /* \"crowdsale/crowdsale.sol\":7972:7977  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":7958:7967  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":7958:7971  weiAmount.mul */\n      tag_175\n      swap1\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"crowdsale/crowdsale.sol\":7951:7978  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_116:\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      tag_180\n        /* \"crowdsale/crowdsale.sol\":7134:7145  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7147:7158  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7119:7133  _deliverTokens */\n      tag_181\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_180:\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2412:2656  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal override {... */\n    tag_121:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2513:2565  super._updatePurchasingState(beneficiary, weiAmount) */\n      tag_183\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2542:2553  beneficiary */\n      dup3\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2555:2564  weiAmount */\n      dup3\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2513:2541  super._updatePurchasingState */\n      tag_184\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2513:2565  super._updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_183:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2606:2648  _contributions[beneficiary].add(weiAmount) */\n      tag_185\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2638:2647  weiAmount */\n      dup2\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2606:2620  _contributions */\n      0x06\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2606:2633  _contributions[beneficiary] */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2621:2632  beneficiary */\n      dup6\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2606:2633  _contributions[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2606:2637  _contributions[beneficiary].add */\n      tag_114\n      swap1\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2606:2648  _contributions[beneficiary].add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2576:2590  _contributions */\n      0x06\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2576:2603  _contributions[beneficiary] */\n      0x00\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2591:2602  beneficiary */\n      dup5\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2576:2603  _contributions[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2576:2648  _contributions[beneficiary] = _contributions[beneficiary].add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"crowdsale/validation/individuallyCappedCrowdsale.sol\":2412:2656  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n    tag_123:\n        /* \"crowdsale/crowdsale.sol\":8131:8138  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8147  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \"crowdsale/crowdsale.sol\":8148:8157  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6155:6314  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_125:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      tag_193\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3537:3541  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3553  _msgSender */\n      tag_25\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3536  _checkRole */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7678:7682  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7684:7691  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7677  hasRole */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7740:7744  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7714  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7715:7719  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7728  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7729:7736  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7800  _msgSender */\n      tag_25\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7781:7788  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7775:7779  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8086  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8088:8095  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8081  hasRole */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8144:8149  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8118  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8119:8123  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8132  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8133:8140  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8149  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8205  _msgSender */\n      tag_25\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8186:8193  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8180:8184  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_168:\n        /* \"crowdsale/crowdsale.sol\":5598:5599  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":5575:5586  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"crowdsale/crowdsale.sol\":5567:5647  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"crowdsale/crowdsale.sol\":5679:5680  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5666:5675  weiAmount */\n      dup2\n        /* \"crowdsale/crowdsale.sol\":5666:5680  weiAmount != 0 */\n      sub\n        /* \"crowdsale/crowdsale.sol\":5658:5710  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_181:\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      tag_215\n        /* \"crowdsale/crowdsale.sol\":6716:6727  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6729:6740  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6696:6702  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":6696:6715  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_216\n      swap1\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7445:7600  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {... */\n    tag_184:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3940:3944  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3946:3953  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3939  hasRole */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4135:4142  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4134  Strings.toHexString */\n      tag_222\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4242:4246  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4234:4247  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4249:4251  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4233  Strings.toHexString */\n      tag_224\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4022:4274  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_225\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3970:4306  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_231\n      swap3\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_235\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2525:2529  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2508  toHexString */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2490:2549  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_237\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_238\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_239\n      jumpi\n      tag_240\n      tag_241\n      jump\t// in\n    tag_240:\n    tag_239:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_242\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_242:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_244\n      tag_245\n      jump\t// in\n    tag_244:\n    tag_243:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_246\n      jumpi\n      tag_247\n      tag_245\n      jump\t// in\n    tag_247:\n    tag_246:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_251\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_252\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2104  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2110  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_253\n      jumpi\n      tag_254\n      tag_245\n      jump\t// in\n    tag_254:\n    tag_253:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_255\n      jumpi\n      tag_256\n      tag_245\n      jump\t// in\n    tag_256:\n    tag_255:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2065:2068  --i */\n      dup1\n      tag_257\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_248)\n    tag_249:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2179:2180  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2175  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2241:2247  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2227:2248  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_264\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_265\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5266:5838  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_272\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_273\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_282\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_281)\n    tag_282:\n      0x60\n      swap2\n      pop\n    tag_281:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_283\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_288\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_289\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_285)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_295\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_285:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_302:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_304:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_305:\n        /* \"#utility.yul\":561:584   */\n      tag_370\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_304\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_371:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_306:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_373\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_305\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_34:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_376\n      tag_302\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":833:952   */\n    tag_375:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_377\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_306\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_307:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_308:\n        /* \"#utility.yul\":1268:1289   */\n      tag_380\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_307\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_37:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_382\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_308\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_309:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_310:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_385\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_309\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_311:\n        /* \"#utility.yul\":1825:1849   */\n      tag_387\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_310\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_388:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_312:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_390\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_311\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_41:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_393\n      tag_302\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":2101:2220   */\n    tag_392:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_394\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_312\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2437   */\n    tag_313:\n        /* \"#utility.yul\":2397:2404   */\n      0x00\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2415:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_314:\n        /* \"#utility.yul\":2530:2554   */\n      tag_397\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_313\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2789   */\n    tag_44:\n        /* \"#utility.yul\":2660:2664   */\n      0x00\n        /* \"#utility.yul\":2698:2700   */\n      0x20\n        /* \"#utility.yul\":2687:2696   */\n      dup3\n        /* \"#utility.yul\":2683:2701   */\n      add\n        /* \"#utility.yul\":2675:2701   */\n      swap1\n      pop\n        /* \"#utility.yul\":2711:2782   */\n      tag_399\n        /* \"#utility.yul\":2779:2780   */\n      0x00\n        /* \"#utility.yul\":2768:2777   */\n      dup4\n        /* \"#utility.yul\":2764:2781   */\n      add\n        /* \"#utility.yul\":2755:2761   */\n      dup5\n        /* \"#utility.yul\":2711:2782   */\n      tag_314\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2567:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2872   */\n    tag_315:\n        /* \"#utility.yul\":2832:2839   */\n      0x00\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2850:2866   */\n      swap1\n      pop\n        /* \"#utility.yul\":2795:2872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:3000   */\n    tag_316:\n        /* \"#utility.yul\":2951:2975   */\n      tag_402\n        /* \"#utility.yul\":2969:2974   */\n      dup2\n        /* \"#utility.yul\":2951:2975   */\n      tag_315\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2941:2976   */\n      eq\n        /* \"#utility.yul\":2931:2994   */\n      tag_403\n      jumpi\n        /* \"#utility.yul\":2990:2991   */\n      0x00\n        /* \"#utility.yul\":2987:2988   */\n      dup1\n        /* \"#utility.yul\":2980:2992   */\n      revert\n        /* \"#utility.yul\":2931:2994   */\n    tag_403:\n        /* \"#utility.yul\":2878:3000   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3145   */\n    tag_317:\n        /* \"#utility.yul\":3052:3057   */\n      0x00\n        /* \"#utility.yul\":3090:3096   */\n      dup2\n        /* \"#utility.yul\":3077:3097   */\n      calldataload\n        /* \"#utility.yul\":3068:3097   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3139   */\n      tag_405\n        /* \"#utility.yul\":3133:3138   */\n      dup2\n        /* \"#utility.yul\":3106:3139   */\n      tag_316\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3006:3145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3151:3480   */\n    tag_48:\n        /* \"#utility.yul\":3210:3216   */\n      0x00\n        /* \"#utility.yul\":3259:3261   */\n      0x20\n        /* \"#utility.yul\":3247:3256   */\n      dup3\n        /* \"#utility.yul\":3238:3245   */\n      dup5\n        /* \"#utility.yul\":3234:3257   */\n      sub\n        /* \"#utility.yul\":3230:3262   */\n      slt\n        /* \"#utility.yul\":3227:3346   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":3265:3344   */\n      tag_408\n      tag_302\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3227:3346   */\n    tag_407:\n        /* \"#utility.yul\":3385:3386   */\n      0x00\n        /* \"#utility.yul\":3410:3463   */\n      tag_409\n        /* \"#utility.yul\":3455:3462   */\n      dup5\n        /* \"#utility.yul\":3446:3452   */\n      dup3\n        /* \"#utility.yul\":3435:3444   */\n      dup6\n        /* \"#utility.yul\":3431:3453   */\n      add\n        /* \"#utility.yul\":3410:3463   */\n      tag_317\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3400:3463   */\n      swap2\n      pop\n        /* \"#utility.yul\":3356:3473   */\n      pop\n        /* \"#utility.yul\":3151:3480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3604   */\n    tag_318:\n        /* \"#utility.yul\":3573:3597   */\n      tag_411\n        /* \"#utility.yul\":3591:3596   */\n      dup2\n        /* \"#utility.yul\":3573:3597   */\n      tag_315\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3568:3571   */\n      dup3\n        /* \"#utility.yul\":3561:3598   */\n      mstore\n        /* \"#utility.yul\":3486:3604   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3610:3832   */\n    tag_51:\n        /* \"#utility.yul\":3703:3707   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x20\n        /* \"#utility.yul\":3730:3739   */\n      dup3\n        /* \"#utility.yul\":3726:3744   */\n      add\n        /* \"#utility.yul\":3718:3744   */\n      swap1\n      pop\n        /* \"#utility.yul\":3754:3825   */\n      tag_413\n        /* \"#utility.yul\":3822:3823   */\n      0x00\n        /* \"#utility.yul\":3811:3820   */\n      dup4\n        /* \"#utility.yul\":3807:3824   */\n      add\n        /* \"#utility.yul\":3798:3804   */\n      dup5\n        /* \"#utility.yul\":3754:3825   */\n      tag_318\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3610:3832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3838:4312   */\n    tag_59:\n        /* \"#utility.yul\":3906:3912   */\n      0x00\n        /* \"#utility.yul\":3914:3920   */\n      dup1\n        /* \"#utility.yul\":3963:3965   */\n      0x40\n        /* \"#utility.yul\":3951:3960   */\n      dup4\n        /* \"#utility.yul\":3942:3949   */\n      dup6\n        /* \"#utility.yul\":3938:3961   */\n      sub\n        /* \"#utility.yul\":3934:3966   */\n      slt\n        /* \"#utility.yul\":3931:4050   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":3969:4048   */\n      tag_416\n      tag_302\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3931:4050   */\n    tag_415:\n        /* \"#utility.yul\":4089:4090   */\n      0x00\n        /* \"#utility.yul\":4114:4167   */\n      tag_417\n        /* \"#utility.yul\":4159:4166   */\n      dup6\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4139:4148   */\n      dup7\n        /* \"#utility.yul\":4135:4157   */\n      add\n        /* \"#utility.yul\":4114:4167   */\n      tag_317\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4104:4167   */\n      swap3\n      pop\n        /* \"#utility.yul\":4060:4177   */\n      pop\n        /* \"#utility.yul\":4216:4218   */\n      0x20\n        /* \"#utility.yul\":4242:4295   */\n      tag_418\n        /* \"#utility.yul\":4287:4294   */\n      dup6\n        /* \"#utility.yul\":4278:4284   */\n      dup3\n        /* \"#utility.yul\":4267:4276   */\n      dup7\n        /* \"#utility.yul\":4263:4285   */\n      add\n        /* \"#utility.yul\":4242:4295   */\n      tag_312\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4232:4295   */\n      swap2\n      pop\n        /* \"#utility.yul\":4187:4305   */\n      pop\n        /* \"#utility.yul\":3838:4312   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4318:4422   */\n    tag_319:\n        /* \"#utility.yul\":4363:4370   */\n      0x00\n        /* \"#utility.yul\":4392:4416   */\n      tag_420\n        /* \"#utility.yul\":4410:4415   */\n      dup3\n        /* \"#utility.yul\":4392:4416   */\n      tag_309\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4381:4416   */\n      swap1\n      pop\n        /* \"#utility.yul\":4318:4422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4428:4570   */\n    tag_320:\n        /* \"#utility.yul\":4531:4563   */\n      tag_422\n        /* \"#utility.yul\":4557:4562   */\n      dup2\n        /* \"#utility.yul\":4531:4563   */\n      tag_319\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4526:4529   */\n      dup3\n        /* \"#utility.yul\":4519:4564   */\n      mstore\n        /* \"#utility.yul\":4428:4570   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4576:4830   */\n    tag_73:\n        /* \"#utility.yul\":4685:4689   */\n      0x00\n        /* \"#utility.yul\":4723:4725   */\n      0x20\n        /* \"#utility.yul\":4712:4721   */\n      dup3\n        /* \"#utility.yul\":4708:4726   */\n      add\n        /* \"#utility.yul\":4700:4726   */\n      swap1\n      pop\n        /* \"#utility.yul\":4736:4823   */\n      tag_424\n        /* \"#utility.yul\":4820:4821   */\n      0x00\n        /* \"#utility.yul\":4809:4818   */\n      dup4\n        /* \"#utility.yul\":4805:4822   */\n      add\n        /* \"#utility.yul\":4796:4802   */\n      dup5\n        /* \"#utility.yul\":4736:4823   */\n      tag_320\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4576:4830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4836:4958   */\n    tag_321:\n        /* \"#utility.yul\":4909:4933   */\n      tag_426\n        /* \"#utility.yul\":4927:4932   */\n      dup2\n        /* \"#utility.yul\":4909:4933   */\n      tag_313\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4902:4907   */\n      dup2\n        /* \"#utility.yul\":4899:4934   */\n      eq\n        /* \"#utility.yul\":4889:4952   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":4948:4949   */\n      0x00\n        /* \"#utility.yul\":4945:4946   */\n      dup1\n        /* \"#utility.yul\":4938:4950   */\n      revert\n        /* \"#utility.yul\":4889:4952   */\n    tag_427:\n        /* \"#utility.yul\":4836:4958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4964:5103   */\n    tag_322:\n        /* \"#utility.yul\":5010:5015   */\n      0x00\n        /* \"#utility.yul\":5048:5054   */\n      dup2\n        /* \"#utility.yul\":5035:5055   */\n      calldataload\n        /* \"#utility.yul\":5026:5055   */\n      swap1\n      pop\n        /* \"#utility.yul\":5064:5097   */\n      tag_429\n        /* \"#utility.yul\":5091:5096   */\n      dup2\n        /* \"#utility.yul\":5064:5097   */\n      tag_321\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4964:5103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5109:5583   */\n    tag_77:\n        /* \"#utility.yul\":5177:5183   */\n      0x00\n        /* \"#utility.yul\":5185:5191   */\n      dup1\n        /* \"#utility.yul\":5234:5236   */\n      0x40\n        /* \"#utility.yul\":5222:5231   */\n      dup4\n        /* \"#utility.yul\":5213:5220   */\n      dup6\n        /* \"#utility.yul\":5209:5232   */\n      sub\n        /* \"#utility.yul\":5205:5237   */\n      slt\n        /* \"#utility.yul\":5202:5321   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":5240:5319   */\n      tag_432\n      tag_302\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5202:5321   */\n    tag_431:\n        /* \"#utility.yul\":5360:5361   */\n      0x00\n        /* \"#utility.yul\":5385:5438   */\n      tag_433\n        /* \"#utility.yul\":5430:5437   */\n      dup6\n        /* \"#utility.yul\":5421:5427   */\n      dup3\n        /* \"#utility.yul\":5410:5419   */\n      dup7\n        /* \"#utility.yul\":5406:5428   */\n      add\n        /* \"#utility.yul\":5385:5438   */\n      tag_312\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5375:5438   */\n      swap3\n      pop\n        /* \"#utility.yul\":5331:5448   */\n      pop\n        /* \"#utility.yul\":5487:5489   */\n      0x20\n        /* \"#utility.yul\":5513:5566   */\n      tag_434\n        /* \"#utility.yul\":5558:5565   */\n      dup6\n        /* \"#utility.yul\":5549:5555   */\n      dup3\n        /* \"#utility.yul\":5538:5547   */\n      dup7\n        /* \"#utility.yul\":5534:5556   */\n      add\n        /* \"#utility.yul\":5513:5566   */\n      tag_322\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":5503:5566   */\n      swap2\n      pop\n        /* \"#utility.yul\":5458:5576   */\n      pop\n        /* \"#utility.yul\":5109:5583   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5589:5649   */\n    tag_323:\n        /* \"#utility.yul\":5617:5620   */\n      0x00\n        /* \"#utility.yul\":5638:5643   */\n      dup2\n        /* \"#utility.yul\":5631:5643   */\n      swap1\n      pop\n        /* \"#utility.yul\":5589:5649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5655:5797   */\n    tag_324:\n        /* \"#utility.yul\":5705:5714   */\n      0x00\n        /* \"#utility.yul\":5738:5791   */\n      tag_437\n        /* \"#utility.yul\":5756:5790   */\n      tag_438\n        /* \"#utility.yul\":5765:5789   */\n      tag_439\n        /* \"#utility.yul\":5783:5788   */\n      dup5\n        /* \"#utility.yul\":5765:5789   */\n      tag_309\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5756:5790   */\n      tag_323\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":5738:5791   */\n      tag_309\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5725:5791   */\n      swap1\n      pop\n        /* \"#utility.yul\":5655:5797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5803:5929   */\n    tag_325:\n        /* \"#utility.yul\":5853:5862   */\n      0x00\n        /* \"#utility.yul\":5886:5923   */\n      tag_441\n        /* \"#utility.yul\":5917:5922   */\n      dup3\n        /* \"#utility.yul\":5886:5923   */\n      tag_324\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":5873:5923   */\n      swap1\n      pop\n        /* \"#utility.yul\":5803:5929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5935:6075   */\n    tag_326:\n        /* \"#utility.yul\":5999:6008   */\n      0x00\n        /* \"#utility.yul\":6032:6069   */\n      tag_443\n        /* \"#utility.yul\":6063:6068   */\n      dup3\n        /* \"#utility.yul\":6032:6069   */\n      tag_325\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":6019:6069   */\n      swap1\n      pop\n        /* \"#utility.yul\":5935:6075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6081:6240   */\n    tag_327:\n        /* \"#utility.yul\":6182:6233   */\n      tag_445\n        /* \"#utility.yul\":6227:6232   */\n      dup2\n        /* \"#utility.yul\":6182:6233   */\n      tag_326\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":6177:6180   */\n      dup3\n        /* \"#utility.yul\":6170:6234   */\n      mstore\n        /* \"#utility.yul\":6081:6240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6246:6496   */\n    tag_103:\n        /* \"#utility.yul\":6353:6357   */\n      0x00\n        /* \"#utility.yul\":6391:6393   */\n      0x20\n        /* \"#utility.yul\":6380:6389   */\n      dup3\n        /* \"#utility.yul\":6376:6394   */\n      add\n        /* \"#utility.yul\":6368:6394   */\n      swap1\n      pop\n        /* \"#utility.yul\":6404:6489   */\n      tag_447\n        /* \"#utility.yul\":6486:6487   */\n      0x00\n        /* \"#utility.yul\":6475:6484   */\n      dup4\n        /* \"#utility.yul\":6471:6488   */\n      add\n        /* \"#utility.yul\":6462:6468   */\n      dup5\n        /* \"#utility.yul\":6404:6489   */\n      tag_327\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6246:6496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6502:6834   */\n    tag_119:\n        /* \"#utility.yul\":6623:6627   */\n      0x00\n        /* \"#utility.yul\":6661:6663   */\n      0x40\n        /* \"#utility.yul\":6650:6659   */\n      dup3\n        /* \"#utility.yul\":6646:6664   */\n      add\n        /* \"#utility.yul\":6638:6664   */\n      swap1\n      pop\n        /* \"#utility.yul\":6674:6745   */\n      tag_449\n        /* \"#utility.yul\":6742:6743   */\n      0x00\n        /* \"#utility.yul\":6731:6740   */\n      dup4\n        /* \"#utility.yul\":6727:6744   */\n      add\n        /* \"#utility.yul\":6718:6724   */\n      dup6\n        /* \"#utility.yul\":6674:6745   */\n      tag_314\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6755:6827   */\n      tag_450\n        /* \"#utility.yul\":6823:6825   */\n      0x20\n        /* \"#utility.yul\":6812:6821   */\n      dup4\n        /* \"#utility.yul\":6808:6826   */\n      add\n        /* \"#utility.yul\":6799:6805   */\n      dup5\n        /* \"#utility.yul\":6755:6827   */\n      tag_314\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6502:6834   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6840:7009   */\n    tag_328:\n        /* \"#utility.yul\":6924:6935   */\n      0x00\n        /* \"#utility.yul\":6958:6964   */\n      dup3\n        /* \"#utility.yul\":6953:6956   */\n      dup3\n        /* \"#utility.yul\":6946:6965   */\n      mstore\n        /* \"#utility.yul\":6998:7002   */\n      0x20\n        /* \"#utility.yul\":6993:6996   */\n      dup3\n        /* \"#utility.yul\":6989:7003   */\n      add\n        /* \"#utility.yul\":6974:7003   */\n      swap1\n      pop\n        /* \"#utility.yul\":6840:7009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7015:7249   */\n    tag_329:\n        /* \"#utility.yul\":7155:7189   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":7151:7152   */\n      0x00\n        /* \"#utility.yul\":7143:7149   */\n      dup3\n        /* \"#utility.yul\":7139:7153   */\n      add\n        /* \"#utility.yul\":7132:7190   */\n      mstore\n        /* \"#utility.yul\":7224:7241   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":7219:7221   */\n      0x20\n        /* \"#utility.yul\":7211:7217   */\n      dup3\n        /* \"#utility.yul\":7207:7222   */\n      add\n        /* \"#utility.yul\":7200:7242   */\n      mstore\n        /* \"#utility.yul\":7015:7249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7255:7621   */\n    tag_330:\n        /* \"#utility.yul\":7397:7400   */\n      0x00\n        /* \"#utility.yul\":7418:7485   */\n      tag_454\n        /* \"#utility.yul\":7482:7484   */\n      0x2f\n        /* \"#utility.yul\":7477:7480   */\n      dup4\n        /* \"#utility.yul\":7418:7485   */\n      tag_328\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7411:7485   */\n      swap2\n      pop\n        /* \"#utility.yul\":7494:7587   */\n      tag_455\n        /* \"#utility.yul\":7583:7586   */\n      dup3\n        /* \"#utility.yul\":7494:7587   */\n      tag_329\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7612:7614   */\n      0x40\n        /* \"#utility.yul\":7607:7610   */\n      dup3\n        /* \"#utility.yul\":7603:7615   */\n      add\n        /* \"#utility.yul\":7596:7615   */\n      swap1\n      pop\n        /* \"#utility.yul\":7255:7621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7627:8046   */\n    tag_146:\n        /* \"#utility.yul\":7793:7797   */\n      0x00\n        /* \"#utility.yul\":7831:7833   */\n      0x20\n        /* \"#utility.yul\":7820:7829   */\n      dup3\n        /* \"#utility.yul\":7816:7834   */\n      add\n        /* \"#utility.yul\":7808:7834   */\n      swap1\n      pop\n        /* \"#utility.yul\":7880:7889   */\n      dup2\n        /* \"#utility.yul\":7874:7878   */\n      dup2\n        /* \"#utility.yul\":7870:7890   */\n      sub\n        /* \"#utility.yul\":7866:7867   */\n      0x00\n        /* \"#utility.yul\":7855:7864   */\n      dup4\n        /* \"#utility.yul\":7851:7868   */\n      add\n        /* \"#utility.yul\":7844:7891   */\n      mstore\n        /* \"#utility.yul\":7908:8039   */\n      tag_457\n        /* \"#utility.yul\":8034:8038   */\n      dup2\n        /* \"#utility.yul\":7908:8039   */\n      tag_330\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":7900:8039   */\n      swap1\n      pop\n        /* \"#utility.yul\":7627:8046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8052:8233   */\n    tag_331:\n        /* \"#utility.yul\":8192:8225   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8188:8189   */\n      0x00\n        /* \"#utility.yul\":8180:8186   */\n      dup3\n        /* \"#utility.yul\":8176:8190   */\n      add\n        /* \"#utility.yul\":8169:8226   */\n      mstore\n        /* \"#utility.yul\":8052:8233   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8239:8605   */\n    tag_332:\n        /* \"#utility.yul\":8381:8384   */\n      0x00\n        /* \"#utility.yul\":8402:8469   */\n      tag_460\n        /* \"#utility.yul\":8466:8468   */\n      0x1f\n        /* \"#utility.yul\":8461:8464   */\n      dup4\n        /* \"#utility.yul\":8402:8469   */\n      tag_328\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8395:8469   */\n      swap2\n      pop\n        /* \"#utility.yul\":8478:8571   */\n      tag_461\n        /* \"#utility.yul\":8567:8570   */\n      dup3\n        /* \"#utility.yul\":8478:8571   */\n      tag_331\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":8596:8598   */\n      0x20\n        /* \"#utility.yul\":8591:8594   */\n      dup3\n        /* \"#utility.yul\":8587:8599   */\n      add\n        /* \"#utility.yul\":8580:8599   */\n      swap1\n      pop\n        /* \"#utility.yul\":8239:8605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8611:9030   */\n    tag_165:\n        /* \"#utility.yul\":8777:8781   */\n      0x00\n        /* \"#utility.yul\":8815:8817   */\n      0x20\n        /* \"#utility.yul\":8804:8813   */\n      dup3\n        /* \"#utility.yul\":8800:8818   */\n      add\n        /* \"#utility.yul\":8792:8818   */\n      swap1\n      pop\n        /* \"#utility.yul\":8864:8873   */\n      dup2\n        /* \"#utility.yul\":8858:8862   */\n      dup2\n        /* \"#utility.yul\":8854:8874   */\n      sub\n        /* \"#utility.yul\":8850:8851   */\n      0x00\n        /* \"#utility.yul\":8839:8848   */\n      dup4\n        /* \"#utility.yul\":8835:8852   */\n      add\n        /* \"#utility.yul\":8828:8875   */\n      mstore\n        /* \"#utility.yul\":8892:9023   */\n      tag_463\n        /* \"#utility.yul\":9018:9022   */\n      dup2\n        /* \"#utility.yul\":8892:9023   */\n      tag_332\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":8884:9023   */\n      swap1\n      pop\n        /* \"#utility.yul\":8611:9030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9036:9278   */\n    tag_333:\n        /* \"#utility.yul\":9176:9210   */\n      0x496e646976696475616c6c7943617070656443726f776473616c653a2062656e\n        /* \"#utility.yul\":9172:9173   */\n      0x00\n        /* \"#utility.yul\":9164:9170   */\n      dup3\n        /* \"#utility.yul\":9160:9174   */\n      add\n        /* \"#utility.yul\":9153:9211   */\n      mstore\n        /* \"#utility.yul\":9245:9270   */\n      0x6566696369617279277320636170206578636565646564000000000000000000\n        /* \"#utility.yul\":9240:9242   */\n      0x20\n        /* \"#utility.yul\":9232:9238   */\n      dup3\n        /* \"#utility.yul\":9228:9243   */\n      add\n        /* \"#utility.yul\":9221:9271   */\n      mstore\n        /* \"#utility.yul\":9036:9278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9284:9650   */\n    tag_334:\n        /* \"#utility.yul\":9426:9429   */\n      0x00\n        /* \"#utility.yul\":9447:9514   */\n      tag_466\n        /* \"#utility.yul\":9511:9513   */\n      0x37\n        /* \"#utility.yul\":9506:9509   */\n      dup4\n        /* \"#utility.yul\":9447:9514   */\n      tag_328\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9440:9514   */\n      swap2\n      pop\n        /* \"#utility.yul\":9523:9616   */\n      tag_467\n        /* \"#utility.yul\":9612:9615   */\n      dup3\n        /* \"#utility.yul\":9523:9616   */\n      tag_333\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9641:9643   */\n      0x40\n        /* \"#utility.yul\":9636:9639   */\n      dup3\n        /* \"#utility.yul\":9632:9644   */\n      add\n        /* \"#utility.yul\":9625:9644   */\n      swap1\n      pop\n        /* \"#utility.yul\":9284:9650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9656:10075   */\n    tag_172:\n        /* \"#utility.yul\":9822:9826   */\n      0x00\n        /* \"#utility.yul\":9860:9862   */\n      0x20\n        /* \"#utility.yul\":9849:9858   */\n      dup3\n        /* \"#utility.yul\":9845:9863   */\n      add\n        /* \"#utility.yul\":9837:9863   */\n      swap1\n      pop\n        /* \"#utility.yul\":9909:9918   */\n      dup2\n        /* \"#utility.yul\":9903:9907   */\n      dup2\n        /* \"#utility.yul\":9899:9919   */\n      sub\n        /* \"#utility.yul\":9895:9896   */\n      0x00\n        /* \"#utility.yul\":9884:9893   */\n      dup4\n        /* \"#utility.yul\":9880:9897   */\n      add\n        /* \"#utility.yul\":9873:9920   */\n      mstore\n        /* \"#utility.yul\":9937:10068   */\n      tag_469\n        /* \"#utility.yul\":10063:10067   */\n      dup2\n        /* \"#utility.yul\":9937:10068   */\n      tag_334\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9929:10068   */\n      swap1\n      pop\n        /* \"#utility.yul\":9656:10075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10081:10261   */\n    tag_335:\n        /* \"#utility.yul\":10129:10206   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10126:10127   */\n      0x00\n        /* \"#utility.yul\":10119:10207   */\n      mstore\n        /* \"#utility.yul\":10226:10230   */\n      0x11\n        /* \"#utility.yul\":10223:10224   */\n      0x04\n        /* \"#utility.yul\":10216:10231   */\n      mstore\n        /* \"#utility.yul\":10250:10254   */\n      0x24\n        /* \"#utility.yul\":10247:10248   */\n      0x00\n        /* \"#utility.yul\":10240:10255   */\n      revert\n        /* \"#utility.yul\":10267:10458   */\n    tag_178:\n        /* \"#utility.yul\":10307:10310   */\n      0x00\n        /* \"#utility.yul\":10326:10346   */\n      tag_472\n        /* \"#utility.yul\":10344:10345   */\n      dup3\n        /* \"#utility.yul\":10326:10346   */\n      tag_313\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10321:10346   */\n      swap2\n      pop\n        /* \"#utility.yul\":10360:10380   */\n      tag_473\n        /* \"#utility.yul\":10378:10379   */\n      dup4\n        /* \"#utility.yul\":10360:10380   */\n      tag_313\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":10355:10380   */\n      swap3\n      pop\n        /* \"#utility.yul\":10403:10404   */\n      dup3\n        /* \"#utility.yul\":10400:10401   */\n      dup3\n        /* \"#utility.yul\":10396:10405   */\n      add\n        /* \"#utility.yul\":10389:10405   */\n      swap1\n      pop\n        /* \"#utility.yul\":10424:10427   */\n      dup1\n        /* \"#utility.yul\":10421:10422   */\n      dup3\n        /* \"#utility.yul\":10418:10428   */\n      gt\n        /* \"#utility.yul\":10415:10451   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":10431:10449   */\n      tag_475\n      tag_335\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10415:10451   */\n    tag_474:\n        /* \"#utility.yul\":10267:10458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10464:10693   */\n    tag_336:\n        /* \"#utility.yul\":10604:10638   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":10600:10601   */\n      0x00\n        /* \"#utility.yul\":10592:10598   */\n      dup3\n        /* \"#utility.yul\":10588:10602   */\n      add\n        /* \"#utility.yul\":10581:10639   */\n      mstore\n        /* \"#utility.yul\":10673:10685   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10668:10670   */\n      0x20\n        /* \"#utility.yul\":10660:10666   */\n      dup3\n        /* \"#utility.yul\":10656:10671   */\n      add\n        /* \"#utility.yul\":10649:10686   */\n      mstore\n        /* \"#utility.yul\":10464:10693   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10699:11065   */\n    tag_337:\n        /* \"#utility.yul\":10841:10844   */\n      0x00\n        /* \"#utility.yul\":10862:10929   */\n      tag_478\n        /* \"#utility.yul\":10926:10928   */\n      0x2a\n        /* \"#utility.yul\":10921:10924   */\n      dup4\n        /* \"#utility.yul\":10862:10929   */\n      tag_328\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10855:10929   */\n      swap2\n      pop\n        /* \"#utility.yul\":10938:11031   */\n      tag_479\n        /* \"#utility.yul\":11027:11030   */\n      dup3\n        /* \"#utility.yul\":10938:11031   */\n      tag_336\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11056:11058   */\n      0x40\n        /* \"#utility.yul\":11051:11054   */\n      dup3\n        /* \"#utility.yul\":11047:11059   */\n      add\n        /* \"#utility.yul\":11040:11059   */\n      swap1\n      pop\n        /* \"#utility.yul\":10699:11065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11071:11490   */\n    tag_207:\n        /* \"#utility.yul\":11237:11241   */\n      0x00\n        /* \"#utility.yul\":11275:11277   */\n      0x20\n        /* \"#utility.yul\":11264:11273   */\n      dup3\n        /* \"#utility.yul\":11260:11278   */\n      add\n        /* \"#utility.yul\":11252:11278   */\n      swap1\n      pop\n        /* \"#utility.yul\":11324:11333   */\n      dup2\n        /* \"#utility.yul\":11318:11322   */\n      dup2\n        /* \"#utility.yul\":11314:11334   */\n      sub\n        /* \"#utility.yul\":11310:11311   */\n      0x00\n        /* \"#utility.yul\":11299:11308   */\n      dup4\n        /* \"#utility.yul\":11295:11312   */\n      add\n        /* \"#utility.yul\":11288:11335   */\n      mstore\n        /* \"#utility.yul\":11352:11483   */\n      tag_481\n        /* \"#utility.yul\":11478:11482   */\n      dup2\n        /* \"#utility.yul\":11352:11483   */\n      tag_337\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11344:11483   */\n      swap1\n      pop\n        /* \"#utility.yul\":11071:11490   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11496:11671   */\n    tag_338:\n        /* \"#utility.yul\":11636:11663   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":11632:11633   */\n      0x00\n        /* \"#utility.yul\":11624:11630   */\n      dup3\n        /* \"#utility.yul\":11620:11634   */\n      add\n        /* \"#utility.yul\":11613:11664   */\n      mstore\n        /* \"#utility.yul\":11496:11671   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11677:12043   */\n    tag_339:\n        /* \"#utility.yul\":11819:11822   */\n      0x00\n        /* \"#utility.yul\":11840:11907   */\n      tag_484\n        /* \"#utility.yul\":11904:11906   */\n      0x19\n        /* \"#utility.yul\":11899:11902   */\n      dup4\n        /* \"#utility.yul\":11840:11907   */\n      tag_328\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11833:11907   */\n      swap2\n      pop\n        /* \"#utility.yul\":11916:12009   */\n      tag_485\n        /* \"#utility.yul\":12005:12008   */\n      dup3\n        /* \"#utility.yul\":11916:12009   */\n      tag_338\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":12034:12036   */\n      0x20\n        /* \"#utility.yul\":12029:12032   */\n      dup3\n        /* \"#utility.yul\":12025:12037   */\n      add\n        /* \"#utility.yul\":12018:12037   */\n      swap1\n      pop\n        /* \"#utility.yul\":11677:12043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12049:12468   */\n    tag_210:\n        /* \"#utility.yul\":12215:12219   */\n      0x00\n        /* \"#utility.yul\":12253:12255   */\n      0x20\n        /* \"#utility.yul\":12242:12251   */\n      dup3\n        /* \"#utility.yul\":12238:12256   */\n      add\n        /* \"#utility.yul\":12230:12256   */\n      swap1\n      pop\n        /* \"#utility.yul\":12302:12311   */\n      dup2\n        /* \"#utility.yul\":12296:12300   */\n      dup2\n        /* \"#utility.yul\":12292:12312   */\n      sub\n        /* \"#utility.yul\":12288:12289   */\n      0x00\n        /* \"#utility.yul\":12277:12286   */\n      dup4\n        /* \"#utility.yul\":12273:12290   */\n      add\n        /* \"#utility.yul\":12266:12313   */\n      mstore\n        /* \"#utility.yul\":12330:12461   */\n      tag_487\n        /* \"#utility.yul\":12456:12460   */\n      dup2\n        /* \"#utility.yul\":12330:12461   */\n      tag_339\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12322:12461   */\n      swap1\n      pop\n        /* \"#utility.yul\":12049:12468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12474:12884   */\n    tag_213:\n        /* \"#utility.yul\":12514:12521   */\n      0x00\n        /* \"#utility.yul\":12537:12557   */\n      tag_489\n        /* \"#utility.yul\":12555:12556   */\n      dup3\n        /* \"#utility.yul\":12537:12557   */\n      tag_313\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":12532:12557   */\n      swap2\n      pop\n        /* \"#utility.yul\":12571:12591   */\n      tag_490\n        /* \"#utility.yul\":12589:12590   */\n      dup4\n        /* \"#utility.yul\":12571:12591   */\n      tag_313\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12566:12591   */\n      swap3\n      pop\n        /* \"#utility.yul\":12626:12627   */\n      dup3\n        /* \"#utility.yul\":12623:12624   */\n      dup3\n        /* \"#utility.yul\":12619:12628   */\n      mul\n        /* \"#utility.yul\":12648:12678   */\n      tag_491\n        /* \"#utility.yul\":12666:12677   */\n      dup2\n        /* \"#utility.yul\":12648:12678   */\n      tag_313\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12637:12678   */\n      swap2\n      pop\n        /* \"#utility.yul\":12827:12828   */\n      dup3\n        /* \"#utility.yul\":12818:12825   */\n      dup3\n        /* \"#utility.yul\":12814:12829   */\n      div\n        /* \"#utility.yul\":12811:12812   */\n      dup5\n        /* \"#utility.yul\":12808:12830   */\n      eq\n        /* \"#utility.yul\":12788:12789   */\n      dup4\n        /* \"#utility.yul\":12781:12790   */\n      iszero\n        /* \"#utility.yul\":12761:12844   */\n      or\n        /* \"#utility.yul\":12738:12877   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":12857:12875   */\n      tag_493\n      tag_335\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12738:12877   */\n    tag_492:\n        /* \"#utility.yul\":12522:12884   */\n      pop\n        /* \"#utility.yul\":12474:12884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12890:13038   */\n    tag_340:\n        /* \"#utility.yul\":12992:13003   */\n      0x00\n        /* \"#utility.yul\":13029:13032   */\n      dup2\n        /* \"#utility.yul\":13014:13032   */\n      swap1\n      pop\n        /* \"#utility.yul\":12890:13038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13044:13217   */\n    tag_341:\n        /* \"#utility.yul\":13184:13209   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":13180:13181   */\n      0x00\n        /* \"#utility.yul\":13172:13178   */\n      dup3\n        /* \"#utility.yul\":13168:13182   */\n      add\n        /* \"#utility.yul\":13161:13210   */\n      mstore\n        /* \"#utility.yul\":13044:13217   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13223:13625   */\n    tag_342:\n        /* \"#utility.yul\":13383:13386   */\n      0x00\n        /* \"#utility.yul\":13404:13489   */\n      tag_497\n        /* \"#utility.yul\":13486:13488   */\n      0x17\n        /* \"#utility.yul\":13481:13484   */\n      dup4\n        /* \"#utility.yul\":13404:13489   */\n      tag_340\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":13397:13489   */\n      swap2\n      pop\n        /* \"#utility.yul\":13498:13591   */\n      tag_498\n        /* \"#utility.yul\":13587:13590   */\n      dup3\n        /* \"#utility.yul\":13498:13591   */\n      tag_341\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13616:13618   */\n      0x17\n        /* \"#utility.yul\":13611:13614   */\n      dup3\n        /* \"#utility.yul\":13607:13619   */\n      add\n        /* \"#utility.yul\":13600:13619   */\n      swap1\n      pop\n        /* \"#utility.yul\":13223:13625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13631:13730   */\n    tag_343:\n        /* \"#utility.yul\":13683:13689   */\n      0x00\n        /* \"#utility.yul\":13717:13722   */\n      dup2\n        /* \"#utility.yul\":13711:13723   */\n      mload\n        /* \"#utility.yul\":13701:13723   */\n      swap1\n      pop\n        /* \"#utility.yul\":13631:13730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13736:13982   */\n    tag_344:\n        /* \"#utility.yul\":13817:13818   */\n      0x00\n        /* \"#utility.yul\":13827:13940   */\n    tag_501:\n        /* \"#utility.yul\":13841:13847   */\n      dup4\n        /* \"#utility.yul\":13838:13839   */\n      dup2\n        /* \"#utility.yul\":13835:13848   */\n      lt\n        /* \"#utility.yul\":13827:13940   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":13926:13927   */\n      dup1\n        /* \"#utility.yul\":13921:13924   */\n      dup3\n        /* \"#utility.yul\":13917:13928   */\n      add\n        /* \"#utility.yul\":13911:13929   */\n      mload\n        /* \"#utility.yul\":13907:13908   */\n      dup2\n        /* \"#utility.yul\":13902:13905   */\n      dup5\n        /* \"#utility.yul\":13898:13909   */\n      add\n        /* \"#utility.yul\":13891:13930   */\n      mstore\n        /* \"#utility.yul\":13863:13865   */\n      0x20\n        /* \"#utility.yul\":13860:13861   */\n      dup2\n        /* \"#utility.yul\":13856:13866   */\n      add\n        /* \"#utility.yul\":13851:13866   */\n      swap1\n      pop\n        /* \"#utility.yul\":13827:13940   */\n      jump(tag_501)\n    tag_503:\n        /* \"#utility.yul\":13974:13975   */\n      0x00\n        /* \"#utility.yul\":13965:13971   */\n      dup5\n        /* \"#utility.yul\":13960:13963   */\n      dup5\n        /* \"#utility.yul\":13956:13972   */\n      add\n        /* \"#utility.yul\":13949:13976   */\n      mstore\n        /* \"#utility.yul\":13798:13982   */\n      pop\n        /* \"#utility.yul\":13736:13982   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13988:14378   */\n    tag_345:\n        /* \"#utility.yul\":14094:14097   */\n      0x00\n        /* \"#utility.yul\":14122:14161   */\n      tag_505\n        /* \"#utility.yul\":14155:14160   */\n      dup3\n        /* \"#utility.yul\":14122:14161   */\n      tag_343\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":14177:14266   */\n      tag_506\n        /* \"#utility.yul\":14259:14265   */\n      dup2\n        /* \"#utility.yul\":14254:14257   */\n      dup6\n        /* \"#utility.yul\":14177:14266   */\n      tag_340\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14170:14266   */\n      swap4\n      pop\n        /* \"#utility.yul\":14275:14340   */\n      tag_507\n        /* \"#utility.yul\":14333:14339   */\n      dup2\n        /* \"#utility.yul\":14328:14331   */\n      dup6\n        /* \"#utility.yul\":14321:14325   */\n      0x20\n        /* \"#utility.yul\":14314:14319   */\n      dup7\n        /* \"#utility.yul\":14310:14326   */\n      add\n        /* \"#utility.yul\":14275:14340   */\n      tag_344\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":14365:14371   */\n      dup1\n        /* \"#utility.yul\":14360:14363   */\n      dup5\n        /* \"#utility.yul\":14356:14372   */\n      add\n        /* \"#utility.yul\":14349:14372   */\n      swap2\n      pop\n        /* \"#utility.yul\":14098:14378   */\n      pop\n        /* \"#utility.yul\":13988:14378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14384:14551   */\n    tag_346:\n        /* \"#utility.yul\":14524:14543   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":14520:14521   */\n      0x00\n        /* \"#utility.yul\":14512:14518   */\n      dup3\n        /* \"#utility.yul\":14508:14522   */\n      add\n        /* \"#utility.yul\":14501:14544   */\n      mstore\n        /* \"#utility.yul\":14384:14551   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14557:14959   */\n    tag_347:\n        /* \"#utility.yul\":14717:14720   */\n      0x00\n        /* \"#utility.yul\":14738:14823   */\n      tag_510\n        /* \"#utility.yul\":14820:14822   */\n      0x11\n        /* \"#utility.yul\":14815:14818   */\n      dup4\n        /* \"#utility.yul\":14738:14823   */\n      tag_340\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":14731:14823   */\n      swap2\n      pop\n        /* \"#utility.yul\":14832:14925   */\n      tag_511\n        /* \"#utility.yul\":14921:14924   */\n      dup3\n        /* \"#utility.yul\":14832:14925   */\n      tag_346\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":14950:14952   */\n      0x11\n        /* \"#utility.yul\":14945:14948   */\n      dup3\n        /* \"#utility.yul\":14941:14953   */\n      add\n        /* \"#utility.yul\":14934:14953   */\n      swap1\n      pop\n        /* \"#utility.yul\":14557:14959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14965:15932   */\n    tag_226:\n        /* \"#utility.yul\":15347:15350   */\n      0x00\n        /* \"#utility.yul\":15369:15517   */\n      tag_513\n        /* \"#utility.yul\":15513:15516   */\n      dup3\n        /* \"#utility.yul\":15369:15517   */\n      tag_342\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":15362:15517   */\n      swap2\n      pop\n        /* \"#utility.yul\":15534:15629   */\n      tag_514\n        /* \"#utility.yul\":15625:15628   */\n      dup3\n        /* \"#utility.yul\":15616:15622   */\n      dup6\n        /* \"#utility.yul\":15534:15629   */\n      tag_345\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":15527:15629   */\n      swap2\n      pop\n        /* \"#utility.yul\":15646:15794   */\n      tag_515\n        /* \"#utility.yul\":15790:15793   */\n      dup3\n        /* \"#utility.yul\":15646:15794   */\n      tag_347\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":15639:15794   */\n      swap2\n      pop\n        /* \"#utility.yul\":15811:15906   */\n      tag_516\n        /* \"#utility.yul\":15902:15905   */\n      dup3\n        /* \"#utility.yul\":15893:15899   */\n      dup5\n        /* \"#utility.yul\":15811:15906   */\n      tag_345\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":15804:15906   */\n      swap2\n      pop\n        /* \"#utility.yul\":15923:15926   */\n      dup2\n        /* \"#utility.yul\":15916:15926   */\n      swap1\n      pop\n        /* \"#utility.yul\":14965:15932   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15938:16040   */\n    tag_348:\n        /* \"#utility.yul\":15979:15985   */\n      0x00\n        /* \"#utility.yul\":16030:16032   */\n      0x1f\n        /* \"#utility.yul\":16026:16033   */\n      not\n        /* \"#utility.yul\":16021:16023   */\n      0x1f\n        /* \"#utility.yul\":16014:16019   */\n      dup4\n        /* \"#utility.yul\":16010:16024   */\n      add\n        /* \"#utility.yul\":16006:16034   */\n      and\n        /* \"#utility.yul\":15996:16034   */\n      swap1\n      pop\n        /* \"#utility.yul\":15938:16040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16046:16423   */\n    tag_349:\n        /* \"#utility.yul\":16134:16137   */\n      0x00\n        /* \"#utility.yul\":16162:16201   */\n      tag_519\n        /* \"#utility.yul\":16195:16200   */\n      dup3\n        /* \"#utility.yul\":16162:16201   */\n      tag_343\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":16217:16288   */\n      tag_520\n        /* \"#utility.yul\":16281:16287   */\n      dup2\n        /* \"#utility.yul\":16276:16279   */\n      dup6\n        /* \"#utility.yul\":16217:16288   */\n      tag_328\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":16210:16288   */\n      swap4\n      pop\n        /* \"#utility.yul\":16297:16362   */\n      tag_521\n        /* \"#utility.yul\":16355:16361   */\n      dup2\n        /* \"#utility.yul\":16350:16353   */\n      dup6\n        /* \"#utility.yul\":16343:16347   */\n      0x20\n        /* \"#utility.yul\":16336:16341   */\n      dup7\n        /* \"#utility.yul\":16332:16348   */\n      add\n        /* \"#utility.yul\":16297:16362   */\n      tag_344\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":16387:16416   */\n      tag_522\n        /* \"#utility.yul\":16409:16415   */\n      dup2\n        /* \"#utility.yul\":16387:16416   */\n      tag_348\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":16382:16385   */\n      dup5\n        /* \"#utility.yul\":16378:16417   */\n      add\n        /* \"#utility.yul\":16371:16417   */\n      swap2\n      pop\n        /* \"#utility.yul\":16138:16423   */\n      pop\n        /* \"#utility.yul\":16046:16423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16429:16742   */\n    tag_228:\n        /* \"#utility.yul\":16542:16546   */\n      0x00\n        /* \"#utility.yul\":16580:16582   */\n      0x20\n        /* \"#utility.yul\":16569:16578   */\n      dup3\n        /* \"#utility.yul\":16565:16583   */\n      add\n        /* \"#utility.yul\":16557:16583   */\n      swap1\n      pop\n        /* \"#utility.yul\":16629:16638   */\n      dup2\n        /* \"#utility.yul\":16623:16627   */\n      dup2\n        /* \"#utility.yul\":16619:16639   */\n      sub\n        /* \"#utility.yul\":16615:16616   */\n      0x00\n        /* \"#utility.yul\":16604:16613   */\n      dup4\n        /* \"#utility.yul\":16600:16617   */\n      add\n        /* \"#utility.yul\":16593:16640   */\n      mstore\n        /* \"#utility.yul\":16657:16735   */\n      tag_524\n        /* \"#utility.yul\":16730:16734   */\n      dup2\n        /* \"#utility.yul\":16721:16727   */\n      dup5\n        /* \"#utility.yul\":16657:16735   */\n      tag_349\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":16649:16735   */\n      swap1\n      pop\n        /* \"#utility.yul\":16429:16742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16748:16866   */\n    tag_350:\n        /* \"#utility.yul\":16835:16859   */\n      tag_526\n        /* \"#utility.yul\":16853:16858   */\n      dup2\n        /* \"#utility.yul\":16835:16859   */\n      tag_310\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":16830:16833   */\n      dup3\n        /* \"#utility.yul\":16823:16860   */\n      mstore\n        /* \"#utility.yul\":16748:16866   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16872:17204   */\n    tag_232:\n        /* \"#utility.yul\":16993:16997   */\n      0x00\n        /* \"#utility.yul\":17031:17033   */\n      0x40\n        /* \"#utility.yul\":17020:17029   */\n      dup3\n        /* \"#utility.yul\":17016:17034   */\n      add\n        /* \"#utility.yul\":17008:17034   */\n      swap1\n      pop\n        /* \"#utility.yul\":17044:17115   */\n      tag_528\n        /* \"#utility.yul\":17112:17113   */\n      0x00\n        /* \"#utility.yul\":17101:17110   */\n      dup4\n        /* \"#utility.yul\":17097:17114   */\n      add\n        /* \"#utility.yul\":17088:17094   */\n      dup6\n        /* \"#utility.yul\":17044:17115   */\n      tag_350\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":17125:17197   */\n      tag_529\n        /* \"#utility.yul\":17193:17195   */\n      0x20\n        /* \"#utility.yul\":17182:17191   */\n      dup4\n        /* \"#utility.yul\":17178:17196   */\n      add\n        /* \"#utility.yul\":17169:17175   */\n      dup5\n        /* \"#utility.yul\":17125:17197   */\n      tag_314\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":16872:17204   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17210:17390   */\n    tag_241:\n        /* \"#utility.yul\":17258:17335   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17255:17256   */\n      0x00\n        /* \"#utility.yul\":17248:17336   */\n      mstore\n        /* \"#utility.yul\":17355:17359   */\n      0x41\n        /* \"#utility.yul\":17352:17353   */\n      0x04\n        /* \"#utility.yul\":17345:17360   */\n      mstore\n        /* \"#utility.yul\":17379:17383   */\n      0x24\n        /* \"#utility.yul\":17376:17377   */\n      0x00\n        /* \"#utility.yul\":17369:17384   */\n      revert\n        /* \"#utility.yul\":17396:17576   */\n    tag_245:\n        /* \"#utility.yul\":17444:17521   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17441:17442   */\n      0x00\n        /* \"#utility.yul\":17434:17522   */\n      mstore\n        /* \"#utility.yul\":17541:17545   */\n      0x32\n        /* \"#utility.yul\":17538:17539   */\n      0x04\n        /* \"#utility.yul\":17531:17546   */\n      mstore\n        /* \"#utility.yul\":17565:17569   */\n      0x24\n        /* \"#utility.yul\":17562:17563   */\n      0x00\n        /* \"#utility.yul\":17555:17570   */\n      revert\n        /* \"#utility.yul\":17582:17753   */\n    tag_258:\n        /* \"#utility.yul\":17621:17624   */\n      0x00\n        /* \"#utility.yul\":17644:17668   */\n      tag_533\n        /* \"#utility.yul\":17662:17667   */\n      dup3\n        /* \"#utility.yul\":17644:17668   */\n      tag_313\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":17635:17668   */\n      swap2\n      pop\n        /* \"#utility.yul\":17690:17694   */\n      0x00\n        /* \"#utility.yul\":17683:17688   */\n      dup3\n        /* \"#utility.yul\":17680:17695   */\n      sub\n        /* \"#utility.yul\":17677:17718   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":17698:17716   */\n      tag_535\n      tag_335\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":17677:17718   */\n    tag_534:\n        /* \"#utility.yul\":17745:17746   */\n      0x01\n        /* \"#utility.yul\":17738:17743   */\n      dup3\n        /* \"#utility.yul\":17734:17747   */\n      sub\n        /* \"#utility.yul\":17727:17747   */\n      swap1\n      pop\n        /* \"#utility.yul\":17582:17753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17759:17941   */\n    tag_351:\n        /* \"#utility.yul\":17899:17933   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":17895:17896   */\n      0x00\n        /* \"#utility.yul\":17887:17893   */\n      dup3\n        /* \"#utility.yul\":17883:17897   */\n      add\n        /* \"#utility.yul\":17876:17934   */\n      mstore\n        /* \"#utility.yul\":17759:17941   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17947:18313   */\n    tag_352:\n        /* \"#utility.yul\":18089:18092   */\n      0x00\n        /* \"#utility.yul\":18110:18177   */\n      tag_538\n        /* \"#utility.yul\":18174:18176   */\n      0x20\n        /* \"#utility.yul\":18169:18172   */\n      dup4\n        /* \"#utility.yul\":18110:18177   */\n      tag_328\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":18103:18177   */\n      swap2\n      pop\n        /* \"#utility.yul\":18186:18279   */\n      tag_539\n        /* \"#utility.yul\":18275:18278   */\n      dup3\n        /* \"#utility.yul\":18186:18279   */\n      tag_351\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":18304:18306   */\n      0x20\n        /* \"#utility.yul\":18299:18302   */\n      dup3\n        /* \"#utility.yul\":18295:18307   */\n      add\n        /* \"#utility.yul\":18288:18307   */\n      swap1\n      pop\n        /* \"#utility.yul\":17947:18313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18319:18738   */\n    tag_261:\n        /* \"#utility.yul\":18485:18489   */\n      0x00\n        /* \"#utility.yul\":18523:18525   */\n      0x20\n        /* \"#utility.yul\":18512:18521   */\n      dup3\n        /* \"#utility.yul\":18508:18526   */\n      add\n        /* \"#utility.yul\":18500:18526   */\n      swap1\n      pop\n        /* \"#utility.yul\":18572:18581   */\n      dup2\n        /* \"#utility.yul\":18566:18570   */\n      dup2\n        /* \"#utility.yul\":18562:18582   */\n      sub\n        /* \"#utility.yul\":18558:18559   */\n      0x00\n        /* \"#utility.yul\":18547:18556   */\n      dup4\n        /* \"#utility.yul\":18543:18560   */\n      add\n        /* \"#utility.yul\":18536:18583   */\n      mstore\n        /* \"#utility.yul\":18600:18731   */\n      tag_541\n        /* \"#utility.yul\":18726:18730   */\n      dup2\n        /* \"#utility.yul\":18600:18731   */\n      tag_352\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":18592:18731   */\n      swap1\n      pop\n        /* \"#utility.yul\":18319:18738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18744:18860   */\n    tag_353:\n        /* \"#utility.yul\":18814:18835   */\n      tag_543\n        /* \"#utility.yul\":18829:18834   */\n      dup2\n        /* \"#utility.yul\":18814:18835   */\n      tag_307\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":18807:18812   */\n      dup2\n        /* \"#utility.yul\":18804:18836   */\n      eq\n        /* \"#utility.yul\":18794:18854   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":18850:18851   */\n      0x00\n        /* \"#utility.yul\":18847:18848   */\n      dup1\n        /* \"#utility.yul\":18840:18852   */\n      revert\n        /* \"#utility.yul\":18794:18854   */\n    tag_544:\n        /* \"#utility.yul\":18744:18860   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18866:19003   */\n    tag_354:\n        /* \"#utility.yul\":18920:18925   */\n      0x00\n        /* \"#utility.yul\":18951:18957   */\n      dup2\n        /* \"#utility.yul\":18945:18958   */\n      mload\n        /* \"#utility.yul\":18936:18958   */\n      swap1\n      pop\n        /* \"#utility.yul\":18967:18997   */\n      tag_546\n        /* \"#utility.yul\":18991:18996   */\n      dup2\n        /* \"#utility.yul\":18967:18997   */\n      tag_353\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":18866:19003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19009:19354   */\n    tag_267:\n        /* \"#utility.yul\":19076:19082   */\n      0x00\n        /* \"#utility.yul\":19125:19127   */\n      0x20\n        /* \"#utility.yul\":19113:19122   */\n      dup3\n        /* \"#utility.yul\":19104:19111   */\n      dup5\n        /* \"#utility.yul\":19100:19123   */\n      sub\n        /* \"#utility.yul\":19096:19128   */\n      slt\n        /* \"#utility.yul\":19093:19212   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":19131:19210   */\n      tag_549\n      tag_302\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":19093:19212   */\n    tag_548:\n        /* \"#utility.yul\":19251:19252   */\n      0x00\n        /* \"#utility.yul\":19276:19337   */\n      tag_550\n        /* \"#utility.yul\":19329:19336   */\n      dup5\n        /* \"#utility.yul\":19320:19326   */\n      dup3\n        /* \"#utility.yul\":19309:19318   */\n      dup6\n        /* \"#utility.yul\":19305:19327   */\n      add\n        /* \"#utility.yul\":19276:19337   */\n      tag_354\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":19266:19337   */\n      swap2\n      pop\n        /* \"#utility.yul\":19222:19347   */\n      pop\n        /* \"#utility.yul\":19009:19354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19360:19589   */\n    tag_355:\n        /* \"#utility.yul\":19500:19534   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":19496:19497   */\n      0x00\n        /* \"#utility.yul\":19488:19494   */\n      dup3\n        /* \"#utility.yul\":19484:19498   */\n      add\n        /* \"#utility.yul\":19477:19535   */\n      mstore\n        /* \"#utility.yul\":19569:19581   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19564:19566   */\n      0x20\n        /* \"#utility.yul\":19556:19562   */\n      dup3\n        /* \"#utility.yul\":19552:19567   */\n      add\n        /* \"#utility.yul\":19545:19582   */\n      mstore\n        /* \"#utility.yul\":19360:19589   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19595:19961   */\n    tag_356:\n        /* \"#utility.yul\":19737:19740   */\n      0x00\n        /* \"#utility.yul\":19758:19825   */\n      tag_553\n        /* \"#utility.yul\":19822:19824   */\n      0x2a\n        /* \"#utility.yul\":19817:19820   */\n      dup4\n        /* \"#utility.yul\":19758:19825   */\n      tag_328\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":19751:19825   */\n      swap2\n      pop\n        /* \"#utility.yul\":19834:19927   */\n      tag_554\n        /* \"#utility.yul\":19923:19926   */\n      dup3\n        /* \"#utility.yul\":19834:19927   */\n      tag_355\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":19952:19954   */\n      0x40\n        /* \"#utility.yul\":19947:19950   */\n      dup3\n        /* \"#utility.yul\":19943:19955   */\n      add\n        /* \"#utility.yul\":19936:19955   */\n      swap1\n      pop\n        /* \"#utility.yul\":19595:19961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19967:20386   */\n    tag_270:\n        /* \"#utility.yul\":20133:20137   */\n      0x00\n        /* \"#utility.yul\":20171:20173   */\n      0x20\n        /* \"#utility.yul\":20160:20169   */\n      dup3\n        /* \"#utility.yul\":20156:20174   */\n      add\n        /* \"#utility.yul\":20148:20174   */\n      swap1\n      pop\n        /* \"#utility.yul\":20220:20229   */\n      dup2\n        /* \"#utility.yul\":20214:20218   */\n      dup2\n        /* \"#utility.yul\":20210:20230   */\n      sub\n        /* \"#utility.yul\":20206:20207   */\n      0x00\n        /* \"#utility.yul\":20195:20204   */\n      dup4\n        /* \"#utility.yul\":20191:20208   */\n      add\n        /* \"#utility.yul\":20184:20231   */\n      mstore\n        /* \"#utility.yul\":20248:20379   */\n      tag_556\n        /* \"#utility.yul\":20374:20378   */\n      dup2\n        /* \"#utility.yul\":20248:20379   */\n      tag_356\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":20240:20379   */\n      swap1\n      pop\n        /* \"#utility.yul\":19967:20386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20392:20617   */\n    tag_357:\n        /* \"#utility.yul\":20532:20566   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":20528:20529   */\n      0x00\n        /* \"#utility.yul\":20520:20526   */\n      dup3\n        /* \"#utility.yul\":20516:20530   */\n      add\n        /* \"#utility.yul\":20509:20567   */\n      mstore\n        /* \"#utility.yul\":20601:20609   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20596:20598   */\n      0x20\n        /* \"#utility.yul\":20588:20594   */\n      dup3\n        /* \"#utility.yul\":20584:20599   */\n      add\n        /* \"#utility.yul\":20577:20610   */\n      mstore\n        /* \"#utility.yul\":20392:20617   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20623:20989   */\n    tag_358:\n        /* \"#utility.yul\":20765:20768   */\n      0x00\n        /* \"#utility.yul\":20786:20853   */\n      tag_559\n        /* \"#utility.yul\":20850:20852   */\n      0x26\n        /* \"#utility.yul\":20845:20848   */\n      dup4\n        /* \"#utility.yul\":20786:20853   */\n      tag_328\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":20779:20853   */\n      swap2\n      pop\n        /* \"#utility.yul\":20862:20955   */\n      tag_560\n        /* \"#utility.yul\":20951:20954   */\n      dup3\n        /* \"#utility.yul\":20862:20955   */\n      tag_357\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":20980:20982   */\n      0x40\n        /* \"#utility.yul\":20975:20978   */\n      dup3\n        /* \"#utility.yul\":20971:20983   */\n      add\n        /* \"#utility.yul\":20964:20983   */\n      swap1\n      pop\n        /* \"#utility.yul\":20623:20989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20995:21414   */\n    tag_277:\n        /* \"#utility.yul\":21161:21165   */\n      0x00\n        /* \"#utility.yul\":21199:21201   */\n      0x20\n        /* \"#utility.yul\":21188:21197   */\n      dup3\n        /* \"#utility.yul\":21184:21202   */\n      add\n        /* \"#utility.yul\":21176:21202   */\n      swap1\n      pop\n        /* \"#utility.yul\":21248:21257   */\n      dup2\n        /* \"#utility.yul\":21242:21246   */\n      dup2\n        /* \"#utility.yul\":21238:21258   */\n      sub\n        /* \"#utility.yul\":21234:21235   */\n      0x00\n        /* \"#utility.yul\":21223:21232   */\n      dup4\n        /* \"#utility.yul\":21219:21236   */\n      add\n        /* \"#utility.yul\":21212:21259   */\n      mstore\n        /* \"#utility.yul\":21276:21407   */\n      tag_562\n        /* \"#utility.yul\":21402:21406   */\n      dup2\n        /* \"#utility.yul\":21276:21407   */\n      tag_358\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":21268:21407   */\n      swap1\n      pop\n        /* \"#utility.yul\":20995:21414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21420:21518   */\n    tag_359:\n        /* \"#utility.yul\":21471:21477   */\n      0x00\n        /* \"#utility.yul\":21505:21510   */\n      dup2\n        /* \"#utility.yul\":21499:21511   */\n      mload\n        /* \"#utility.yul\":21489:21511   */\n      swap1\n      pop\n        /* \"#utility.yul\":21420:21518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21524:21671   */\n    tag_360:\n        /* \"#utility.yul\":21625:21636   */\n      0x00\n        /* \"#utility.yul\":21662:21665   */\n      dup2\n        /* \"#utility.yul\":21647:21665   */\n      swap1\n      pop\n        /* \"#utility.yul\":21524:21671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21677:22063   */\n    tag_361:\n        /* \"#utility.yul\":21781:21784   */\n      0x00\n        /* \"#utility.yul\":21809:21847   */\n      tag_566\n        /* \"#utility.yul\":21841:21846   */\n      dup3\n        /* \"#utility.yul\":21809:21847   */\n      tag_359\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":21863:21951   */\n      tag_567\n        /* \"#utility.yul\":21944:21950   */\n      dup2\n        /* \"#utility.yul\":21939:21942   */\n      dup6\n        /* \"#utility.yul\":21863:21951   */\n      tag_360\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":21856:21951   */\n      swap4\n      pop\n        /* \"#utility.yul\":21960:22025   */\n      tag_568\n        /* \"#utility.yul\":22018:22024   */\n      dup2\n        /* \"#utility.yul\":22013:22016   */\n      dup6\n        /* \"#utility.yul\":22006:22010   */\n      0x20\n        /* \"#utility.yul\":21999:22004   */\n      dup7\n        /* \"#utility.yul\":21995:22011   */\n      add\n        /* \"#utility.yul\":21960:22025   */\n      tag_344\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":22050:22056   */\n      dup1\n        /* \"#utility.yul\":22045:22048   */\n      dup5\n        /* \"#utility.yul\":22041:22057   */\n      add\n        /* \"#utility.yul\":22034:22057   */\n      swap2\n      pop\n        /* \"#utility.yul\":21785:22063   */\n      pop\n        /* \"#utility.yul\":21677:22063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22069:22340   */\n    tag_279:\n        /* \"#utility.yul\":22199:22202   */\n      0x00\n        /* \"#utility.yul\":22221:22314   */\n      tag_570\n        /* \"#utility.yul\":22310:22313   */\n      dup3\n        /* \"#utility.yul\":22301:22307   */\n      dup5\n        /* \"#utility.yul\":22221:22314   */\n      tag_361\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":22214:22314   */\n      swap2\n      pop\n        /* \"#utility.yul\":22331:22334   */\n      dup2\n        /* \"#utility.yul\":22324:22334   */\n      swap1\n      pop\n        /* \"#utility.yul\":22069:22340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22346:22525   */\n    tag_362:\n        /* \"#utility.yul\":22486:22517   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":22482:22483   */\n      0x00\n        /* \"#utility.yul\":22474:22480   */\n      dup3\n        /* \"#utility.yul\":22470:22484   */\n      add\n        /* \"#utility.yul\":22463:22518   */\n      mstore\n        /* \"#utility.yul\":22346:22525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22531:22897   */\n    tag_363:\n        /* \"#utility.yul\":22673:22676   */\n      0x00\n        /* \"#utility.yul\":22694:22761   */\n      tag_573\n        /* \"#utility.yul\":22758:22760   */\n      0x1d\n        /* \"#utility.yul\":22753:22756   */\n      dup4\n        /* \"#utility.yul\":22694:22761   */\n      tag_328\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":22687:22761   */\n      swap2\n      pop\n        /* \"#utility.yul\":22770:22863   */\n      tag_574\n        /* \"#utility.yul\":22859:22862   */\n      dup3\n        /* \"#utility.yul\":22770:22863   */\n      tag_362\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":22888:22890   */\n      0x20\n        /* \"#utility.yul\":22883:22886   */\n      dup3\n        /* \"#utility.yul\":22879:22891   */\n      add\n        /* \"#utility.yul\":22872:22891   */\n      swap1\n      pop\n        /* \"#utility.yul\":22531:22897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22903:23322   */\n    tag_292:\n        /* \"#utility.yul\":23069:23073   */\n      0x00\n        /* \"#utility.yul\":23107:23109   */\n      0x20\n        /* \"#utility.yul\":23096:23105   */\n      dup3\n        /* \"#utility.yul\":23092:23110   */\n      add\n        /* \"#utility.yul\":23084:23110   */\n      swap1\n      pop\n        /* \"#utility.yul\":23156:23165   */\n      dup2\n        /* \"#utility.yul\":23150:23154   */\n      dup2\n        /* \"#utility.yul\":23146:23166   */\n      sub\n        /* \"#utility.yul\":23142:23143   */\n      0x00\n        /* \"#utility.yul\":23131:23140   */\n      dup4\n        /* \"#utility.yul\":23127:23144   */\n      add\n        /* \"#utility.yul\":23120:23167   */\n      mstore\n        /* \"#utility.yul\":23184:23315   */\n      tag_576\n        /* \"#utility.yul\":23310:23314   */\n      dup2\n        /* \"#utility.yul\":23184:23315   */\n      tag_363\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":23176:23315   */\n      swap1\n      pop\n        /* \"#utility.yul\":22903:23322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220373a380c0b3933f7bb6f6df5430e2b4785ea7ea9bf1108c9471d24962d4cfd7064736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2936": {
									"entryPoint": null,
									"id": 2936,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_3190": {
									"entryPoint": null,
									"id": 3190,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_407": {
									"entryPoint": null,
									"id": 407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$531_fromMemory": {
									"entryPoint": 726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$531_fromMemory": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$531": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$531": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5707:16",
										"nodeType": "YulBlock",
										"src": "0:5707:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "379:32:16",
													"nodeType": "YulBlock",
													"src": "379:32:16",
													"statements": [
														{
															"nativeSrc": "389:16:16",
															"nodeType": "YulAssignment",
															"src": "389:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:16",
																"nodeType": "YulIdentifier",
																"src": "400:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:16",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:16",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:77:16"
											},
											{
												"body": {
													"nativeSrc": "460:79:16",
													"nodeType": "YulBlock",
													"src": "460:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:16",
																"nodeType": "YulBlock",
																"src": "517:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:16",
																					"nodeType": "YulLiteral",
																					"src": "526:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:16",
																					"nodeType": "YulLiteral",
																					"src": "529:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:16"
																			},
																			"nativeSrc": "519:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:16"
																		},
																		"nativeSrc": "519:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:16"
																				},
																				"nativeSrc": "490:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:16"
																		},
																		"nativeSrc": "480:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:16"
																},
																"nativeSrc": "473:43:16",
																"nodeType": "YulFunctionCall",
																"src": "473:43:16"
															},
															"nativeSrc": "470:63:16",
															"nodeType": "YulIf",
															"src": "470:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:16",
														"nodeType": "YulTypedName",
														"src": "453:5:16",
														"type": ""
													}
												],
												"src": "417:122:16"
											},
											{
												"body": {
													"nativeSrc": "608:80:16",
													"nodeType": "YulBlock",
													"src": "608:80:16",
													"statements": [
														{
															"nativeSrc": "618:22:16",
															"nodeType": "YulAssignment",
															"src": "618:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:16"
																},
																"nativeSrc": "627:13:16",
																"nodeType": "YulFunctionCall",
																"src": "627:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:16"
																},
																"nativeSrc": "649:33:16",
																"nodeType": "YulFunctionCall",
																"src": "649:33:16"
															},
															"nativeSrc": "649:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:16",
														"nodeType": "YulTypedName",
														"src": "586:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:16",
														"nodeType": "YulTypedName",
														"src": "594:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:16",
														"nodeType": "YulTypedName",
														"src": "602:5:16",
														"type": ""
													}
												],
												"src": "545:143:16"
											},
											{
												"body": {
													"nativeSrc": "739:81:16",
													"nodeType": "YulBlock",
													"src": "739:81:16",
													"statements": [
														{
															"nativeSrc": "749:65:16",
															"nodeType": "YulAssignment",
															"src": "749:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:16",
																		"nodeType": "YulLiteral",
																		"src": "771:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:16"
																},
																"nativeSrc": "760:54:16",
																"nodeType": "YulFunctionCall",
																"src": "760:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:16",
														"nodeType": "YulTypedName",
														"src": "721:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:16",
														"nodeType": "YulTypedName",
														"src": "731:7:16",
														"type": ""
													}
												],
												"src": "694:126:16"
											},
											{
												"body": {
													"nativeSrc": "879:51:16",
													"nodeType": "YulBlock",
													"src": "879:51:16",
													"statements": [
														{
															"nativeSrc": "889:35:16",
															"nodeType": "YulAssignment",
															"src": "889:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "918:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "918:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "900:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "900:17:16"
																},
																"nativeSrc": "900:24:16",
																"nodeType": "YulFunctionCall",
																"src": "900:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "889:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "889:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "826:104:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "861:5:16",
														"nodeType": "YulTypedName",
														"src": "861:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "871:7:16",
														"nodeType": "YulTypedName",
														"src": "871:7:16",
														"type": ""
													}
												],
												"src": "826:104:16"
											},
											{
												"body": {
													"nativeSrc": "987:87:16",
													"nodeType": "YulBlock",
													"src": "987:87:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1052:16:16",
																"nodeType": "YulBlock",
																"src": "1052:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1061:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1054:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:16"
																			},
																			"nativeSrc": "1054:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1054:12:16"
																		},
																		"nativeSrc": "1054:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1010:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1010:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1043:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1043:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "1017:25:16",
																					"nodeType": "YulIdentifier",
																					"src": "1017:25:16"
																				},
																				"nativeSrc": "1017:32:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1017:32:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1007:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:16"
																		},
																		"nativeSrc": "1007:43:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1007:43:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1000:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:16"
																},
																"nativeSrc": "1000:51:16",
																"nodeType": "YulFunctionCall",
																"src": "1000:51:16"
															},
															"nativeSrc": "997:71:16",
															"nodeType": "YulIf",
															"src": "997:71:16"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "936:138:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "980:5:16",
														"nodeType": "YulTypedName",
														"src": "980:5:16",
														"type": ""
													}
												],
												"src": "936:138:16"
											},
											{
												"body": {
													"nativeSrc": "1151:88:16",
													"nodeType": "YulBlock",
													"src": "1151:88:16",
													"statements": [
														{
															"nativeSrc": "1161:22:16",
															"nodeType": "YulAssignment",
															"src": "1161:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1176:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1176:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1170:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1170:5:16"
																},
																"nativeSrc": "1170:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1170:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1161:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1227:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1227:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "1192:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "1192:34:16"
																},
																"nativeSrc": "1192:41:16",
																"nodeType": "YulFunctionCall",
																"src": "1192:41:16"
															},
															"nativeSrc": "1192:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "1192:41:16"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "1080:159:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1129:6:16",
														"nodeType": "YulTypedName",
														"src": "1129:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1137:3:16",
														"nodeType": "YulTypedName",
														"src": "1137:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1145:5:16",
														"nodeType": "YulTypedName",
														"src": "1145:5:16",
														"type": ""
													}
												],
												"src": "1080:159:16"
											},
											{
												"body": {
													"nativeSrc": "1290:51:16",
													"nodeType": "YulBlock",
													"src": "1290:51:16",
													"statements": [
														{
															"nativeSrc": "1300:35:16",
															"nodeType": "YulAssignment",
															"src": "1300:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1329:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1329:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1311:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1311:17:16"
																},
																"nativeSrc": "1311:24:16",
																"nodeType": "YulFunctionCall",
																"src": "1311:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1300:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1300:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1245:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1272:5:16",
														"nodeType": "YulTypedName",
														"src": "1272:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1282:7:16",
														"nodeType": "YulTypedName",
														"src": "1282:7:16",
														"type": ""
													}
												],
												"src": "1245:96:16"
											},
											{
												"body": {
													"nativeSrc": "1406:51:16",
													"nodeType": "YulBlock",
													"src": "1406:51:16",
													"statements": [
														{
															"nativeSrc": "1416:35:16",
															"nodeType": "YulAssignment",
															"src": "1416:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1445:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1427:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1427:17:16"
																},
																"nativeSrc": "1427:24:16",
																"nodeType": "YulFunctionCall",
																"src": "1427:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1416:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1416:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$531",
												"nativeSrc": "1347:110:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1388:5:16",
														"nodeType": "YulTypedName",
														"src": "1388:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1398:7:16",
														"nodeType": "YulTypedName",
														"src": "1398:7:16",
														"type": ""
													}
												],
												"src": "1347:110:16"
											},
											{
												"body": {
													"nativeSrc": "1520:93:16",
													"nodeType": "YulBlock",
													"src": "1520:93:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1591:16:16",
																"nodeType": "YulBlock",
																"src": "1591:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1600:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1603:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1593:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:16"
																			},
																			"nativeSrc": "1593:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:16"
																		},
																		"nativeSrc": "1593:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1543:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1543:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1582:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1582:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$531",
																					"nativeSrc": "1550:31:16",
																					"nodeType": "YulIdentifier",
																					"src": "1550:31:16"
																				},
																				"nativeSrc": "1550:38:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1550:38:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1540:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1540:2:16"
																		},
																		"nativeSrc": "1540:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:49:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1533:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:16"
																},
																"nativeSrc": "1533:57:16",
																"nodeType": "YulFunctionCall",
																"src": "1533:57:16"
															},
															"nativeSrc": "1530:77:16",
															"nodeType": "YulIf",
															"src": "1530:77:16"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$531",
												"nativeSrc": "1463:150:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1513:5:16",
														"nodeType": "YulTypedName",
														"src": "1513:5:16",
														"type": ""
													}
												],
												"src": "1463:150:16"
											},
											{
												"body": {
													"nativeSrc": "1696:94:16",
													"nodeType": "YulBlock",
													"src": "1696:94:16",
													"statements": [
														{
															"nativeSrc": "1706:22:16",
															"nodeType": "YulAssignment",
															"src": "1706:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1721:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1715:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1715:5:16"
																},
																"nativeSrc": "1715:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1715:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1706:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1778:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1778:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$531",
																	"nativeSrc": "1737:40:16",
																	"nodeType": "YulIdentifier",
																	"src": "1737:40:16"
																},
																"nativeSrc": "1737:47:16",
																"nodeType": "YulFunctionCall",
																"src": "1737:47:16"
															},
															"nativeSrc": "1737:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "1737:47:16"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$531_fromMemory",
												"nativeSrc": "1619:171:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1674:6:16",
														"nodeType": "YulTypedName",
														"src": "1674:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1682:3:16",
														"nodeType": "YulTypedName",
														"src": "1682:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1690:5:16",
														"nodeType": "YulTypedName",
														"src": "1690:5:16",
														"type": ""
													}
												],
												"src": "1619:171:16"
											},
											{
												"body": {
													"nativeSrc": "1929:574:16",
													"nodeType": "YulBlock",
													"src": "1929:574:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1975:83:16",
																"nodeType": "YulBlock",
																"src": "1975:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1977:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "1977:77:16"
																			},
																			"nativeSrc": "1977:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1977:79:16"
																		},
																		"nativeSrc": "1977:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1977:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1950:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1950:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1959:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1959:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1946:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:16"
																		},
																		"nativeSrc": "1946:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1946:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1971:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1971:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1942:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:16"
																},
																"nativeSrc": "1942:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1942:32:16"
															},
															"nativeSrc": "1939:119:16",
															"nodeType": "YulIf",
															"src": "1939:119:16"
														},
														{
															"nativeSrc": "2068:128:16",
															"nodeType": "YulBlock",
															"src": "2068:128:16",
															"statements": [
																{
																	"nativeSrc": "2083:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2083:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2097:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2087:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2087:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2112:74:16",
																	"nodeType": "YulAssignment",
																	"src": "2112:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:16"
																				},
																				"nativeSrc": "2154:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2122:31:16",
																			"nodeType": "YulIdentifier",
																			"src": "2122:31:16"
																		},
																		"nativeSrc": "2122:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2112:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2112:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2206:137:16",
															"nodeType": "YulBlock",
															"src": "2206:137:16",
															"statements": [
																{
																	"nativeSrc": "2221:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2221:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2235:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2225:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2225:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2251:82:16",
																	"nodeType": "YulAssignment",
																	"src": "2251:82:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2305:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2305:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2316:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2316:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2301:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2301:3:16"
																				},
																				"nativeSrc": "2301:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2301:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2325:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2325:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "2261:39:16",
																			"nodeType": "YulIdentifier",
																			"src": "2261:39:16"
																		},
																		"nativeSrc": "2261:72:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2261:72:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2251:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2251:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2353:143:16",
															"nodeType": "YulBlock",
															"src": "2353:143:16",
															"statements": [
																{
																	"nativeSrc": "2368:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2368:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2382:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2382:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2372:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2372:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2398:88:16",
																	"nodeType": "YulAssignment",
																	"src": "2398:88:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2458:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2458:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2469:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2469:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2454:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2454:3:16"
																				},
																				"nativeSrc": "2454:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2454:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2478:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$531_fromMemory",
																			"nativeSrc": "2408:45:16",
																			"nodeType": "YulIdentifier",
																			"src": "2408:45:16"
																		},
																		"nativeSrc": "2408:78:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:78:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2398:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2398:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$531_fromMemory",
												"nativeSrc": "1796:707:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1883:9:16",
														"nodeType": "YulTypedName",
														"src": "1883:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1894:7:16",
														"nodeType": "YulTypedName",
														"src": "1894:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1906:6:16",
														"nodeType": "YulTypedName",
														"src": "1906:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1914:6:16",
														"nodeType": "YulTypedName",
														"src": "1914:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1922:6:16",
														"nodeType": "YulTypedName",
														"src": "1922:6:16",
														"type": ""
													}
												],
												"src": "1796:707:16"
											},
											{
												"body": {
													"nativeSrc": "2605:73:16",
													"nodeType": "YulBlock",
													"src": "2605:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2622:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2627:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2615:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:16"
																},
																"nativeSrc": "2615:19:16",
																"nodeType": "YulFunctionCall",
																"src": "2615:19:16"
															},
															"nativeSrc": "2615:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "2615:19:16"
														},
														{
															"nativeSrc": "2643:29:16",
															"nodeType": "YulAssignment",
															"src": "2643:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2662:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2662:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2667:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2667:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2658:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:16"
																},
																"nativeSrc": "2658:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2658:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2643:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "2643:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2509:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2577:3:16",
														"nodeType": "YulTypedName",
														"src": "2577:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2582:6:16",
														"nodeType": "YulTypedName",
														"src": "2582:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2593:11:16",
														"nodeType": "YulTypedName",
														"src": "2593:11:16",
														"type": ""
													}
												],
												"src": "2509:169:16"
											},
											{
												"body": {
													"nativeSrc": "2790:64:16",
													"nodeType": "YulBlock",
													"src": "2790:64:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2812:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2820:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2820:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:16"
																		},
																		"nativeSrc": "2808:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nativeSrc": "2824:22:16",
																		"nodeType": "YulLiteral",
																		"src": "2824:22:16",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:16"
																},
																"nativeSrc": "2801:46:16",
																"nodeType": "YulFunctionCall",
																"src": "2801:46:16"
															},
															"nativeSrc": "2801:46:16",
															"nodeType": "YulExpressionStatement",
															"src": "2801:46:16"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nativeSrc": "2684:170:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2782:6:16",
														"nodeType": "YulTypedName",
														"src": "2782:6:16",
														"type": ""
													}
												],
												"src": "2684:170:16"
											},
											{
												"body": {
													"nativeSrc": "3006:220:16",
													"nodeType": "YulBlock",
													"src": "3006:220:16",
													"statements": [
														{
															"nativeSrc": "3016:74:16",
															"nodeType": "YulAssignment",
															"src": "3016:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3082:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3082:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3087:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3087:2:16",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3023:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "3023:58:16"
																},
																"nativeSrc": "3023:67:16",
																"nodeType": "YulFunctionCall",
																"src": "3023:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3016:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3188:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3188:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nativeSrc": "3099:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "3099:88:16"
																},
																"nativeSrc": "3099:93:16",
																"nodeType": "YulFunctionCall",
																"src": "3099:93:16"
															},
															"nativeSrc": "3099:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "3099:93:16"
														},
														{
															"nativeSrc": "3201:19:16",
															"nodeType": "YulAssignment",
															"src": "3201:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3212:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3212:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3208:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:16"
																},
																"nativeSrc": "3208:12:16",
																"nodeType": "YulFunctionCall",
																"src": "3208:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3201:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2860:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2994:3:16",
														"nodeType": "YulTypedName",
														"src": "2994:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3002:3:16",
														"nodeType": "YulTypedName",
														"src": "3002:3:16",
														"type": ""
													}
												],
												"src": "2860:366:16"
											},
											{
												"body": {
													"nativeSrc": "3403:248:16",
													"nodeType": "YulBlock",
													"src": "3403:248:16",
													"statements": [
														{
															"nativeSrc": "3413:26:16",
															"nodeType": "YulAssignment",
															"src": "3413:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3425:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3436:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3421:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:16"
																},
																"nativeSrc": "3421:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3421:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3413:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3460:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3471:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3471:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3456:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:16"
																		},
																		"nativeSrc": "3456:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3479:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "3479:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3485:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3475:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:16"
																		},
																		"nativeSrc": "3475:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3449:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:16"
																},
																"nativeSrc": "3449:47:16",
																"nodeType": "YulFunctionCall",
																"src": "3449:47:16"
															},
															"nativeSrc": "3449:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "3449:47:16"
														},
														{
															"nativeSrc": "3505:139:16",
															"nodeType": "YulAssignment",
															"src": "3505:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3639:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3639:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3513:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "3513:124:16"
																},
																"nativeSrc": "3513:131:16",
																"nodeType": "YulFunctionCall",
																"src": "3513:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3505:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3232:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3383:9:16",
														"nodeType": "YulTypedName",
														"src": "3383:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3398:4:16",
														"nodeType": "YulTypedName",
														"src": "3398:4:16",
														"type": ""
													}
												],
												"src": "3232:419:16"
											},
											{
												"body": {
													"nativeSrc": "3763:118:16",
													"nodeType": "YulBlock",
													"src": "3763:118:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3785:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3793:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3793:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3781:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:16"
																		},
																		"nativeSrc": "3781:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "3797:34:16",
																		"nodeType": "YulLiteral",
																		"src": "3797:34:16",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3774:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:16"
																},
																"nativeSrc": "3774:58:16",
																"nodeType": "YulFunctionCall",
																"src": "3774:58:16"
															},
															"nativeSrc": "3774:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "3774:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3853:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3861:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3861:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3849:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:16"
																		},
																		"nativeSrc": "3849:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3849:15:16"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "3866:7:16",
																		"nodeType": "YulLiteral",
																		"src": "3866:7:16",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3842:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:16"
																},
																"nativeSrc": "3842:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3842:32:16"
															},
															"nativeSrc": "3842:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "3842:32:16"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nativeSrc": "3657:224:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3755:6:16",
														"nodeType": "YulTypedName",
														"src": "3755:6:16",
														"type": ""
													}
												],
												"src": "3657:224:16"
											},
											{
												"body": {
													"nativeSrc": "4033:220:16",
													"nodeType": "YulBlock",
													"src": "4033:220:16",
													"statements": [
														{
															"nativeSrc": "4043:74:16",
															"nodeType": "YulAssignment",
															"src": "4043:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4109:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4109:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4114:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4114:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4050:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "4050:58:16"
																},
																"nativeSrc": "4050:67:16",
																"nodeType": "YulFunctionCall",
																"src": "4050:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4043:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4215:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4215:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nativeSrc": "4126:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "4126:88:16"
																},
																"nativeSrc": "4126:93:16",
																"nodeType": "YulFunctionCall",
																"src": "4126:93:16"
															},
															"nativeSrc": "4126:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "4126:93:16"
														},
														{
															"nativeSrc": "4228:19:16",
															"nodeType": "YulAssignment",
															"src": "4228:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4239:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4239:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4244:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4244:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4235:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:16"
																},
																"nativeSrc": "4235:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4235:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4228:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3887:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4021:3:16",
														"nodeType": "YulTypedName",
														"src": "4021:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4029:3:16",
														"nodeType": "YulTypedName",
														"src": "4029:3:16",
														"type": ""
													}
												],
												"src": "3887:366:16"
											},
											{
												"body": {
													"nativeSrc": "4430:248:16",
													"nodeType": "YulBlock",
													"src": "4430:248:16",
													"statements": [
														{
															"nativeSrc": "4440:26:16",
															"nodeType": "YulAssignment",
															"src": "4440:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4452:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4463:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4448:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:16"
																},
																"nativeSrc": "4448:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4448:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4440:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4487:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4487:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4498:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4498:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4483:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4483:3:16"
																		},
																		"nativeSrc": "4483:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4506:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4506:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4512:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4502:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:16"
																		},
																		"nativeSrc": "4502:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4502:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4476:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4476:6:16"
																},
																"nativeSrc": "4476:47:16",
																"nodeType": "YulFunctionCall",
																"src": "4476:47:16"
															},
															"nativeSrc": "4476:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "4476:47:16"
														},
														{
															"nativeSrc": "4532:139:16",
															"nodeType": "YulAssignment",
															"src": "4532:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4666:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4540:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "4540:124:16"
																},
																"nativeSrc": "4540:131:16",
																"nodeType": "YulFunctionCall",
																"src": "4540:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4532:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4532:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4259:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4410:9:16",
														"nodeType": "YulTypedName",
														"src": "4410:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4425:4:16",
														"nodeType": "YulTypedName",
														"src": "4425:4:16",
														"type": ""
													}
												],
												"src": "4259:419:16"
											},
											{
												"body": {
													"nativeSrc": "4790:117:16",
													"nodeType": "YulBlock",
													"src": "4790:117:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4812:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4812:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4820:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4820:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:16"
																		},
																		"nativeSrc": "4808:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4808:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "4824:34:16",
																		"nodeType": "YulLiteral",
																		"src": "4824:34:16",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4801:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:16"
																},
																"nativeSrc": "4801:58:16",
																"nodeType": "YulFunctionCall",
																"src": "4801:58:16"
															},
															"nativeSrc": "4801:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "4801:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4880:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4880:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4888:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4888:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4876:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:16"
																		},
																		"nativeSrc": "4876:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4876:15:16"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "4893:6:16",
																		"nodeType": "YulLiteral",
																		"src": "4893:6:16",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4869:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:16"
																},
																"nativeSrc": "4869:31:16",
																"nodeType": "YulFunctionCall",
																"src": "4869:31:16"
															},
															"nativeSrc": "4869:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "4869:31:16"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nativeSrc": "4684:223:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4782:6:16",
														"nodeType": "YulTypedName",
														"src": "4782:6:16",
														"type": ""
													}
												],
												"src": "4684:223:16"
											},
											{
												"body": {
													"nativeSrc": "5059:220:16",
													"nodeType": "YulBlock",
													"src": "5059:220:16",
													"statements": [
														{
															"nativeSrc": "5069:74:16",
															"nodeType": "YulAssignment",
															"src": "5069:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5135:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5135:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5140:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5140:2:16",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5076:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "5076:58:16"
																},
																"nativeSrc": "5076:67:16",
																"nodeType": "YulFunctionCall",
																"src": "5076:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5069:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5241:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5241:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nativeSrc": "5152:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "5152:88:16"
																},
																"nativeSrc": "5152:93:16",
																"nodeType": "YulFunctionCall",
																"src": "5152:93:16"
															},
															"nativeSrc": "5152:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "5152:93:16"
														},
														{
															"nativeSrc": "5254:19:16",
															"nodeType": "YulAssignment",
															"src": "5254:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5265:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5265:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5270:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5261:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:16"
																},
																"nativeSrc": "5261:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5261:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5254:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5254:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4913:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5047:3:16",
														"nodeType": "YulTypedName",
														"src": "5047:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5055:3:16",
														"nodeType": "YulTypedName",
														"src": "5055:3:16",
														"type": ""
													}
												],
												"src": "4913:366:16"
											},
											{
												"body": {
													"nativeSrc": "5456:248:16",
													"nodeType": "YulBlock",
													"src": "5456:248:16",
													"statements": [
														{
															"nativeSrc": "5466:26:16",
															"nodeType": "YulAssignment",
															"src": "5466:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5478:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5489:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5474:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:16"
																},
																"nativeSrc": "5474:18:16",
																"nodeType": "YulFunctionCall",
																"src": "5474:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5466:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:16",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:16"
																		},
																		"nativeSrc": "5509:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5532:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "5532:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5538:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5528:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:16"
																		},
																		"nativeSrc": "5528:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5502:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:16"
																},
																"nativeSrc": "5502:47:16",
																"nodeType": "YulFunctionCall",
																"src": "5502:47:16"
															},
															"nativeSrc": "5502:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "5502:47:16"
														},
														{
															"nativeSrc": "5558:139:16",
															"nodeType": "YulAssignment",
															"src": "5558:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5692:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5692:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5566:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "5566:124:16"
																},
																"nativeSrc": "5566:131:16",
																"nodeType": "YulFunctionCall",
																"src": "5566:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5558:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5558:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5285:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5436:9:16",
														"nodeType": "YulTypedName",
														"src": "5436:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5451:4:16",
														"nodeType": "YulTypedName",
														"src": "5451:4:16",
														"type": ""
													}
												],
												"src": "5285:419:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$531(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$531(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$531(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$531_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$531(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$531_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$531_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2437 CODESIZE SUB DUP1 PUSH3 0x2437 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x2EC JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xED SWAP1 PUSH3 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x15E SWAP1 PUSH3 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH3 0x4EB JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x212 DUP2 PUSH3 0x1FE JUMP JUMPDEST DUP2 EQ PUSH3 0x21D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x230 DUP2 PUSH3 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x261 DUP3 PUSH3 0x236 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x273 DUP2 PUSH3 0x255 JUMP JUMPDEST DUP2 EQ PUSH3 0x27E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x291 DUP2 PUSH3 0x268 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2A3 DUP3 PUSH3 0x236 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2B6 DUP3 PUSH3 0x297 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2C8 DUP2 PUSH3 0x2AA JUMP JUMPDEST DUP2 EQ PUSH3 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2E6 DUP2 PUSH3 0x2BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x306 JUMPI PUSH3 0x305 PUSH3 0x1FA JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x315 DUP7 DUP3 DUP8 ADD PUSH3 0x220 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x328 DUP7 DUP3 DUP8 ADD PUSH3 0x281 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x33B DUP7 DUP3 DUP8 ADD PUSH3 0x2D6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x38B PUSH1 0x14 DUP4 PUSH3 0x345 JUMP JUMPDEST SWAP2 POP PUSH3 0x398 DUP3 PUSH3 0x355 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x3BC DUP2 PUSH3 0x37D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x41F PUSH1 0x25 DUP4 PUSH3 0x345 JUMP JUMPDEST SWAP2 POP PUSH3 0x42C DUP3 PUSH3 0x3C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x450 DUP2 PUSH3 0x411 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x4B3 PUSH1 0x24 DUP4 PUSH3 0x345 JUMP JUMPDEST SWAP2 POP PUSH3 0x4C0 DUP3 PUSH3 0x457 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x4E4 DUP2 PUSH3 0x4A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F3E DUP1 PUSH3 0x4F9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x521EB273 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB3AEFB75 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB3AEFB75 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3A4 JUMPI PUSH2 0x102 JUMP JUMPDEST DUP1 PUSH4 0x521EB273 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x80AD2CF3 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2FA JUMPI PUSH2 0x102 JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x242 JUMPI PUSH2 0x102 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x21EFF7FC EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x18C JUMPI PUSH2 0x102 JUMP JUMPDEST CALLDATASIZE PUSH2 0x102 JUMPI PUSH2 0x100 PUSH2 0xFB PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x112 PUSH2 0x10D PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x151D JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x5B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x7B9 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x3EB DUP3 DUP3 PUSH2 0x806 JUMP JUMPDEST PUSH0 PUSH2 0x3F5 DUP3 PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x40C DUP3 PUSH1 0x4 SLOAD PUSH2 0x900 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x41C DUP4 DUP3 PUSH2 0x915 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x43B PUSH2 0x3CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x482 SWAP3 SWAP2 SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x494 DUP4 DUP4 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x49C PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x4A6 DUP4 DUP4 PUSH2 0xA29 JUMP JUMPDEST POP POP PUSH2 0x4B0 PUSH2 0xA2D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x525 JUMPI POP PUSH2 0x524 DUP3 PUSH2 0xA36 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5A1 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x5AA DUP2 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x5B4 DUP4 DUP4 PUSH2 0xAB3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x3CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x638 DUP3 DUP3 PUSH2 0xB8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x679 DUP2 PUSH2 0xA9F JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x779 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x782 DUP2 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x78C DUP4 DUP4 PUSH2 0xB8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F4 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x810 DUP3 DUP3 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x89E DUP3 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x900 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F9 PUSH1 0x3 SLOAD DUP4 PUSH2 0xD1D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x91F DUP3 DUP3 PUSH2 0xD32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x92D DUP3 DUP3 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x97D DUP2 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x900 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA26 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB0 DUP2 PUSH2 0xAAB PUSH2 0x3CE JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xABD DUP3 DUP3 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0xB8A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB2F PUSH2 0x3CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB98 DUP3 DUP3 PUSH2 0x6C0 JUMP JUMPDEST ISZERO PUSH2 0xC65 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC0A PUSH2 0x3CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCE SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xD19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD10 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7E DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE0A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD90 DUP3 DUP3 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0xE06 JUMPI PUSH2 0xD9D DUP2 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0xDAA DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDBB SWAP3 SWAP2 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFD SWAP2 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE8B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE29 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEB6 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xEBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xECF SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF2 JUMPI PUSH2 0xEF1 PUSH2 0x1BEC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF24 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xFFC SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10A5 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1048 JUMPI PUSH2 0x1047 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x105F JUMPI PUSH2 0x105E PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x109E SWAP1 PUSH2 0x1C46 JUMP JUMPDEST SWAP1 POP PUSH2 0x1009 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DF SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1153 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11B8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x1174 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1173 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST JUMPDEST PUSH2 0x11B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AA SWAP1 PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11C6 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x11CF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1214 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x123C SWAP2 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1276 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x128C DUP8 DUP4 DUP4 DUP8 PUSH2 0x1298 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x12F9 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x12F1 JUMPI PUSH2 0x12B1 DUP6 PUSH2 0x130C JUMP JUMPDEST PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E7 SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x1303 DUP4 DUP4 PUSH2 0x132E JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1340 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1374 SWAP2 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B5 DUP2 PUSH2 0x1381 JUMP JUMPDEST DUP2 EQ PUSH2 0x13BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D0 DUP2 PUSH2 0x13AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EB JUMPI PUSH2 0x13EA PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F8 DUP5 DUP3 DUP6 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1415 DUP2 PUSH2 0x1401 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142E PUSH0 DUP4 ADD DUP5 PUSH2 0x140C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x145D DUP3 PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146D DUP2 PUSH2 0x1453 JUMP JUMPDEST DUP2 EQ PUSH2 0x1477 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1488 DUP2 PUSH2 0x1464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A2 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B0 DUP5 DUP3 DUP6 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14CB DUP2 PUSH2 0x14B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x14C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FC DUP2 PUSH2 0x14EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1506 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1517 DUP2 PUSH2 0x14F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1532 JUMPI PUSH2 0x1531 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x153F DUP5 DUP3 DUP6 ADD PUSH2 0x1509 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1551 DUP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156A PUSH0 DUP4 ADD DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1586 JUMPI PUSH2 0x1585 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1593 DUP6 DUP3 DUP7 ADD PUSH2 0x1509 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A4 DUP6 DUP3 DUP7 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15B8 DUP3 PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C8 DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15F0 DUP2 PUSH2 0x14B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x15FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160B DUP2 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1627 JUMPI PUSH2 0x1626 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1634 DUP6 DUP3 DUP7 ADD PUSH2 0x147A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1645 DUP6 DUP3 DUP7 ADD PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1672 PUSH2 0x166D PUSH2 0x1668 DUP5 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x164F JUMP JUMPDEST PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1683 DUP3 PUSH2 0x1658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 DUP3 PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A4 DUP2 PUSH2 0x168A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BD PUSH0 DUP4 ADD DUP5 PUSH2 0x169B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16D6 PUSH0 DUP4 ADD DUP6 PUSH2 0x14C2 JUMP JUMPDEST PUSH2 0x16E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14C2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1754 PUSH1 0x2F DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x175F DUP3 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1781 DUP2 PUSH2 0x1748 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17BC PUSH1 0x1F DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x17C7 DUP3 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E9 DUP2 PUSH2 0x17B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E646976696475616C6C7943617070656443726F776473616C653A2062656E PUSH0 DUP3 ADD MSTORE PUSH32 0x6566696369617279277320636170206578636565646564000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x184A PUSH1 0x37 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1855 DUP3 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1877 DUP2 PUSH2 0x183E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18B5 DUP3 PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C0 DUP4 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18D8 JUMPI PUSH2 0x18D7 PUSH2 0x187E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1938 PUSH1 0x2A DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1943 DUP3 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1965 DUP2 PUSH2 0x192C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19A0 PUSH1 0x19 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x19AB DUP3 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19CD DUP2 PUSH2 0x1994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE DUP3 PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP4 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19F7 DUP2 PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A0E JUMPI PUSH2 0x1A0D PUSH2 0x187E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A53 PUSH1 0x17 DUP4 PUSH2 0x1A15 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5E DUP3 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A90 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A75 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA5 DUP3 PUSH2 0x1A69 JUMP JUMPDEST PUSH2 0x1AAF DUP2 DUP6 PUSH2 0x1A15 JUMP JUMPDEST SWAP4 POP PUSH2 0x1ABF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFF PUSH1 0x11 DUP4 PUSH2 0x1A15 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0A DUP3 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1F DUP3 PUSH2 0x1A47 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2B DUP3 DUP6 PUSH2 0x1A9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B36 DUP3 PUSH2 0x1AF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B42 DUP3 DUP5 PUSH2 0x1A9B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B68 DUP3 PUSH2 0x1A69 JUMP JUMPDEST PUSH2 0x1B72 DUP2 DUP6 PUSH2 0x16EA JUMP JUMPDEST SWAP4 POP PUSH2 0x1B82 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST PUSH2 0x1B8B DUP2 PUSH2 0x1B4E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BAE DUP2 DUP5 PUSH2 0x1B5E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BBF DUP2 PUSH2 0x1453 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BD8 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x1BE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14C2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C50 DUP3 PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1C62 JUMPI PUSH2 0x1C61 PUSH2 0x187E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA1 PUSH1 0x20 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CAC DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCE DUP2 PUSH2 0x1C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDE DUP2 PUSH2 0x1401 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF9 DUP2 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D21 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D84 PUSH1 0x2A DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8F DUP3 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB1 DUP2 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E12 PUSH1 0x26 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E3F DUP2 PUSH2 0x1E06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E64 DUP3 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1E6E DUP2 DUP6 PUSH2 0x1E50 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E7E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E95 DUP3 DUP5 PUSH2 0x1E5A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED4 PUSH1 0x1D DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDF DUP3 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F01 DUP2 PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY GASPRICE CODESIZE 0xC SIGNEXTEND CODECOPY CALLER 0xF7 0xBB PUSH16 0x6DF5430E2B4785EA7EA9BF1108C9471D 0x24 SWAP7 0x2D 0x4C REVERT PUSH17 0x64736F6C63430008150033000000000000 ",
							"sourceMap": "313:2346:15:-:0;;;531:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;648:6;656:8;666:7;1716:1:2;1821:7;:22;;;;2644:1:14;2635:6;:10;2627:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2709:1;2689:22;;:8;:22;;;2681:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2800:1;2772:30;;2780:7;2772:30;;;2764:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2864:6;2856:5;:14;;;;2891:8;2881:7;;:18;;;;;;;;;;;;;;;;;;2919:7;2910:6;;:16;;;;;;;;;;;;;;;;;;2545:389;;;531:146:15;;;313:2346;;88:117:16;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:104::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;826:104;;;:::o;936:138::-;1017:32;1043:5;1017:32;:::i;:::-;1010:5;1007:43;997:71;;1064:1;1061;1054:12;997:71;936:138;:::o;1080:159::-;1145:5;1176:6;1170:13;1161:22;;1192:41;1227:5;1192:41;:::i;:::-;1080:159;;;;:::o;1245:96::-;1282:7;1311:24;1329:5;1311:24;:::i;:::-;1300:35;;1245:96;;;:::o;1347:110::-;1398:7;1427:24;1445:5;1427:24;:::i;:::-;1416:35;;1347:110;;;:::o;1463:150::-;1550:38;1582:5;1550:38;:::i;:::-;1543:5;1540:49;1530:77;;1603:1;1600;1593:12;1530:77;1463:150;:::o;1619:171::-;1690:5;1721:6;1715:13;1706:22;;1737:47;1778:5;1737:47;:::i;:::-;1619:171;;;;:::o;1796:707::-;1906:6;1914;1922;1971:2;1959:9;1950:7;1946:23;1942:32;1939:119;;;1977:79;;:::i;:::-;1939:119;2097:1;2122:64;2178:7;2169:6;2158:9;2154:22;2122:64;:::i;:::-;2112:74;;2068:128;2235:2;2261:72;2325:7;2316:6;2305:9;2301:22;2261:72;:::i;:::-;2251:82;;2206:137;2382:2;2408:78;2478:7;2469:6;2458:9;2454:22;2408:78;:::i;:::-;2398:88;;2353:143;1796:707;;;;;:::o;2509:169::-;2593:11;2627:6;2622:3;2615:19;2667:4;2662:3;2658:14;2643:29;;2509:169;;;;:::o;2684:170::-;2824:22;2820:1;2812:6;2808:14;2801:46;2684:170;:::o;2860:366::-;3002:3;3023:67;3087:2;3082:3;3023:67;:::i;:::-;3016:74;;3099:93;3188:3;3099:93;:::i;:::-;3217:2;3212:3;3208:12;3201:19;;2860:366;;;:::o;3232:419::-;3398:4;3436:2;3425:9;3421:18;3413:26;;3485:9;3479:4;3475:20;3471:1;3460:9;3456:17;3449:47;3513:131;3639:4;3513:131;:::i;:::-;3505:139;;3232:419;;;:::o;3657:224::-;3797:34;3793:1;3785:6;3781:14;3774:58;3866:7;3861:2;3853:6;3849:15;3842:32;3657:224;:::o;3887:366::-;4029:3;4050:67;4114:2;4109:3;4050:67;:::i;:::-;4043:74;;4126:93;4215:3;4126:93;:::i;:::-;4244:2;4239:3;4235:12;4228:19;;3887:366;;;:::o;4259:419::-;4425:4;4463:2;4452:9;4448:18;4440:26;;4512:9;4506:4;4502:20;4498:1;4487:9;4483:17;4476:47;4540:131;4666:4;4540:131;:::i;:::-;4532:139;;4259:419;;;:::o;4684:223::-;4824:34;4820:1;4812:6;4808:14;4801:58;4893:6;4888:2;4880:6;4876:15;4869:31;4684:223;:::o;4913:366::-;5055:3;5076:67;5140:2;5135:3;5076:67;:::i;:::-;5069:74;;5152:93;5241:3;5152:93;:::i;:::-;5270:2;5265:3;5261:12;5254:19;;4913:366;;;:::o;5285:419::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5538:9;5532:4;5528:20;5524:1;5513:9;5509:17;5502:47;5566:131;5692:4;5566:131;:::i;:::-;5558:139;;5285:419;;;:::o;313:2346:15:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 1828,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2946": {
									"entryPoint": null,
									"id": 2946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2955": {
									"entryPoint": null,
									"id": 2955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_894": {
									"entryPoint": 4338,
									"id": 894,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_131": {
									"entryPoint": 3462,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 2719,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_deliverTokens_3103": {
									"entryPoint": 3378,
									"id": 3103,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_3152": {
									"entryPoint": 2498,
									"id": 3152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_3140": {
									"entryPoint": 2275,
									"id": 3140,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_grantRole_283": {
									"entryPoint": 2739,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1285": {
									"entryPoint": 974,
									"id": 1285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_441": {
									"entryPoint": 2605,
									"id": 441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_433": {
									"entryPoint": 1977,
									"id": 433,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_postValidatePurchase_3087": {
									"entryPoint": 2601,
									"id": 3087,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_3078": {
									"entryPoint": 3177,
									"id": 3078,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_3265": {
									"entryPoint": 2054,
									"id": 3265,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_3117": {
									"entryPoint": 2325,
									"id": 3117,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_1272": {
									"entryPoint": 4910,
									"id": 1272,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_314": {
									"entryPoint": 2958,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updatePurchasingState_3126": {
									"entryPoint": 3458,
									"id": 3126,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updatePurchasingState_3293": {
									"entryPoint": 2339,
									"id": 3293,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_2602": {
									"entryPoint": 2304,
									"id": 2602,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_3050": {
									"entryPoint": 981,
									"id": 3050,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_1097": {
									"entryPoint": 4559,
									"id": 1097,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1033": {
									"entryPoint": 4536,
									"id": 1033,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getCap_3221": {
									"entryPoint": 1834,
									"id": 3221,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getContribution_3234": {
									"entryPoint": 1324,
									"id": 3234,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_146": {
									"entryPoint": 1394,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_166": {
									"entryPoint": 1432,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 1728,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_961": {
									"entryPoint": 4876,
									"id": 961,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_2632": {
									"entryPoint": 3357,
									"id": 2632,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rate_2983": {
									"entryPoint": 1423,
									"id": 2983,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_209": {
									"entryPoint": 1465,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_186": {
									"entryPoint": 1904,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_600": {
									"entryPoint": 3594,
									"id": 600,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setCap_3208": {
									"entryPoint": 1645,
									"id": 3208,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1547": {
									"entryPoint": 2614,
									"id": 1547,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_60": {
									"entryPoint": 1203,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1478": {
									"entryPoint": 3773,
									"id": 1478,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1498": {
									"entryPoint": 3728,
									"id": 1498,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_2965": {
									"entryPoint": 1937,
									"id": 2965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_1228": {
									"entryPoint": 4760,
									"id": 1228,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@wallet_2974": {
									"entryPoint": 1605,
									"id": 2974,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@weiRaised_2992": {
									"entryPoint": 1596,
									"id": 2992,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6933,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 5582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$531_to_t_address": {
									"entryPoint": 5770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6771,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7193,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 7608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 7840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff": {
									"entryPoint": 6128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 7466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 6508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 6859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 5882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23325:16",
										"nodeType": "YulBlock",
										"src": "0:23325:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "378:105:16",
													"nodeType": "YulBlock",
													"src": "378:105:16",
													"statements": [
														{
															"nativeSrc": "388:89:16",
															"nodeType": "YulAssignment",
															"src": "388:89:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:16",
																		"nodeType": "YulLiteral",
																		"src": "410:66:16",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:16"
																},
																"nativeSrc": "399:78:16",
																"nodeType": "YulFunctionCall",
																"src": "399:78:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:16",
														"nodeType": "YulTypedName",
														"src": "360:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:16",
														"nodeType": "YulTypedName",
														"src": "370:7:16",
														"type": ""
													}
												],
												"src": "334:149:16"
											},
											{
												"body": {
													"nativeSrc": "531:78:16",
													"nodeType": "YulBlock",
													"src": "531:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:16",
																"nodeType": "YulBlock",
																"src": "587:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:16",
																					"nodeType": "YulLiteral",
																					"src": "596:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "599:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:16"
																			},
																			"nativeSrc": "589:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:16"
																		},
																		"nativeSrc": "589:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:16"
																				},
																				"nativeSrc": "561:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:16"
																		},
																		"nativeSrc": "551:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:16"
																},
																"nativeSrc": "544:42:16",
																"nodeType": "YulFunctionCall",
																"src": "544:42:16"
															},
															"nativeSrc": "541:62:16",
															"nodeType": "YulIf",
															"src": "541:62:16"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:16",
														"nodeType": "YulTypedName",
														"src": "524:5:16",
														"type": ""
													}
												],
												"src": "489:120:16"
											},
											{
												"body": {
													"nativeSrc": "666:86:16",
													"nodeType": "YulBlock",
													"src": "666:86:16",
													"statements": [
														{
															"nativeSrc": "676:29:16",
															"nodeType": "YulAssignment",
															"src": "676:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:16"
																},
																"nativeSrc": "685:20:16",
																"nodeType": "YulFunctionCall",
																"src": "685:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:16"
																},
																"nativeSrc": "714:32:16",
																"nodeType": "YulFunctionCall",
																"src": "714:32:16"
															},
															"nativeSrc": "714:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:16",
														"nodeType": "YulTypedName",
														"src": "644:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:16",
														"nodeType": "YulTypedName",
														"src": "652:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:16",
														"nodeType": "YulTypedName",
														"src": "660:5:16",
														"type": ""
													}
												],
												"src": "615:137:16"
											},
											{
												"body": {
													"nativeSrc": "823:262:16",
													"nodeType": "YulBlock",
													"src": "823:262:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:16",
																"nodeType": "YulBlock",
																"src": "869:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:16"
																			},
																			"nativeSrc": "871:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:16"
																		},
																		"nativeSrc": "871:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:16"
																		},
																		"nativeSrc": "840:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:16",
																		"nodeType": "YulLiteral",
																		"src": "865:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:16"
																},
																"nativeSrc": "836:32:16",
																"nodeType": "YulFunctionCall",
																"src": "836:32:16"
															},
															"nativeSrc": "833:119:16",
															"nodeType": "YulIf",
															"src": "833:119:16"
														},
														{
															"nativeSrc": "962:116:16",
															"nodeType": "YulBlock",
															"src": "962:116:16",
															"statements": [
																{
																	"nativeSrc": "977:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:16",
																		"nodeType": "YulLiteral",
																		"src": "991:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:16",
																			"nodeType": "YulTypedName",
																			"src": "981:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:16",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:16"
																				},
																				"nativeSrc": "1036:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:16",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:16"
																		},
																		"nativeSrc": "1016:52:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:16",
														"nodeType": "YulTypedName",
														"src": "793:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:16",
														"nodeType": "YulTypedName",
														"src": "804:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:16",
														"nodeType": "YulTypedName",
														"src": "816:6:16",
														"type": ""
													}
												],
												"src": "758:327:16"
											},
											{
												"body": {
													"nativeSrc": "1133:48:16",
													"nodeType": "YulBlock",
													"src": "1133:48:16",
													"statements": [
														{
															"nativeSrc": "1143:32:16",
															"nodeType": "YulAssignment",
															"src": "1143:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:16"
																		},
																		"nativeSrc": "1161:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:16"
																},
																"nativeSrc": "1154:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:16",
														"nodeType": "YulTypedName",
														"src": "1115:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:16",
														"nodeType": "YulTypedName",
														"src": "1125:7:16",
														"type": ""
													}
												],
												"src": "1091:90:16"
											},
											{
												"body": {
													"nativeSrc": "1246:50:16",
													"nodeType": "YulBlock",
													"src": "1246:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:16"
																		},
																		"nativeSrc": "1268:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:16"
																},
																"nativeSrc": "1256:34:16",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:16"
															},
															"nativeSrc": "1256:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:16",
														"nodeType": "YulTypedName",
														"src": "1234:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:16",
														"nodeType": "YulTypedName",
														"src": "1241:3:16",
														"type": ""
													}
												],
												"src": "1187:109:16"
											},
											{
												"body": {
													"nativeSrc": "1394:118:16",
													"nodeType": "YulBlock",
													"src": "1394:118:16",
													"statements": [
														{
															"nativeSrc": "1404:26:16",
															"nodeType": "YulAssignment",
															"src": "1404:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:16"
																},
																"nativeSrc": "1412:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:16"
																		},
																		"nativeSrc": "1487:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:16"
																},
																"nativeSrc": "1440:65:16",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:16"
															},
															"nativeSrc": "1440:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:16",
														"nodeType": "YulTypedName",
														"src": "1366:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:16",
														"nodeType": "YulTypedName",
														"src": "1378:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:16",
														"nodeType": "YulTypedName",
														"src": "1389:4:16",
														"type": ""
													}
												],
												"src": "1302:210:16"
											},
											{
												"body": {
													"nativeSrc": "1563:81:16",
													"nodeType": "YulBlock",
													"src": "1563:81:16",
													"statements": [
														{
															"nativeSrc": "1573:65:16",
															"nodeType": "YulAssignment",
															"src": "1573:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:16",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:16"
																},
																"nativeSrc": "1584:54:16",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:16",
														"nodeType": "YulTypedName",
														"src": "1545:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:16",
														"nodeType": "YulTypedName",
														"src": "1555:7:16",
														"type": ""
													}
												],
												"src": "1518:126:16"
											},
											{
												"body": {
													"nativeSrc": "1695:51:16",
													"nodeType": "YulBlock",
													"src": "1695:51:16",
													"statements": [
														{
															"nativeSrc": "1705:35:16",
															"nodeType": "YulAssignment",
															"src": "1705:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:16"
																},
																"nativeSrc": "1716:24:16",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:16",
														"nodeType": "YulTypedName",
														"src": "1677:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:16",
														"nodeType": "YulTypedName",
														"src": "1687:7:16",
														"type": ""
													}
												],
												"src": "1650:96:16"
											},
											{
												"body": {
													"nativeSrc": "1795:79:16",
													"nodeType": "YulBlock",
													"src": "1795:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:16",
																"nodeType": "YulBlock",
																"src": "1852:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:16"
																			},
																			"nativeSrc": "1854:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:16"
																		},
																		"nativeSrc": "1854:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:16"
																				},
																				"nativeSrc": "1825:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:16"
																		},
																		"nativeSrc": "1815:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:16"
																},
																"nativeSrc": "1808:43:16",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:16"
															},
															"nativeSrc": "1805:63:16",
															"nodeType": "YulIf",
															"src": "1805:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:16",
														"nodeType": "YulTypedName",
														"src": "1788:5:16",
														"type": ""
													}
												],
												"src": "1752:122:16"
											},
											{
												"body": {
													"nativeSrc": "1932:87:16",
													"nodeType": "YulBlock",
													"src": "1932:87:16",
													"statements": [
														{
															"nativeSrc": "1942:29:16",
															"nodeType": "YulAssignment",
															"src": "1942:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:16"
																},
																"nativeSrc": "1951:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:16"
																},
																"nativeSrc": "1980:33:16",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:16"
															},
															"nativeSrc": "1980:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:16",
														"nodeType": "YulTypedName",
														"src": "1910:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:16",
														"nodeType": "YulTypedName",
														"src": "1918:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:16",
														"nodeType": "YulTypedName",
														"src": "1926:5:16",
														"type": ""
													}
												],
												"src": "1880:139:16"
											},
											{
												"body": {
													"nativeSrc": "2091:263:16",
													"nodeType": "YulBlock",
													"src": "2091:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:16",
																"nodeType": "YulBlock",
																"src": "2137:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:16"
																			},
																			"nativeSrc": "2139:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:16"
																		},
																		"nativeSrc": "2139:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:16"
																		},
																		"nativeSrc": "2108:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:16"
																},
																"nativeSrc": "2104:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:16"
															},
															"nativeSrc": "2101:119:16",
															"nodeType": "YulIf",
															"src": "2101:119:16"
														},
														{
															"nativeSrc": "2230:117:16",
															"nodeType": "YulBlock",
															"src": "2230:117:16",
															"statements": [
																{
																	"nativeSrc": "2245:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:16",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:16"
																				},
																				"nativeSrc": "2305:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:16"
																		},
																		"nativeSrc": "2284:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:16",
														"nodeType": "YulTypedName",
														"src": "2061:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:16",
														"nodeType": "YulTypedName",
														"src": "2072:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:16",
														"nodeType": "YulTypedName",
														"src": "2084:6:16",
														"type": ""
													}
												],
												"src": "2025:329:16"
											},
											{
												"body": {
													"nativeSrc": "2405:32:16",
													"nodeType": "YulBlock",
													"src": "2405:32:16",
													"statements": [
														{
															"nativeSrc": "2415:16:16",
															"nodeType": "YulAssignment",
															"src": "2415:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2426:5:16",
																"nodeType": "YulIdentifier",
																"src": "2426:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2415:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2415:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2360:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:16",
														"nodeType": "YulTypedName",
														"src": "2387:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2397:7:16",
														"nodeType": "YulTypedName",
														"src": "2397:7:16",
														"type": ""
													}
												],
												"src": "2360:77:16"
											},
											{
												"body": {
													"nativeSrc": "2508:53:16",
													"nodeType": "YulBlock",
													"src": "2508:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2525:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2548:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2530:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:16"
																		},
																		"nativeSrc": "2530:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2518:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:16"
																},
																"nativeSrc": "2518:37:16",
																"nodeType": "YulFunctionCall",
																"src": "2518:37:16"
															},
															"nativeSrc": "2518:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2443:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2496:5:16",
														"nodeType": "YulTypedName",
														"src": "2496:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2503:3:16",
														"nodeType": "YulTypedName",
														"src": "2503:3:16",
														"type": ""
													}
												],
												"src": "2443:118:16"
											},
											{
												"body": {
													"nativeSrc": "2665:124:16",
													"nodeType": "YulBlock",
													"src": "2665:124:16",
													"statements": [
														{
															"nativeSrc": "2675:26:16",
															"nodeType": "YulAssignment",
															"src": "2675:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2687:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2687:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2683:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:16"
																},
																"nativeSrc": "2683:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2683:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2675:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2675:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2755:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2755:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2768:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2768:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2779:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2779:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2764:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2764:3:16"
																		},
																		"nativeSrc": "2764:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2764:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2711:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "2711:43:16"
																},
																"nativeSrc": "2711:71:16",
																"nodeType": "YulFunctionCall",
																"src": "2711:71:16"
															},
															"nativeSrc": "2711:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "2711:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2567:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2637:9:16",
														"nodeType": "YulTypedName",
														"src": "2637:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2649:6:16",
														"nodeType": "YulTypedName",
														"src": "2649:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2660:4:16",
														"nodeType": "YulTypedName",
														"src": "2660:4:16",
														"type": ""
													}
												],
												"src": "2567:222:16"
											},
											{
												"body": {
													"nativeSrc": "2840:32:16",
													"nodeType": "YulBlock",
													"src": "2840:32:16",
													"statements": [
														{
															"nativeSrc": "2850:16:16",
															"nodeType": "YulAssignment",
															"src": "2850:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2861:5:16",
																"nodeType": "YulIdentifier",
																"src": "2861:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2850:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2850:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2795:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2822:5:16",
														"nodeType": "YulTypedName",
														"src": "2822:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2832:7:16",
														"nodeType": "YulTypedName",
														"src": "2832:7:16",
														"type": ""
													}
												],
												"src": "2795:77:16"
											},
											{
												"body": {
													"nativeSrc": "2921:79:16",
													"nodeType": "YulBlock",
													"src": "2921:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2978:16:16",
																"nodeType": "YulBlock",
																"src": "2978:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2987:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2987:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2990:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2990:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2980:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2980:6:16"
																			},
																			"nativeSrc": "2980:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2980:12:16"
																		},
																		"nativeSrc": "2980:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2980:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2944:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2944:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2969:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2969:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2951:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "2951:17:16"
																				},
																				"nativeSrc": "2951:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2951:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2941:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2941:2:16"
																		},
																		"nativeSrc": "2941:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2941:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2934:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2934:6:16"
																},
																"nativeSrc": "2934:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2934:43:16"
															},
															"nativeSrc": "2931:63:16",
															"nodeType": "YulIf",
															"src": "2931:63:16"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2878:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2914:5:16",
														"nodeType": "YulTypedName",
														"src": "2914:5:16",
														"type": ""
													}
												],
												"src": "2878:122:16"
											},
											{
												"body": {
													"nativeSrc": "3058:87:16",
													"nodeType": "YulBlock",
													"src": "3058:87:16",
													"statements": [
														{
															"nativeSrc": "3068:29:16",
															"nodeType": "YulAssignment",
															"src": "3068:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3090:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3090:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3077:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3077:12:16"
																},
																"nativeSrc": "3077:20:16",
																"nodeType": "YulFunctionCall",
																"src": "3077:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3068:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3068:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3133:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3133:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "3106:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "3106:26:16"
																},
																"nativeSrc": "3106:33:16",
																"nodeType": "YulFunctionCall",
																"src": "3106:33:16"
															},
															"nativeSrc": "3106:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "3106:33:16"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "3006:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3036:6:16",
														"nodeType": "YulTypedName",
														"src": "3036:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3044:3:16",
														"nodeType": "YulTypedName",
														"src": "3044:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3052:5:16",
														"nodeType": "YulTypedName",
														"src": "3052:5:16",
														"type": ""
													}
												],
												"src": "3006:139:16"
											},
											{
												"body": {
													"nativeSrc": "3217:263:16",
													"nodeType": "YulBlock",
													"src": "3217:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3263:83:16",
																"nodeType": "YulBlock",
																"src": "3263:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3265:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3265:77:16"
																			},
																			"nativeSrc": "3265:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3265:79:16"
																		},
																		"nativeSrc": "3265:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3265:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3238:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3238:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3247:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3247:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3234:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:16"
																		},
																		"nativeSrc": "3234:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3259:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3259:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3230:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:16"
																},
																"nativeSrc": "3230:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3230:32:16"
															},
															"nativeSrc": "3227:119:16",
															"nodeType": "YulIf",
															"src": "3227:119:16"
														},
														{
															"nativeSrc": "3356:117:16",
															"nodeType": "YulBlock",
															"src": "3356:117:16",
															"statements": [
																{
																	"nativeSrc": "3371:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3371:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3385:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3385:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3375:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3375:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3400:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3400:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3435:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3435:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3446:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3446:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3431:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3431:3:16"
																				},
																				"nativeSrc": "3431:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3431:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3455:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3455:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3410:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3410:20:16"
																		},
																		"nativeSrc": "3410:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3410:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3400:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3400:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "3151:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:16",
														"nodeType": "YulTypedName",
														"src": "3187:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3198:7:16",
														"nodeType": "YulTypedName",
														"src": "3198:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3210:6:16",
														"nodeType": "YulTypedName",
														"src": "3210:6:16",
														"type": ""
													}
												],
												"src": "3151:329:16"
											},
											{
												"body": {
													"nativeSrc": "3551:53:16",
													"nodeType": "YulBlock",
													"src": "3551:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3568:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3568:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3591:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3591:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3573:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3573:17:16"
																		},
																		"nativeSrc": "3573:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3573:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3561:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:16"
																},
																"nativeSrc": "3561:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3561:37:16"
															},
															"nativeSrc": "3561:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3561:37:16"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3486:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3539:5:16",
														"nodeType": "YulTypedName",
														"src": "3539:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3546:3:16",
														"nodeType": "YulTypedName",
														"src": "3546:3:16",
														"type": ""
													}
												],
												"src": "3486:118:16"
											},
											{
												"body": {
													"nativeSrc": "3708:124:16",
													"nodeType": "YulBlock",
													"src": "3708:124:16",
													"statements": [
														{
															"nativeSrc": "3718:26:16",
															"nodeType": "YulAssignment",
															"src": "3718:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3730:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3730:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3726:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3726:3:16"
																},
																"nativeSrc": "3726:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3726:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3718:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3718:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3798:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3798:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3811:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3811:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3822:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3822:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3807:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:16"
																		},
																		"nativeSrc": "3807:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3754:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3754:43:16"
																},
																"nativeSrc": "3754:71:16",
																"nodeType": "YulFunctionCall",
																"src": "3754:71:16"
															},
															"nativeSrc": "3754:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "3754:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3610:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3680:9:16",
														"nodeType": "YulTypedName",
														"src": "3680:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3692:6:16",
														"nodeType": "YulTypedName",
														"src": "3692:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3703:4:16",
														"nodeType": "YulTypedName",
														"src": "3703:4:16",
														"type": ""
													}
												],
												"src": "3610:222:16"
											},
											{
												"body": {
													"nativeSrc": "3921:391:16",
													"nodeType": "YulBlock",
													"src": "3921:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3967:83:16",
																"nodeType": "YulBlock",
																"src": "3967:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3969:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3969:77:16"
																			},
																			"nativeSrc": "3969:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3969:79:16"
																		},
																		"nativeSrc": "3969:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3969:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3942:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3942:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3951:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3938:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:16"
																		},
																		"nativeSrc": "3938:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3938:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3963:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3963:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3934:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3934:3:16"
																},
																"nativeSrc": "3934:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3934:32:16"
															},
															"nativeSrc": "3931:119:16",
															"nodeType": "YulIf",
															"src": "3931:119:16"
														},
														{
															"nativeSrc": "4060:117:16",
															"nodeType": "YulBlock",
															"src": "4060:117:16",
															"statements": [
																{
																	"nativeSrc": "4075:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4075:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4089:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4089:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4079:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4079:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4104:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4104:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4139:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4139:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4150:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4150:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4135:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4135:3:16"
																				},
																				"nativeSrc": "4135:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4135:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4159:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4159:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4114:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4114:20:16"
																		},
																		"nativeSrc": "4114:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4114:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4104:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4104:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4187:118:16",
															"nodeType": "YulBlock",
															"src": "4187:118:16",
															"statements": [
																{
																	"nativeSrc": "4202:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4202:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4216:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4206:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4206:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4232:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4232:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4267:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4267:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4278:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4278:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4263:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4263:3:16"
																				},
																				"nativeSrc": "4263:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4263:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4287:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4287:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4242:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4242:20:16"
																		},
																		"nativeSrc": "4242:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4242:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4232:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4232:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3838:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3883:9:16",
														"nodeType": "YulTypedName",
														"src": "3883:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3894:7:16",
														"nodeType": "YulTypedName",
														"src": "3894:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3906:6:16",
														"nodeType": "YulTypedName",
														"src": "3906:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3914:6:16",
														"nodeType": "YulTypedName",
														"src": "3914:6:16",
														"type": ""
													}
												],
												"src": "3838:474:16"
											},
											{
												"body": {
													"nativeSrc": "4371:51:16",
													"nodeType": "YulBlock",
													"src": "4371:51:16",
													"statements": [
														{
															"nativeSrc": "4381:35:16",
															"nodeType": "YulAssignment",
															"src": "4381:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4410:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4410:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4392:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "4392:17:16"
																},
																"nativeSrc": "4392:24:16",
																"nodeType": "YulFunctionCall",
																"src": "4392:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4381:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "4381:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "4318:104:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4353:5:16",
														"nodeType": "YulTypedName",
														"src": "4353:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4363:7:16",
														"nodeType": "YulTypedName",
														"src": "4363:7:16",
														"type": ""
													}
												],
												"src": "4318:104:16"
											},
											{
												"body": {
													"nativeSrc": "4509:61:16",
													"nodeType": "YulBlock",
													"src": "4509:61:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4526:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4526:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4557:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4557:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "4531:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "4531:25:16"
																		},
																		"nativeSrc": "4531:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4531:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4519:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4519:6:16"
																},
																"nativeSrc": "4519:45:16",
																"nodeType": "YulFunctionCall",
																"src": "4519:45:16"
															},
															"nativeSrc": "4519:45:16",
															"nodeType": "YulExpressionStatement",
															"src": "4519:45:16"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "4428:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4497:5:16",
														"nodeType": "YulTypedName",
														"src": "4497:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4504:3:16",
														"nodeType": "YulTypedName",
														"src": "4504:3:16",
														"type": ""
													}
												],
												"src": "4428:142:16"
											},
											{
												"body": {
													"nativeSrc": "4690:140:16",
													"nodeType": "YulBlock",
													"src": "4690:140:16",
													"statements": [
														{
															"nativeSrc": "4700:26:16",
															"nodeType": "YulAssignment",
															"src": "4700:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4712:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4712:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4723:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4723:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4708:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4708:3:16"
																},
																"nativeSrc": "4708:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4708:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4700:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4700:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4796:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4796:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4809:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4809:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4820:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4820:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4805:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:16"
																		},
																		"nativeSrc": "4805:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4805:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "4736:59:16",
																	"nodeType": "YulIdentifier",
																	"src": "4736:59:16"
																},
																"nativeSrc": "4736:87:16",
																"nodeType": "YulFunctionCall",
																"src": "4736:87:16"
															},
															"nativeSrc": "4736:87:16",
															"nodeType": "YulExpressionStatement",
															"src": "4736:87:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "4576:254:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4662:9:16",
														"nodeType": "YulTypedName",
														"src": "4662:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4674:6:16",
														"nodeType": "YulTypedName",
														"src": "4674:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4685:4:16",
														"nodeType": "YulTypedName",
														"src": "4685:4:16",
														"type": ""
													}
												],
												"src": "4576:254:16"
											},
											{
												"body": {
													"nativeSrc": "4879:79:16",
													"nodeType": "YulBlock",
													"src": "4879:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4936:16:16",
																"nodeType": "YulBlock",
																"src": "4936:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4945:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4945:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4948:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4948:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4938:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4938:6:16"
																			},
																			"nativeSrc": "4938:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4938:12:16"
																		},
																		"nativeSrc": "4938:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4938:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4902:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4902:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4927:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4927:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4909:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "4909:17:16"
																				},
																				"nativeSrc": "4909:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4909:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4899:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4899:2:16"
																		},
																		"nativeSrc": "4899:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4899:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4892:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4892:6:16"
																},
																"nativeSrc": "4892:43:16",
																"nodeType": "YulFunctionCall",
																"src": "4892:43:16"
															},
															"nativeSrc": "4889:63:16",
															"nodeType": "YulIf",
															"src": "4889:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "4836:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4872:5:16",
														"nodeType": "YulTypedName",
														"src": "4872:5:16",
														"type": ""
													}
												],
												"src": "4836:122:16"
											},
											{
												"body": {
													"nativeSrc": "5016:87:16",
													"nodeType": "YulBlock",
													"src": "5016:87:16",
													"statements": [
														{
															"nativeSrc": "5026:29:16",
															"nodeType": "YulAssignment",
															"src": "5026:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5048:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5048:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5035:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "5035:12:16"
																},
																"nativeSrc": "5035:20:16",
																"nodeType": "YulFunctionCall",
																"src": "5035:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5026:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5026:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5091:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5091:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5064:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "5064:26:16"
																},
																"nativeSrc": "5064:33:16",
																"nodeType": "YulFunctionCall",
																"src": "5064:33:16"
															},
															"nativeSrc": "5064:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "5064:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4964:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4994:6:16",
														"nodeType": "YulTypedName",
														"src": "4994:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5002:3:16",
														"nodeType": "YulTypedName",
														"src": "5002:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5010:5:16",
														"nodeType": "YulTypedName",
														"src": "5010:5:16",
														"type": ""
													}
												],
												"src": "4964:139:16"
											},
											{
												"body": {
													"nativeSrc": "5192:391:16",
													"nodeType": "YulBlock",
													"src": "5192:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5238:83:16",
																"nodeType": "YulBlock",
																"src": "5238:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5240:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5240:77:16"
																			},
																			"nativeSrc": "5240:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5240:79:16"
																		},
																		"nativeSrc": "5240:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5240:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5213:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5213:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5222:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5222:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5209:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5209:3:16"
																		},
																		"nativeSrc": "5209:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5209:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5234:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5234:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5205:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5205:3:16"
																},
																"nativeSrc": "5205:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5205:32:16"
															},
															"nativeSrc": "5202:119:16",
															"nodeType": "YulIf",
															"src": "5202:119:16"
														},
														{
															"nativeSrc": "5331:117:16",
															"nodeType": "YulBlock",
															"src": "5331:117:16",
															"statements": [
																{
																	"nativeSrc": "5346:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5346:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5360:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5360:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5350:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5350:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5375:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5375:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5410:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5410:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5421:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5421:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5406:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5406:3:16"
																				},
																				"nativeSrc": "5406:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5406:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5430:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5430:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5385:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5385:20:16"
																		},
																		"nativeSrc": "5385:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5385:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5375:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5375:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5458:118:16",
															"nodeType": "YulBlock",
															"src": "5458:118:16",
															"statements": [
																{
																	"nativeSrc": "5473:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5473:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5487:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5487:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5477:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5477:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5503:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5503:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5538:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5538:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5549:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5549:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5534:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5534:3:16"
																				},
																				"nativeSrc": "5534:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5534:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5558:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5558:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5513:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:20:16"
																		},
																		"nativeSrc": "5513:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5513:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5503:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5503:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5109:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5154:9:16",
														"nodeType": "YulTypedName",
														"src": "5154:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5165:7:16",
														"nodeType": "YulTypedName",
														"src": "5165:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5177:6:16",
														"nodeType": "YulTypedName",
														"src": "5177:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5185:6:16",
														"nodeType": "YulTypedName",
														"src": "5185:6:16",
														"type": ""
													}
												],
												"src": "5109:474:16"
											},
											{
												"body": {
													"nativeSrc": "5621:28:16",
													"nodeType": "YulBlock",
													"src": "5621:28:16",
													"statements": [
														{
															"nativeSrc": "5631:12:16",
															"nodeType": "YulAssignment",
															"src": "5631:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "5638:5:16",
																"nodeType": "YulIdentifier",
																"src": "5638:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5631:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5631:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5589:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5607:5:16",
														"nodeType": "YulTypedName",
														"src": "5607:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5617:3:16",
														"nodeType": "YulTypedName",
														"src": "5617:3:16",
														"type": ""
													}
												],
												"src": "5589:60:16"
											},
											{
												"body": {
													"nativeSrc": "5715:82:16",
													"nodeType": "YulBlock",
													"src": "5715:82:16",
													"statements": [
														{
															"nativeSrc": "5725:66:16",
															"nodeType": "YulAssignment",
															"src": "5725:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5783:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5783:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5765:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "5765:17:16"
																				},
																				"nativeSrc": "5765:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5765:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5756:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "5756:8:16"
																		},
																		"nativeSrc": "5756:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5756:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5738:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "5738:17:16"
																},
																"nativeSrc": "5738:53:16",
																"nodeType": "YulFunctionCall",
																"src": "5738:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5725:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "5725:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5655:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5695:5:16",
														"nodeType": "YulTypedName",
														"src": "5695:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5705:9:16",
														"nodeType": "YulTypedName",
														"src": "5705:9:16",
														"type": ""
													}
												],
												"src": "5655:142:16"
											},
											{
												"body": {
													"nativeSrc": "5863:66:16",
													"nodeType": "YulBlock",
													"src": "5863:66:16",
													"statements": [
														{
															"nativeSrc": "5873:50:16",
															"nodeType": "YulAssignment",
															"src": "5873:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5917:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5917:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5886:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "5886:30:16"
																},
																"nativeSrc": "5886:37:16",
																"nodeType": "YulFunctionCall",
																"src": "5886:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5873:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "5873:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5803:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5843:5:16",
														"nodeType": "YulTypedName",
														"src": "5843:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5853:9:16",
														"nodeType": "YulTypedName",
														"src": "5853:9:16",
														"type": ""
													}
												],
												"src": "5803:126:16"
											},
											{
												"body": {
													"nativeSrc": "6009:66:16",
													"nodeType": "YulBlock",
													"src": "6009:66:16",
													"statements": [
														{
															"nativeSrc": "6019:50:16",
															"nodeType": "YulAssignment",
															"src": "6019:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6063:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6063:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6032:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "6032:30:16"
																},
																"nativeSrc": "6032:37:16",
																"nodeType": "YulFunctionCall",
																"src": "6032:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6019:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "6019:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$531_to_t_address",
												"nativeSrc": "5935:140:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5989:5:16",
														"nodeType": "YulTypedName",
														"src": "5989:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5999:9:16",
														"nodeType": "YulTypedName",
														"src": "5999:9:16",
														"type": ""
													}
												],
												"src": "5935:140:16"
											},
											{
												"body": {
													"nativeSrc": "6160:80:16",
													"nodeType": "YulBlock",
													"src": "6160:80:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6177:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6177:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6227:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6227:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$531_to_t_address",
																			"nativeSrc": "6182:44:16",
																			"nodeType": "YulIdentifier",
																			"src": "6182:44:16"
																		},
																		"nativeSrc": "6182:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6182:51:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6170:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6170:6:16"
																},
																"nativeSrc": "6170:64:16",
																"nodeType": "YulFunctionCall",
																"src": "6170:64:16"
															},
															"nativeSrc": "6170:64:16",
															"nodeType": "YulExpressionStatement",
															"src": "6170:64:16"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack",
												"nativeSrc": "6081:159:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6148:5:16",
														"nodeType": "YulTypedName",
														"src": "6148:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6155:3:16",
														"nodeType": "YulTypedName",
														"src": "6155:3:16",
														"type": ""
													}
												],
												"src": "6081:159:16"
											},
											{
												"body": {
													"nativeSrc": "6358:138:16",
													"nodeType": "YulBlock",
													"src": "6358:138:16",
													"statements": [
														{
															"nativeSrc": "6368:26:16",
															"nodeType": "YulAssignment",
															"src": "6368:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6380:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6380:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6391:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6391:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6376:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6376:3:16"
																},
																"nativeSrc": "6376:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6376:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6368:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6368:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6462:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6462:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6475:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6475:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6486:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6486:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6471:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6471:3:16"
																		},
																		"nativeSrc": "6471:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6471:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack",
																	"nativeSrc": "6404:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "6404:57:16"
																},
																"nativeSrc": "6404:85:16",
																"nodeType": "YulFunctionCall",
																"src": "6404:85:16"
															},
															"nativeSrc": "6404:85:16",
															"nodeType": "YulExpressionStatement",
															"src": "6404:85:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed",
												"nativeSrc": "6246:250:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6330:9:16",
														"nodeType": "YulTypedName",
														"src": "6330:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6342:6:16",
														"nodeType": "YulTypedName",
														"src": "6342:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6353:4:16",
														"nodeType": "YulTypedName",
														"src": "6353:4:16",
														"type": ""
													}
												],
												"src": "6246:250:16"
											},
											{
												"body": {
													"nativeSrc": "6628:206:16",
													"nodeType": "YulBlock",
													"src": "6628:206:16",
													"statements": [
														{
															"nativeSrc": "6638:26:16",
															"nodeType": "YulAssignment",
															"src": "6638:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6650:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6650:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6661:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6661:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6646:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6646:3:16"
																},
																"nativeSrc": "6646:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6646:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6638:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6638:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6718:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6718:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6731:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6742:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6742:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6727:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:16"
																		},
																		"nativeSrc": "6727:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6674:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "6674:43:16"
																},
																"nativeSrc": "6674:71:16",
																"nodeType": "YulFunctionCall",
																"src": "6674:71:16"
															},
															"nativeSrc": "6674:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "6674:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6799:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6799:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6812:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6812:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6823:2:16",
																				"nodeType": "YulLiteral",
																				"src": "6823:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6808:3:16"
																		},
																		"nativeSrc": "6808:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6808:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6755:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "6755:43:16"
																},
																"nativeSrc": "6755:72:16",
																"nodeType": "YulFunctionCall",
																"src": "6755:72:16"
															},
															"nativeSrc": "6755:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "6755:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6502:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6592:9:16",
														"nodeType": "YulTypedName",
														"src": "6592:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6604:6:16",
														"nodeType": "YulTypedName",
														"src": "6604:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6612:6:16",
														"nodeType": "YulTypedName",
														"src": "6612:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6623:4:16",
														"nodeType": "YulTypedName",
														"src": "6623:4:16",
														"type": ""
													}
												],
												"src": "6502:332:16"
											},
											{
												"body": {
													"nativeSrc": "6936:73:16",
													"nodeType": "YulBlock",
													"src": "6936:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6953:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6953:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6958:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6958:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6946:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6946:6:16"
																},
																"nativeSrc": "6946:19:16",
																"nodeType": "YulFunctionCall",
																"src": "6946:19:16"
															},
															"nativeSrc": "6946:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "6946:19:16"
														},
														{
															"nativeSrc": "6974:29:16",
															"nodeType": "YulAssignment",
															"src": "6974:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6993:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6993:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6998:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6998:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6989:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6989:3:16"
																},
																"nativeSrc": "6989:14:16",
																"nodeType": "YulFunctionCall",
																"src": "6989:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6974:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "6974:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6840:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6908:3:16",
														"nodeType": "YulTypedName",
														"src": "6908:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6913:6:16",
														"nodeType": "YulTypedName",
														"src": "6913:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6924:11:16",
														"nodeType": "YulTypedName",
														"src": "6924:11:16",
														"type": ""
													}
												],
												"src": "6840:169:16"
											},
											{
												"body": {
													"nativeSrc": "7121:128:16",
													"nodeType": "YulBlock",
													"src": "7121:128:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7143:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7143:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7151:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7151:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7139:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7139:3:16"
																		},
																		"nativeSrc": "7139:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7139:14:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "7155:34:16",
																		"nodeType": "YulLiteral",
																		"src": "7155:34:16",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7132:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7132:6:16"
																},
																"nativeSrc": "7132:58:16",
																"nodeType": "YulFunctionCall",
																"src": "7132:58:16"
															},
															"nativeSrc": "7132:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "7132:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7211:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7211:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7219:2:16",
																				"nodeType": "YulLiteral",
																				"src": "7219:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7207:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7207:3:16"
																		},
																		"nativeSrc": "7207:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7207:15:16"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "7224:17:16",
																		"nodeType": "YulLiteral",
																		"src": "7224:17:16",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7200:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7200:6:16"
																},
																"nativeSrc": "7200:42:16",
																"nodeType": "YulFunctionCall",
																"src": "7200:42:16"
															},
															"nativeSrc": "7200:42:16",
															"nodeType": "YulExpressionStatement",
															"src": "7200:42:16"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nativeSrc": "7015:234:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7113:6:16",
														"nodeType": "YulTypedName",
														"src": "7113:6:16",
														"type": ""
													}
												],
												"src": "7015:234:16"
											},
											{
												"body": {
													"nativeSrc": "7401:220:16",
													"nodeType": "YulBlock",
													"src": "7401:220:16",
													"statements": [
														{
															"nativeSrc": "7411:74:16",
															"nodeType": "YulAssignment",
															"src": "7411:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7477:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7477:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7482:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7482:2:16",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7418:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "7418:58:16"
																},
																"nativeSrc": "7418:67:16",
																"nodeType": "YulFunctionCall",
																"src": "7418:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7411:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7411:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7583:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7583:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nativeSrc": "7494:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "7494:88:16"
																},
																"nativeSrc": "7494:93:16",
																"nodeType": "YulFunctionCall",
																"src": "7494:93:16"
															},
															"nativeSrc": "7494:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "7494:93:16"
														},
														{
															"nativeSrc": "7596:19:16",
															"nodeType": "YulAssignment",
															"src": "7596:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7607:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7607:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7612:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7612:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7603:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7603:3:16"
																},
																"nativeSrc": "7603:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7603:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7596:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7596:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7255:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7389:3:16",
														"nodeType": "YulTypedName",
														"src": "7389:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7397:3:16",
														"nodeType": "YulTypedName",
														"src": "7397:3:16",
														"type": ""
													}
												],
												"src": "7255:366:16"
											},
											{
												"body": {
													"nativeSrc": "7798:248:16",
													"nodeType": "YulBlock",
													"src": "7798:248:16",
													"statements": [
														{
															"nativeSrc": "7808:26:16",
															"nodeType": "YulAssignment",
															"src": "7808:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7820:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7820:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7831:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7831:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7816:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7816:3:16"
																},
																"nativeSrc": "7816:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7816:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7808:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7808:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7855:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7855:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7866:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7866:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7851:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7851:3:16"
																		},
																		"nativeSrc": "7851:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7851:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7874:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "7874:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7880:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7880:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7870:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7870:3:16"
																		},
																		"nativeSrc": "7870:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7870:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7844:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7844:6:16"
																},
																"nativeSrc": "7844:47:16",
																"nodeType": "YulFunctionCall",
																"src": "7844:47:16"
															},
															"nativeSrc": "7844:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "7844:47:16"
														},
														{
															"nativeSrc": "7900:139:16",
															"nodeType": "YulAssignment",
															"src": "7900:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8034:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "8034:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7908:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "7908:124:16"
																},
																"nativeSrc": "7908:131:16",
																"nodeType": "YulFunctionCall",
																"src": "7908:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7900:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7900:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7627:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7778:9:16",
														"nodeType": "YulTypedName",
														"src": "7778:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7793:4:16",
														"nodeType": "YulTypedName",
														"src": "7793:4:16",
														"type": ""
													}
												],
												"src": "7627:419:16"
											},
											{
												"body": {
													"nativeSrc": "8158:75:16",
													"nodeType": "YulBlock",
													"src": "8158:75:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8180:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8180:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8188:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8188:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8176:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8176:3:16"
																		},
																		"nativeSrc": "8176:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8176:14:16"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "8192:33:16",
																		"nodeType": "YulLiteral",
																		"src": "8192:33:16",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8169:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:16"
																},
																"nativeSrc": "8169:57:16",
																"nodeType": "YulFunctionCall",
																"src": "8169:57:16"
															},
															"nativeSrc": "8169:57:16",
															"nodeType": "YulExpressionStatement",
															"src": "8169:57:16"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "8052:181:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8150:6:16",
														"nodeType": "YulTypedName",
														"src": "8150:6:16",
														"type": ""
													}
												],
												"src": "8052:181:16"
											},
											{
												"body": {
													"nativeSrc": "8385:220:16",
													"nodeType": "YulBlock",
													"src": "8385:220:16",
													"statements": [
														{
															"nativeSrc": "8395:74:16",
															"nodeType": "YulAssignment",
															"src": "8395:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8461:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8461:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8466:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8466:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8402:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "8402:58:16"
																},
																"nativeSrc": "8402:67:16",
																"nodeType": "YulFunctionCall",
																"src": "8402:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8395:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8395:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8567:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8567:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "8478:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "8478:88:16"
																},
																"nativeSrc": "8478:93:16",
																"nodeType": "YulFunctionCall",
																"src": "8478:93:16"
															},
															"nativeSrc": "8478:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "8478:93:16"
														},
														{
															"nativeSrc": "8580:19:16",
															"nodeType": "YulAssignment",
															"src": "8580:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8591:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8591:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8596:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8596:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8587:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8587:3:16"
																},
																"nativeSrc": "8587:12:16",
																"nodeType": "YulFunctionCall",
																"src": "8587:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8580:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8580:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8239:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8373:3:16",
														"nodeType": "YulTypedName",
														"src": "8373:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8381:3:16",
														"nodeType": "YulTypedName",
														"src": "8381:3:16",
														"type": ""
													}
												],
												"src": "8239:366:16"
											},
											{
												"body": {
													"nativeSrc": "8782:248:16",
													"nodeType": "YulBlock",
													"src": "8782:248:16",
													"statements": [
														{
															"nativeSrc": "8792:26:16",
															"nodeType": "YulAssignment",
															"src": "8792:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8804:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8804:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8815:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8815:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8800:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8800:3:16"
																},
																"nativeSrc": "8800:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8800:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8792:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8792:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8839:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8839:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8850:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8850:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8835:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8835:3:16"
																		},
																		"nativeSrc": "8835:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8835:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8858:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "8858:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8864:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8864:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8854:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8854:3:16"
																		},
																		"nativeSrc": "8854:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8854:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8828:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8828:6:16"
																},
																"nativeSrc": "8828:47:16",
																"nodeType": "YulFunctionCall",
																"src": "8828:47:16"
															},
															"nativeSrc": "8828:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "8828:47:16"
														},
														{
															"nativeSrc": "8884:139:16",
															"nodeType": "YulAssignment",
															"src": "8884:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9018:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "9018:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8892:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "8892:124:16"
																},
																"nativeSrc": "8892:131:16",
																"nodeType": "YulFunctionCall",
																"src": "8892:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8884:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8884:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8611:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8762:9:16",
														"nodeType": "YulTypedName",
														"src": "8762:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8777:4:16",
														"nodeType": "YulTypedName",
														"src": "8777:4:16",
														"type": ""
													}
												],
												"src": "8611:419:16"
											},
											{
												"body": {
													"nativeSrc": "9142:136:16",
													"nodeType": "YulBlock",
													"src": "9142:136:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9164:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9164:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9172:1:16",
																				"nodeType": "YulLiteral",
																				"src": "9172:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9160:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:16"
																		},
																		"nativeSrc": "9160:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:14:16"
																	},
																	{
																		"hexValue": "496e646976696475616c6c7943617070656443726f776473616c653a2062656e",
																		"kind": "string",
																		"nativeSrc": "9176:34:16",
																		"nodeType": "YulLiteral",
																		"src": "9176:34:16",
																		"type": "",
																		"value": "IndividuallyCappedCrowdsale: ben"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9153:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:16"
																},
																"nativeSrc": "9153:58:16",
																"nodeType": "YulFunctionCall",
																"src": "9153:58:16"
															},
															"nativeSrc": "9153:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "9153:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9232:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9232:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9240:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9240:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9228:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:16"
																		},
																		"nativeSrc": "9228:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9228:15:16"
																	},
																	{
																		"hexValue": "6566696369617279277320636170206578636565646564",
																		"kind": "string",
																		"nativeSrc": "9245:25:16",
																		"nodeType": "YulLiteral",
																		"src": "9245:25:16",
																		"type": "",
																		"value": "eficiary's cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9221:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9221:6:16"
																},
																"nativeSrc": "9221:50:16",
																"nodeType": "YulFunctionCall",
																"src": "9221:50:16"
															},
															"nativeSrc": "9221:50:16",
															"nodeType": "YulExpressionStatement",
															"src": "9221:50:16"
														}
													]
												},
												"name": "store_literal_in_memory_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff",
												"nativeSrc": "9036:242:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9134:6:16",
														"nodeType": "YulTypedName",
														"src": "9134:6:16",
														"type": ""
													}
												],
												"src": "9036:242:16"
											},
											{
												"body": {
													"nativeSrc": "9430:220:16",
													"nodeType": "YulBlock",
													"src": "9430:220:16",
													"statements": [
														{
															"nativeSrc": "9440:74:16",
															"nodeType": "YulAssignment",
															"src": "9440:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9506:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9506:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9511:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9511:2:16",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9447:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "9447:58:16"
																},
																"nativeSrc": "9447:67:16",
																"nodeType": "YulFunctionCall",
																"src": "9447:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9440:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9440:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9612:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9612:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff",
																	"nativeSrc": "9523:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "9523:88:16"
																},
																"nativeSrc": "9523:93:16",
																"nodeType": "YulFunctionCall",
																"src": "9523:93:16"
															},
															"nativeSrc": "9523:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "9523:93:16"
														},
														{
															"nativeSrc": "9625:19:16",
															"nodeType": "YulAssignment",
															"src": "9625:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9636:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9636:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9641:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9641:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9632:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9632:3:16"
																},
																"nativeSrc": "9632:12:16",
																"nodeType": "YulFunctionCall",
																"src": "9632:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9625:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9625:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9284:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9418:3:16",
														"nodeType": "YulTypedName",
														"src": "9418:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9426:3:16",
														"nodeType": "YulTypedName",
														"src": "9426:3:16",
														"type": ""
													}
												],
												"src": "9284:366:16"
											},
											{
												"body": {
													"nativeSrc": "9827:248:16",
													"nodeType": "YulBlock",
													"src": "9827:248:16",
													"statements": [
														{
															"nativeSrc": "9837:26:16",
															"nodeType": "YulAssignment",
															"src": "9837:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9849:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9849:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9860:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9860:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9845:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9845:3:16"
																},
																"nativeSrc": "9845:18:16",
																"nodeType": "YulFunctionCall",
																"src": "9845:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9837:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9837:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9884:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9884:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9895:1:16",
																				"nodeType": "YulLiteral",
																				"src": "9895:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9880:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9880:3:16"
																		},
																		"nativeSrc": "9880:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9880:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9903:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "9903:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9909:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9909:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9899:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9899:3:16"
																		},
																		"nativeSrc": "9899:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9899:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9873:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9873:6:16"
																},
																"nativeSrc": "9873:47:16",
																"nodeType": "YulFunctionCall",
																"src": "9873:47:16"
															},
															"nativeSrc": "9873:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "9873:47:16"
														},
														{
															"nativeSrc": "9929:139:16",
															"nodeType": "YulAssignment",
															"src": "9929:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10063:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10063:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9937:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "9937:124:16"
																},
																"nativeSrc": "9937:131:16",
																"nodeType": "YulFunctionCall",
																"src": "9937:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9929:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9929:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9656:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9807:9:16",
														"nodeType": "YulTypedName",
														"src": "9807:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9822:4:16",
														"nodeType": "YulTypedName",
														"src": "9822:4:16",
														"type": ""
													}
												],
												"src": "9656:419:16"
											},
											{
												"body": {
													"nativeSrc": "10109:152:16",
													"nodeType": "YulBlock",
													"src": "10109:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10126:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10126:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10129:77:16",
																		"nodeType": "YulLiteral",
																		"src": "10129:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10119:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10119:6:16"
																},
																"nativeSrc": "10119:88:16",
																"nodeType": "YulFunctionCall",
																"src": "10119:88:16"
															},
															"nativeSrc": "10119:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "10119:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10223:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10223:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10226:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10226:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10216:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10216:6:16"
																},
																"nativeSrc": "10216:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10216:15:16"
															},
															"nativeSrc": "10216:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10216:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10247:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10247:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10250:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10250:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10240:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10240:6:16"
																},
																"nativeSrc": "10240:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10240:15:16"
															},
															"nativeSrc": "10240:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10240:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10081:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "10081:180:16"
											},
											{
												"body": {
													"nativeSrc": "10311:147:16",
													"nodeType": "YulBlock",
													"src": "10311:147:16",
													"statements": [
														{
															"nativeSrc": "10321:25:16",
															"nodeType": "YulAssignment",
															"src": "10321:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10344:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10344:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10326:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "10326:17:16"
																},
																"nativeSrc": "10326:20:16",
																"nodeType": "YulFunctionCall",
																"src": "10326:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10321:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "10321:1:16"
																}
															]
														},
														{
															"nativeSrc": "10355:25:16",
															"nodeType": "YulAssignment",
															"src": "10355:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10378:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10378:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10360:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "10360:17:16"
																},
																"nativeSrc": "10360:20:16",
																"nodeType": "YulFunctionCall",
																"src": "10360:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10355:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "10355:1:16"
																}
															]
														},
														{
															"nativeSrc": "10389:16:16",
															"nodeType": "YulAssignment",
															"src": "10389:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10400:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10400:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10403:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10403:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10396:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10396:3:16"
																},
																"nativeSrc": "10396:9:16",
																"nodeType": "YulFunctionCall",
																"src": "10396:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10389:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10389:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10429:22:16",
																"nodeType": "YulBlock",
																"src": "10429:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10431:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10431:16:16"
																			},
																			"nativeSrc": "10431:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10431:18:16"
																		},
																		"nativeSrc": "10431:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10431:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10421:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "10421:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10424:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10424:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10418:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10418:2:16"
																},
																"nativeSrc": "10418:10:16",
																"nodeType": "YulFunctionCall",
																"src": "10418:10:16"
															},
															"nativeSrc": "10415:36:16",
															"nodeType": "YulIf",
															"src": "10415:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10267:191:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10298:1:16",
														"nodeType": "YulTypedName",
														"src": "10298:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10301:1:16",
														"nodeType": "YulTypedName",
														"src": "10301:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10307:3:16",
														"nodeType": "YulTypedName",
														"src": "10307:3:16",
														"type": ""
													}
												],
												"src": "10267:191:16"
											},
											{
												"body": {
													"nativeSrc": "10570:123:16",
													"nodeType": "YulBlock",
													"src": "10570:123:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10592:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10592:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10600:1:16",
																				"nodeType": "YulLiteral",
																				"src": "10600:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10588:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10588:3:16"
																		},
																		"nativeSrc": "10588:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10588:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nativeSrc": "10604:34:16",
																		"nodeType": "YulLiteral",
																		"src": "10604:34:16",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10581:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10581:6:16"
																},
																"nativeSrc": "10581:58:16",
																"nodeType": "YulFunctionCall",
																"src": "10581:58:16"
															},
															"nativeSrc": "10581:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "10581:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10660:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10660:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10668:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10668:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10656:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10656:3:16"
																		},
																		"nativeSrc": "10656:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10656:15:16"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "10673:12:16",
																		"nodeType": "YulLiteral",
																		"src": "10673:12:16",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10649:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:16"
																},
																"nativeSrc": "10649:37:16",
																"nodeType": "YulFunctionCall",
																"src": "10649:37:16"
															},
															"nativeSrc": "10649:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "10649:37:16"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nativeSrc": "10464:229:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10562:6:16",
														"nodeType": "YulTypedName",
														"src": "10562:6:16",
														"type": ""
													}
												],
												"src": "10464:229:16"
											},
											{
												"body": {
													"nativeSrc": "10845:220:16",
													"nodeType": "YulBlock",
													"src": "10845:220:16",
													"statements": [
														{
															"nativeSrc": "10855:74:16",
															"nodeType": "YulAssignment",
															"src": "10855:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10921:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10921:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10926:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10926:2:16",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10862:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "10862:58:16"
																},
																"nativeSrc": "10862:67:16",
																"nodeType": "YulFunctionCall",
																"src": "10862:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10855:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10855:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11027:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11027:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nativeSrc": "10938:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "10938:88:16"
																},
																"nativeSrc": "10938:93:16",
																"nodeType": "YulFunctionCall",
																"src": "10938:93:16"
															},
															"nativeSrc": "10938:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "10938:93:16"
														},
														{
															"nativeSrc": "11040:19:16",
															"nodeType": "YulAssignment",
															"src": "11040:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11051:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11051:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11056:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11056:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11047:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11047:3:16"
																},
																"nativeSrc": "11047:12:16",
																"nodeType": "YulFunctionCall",
																"src": "11047:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11040:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11040:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10699:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10833:3:16",
														"nodeType": "YulTypedName",
														"src": "10833:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10841:3:16",
														"nodeType": "YulTypedName",
														"src": "10841:3:16",
														"type": ""
													}
												],
												"src": "10699:366:16"
											},
											{
												"body": {
													"nativeSrc": "11242:248:16",
													"nodeType": "YulBlock",
													"src": "11242:248:16",
													"statements": [
														{
															"nativeSrc": "11252:26:16",
															"nodeType": "YulAssignment",
															"src": "11252:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11264:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11264:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11275:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11275:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11260:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11260:3:16"
																},
																"nativeSrc": "11260:18:16",
																"nodeType": "YulFunctionCall",
																"src": "11260:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11252:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11252:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11299:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11299:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11310:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11310:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11295:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11295:3:16"
																		},
																		"nativeSrc": "11295:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11295:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11318:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "11318:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11324:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11324:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11314:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11314:3:16"
																		},
																		"nativeSrc": "11314:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11314:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11288:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11288:6:16"
																},
																"nativeSrc": "11288:47:16",
																"nodeType": "YulFunctionCall",
																"src": "11288:47:16"
															},
															"nativeSrc": "11288:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "11288:47:16"
														},
														{
															"nativeSrc": "11344:139:16",
															"nodeType": "YulAssignment",
															"src": "11344:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11478:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "11478:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11352:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "11352:124:16"
																},
																"nativeSrc": "11352:131:16",
																"nodeType": "YulFunctionCall",
																"src": "11352:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11344:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11344:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11071:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11222:9:16",
														"nodeType": "YulTypedName",
														"src": "11222:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11237:4:16",
														"nodeType": "YulTypedName",
														"src": "11237:4:16",
														"type": ""
													}
												],
												"src": "11071:419:16"
											},
											{
												"body": {
													"nativeSrc": "11602:69:16",
													"nodeType": "YulBlock",
													"src": "11602:69:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11624:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11624:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11632:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11632:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11620:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11620:3:16"
																		},
																		"nativeSrc": "11620:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11620:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nativeSrc": "11636:27:16",
																		"nodeType": "YulLiteral",
																		"src": "11636:27:16",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11613:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11613:6:16"
																},
																"nativeSrc": "11613:51:16",
																"nodeType": "YulFunctionCall",
																"src": "11613:51:16"
															},
															"nativeSrc": "11613:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "11613:51:16"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nativeSrc": "11496:175:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11594:6:16",
														"nodeType": "YulTypedName",
														"src": "11594:6:16",
														"type": ""
													}
												],
												"src": "11496:175:16"
											},
											{
												"body": {
													"nativeSrc": "11823:220:16",
													"nodeType": "YulBlock",
													"src": "11823:220:16",
													"statements": [
														{
															"nativeSrc": "11833:74:16",
															"nodeType": "YulAssignment",
															"src": "11833:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11899:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11899:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11904:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11904:2:16",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11840:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "11840:58:16"
																},
																"nativeSrc": "11840:67:16",
																"nodeType": "YulFunctionCall",
																"src": "11840:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11833:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11833:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12005:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12005:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nativeSrc": "11916:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "11916:88:16"
																},
																"nativeSrc": "11916:93:16",
																"nodeType": "YulFunctionCall",
																"src": "11916:93:16"
															},
															"nativeSrc": "11916:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "11916:93:16"
														},
														{
															"nativeSrc": "12018:19:16",
															"nodeType": "YulAssignment",
															"src": "12018:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12029:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12029:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12034:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12034:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12025:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12025:3:16"
																},
																"nativeSrc": "12025:12:16",
																"nodeType": "YulFunctionCall",
																"src": "12025:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12018:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11677:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11811:3:16",
														"nodeType": "YulTypedName",
														"src": "11811:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11819:3:16",
														"nodeType": "YulTypedName",
														"src": "11819:3:16",
														"type": ""
													}
												],
												"src": "11677:366:16"
											},
											{
												"body": {
													"nativeSrc": "12220:248:16",
													"nodeType": "YulBlock",
													"src": "12220:248:16",
													"statements": [
														{
															"nativeSrc": "12230:26:16",
															"nodeType": "YulAssignment",
															"src": "12230:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12242:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12242:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12253:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12253:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12238:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12238:3:16"
																},
																"nativeSrc": "12238:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12238:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12230:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12230:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12277:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12277:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12288:1:16",
																				"nodeType": "YulLiteral",
																				"src": "12288:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12273:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12273:3:16"
																		},
																		"nativeSrc": "12273:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12273:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12296:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "12296:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12302:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12302:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12292:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12292:3:16"
																		},
																		"nativeSrc": "12292:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12292:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12266:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12266:6:16"
																},
																"nativeSrc": "12266:47:16",
																"nodeType": "YulFunctionCall",
																"src": "12266:47:16"
															},
															"nativeSrc": "12266:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "12266:47:16"
														},
														{
															"nativeSrc": "12322:139:16",
															"nodeType": "YulAssignment",
															"src": "12322:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12456:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12456:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12330:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "12330:124:16"
																},
																"nativeSrc": "12330:131:16",
																"nodeType": "YulFunctionCall",
																"src": "12330:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12322:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12322:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12049:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12200:9:16",
														"nodeType": "YulTypedName",
														"src": "12200:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12215:4:16",
														"nodeType": "YulTypedName",
														"src": "12215:4:16",
														"type": ""
													}
												],
												"src": "12049:419:16"
											},
											{
												"body": {
													"nativeSrc": "12522:362:16",
													"nodeType": "YulBlock",
													"src": "12522:362:16",
													"statements": [
														{
															"nativeSrc": "12532:25:16",
															"nodeType": "YulAssignment",
															"src": "12532:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12555:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12555:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12537:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12537:17:16"
																},
																"nativeSrc": "12537:20:16",
																"nodeType": "YulFunctionCall",
																"src": "12537:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12532:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "12532:1:16"
																}
															]
														},
														{
															"nativeSrc": "12566:25:16",
															"nodeType": "YulAssignment",
															"src": "12566:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12589:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12589:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12571:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12571:17:16"
																},
																"nativeSrc": "12571:20:16",
																"nodeType": "YulFunctionCall",
																"src": "12571:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12566:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "12566:1:16"
																}
															]
														},
														{
															"nativeSrc": "12600:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12600:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12623:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12623:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12626:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "12626:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12619:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12619:3:16"
																},
																"nativeSrc": "12619:9:16",
																"nodeType": "YulFunctionCall",
																"src": "12619:9:16"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12604:11:16",
																	"nodeType": "YulTypedName",
																	"src": "12604:11:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12637:41:16",
															"nodeType": "YulAssignment",
															"src": "12637:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12666:11:16",
																		"nodeType": "YulIdentifier",
																		"src": "12666:11:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12648:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12648:17:16"
																},
																"nativeSrc": "12648:30:16",
																"nodeType": "YulFunctionCall",
																"src": "12648:30:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12637:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "12637:7:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12855:22:16",
																"nodeType": "YulBlock",
																"src": "12855:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12857:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "12857:16:16"
																			},
																			"nativeSrc": "12857:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12857:18:16"
																		},
																		"nativeSrc": "12857:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12857:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12788:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "12788:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12781:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "12781:6:16"
																				},
																				"nativeSrc": "12781:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12781:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12811:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "12811:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12818:7:16",
																								"nodeType": "YulIdentifier",
																								"src": "12818:7:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12827:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "12827:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12814:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "12814:3:16"
																						},
																						"nativeSrc": "12814:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "12814:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12808:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "12808:2:16"
																				},
																				"nativeSrc": "12808:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12808:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12761:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "12761:2:16"
																		},
																		"nativeSrc": "12761:83:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12761:83:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12741:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12741:6:16"
																},
																"nativeSrc": "12741:113:16",
																"nodeType": "YulFunctionCall",
																"src": "12741:113:16"
															},
															"nativeSrc": "12738:139:16",
															"nodeType": "YulIf",
															"src": "12738:139:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12474:410:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12505:1:16",
														"nodeType": "YulTypedName",
														"src": "12505:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12508:1:16",
														"nodeType": "YulTypedName",
														"src": "12508:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12514:7:16",
														"nodeType": "YulTypedName",
														"src": "12514:7:16",
														"type": ""
													}
												],
												"src": "12474:410:16"
											},
											{
												"body": {
													"nativeSrc": "13004:34:16",
													"nodeType": "YulBlock",
													"src": "13004:34:16",
													"statements": [
														{
															"nativeSrc": "13014:18:16",
															"nodeType": "YulAssignment",
															"src": "13014:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "13029:3:16",
																"nodeType": "YulIdentifier",
																"src": "13029:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13014:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "13014:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12890:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12976:3:16",
														"nodeType": "YulTypedName",
														"src": "12976:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12981:6:16",
														"nodeType": "YulTypedName",
														"src": "12981:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12992:11:16",
														"nodeType": "YulTypedName",
														"src": "12992:11:16",
														"type": ""
													}
												],
												"src": "12890:148:16"
											},
											{
												"body": {
													"nativeSrc": "13150:67:16",
													"nodeType": "YulBlock",
													"src": "13150:67:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13172:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13172:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13180:1:16",
																				"nodeType": "YulLiteral",
																				"src": "13180:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13168:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13168:3:16"
																		},
																		"nativeSrc": "13168:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13168:14:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "13184:25:16",
																		"nodeType": "YulLiteral",
																		"src": "13184:25:16",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13161:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13161:6:16"
																},
																"nativeSrc": "13161:49:16",
																"nodeType": "YulFunctionCall",
																"src": "13161:49:16"
															},
															"nativeSrc": "13161:49:16",
															"nodeType": "YulExpressionStatement",
															"src": "13161:49:16"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nativeSrc": "13044:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13142:6:16",
														"nodeType": "YulTypedName",
														"src": "13142:6:16",
														"type": ""
													}
												],
												"src": "13044:173:16"
											},
											{
												"body": {
													"nativeSrc": "13387:238:16",
													"nodeType": "YulBlock",
													"src": "13387:238:16",
													"statements": [
														{
															"nativeSrc": "13397:92:16",
															"nodeType": "YulAssignment",
															"src": "13397:92:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13481:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13481:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13486:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13486:2:16",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13404:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "13404:76:16"
																},
																"nativeSrc": "13404:85:16",
																"nodeType": "YulFunctionCall",
																"src": "13404:85:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13397:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13397:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13587:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13587:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nativeSrc": "13498:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "13498:88:16"
																},
																"nativeSrc": "13498:93:16",
																"nodeType": "YulFunctionCall",
																"src": "13498:93:16"
															},
															"nativeSrc": "13498:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "13498:93:16"
														},
														{
															"nativeSrc": "13600:19:16",
															"nodeType": "YulAssignment",
															"src": "13600:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13611:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13611:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13616:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13616:2:16",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13607:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13607:3:16"
																},
																"nativeSrc": "13607:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13607:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13600:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13600:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13223:402:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13375:3:16",
														"nodeType": "YulTypedName",
														"src": "13375:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13383:3:16",
														"nodeType": "YulTypedName",
														"src": "13383:3:16",
														"type": ""
													}
												],
												"src": "13223:402:16"
											},
											{
												"body": {
													"nativeSrc": "13690:40:16",
													"nodeType": "YulBlock",
													"src": "13690:40:16",
													"statements": [
														{
															"nativeSrc": "13701:22:16",
															"nodeType": "YulAssignment",
															"src": "13701:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13717:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "13717:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13711:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "13711:5:16"
																},
																"nativeSrc": "13711:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13711:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13701:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13701:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "13631:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13673:5:16",
														"nodeType": "YulTypedName",
														"src": "13673:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13683:6:16",
														"nodeType": "YulTypedName",
														"src": "13683:6:16",
														"type": ""
													}
												],
												"src": "13631:99:16"
											},
											{
												"body": {
													"nativeSrc": "13798:184:16",
													"nodeType": "YulBlock",
													"src": "13798:184:16",
													"statements": [
														{
															"nativeSrc": "13808:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "13808:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "13817:1:16",
																"nodeType": "YulLiteral",
																"src": "13817:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "13812:1:16",
																	"nodeType": "YulTypedName",
																	"src": "13812:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13877:63:16",
																"nodeType": "YulBlock",
																"src": "13877:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "13902:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "13902:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "13907:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "13907:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13898:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "13898:3:16"
																					},
																					"nativeSrc": "13898:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "13898:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "13921:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "13921:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "13926:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "13926:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13917:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "13917:3:16"
																							},
																							"nativeSrc": "13917:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "13917:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "13911:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "13911:5:16"
																					},
																					"nativeSrc": "13911:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "13911:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13891:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13891:6:16"
																			},
																			"nativeSrc": "13891:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13891:39:16"
																		},
																		"nativeSrc": "13891:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13891:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "13838:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13838:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13841:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13841:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13835:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13835:2:16"
																},
																"nativeSrc": "13835:13:16",
																"nodeType": "YulFunctionCall",
																"src": "13835:13:16"
															},
															"nativeSrc": "13827:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13849:19:16",
																"nodeType": "YulBlock",
																"src": "13849:19:16",
																"statements": [
																	{
																		"nativeSrc": "13851:15:16",
																		"nodeType": "YulAssignment",
																		"src": "13851:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "13860:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "13860:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13863:2:16",
																					"nodeType": "YulLiteral",
																					"src": "13863:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13856:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13856:3:16"
																			},
																			"nativeSrc": "13856:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13856:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "13851:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "13851:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13831:3:16",
																"nodeType": "YulBlock",
																"src": "13831:3:16",
																"statements": []
															},
															"src": "13827:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "13960:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13960:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13965:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13965:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13956:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13956:3:16"
																		},
																		"nativeSrc": "13956:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13956:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13974:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13974:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13949:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13949:6:16"
																},
																"nativeSrc": "13949:27:16",
																"nodeType": "YulFunctionCall",
																"src": "13949:27:16"
															},
															"nativeSrc": "13949:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "13949:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "13736:246:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "13780:3:16",
														"nodeType": "YulTypedName",
														"src": "13780:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "13785:3:16",
														"nodeType": "YulTypedName",
														"src": "13785:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13790:6:16",
														"nodeType": "YulTypedName",
														"src": "13790:6:16",
														"type": ""
													}
												],
												"src": "13736:246:16"
											},
											{
												"body": {
													"nativeSrc": "14098:280:16",
													"nodeType": "YulBlock",
													"src": "14098:280:16",
													"statements": [
														{
															"nativeSrc": "14108:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14108:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14155:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14155:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14122:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "14122:32:16"
																},
																"nativeSrc": "14122:39:16",
																"nodeType": "YulFunctionCall",
																"src": "14122:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14112:6:16",
																	"nodeType": "YulTypedName",
																	"src": "14112:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14170:96:16",
															"nodeType": "YulAssignment",
															"src": "14170:96:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14254:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14254:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14259:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14259:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14177:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "14177:76:16"
																},
																"nativeSrc": "14177:89:16",
																"nodeType": "YulFunctionCall",
																"src": "14177:89:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14170:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14170:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14314:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "14314:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14321:4:16",
																				"nodeType": "YulLiteral",
																				"src": "14321:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14310:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14310:3:16"
																		},
																		"nativeSrc": "14310:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14310:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14328:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14328:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14333:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14333:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14275:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "14275:34:16"
																},
																"nativeSrc": "14275:65:16",
																"nodeType": "YulFunctionCall",
																"src": "14275:65:16"
															},
															"nativeSrc": "14275:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "14275:65:16"
														},
														{
															"nativeSrc": "14349:23:16",
															"nodeType": "YulAssignment",
															"src": "14349:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14360:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14360:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14365:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14365:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14356:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14356:3:16"
																},
																"nativeSrc": "14356:16:16",
																"nodeType": "YulFunctionCall",
																"src": "14356:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14349:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14349:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13988:390:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14079:5:16",
														"nodeType": "YulTypedName",
														"src": "14079:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14086:3:16",
														"nodeType": "YulTypedName",
														"src": "14086:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14094:3:16",
														"nodeType": "YulTypedName",
														"src": "14094:3:16",
														"type": ""
													}
												],
												"src": "13988:390:16"
											},
											{
												"body": {
													"nativeSrc": "14490:61:16",
													"nodeType": "YulBlock",
													"src": "14490:61:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14512:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "14512:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14520:1:16",
																				"nodeType": "YulLiteral",
																				"src": "14520:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14508:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14508:3:16"
																		},
																		"nativeSrc": "14508:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14508:14:16"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "14524:19:16",
																		"nodeType": "YulLiteral",
																		"src": "14524:19:16",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14501:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14501:6:16"
																},
																"nativeSrc": "14501:43:16",
																"nodeType": "YulFunctionCall",
																"src": "14501:43:16"
															},
															"nativeSrc": "14501:43:16",
															"nodeType": "YulExpressionStatement",
															"src": "14501:43:16"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nativeSrc": "14384:167:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14482:6:16",
														"nodeType": "YulTypedName",
														"src": "14482:6:16",
														"type": ""
													}
												],
												"src": "14384:167:16"
											},
											{
												"body": {
													"nativeSrc": "14721:238:16",
													"nodeType": "YulBlock",
													"src": "14721:238:16",
													"statements": [
														{
															"nativeSrc": "14731:92:16",
															"nodeType": "YulAssignment",
															"src": "14731:92:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14815:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14815:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14820:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14820:2:16",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14738:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "14738:76:16"
																},
																"nativeSrc": "14738:85:16",
																"nodeType": "YulFunctionCall",
																"src": "14738:85:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14731:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14731:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14921:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14921:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nativeSrc": "14832:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "14832:88:16"
																},
																"nativeSrc": "14832:93:16",
																"nodeType": "YulFunctionCall",
																"src": "14832:93:16"
															},
															"nativeSrc": "14832:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "14832:93:16"
														},
														{
															"nativeSrc": "14934:19:16",
															"nodeType": "YulAssignment",
															"src": "14934:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14945:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14945:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14950:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14950:2:16",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14941:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14941:3:16"
																},
																"nativeSrc": "14941:12:16",
																"nodeType": "YulFunctionCall",
																"src": "14941:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14934:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14934:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14557:402:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14709:3:16",
														"nodeType": "YulTypedName",
														"src": "14709:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14717:3:16",
														"nodeType": "YulTypedName",
														"src": "14717:3:16",
														"type": ""
													}
												],
												"src": "14557:402:16"
											},
											{
												"body": {
													"nativeSrc": "15351:581:16",
													"nodeType": "YulBlock",
													"src": "15351:581:16",
													"statements": [
														{
															"nativeSrc": "15362:155:16",
															"nodeType": "YulAssignment",
															"src": "15362:155:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15513:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15513:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15369:142:16",
																	"nodeType": "YulIdentifier",
																	"src": "15369:142:16"
																},
																"nativeSrc": "15369:148:16",
																"nodeType": "YulFunctionCall",
																"src": "15369:148:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15362:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15362:3:16"
																}
															]
														},
														{
															"nativeSrc": "15527:102:16",
															"nodeType": "YulAssignment",
															"src": "15527:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15616:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15616:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15625:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15625:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15534:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "15534:81:16"
																},
																"nativeSrc": "15534:95:16",
																"nodeType": "YulFunctionCall",
																"src": "15534:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15527:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15527:3:16"
																}
															]
														},
														{
															"nativeSrc": "15639:155:16",
															"nodeType": "YulAssignment",
															"src": "15639:155:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15790:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15790:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15646:142:16",
																	"nodeType": "YulIdentifier",
																	"src": "15646:142:16"
																},
																"nativeSrc": "15646:148:16",
																"nodeType": "YulFunctionCall",
																"src": "15646:148:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15639:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15639:3:16"
																}
															]
														},
														{
															"nativeSrc": "15804:102:16",
															"nodeType": "YulAssignment",
															"src": "15804:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15893:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15893:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15902:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15902:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15811:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "15811:81:16"
																},
																"nativeSrc": "15811:95:16",
																"nodeType": "YulFunctionCall",
																"src": "15811:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15804:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15804:3:16"
																}
															]
														},
														{
															"nativeSrc": "15916:10:16",
															"nodeType": "YulAssignment",
															"src": "15916:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "15923:3:16",
																"nodeType": "YulIdentifier",
																"src": "15923:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15916:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15916:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14965:967:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15322:3:16",
														"nodeType": "YulTypedName",
														"src": "15322:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15328:6:16",
														"nodeType": "YulTypedName",
														"src": "15328:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15336:6:16",
														"nodeType": "YulTypedName",
														"src": "15336:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15347:3:16",
														"nodeType": "YulTypedName",
														"src": "15347:3:16",
														"type": ""
													}
												],
												"src": "14965:967:16"
											},
											{
												"body": {
													"nativeSrc": "15986:54:16",
													"nodeType": "YulBlock",
													"src": "15986:54:16",
													"statements": [
														{
															"nativeSrc": "15996:38:16",
															"nodeType": "YulAssignment",
															"src": "15996:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16014:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16014:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16021:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16021:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16010:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16010:3:16"
																		},
																		"nativeSrc": "16010:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16010:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16030:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16030:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16026:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16026:3:16"
																		},
																		"nativeSrc": "16026:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16026:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16006:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16006:3:16"
																},
																"nativeSrc": "16006:28:16",
																"nodeType": "YulFunctionCall",
																"src": "16006:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15996:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15996:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "15938:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15969:5:16",
														"nodeType": "YulTypedName",
														"src": "15969:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15979:6:16",
														"nodeType": "YulTypedName",
														"src": "15979:6:16",
														"type": ""
													}
												],
												"src": "15938:102:16"
											},
											{
												"body": {
													"nativeSrc": "16138:285:16",
													"nodeType": "YulBlock",
													"src": "16138:285:16",
													"statements": [
														{
															"nativeSrc": "16148:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16148:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16195:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16195:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16162:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "16162:32:16"
																},
																"nativeSrc": "16162:39:16",
																"nodeType": "YulFunctionCall",
																"src": "16162:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16152:6:16",
																	"nodeType": "YulTypedName",
																	"src": "16152:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16210:78:16",
															"nodeType": "YulAssignment",
															"src": "16210:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16276:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16276:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16281:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16281:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16217:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "16217:58:16"
																},
																"nativeSrc": "16217:71:16",
																"nodeType": "YulFunctionCall",
																"src": "16217:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16210:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16210:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16336:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16336:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16343:4:16",
																				"nodeType": "YulLiteral",
																				"src": "16343:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16332:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16332:3:16"
																		},
																		"nativeSrc": "16332:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16332:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16350:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16350:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16355:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16355:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16297:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "16297:34:16"
																},
																"nativeSrc": "16297:65:16",
																"nodeType": "YulFunctionCall",
																"src": "16297:65:16"
															},
															"nativeSrc": "16297:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "16297:65:16"
														},
														{
															"nativeSrc": "16371:46:16",
															"nodeType": "YulAssignment",
															"src": "16371:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16382:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16382:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16409:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "16409:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "16387:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "16387:21:16"
																		},
																		"nativeSrc": "16387:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16387:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16378:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16378:3:16"
																},
																"nativeSrc": "16378:39:16",
																"nodeType": "YulFunctionCall",
																"src": "16378:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16371:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16371:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16046:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16119:5:16",
														"nodeType": "YulTypedName",
														"src": "16119:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16126:3:16",
														"nodeType": "YulTypedName",
														"src": "16126:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16134:3:16",
														"nodeType": "YulTypedName",
														"src": "16134:3:16",
														"type": ""
													}
												],
												"src": "16046:377:16"
											},
											{
												"body": {
													"nativeSrc": "16547:195:16",
													"nodeType": "YulBlock",
													"src": "16547:195:16",
													"statements": [
														{
															"nativeSrc": "16557:26:16",
															"nodeType": "YulAssignment",
															"src": "16557:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16569:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16569:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16580:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16580:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16565:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16565:3:16"
																},
																"nativeSrc": "16565:18:16",
																"nodeType": "YulFunctionCall",
																"src": "16565:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16557:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16557:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16604:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16604:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16615:1:16",
																				"nodeType": "YulLiteral",
																				"src": "16615:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16600:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16600:3:16"
																		},
																		"nativeSrc": "16600:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16600:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16623:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "16623:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16629:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "16629:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16619:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16619:3:16"
																		},
																		"nativeSrc": "16619:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16619:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16593:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16593:6:16"
																},
																"nativeSrc": "16593:47:16",
																"nodeType": "YulFunctionCall",
																"src": "16593:47:16"
															},
															"nativeSrc": "16593:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "16593:47:16"
														},
														{
															"nativeSrc": "16649:86:16",
															"nodeType": "YulAssignment",
															"src": "16649:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16721:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16721:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "16730:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "16730:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16657:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "16657:63:16"
																},
																"nativeSrc": "16657:78:16",
																"nodeType": "YulFunctionCall",
																"src": "16657:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16649:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16649:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16429:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16519:9:16",
														"nodeType": "YulTypedName",
														"src": "16519:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16531:6:16",
														"nodeType": "YulTypedName",
														"src": "16531:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16542:4:16",
														"nodeType": "YulTypedName",
														"src": "16542:4:16",
														"type": ""
													}
												],
												"src": "16429:313:16"
											},
											{
												"body": {
													"nativeSrc": "16813:53:16",
													"nodeType": "YulBlock",
													"src": "16813:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16830:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16830:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16853:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16853:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "16835:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "16835:17:16"
																		},
																		"nativeSrc": "16835:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16835:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16823:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16823:6:16"
																},
																"nativeSrc": "16823:37:16",
																"nodeType": "YulFunctionCall",
																"src": "16823:37:16"
															},
															"nativeSrc": "16823:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "16823:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "16748:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16801:5:16",
														"nodeType": "YulTypedName",
														"src": "16801:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16808:3:16",
														"nodeType": "YulTypedName",
														"src": "16808:3:16",
														"type": ""
													}
												],
												"src": "16748:118:16"
											},
											{
												"body": {
													"nativeSrc": "16998:206:16",
													"nodeType": "YulBlock",
													"src": "16998:206:16",
													"statements": [
														{
															"nativeSrc": "17008:26:16",
															"nodeType": "YulAssignment",
															"src": "17008:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17020:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "17020:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17031:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17031:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17016:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17016:3:16"
																},
																"nativeSrc": "17016:18:16",
																"nodeType": "YulFunctionCall",
																"src": "17016:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17008:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "17008:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17088:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17088:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17101:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17101:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17112:1:16",
																				"nodeType": "YulLiteral",
																				"src": "17112:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17097:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17097:3:16"
																		},
																		"nativeSrc": "17097:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17097:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17044:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "17044:43:16"
																},
																"nativeSrc": "17044:71:16",
																"nodeType": "YulFunctionCall",
																"src": "17044:71:16"
															},
															"nativeSrc": "17044:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "17044:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17169:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17169:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17182:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "17182:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17193:2:16",
																				"nodeType": "YulLiteral",
																				"src": "17193:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17178:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17178:3:16"
																		},
																		"nativeSrc": "17178:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17178:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17125:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "17125:43:16"
																},
																"nativeSrc": "17125:72:16",
																"nodeType": "YulFunctionCall",
																"src": "17125:72:16"
															},
															"nativeSrc": "17125:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "17125:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16872:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16962:9:16",
														"nodeType": "YulTypedName",
														"src": "16962:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16974:6:16",
														"nodeType": "YulTypedName",
														"src": "16974:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16982:6:16",
														"nodeType": "YulTypedName",
														"src": "16982:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16993:4:16",
														"nodeType": "YulTypedName",
														"src": "16993:4:16",
														"type": ""
													}
												],
												"src": "16872:332:16"
											},
											{
												"body": {
													"nativeSrc": "17238:152:16",
													"nodeType": "YulBlock",
													"src": "17238:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17255:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17255:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17258:77:16",
																		"nodeType": "YulLiteral",
																		"src": "17258:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17248:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17248:6:16"
																},
																"nativeSrc": "17248:88:16",
																"nodeType": "YulFunctionCall",
																"src": "17248:88:16"
															},
															"nativeSrc": "17248:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "17248:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17352:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17352:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17355:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17355:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17345:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17345:6:16"
																},
																"nativeSrc": "17345:15:16",
																"nodeType": "YulFunctionCall",
																"src": "17345:15:16"
															},
															"nativeSrc": "17345:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "17345:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17376:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17376:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17379:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17379:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17369:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17369:6:16"
																},
																"nativeSrc": "17369:15:16",
																"nodeType": "YulFunctionCall",
																"src": "17369:15:16"
															},
															"nativeSrc": "17369:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "17369:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "17210:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "17210:180:16"
											},
											{
												"body": {
													"nativeSrc": "17424:152:16",
													"nodeType": "YulBlock",
													"src": "17424:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17441:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17441:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17444:77:16",
																		"nodeType": "YulLiteral",
																		"src": "17444:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17434:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17434:6:16"
																},
																"nativeSrc": "17434:88:16",
																"nodeType": "YulFunctionCall",
																"src": "17434:88:16"
															},
															"nativeSrc": "17434:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "17434:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17538:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17538:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17541:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17541:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17531:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17531:6:16"
																},
																"nativeSrc": "17531:15:16",
																"nodeType": "YulFunctionCall",
																"src": "17531:15:16"
															},
															"nativeSrc": "17531:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "17531:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17562:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17562:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17565:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17565:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17555:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17555:6:16"
																},
																"nativeSrc": "17555:15:16",
																"nodeType": "YulFunctionCall",
																"src": "17555:15:16"
															},
															"nativeSrc": "17555:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "17555:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17396:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "17396:180:16"
											},
											{
												"body": {
													"nativeSrc": "17625:128:16",
													"nodeType": "YulBlock",
													"src": "17625:128:16",
													"statements": [
														{
															"nativeSrc": "17635:33:16",
															"nodeType": "YulAssignment",
															"src": "17635:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17662:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17662:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17644:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "17644:17:16"
																},
																"nativeSrc": "17644:24:16",
																"nodeType": "YulFunctionCall",
																"src": "17644:24:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17635:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "17635:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17696:22:16",
																"nodeType": "YulBlock",
																"src": "17696:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17698:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "17698:16:16"
																			},
																			"nativeSrc": "17698:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17698:18:16"
																		},
																		"nativeSrc": "17698:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "17698:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17683:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17683:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17690:4:16",
																		"nodeType": "YulLiteral",
																		"src": "17690:4:16",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17680:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "17680:2:16"
																},
																"nativeSrc": "17680:15:16",
																"nodeType": "YulFunctionCall",
																"src": "17680:15:16"
															},
															"nativeSrc": "17677:41:16",
															"nodeType": "YulIf",
															"src": "17677:41:16"
														},
														{
															"nativeSrc": "17727:20:16",
															"nodeType": "YulAssignment",
															"src": "17727:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17738:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17738:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17745:1:16",
																		"nodeType": "YulLiteral",
																		"src": "17745:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17734:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17734:3:16"
																},
																"nativeSrc": "17734:13:16",
																"nodeType": "YulFunctionCall",
																"src": "17734:13:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17727:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17727:3:16"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "17582:171:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17611:5:16",
														"nodeType": "YulTypedName",
														"src": "17611:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17621:3:16",
														"nodeType": "YulTypedName",
														"src": "17621:3:16",
														"type": ""
													}
												],
												"src": "17582:171:16"
											},
											{
												"body": {
													"nativeSrc": "17865:76:16",
													"nodeType": "YulBlock",
													"src": "17865:76:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17887:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "17887:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17895:1:16",
																				"nodeType": "YulLiteral",
																				"src": "17895:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17883:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17883:3:16"
																		},
																		"nativeSrc": "17883:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17883:14:16"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "17899:34:16",
																		"nodeType": "YulLiteral",
																		"src": "17899:34:16",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17876:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17876:6:16"
																},
																"nativeSrc": "17876:58:16",
																"nodeType": "YulFunctionCall",
																"src": "17876:58:16"
															},
															"nativeSrc": "17876:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "17876:58:16"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nativeSrc": "17759:182:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17857:6:16",
														"nodeType": "YulTypedName",
														"src": "17857:6:16",
														"type": ""
													}
												],
												"src": "17759:182:16"
											},
											{
												"body": {
													"nativeSrc": "18093:220:16",
													"nodeType": "YulBlock",
													"src": "18093:220:16",
													"statements": [
														{
															"nativeSrc": "18103:74:16",
															"nodeType": "YulAssignment",
															"src": "18103:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18169:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18169:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18174:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18174:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18110:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "18110:58:16"
																},
																"nativeSrc": "18110:67:16",
																"nodeType": "YulFunctionCall",
																"src": "18110:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18103:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18103:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18275:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18275:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nativeSrc": "18186:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "18186:88:16"
																},
																"nativeSrc": "18186:93:16",
																"nodeType": "YulFunctionCall",
																"src": "18186:93:16"
															},
															"nativeSrc": "18186:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "18186:93:16"
														},
														{
															"nativeSrc": "18288:19:16",
															"nodeType": "YulAssignment",
															"src": "18288:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18299:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18299:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18304:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18304:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18295:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18295:3:16"
																},
																"nativeSrc": "18295:12:16",
																"nodeType": "YulFunctionCall",
																"src": "18295:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18288:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18288:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17947:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18081:3:16",
														"nodeType": "YulTypedName",
														"src": "18081:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18089:3:16",
														"nodeType": "YulTypedName",
														"src": "18089:3:16",
														"type": ""
													}
												],
												"src": "17947:366:16"
											},
											{
												"body": {
													"nativeSrc": "18490:248:16",
													"nodeType": "YulBlock",
													"src": "18490:248:16",
													"statements": [
														{
															"nativeSrc": "18500:26:16",
															"nodeType": "YulAssignment",
															"src": "18500:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18512:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "18512:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18523:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18523:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18508:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18508:3:16"
																},
																"nativeSrc": "18508:18:16",
																"nodeType": "YulFunctionCall",
																"src": "18508:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18500:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "18500:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18547:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "18547:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18558:1:16",
																				"nodeType": "YulLiteral",
																				"src": "18558:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18543:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18543:3:16"
																		},
																		"nativeSrc": "18543:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18543:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18566:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "18566:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18572:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "18572:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18562:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18562:3:16"
																		},
																		"nativeSrc": "18562:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18562:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18536:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18536:6:16"
																},
																"nativeSrc": "18536:47:16",
																"nodeType": "YulFunctionCall",
																"src": "18536:47:16"
															},
															"nativeSrc": "18536:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "18536:47:16"
														},
														{
															"nativeSrc": "18592:139:16",
															"nodeType": "YulAssignment",
															"src": "18592:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18726:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18726:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18600:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "18600:124:16"
																},
																"nativeSrc": "18600:131:16",
																"nodeType": "YulFunctionCall",
																"src": "18600:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18592:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "18592:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18319:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18470:9:16",
														"nodeType": "YulTypedName",
														"src": "18470:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18485:4:16",
														"nodeType": "YulTypedName",
														"src": "18485:4:16",
														"type": ""
													}
												],
												"src": "18319:419:16"
											},
											{
												"body": {
													"nativeSrc": "18784:76:16",
													"nodeType": "YulBlock",
													"src": "18784:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "18838:16:16",
																"nodeType": "YulBlock",
																"src": "18838:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18847:1:16",
																					"nodeType": "YulLiteral",
																					"src": "18847:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18850:1:16",
																					"nodeType": "YulLiteral",
																					"src": "18850:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18840:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "18840:6:16"
																			},
																			"nativeSrc": "18840:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18840:12:16"
																		},
																		"nativeSrc": "18840:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "18840:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18807:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "18807:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18829:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "18829:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "18814:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "18814:14:16"
																				},
																				"nativeSrc": "18814:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18814:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "18804:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "18804:2:16"
																		},
																		"nativeSrc": "18804:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18804:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18797:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18797:6:16"
																},
																"nativeSrc": "18797:40:16",
																"nodeType": "YulFunctionCall",
																"src": "18797:40:16"
															},
															"nativeSrc": "18794:60:16",
															"nodeType": "YulIf",
															"src": "18794:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "18744:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18777:5:16",
														"nodeType": "YulTypedName",
														"src": "18777:5:16",
														"type": ""
													}
												],
												"src": "18744:116:16"
											},
											{
												"body": {
													"nativeSrc": "18926:77:16",
													"nodeType": "YulBlock",
													"src": "18926:77:16",
													"statements": [
														{
															"nativeSrc": "18936:22:16",
															"nodeType": "YulAssignment",
															"src": "18936:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18951:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18951:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18945:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "18945:5:16"
																},
																"nativeSrc": "18945:13:16",
																"nodeType": "YulFunctionCall",
																"src": "18945:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18936:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "18936:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18991:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "18991:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "18967:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "18967:23:16"
																},
																"nativeSrc": "18967:30:16",
																"nodeType": "YulFunctionCall",
																"src": "18967:30:16"
															},
															"nativeSrc": "18967:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "18967:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "18866:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18904:6:16",
														"nodeType": "YulTypedName",
														"src": "18904:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18912:3:16",
														"nodeType": "YulTypedName",
														"src": "18912:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18920:5:16",
														"nodeType": "YulTypedName",
														"src": "18920:5:16",
														"type": ""
													}
												],
												"src": "18866:137:16"
											},
											{
												"body": {
													"nativeSrc": "19083:271:16",
													"nodeType": "YulBlock",
													"src": "19083:271:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "19129:83:16",
																"nodeType": "YulBlock",
																"src": "19129:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19131:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "19131:77:16"
																			},
																			"nativeSrc": "19131:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19131:79:16"
																		},
																		"nativeSrc": "19131:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "19131:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19104:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "19104:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19113:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "19113:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19100:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19100:3:16"
																		},
																		"nativeSrc": "19100:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19100:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19125:2:16",
																		"nodeType": "YulLiteral",
																		"src": "19125:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19096:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19096:3:16"
																},
																"nativeSrc": "19096:32:16",
																"nodeType": "YulFunctionCall",
																"src": "19096:32:16"
															},
															"nativeSrc": "19093:119:16",
															"nodeType": "YulIf",
															"src": "19093:119:16"
														},
														{
															"nativeSrc": "19222:125:16",
															"nodeType": "YulBlock",
															"src": "19222:125:16",
															"statements": [
																{
																	"nativeSrc": "19237:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19237:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19251:1:16",
																		"nodeType": "YulLiteral",
																		"src": "19251:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19241:6:16",
																			"nodeType": "YulTypedName",
																			"src": "19241:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19266:71:16",
																	"nodeType": "YulAssignment",
																	"src": "19266:71:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19309:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "19309:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19320:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "19320:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19305:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "19305:3:16"
																				},
																				"nativeSrc": "19305:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "19305:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19329:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "19329:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "19276:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "19276:28:16"
																		},
																		"nativeSrc": "19276:61:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19276:61:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19266:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "19266:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "19009:345:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19053:9:16",
														"nodeType": "YulTypedName",
														"src": "19053:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19064:7:16",
														"nodeType": "YulTypedName",
														"src": "19064:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19076:6:16",
														"nodeType": "YulTypedName",
														"src": "19076:6:16",
														"type": ""
													}
												],
												"src": "19009:345:16"
											},
											{
												"body": {
													"nativeSrc": "19466:123:16",
													"nodeType": "YulBlock",
													"src": "19466:123:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19488:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "19488:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19496:1:16",
																				"nodeType": "YulLiteral",
																				"src": "19496:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19484:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19484:3:16"
																		},
																		"nativeSrc": "19484:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19484:14:16"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "19500:34:16",
																		"nodeType": "YulLiteral",
																		"src": "19500:34:16",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19477:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19477:6:16"
																},
																"nativeSrc": "19477:58:16",
																"nodeType": "YulFunctionCall",
																"src": "19477:58:16"
															},
															"nativeSrc": "19477:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "19477:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19556:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "19556:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19564:2:16",
																				"nodeType": "YulLiteral",
																				"src": "19564:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19552:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19552:3:16"
																		},
																		"nativeSrc": "19552:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19552:15:16"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "19569:12:16",
																		"nodeType": "YulLiteral",
																		"src": "19569:12:16",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19545:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19545:6:16"
																},
																"nativeSrc": "19545:37:16",
																"nodeType": "YulFunctionCall",
																"src": "19545:37:16"
															},
															"nativeSrc": "19545:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "19545:37:16"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nativeSrc": "19360:229:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19458:6:16",
														"nodeType": "YulTypedName",
														"src": "19458:6:16",
														"type": ""
													}
												],
												"src": "19360:229:16"
											},
											{
												"body": {
													"nativeSrc": "19741:220:16",
													"nodeType": "YulBlock",
													"src": "19741:220:16",
													"statements": [
														{
															"nativeSrc": "19751:74:16",
															"nodeType": "YulAssignment",
															"src": "19751:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19817:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19817:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19822:2:16",
																		"nodeType": "YulLiteral",
																		"src": "19822:2:16",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19758:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "19758:58:16"
																},
																"nativeSrc": "19758:67:16",
																"nodeType": "YulFunctionCall",
																"src": "19758:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19751:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19751:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19923:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19923:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nativeSrc": "19834:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "19834:88:16"
																},
																"nativeSrc": "19834:93:16",
																"nodeType": "YulFunctionCall",
																"src": "19834:93:16"
															},
															"nativeSrc": "19834:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "19834:93:16"
														},
														{
															"nativeSrc": "19936:19:16",
															"nodeType": "YulAssignment",
															"src": "19936:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19947:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19947:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19952:2:16",
																		"nodeType": "YulLiteral",
																		"src": "19952:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19943:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19943:3:16"
																},
																"nativeSrc": "19943:12:16",
																"nodeType": "YulFunctionCall",
																"src": "19943:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19936:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19936:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19595:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19729:3:16",
														"nodeType": "YulTypedName",
														"src": "19729:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19737:3:16",
														"nodeType": "YulTypedName",
														"src": "19737:3:16",
														"type": ""
													}
												],
												"src": "19595:366:16"
											},
											{
												"body": {
													"nativeSrc": "20138:248:16",
													"nodeType": "YulBlock",
													"src": "20138:248:16",
													"statements": [
														{
															"nativeSrc": "20148:26:16",
															"nodeType": "YulAssignment",
															"src": "20148:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20160:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "20160:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20171:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20171:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20156:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20156:3:16"
																},
																"nativeSrc": "20156:18:16",
																"nodeType": "YulFunctionCall",
																"src": "20156:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20148:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20148:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20195:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20195:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20206:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20206:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20191:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20191:3:16"
																		},
																		"nativeSrc": "20191:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20191:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20214:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "20214:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20220:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20220:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20210:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20210:3:16"
																		},
																		"nativeSrc": "20210:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20210:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20184:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20184:6:16"
																},
																"nativeSrc": "20184:47:16",
																"nodeType": "YulFunctionCall",
																"src": "20184:47:16"
															},
															"nativeSrc": "20184:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "20184:47:16"
														},
														{
															"nativeSrc": "20240:139:16",
															"nodeType": "YulAssignment",
															"src": "20240:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20374:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "20374:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20248:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "20248:124:16"
																},
																"nativeSrc": "20248:131:16",
																"nodeType": "YulFunctionCall",
																"src": "20248:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20240:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20240:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19967:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20118:9:16",
														"nodeType": "YulTypedName",
														"src": "20118:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20133:4:16",
														"nodeType": "YulTypedName",
														"src": "20133:4:16",
														"type": ""
													}
												],
												"src": "19967:419:16"
											},
											{
												"body": {
													"nativeSrc": "20498:119:16",
													"nodeType": "YulBlock",
													"src": "20498:119:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20520:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "20520:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20528:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20528:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20516:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20516:3:16"
																		},
																		"nativeSrc": "20516:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20516:14:16"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "20532:34:16",
																		"nodeType": "YulLiteral",
																		"src": "20532:34:16",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20509:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20509:6:16"
																},
																"nativeSrc": "20509:58:16",
																"nodeType": "YulFunctionCall",
																"src": "20509:58:16"
															},
															"nativeSrc": "20509:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "20509:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20588:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "20588:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20596:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20596:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20584:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20584:3:16"
																		},
																		"nativeSrc": "20584:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20584:15:16"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "20601:8:16",
																		"nodeType": "YulLiteral",
																		"src": "20601:8:16",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20577:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20577:6:16"
																},
																"nativeSrc": "20577:33:16",
																"nodeType": "YulFunctionCall",
																"src": "20577:33:16"
															},
															"nativeSrc": "20577:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "20577:33:16"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nativeSrc": "20392:225:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20490:6:16",
														"nodeType": "YulTypedName",
														"src": "20490:6:16",
														"type": ""
													}
												],
												"src": "20392:225:16"
											},
											{
												"body": {
													"nativeSrc": "20769:220:16",
													"nodeType": "YulBlock",
													"src": "20769:220:16",
													"statements": [
														{
															"nativeSrc": "20779:74:16",
															"nodeType": "YulAssignment",
															"src": "20779:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20845:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20845:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20850:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20850:2:16",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20786:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "20786:58:16"
																},
																"nativeSrc": "20786:67:16",
																"nodeType": "YulFunctionCall",
																"src": "20786:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20779:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20779:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20951:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20951:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nativeSrc": "20862:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "20862:88:16"
																},
																"nativeSrc": "20862:93:16",
																"nodeType": "YulFunctionCall",
																"src": "20862:93:16"
															},
															"nativeSrc": "20862:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "20862:93:16"
														},
														{
															"nativeSrc": "20964:19:16",
															"nodeType": "YulAssignment",
															"src": "20964:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20975:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20975:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20980:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20980:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20971:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20971:3:16"
																},
																"nativeSrc": "20971:12:16",
																"nodeType": "YulFunctionCall",
																"src": "20971:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20964:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20964:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20623:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20757:3:16",
														"nodeType": "YulTypedName",
														"src": "20757:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20765:3:16",
														"nodeType": "YulTypedName",
														"src": "20765:3:16",
														"type": ""
													}
												],
												"src": "20623:366:16"
											},
											{
												"body": {
													"nativeSrc": "21166:248:16",
													"nodeType": "YulBlock",
													"src": "21166:248:16",
													"statements": [
														{
															"nativeSrc": "21176:26:16",
															"nodeType": "YulAssignment",
															"src": "21176:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21188:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "21188:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21199:2:16",
																		"nodeType": "YulLiteral",
																		"src": "21199:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21184:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21184:3:16"
																},
																"nativeSrc": "21184:18:16",
																"nodeType": "YulFunctionCall",
																"src": "21184:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21176:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "21176:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21223:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21223:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21234:1:16",
																				"nodeType": "YulLiteral",
																				"src": "21234:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21219:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21219:3:16"
																		},
																		"nativeSrc": "21219:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21219:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21242:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "21242:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21248:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21248:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21238:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21238:3:16"
																		},
																		"nativeSrc": "21238:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21238:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21212:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21212:6:16"
																},
																"nativeSrc": "21212:47:16",
																"nodeType": "YulFunctionCall",
																"src": "21212:47:16"
															},
															"nativeSrc": "21212:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "21212:47:16"
														},
														{
															"nativeSrc": "21268:139:16",
															"nodeType": "YulAssignment",
															"src": "21268:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21402:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "21402:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21276:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "21276:124:16"
																},
																"nativeSrc": "21276:131:16",
																"nodeType": "YulFunctionCall",
																"src": "21276:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21268:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "21268:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20995:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21146:9:16",
														"nodeType": "YulTypedName",
														"src": "21146:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21161:4:16",
														"nodeType": "YulTypedName",
														"src": "21161:4:16",
														"type": ""
													}
												],
												"src": "20995:419:16"
											},
											{
												"body": {
													"nativeSrc": "21478:40:16",
													"nodeType": "YulBlock",
													"src": "21478:40:16",
													"statements": [
														{
															"nativeSrc": "21489:22:16",
															"nodeType": "YulAssignment",
															"src": "21489:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21505:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "21505:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21499:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "21499:5:16"
																},
																"nativeSrc": "21499:12:16",
																"nodeType": "YulFunctionCall",
																"src": "21499:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21489:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21489:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "21420:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21461:5:16",
														"nodeType": "YulTypedName",
														"src": "21461:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21471:6:16",
														"nodeType": "YulTypedName",
														"src": "21471:6:16",
														"type": ""
													}
												],
												"src": "21420:98:16"
											},
											{
												"body": {
													"nativeSrc": "21637:34:16",
													"nodeType": "YulBlock",
													"src": "21637:34:16",
													"statements": [
														{
															"nativeSrc": "21647:18:16",
															"nodeType": "YulAssignment",
															"src": "21647:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "21662:3:16",
																"nodeType": "YulIdentifier",
																"src": "21662:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21647:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "21647:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21524:147:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21609:3:16",
														"nodeType": "YulTypedName",
														"src": "21609:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21614:6:16",
														"nodeType": "YulTypedName",
														"src": "21614:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21625:11:16",
														"nodeType": "YulTypedName",
														"src": "21625:11:16",
														"type": ""
													}
												],
												"src": "21524:147:16"
											},
											{
												"body": {
													"nativeSrc": "21785:278:16",
													"nodeType": "YulBlock",
													"src": "21785:278:16",
													"statements": [
														{
															"nativeSrc": "21795:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "21795:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21841:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "21841:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "21809:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "21809:31:16"
																},
																"nativeSrc": "21809:38:16",
																"nodeType": "YulFunctionCall",
																"src": "21809:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "21799:6:16",
																	"nodeType": "YulTypedName",
																	"src": "21799:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21856:95:16",
															"nodeType": "YulAssignment",
															"src": "21856:95:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21939:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "21939:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21944:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21944:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21863:75:16",
																	"nodeType": "YulIdentifier",
																	"src": "21863:75:16"
																},
																"nativeSrc": "21863:88:16",
																"nodeType": "YulFunctionCall",
																"src": "21863:88:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21856:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21856:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21999:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "21999:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22006:4:16",
																				"nodeType": "YulLiteral",
																				"src": "22006:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21995:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21995:3:16"
																		},
																		"nativeSrc": "21995:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21995:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22013:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22013:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22018:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22018:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21960:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "21960:34:16"
																},
																"nativeSrc": "21960:65:16",
																"nodeType": "YulFunctionCall",
																"src": "21960:65:16"
															},
															"nativeSrc": "21960:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "21960:65:16"
														},
														{
															"nativeSrc": "22034:23:16",
															"nodeType": "YulAssignment",
															"src": "22034:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22045:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22045:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22050:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22050:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22041:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22041:3:16"
																},
																"nativeSrc": "22041:16:16",
																"nodeType": "YulFunctionCall",
																"src": "22041:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22034:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22034:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21677:386:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21766:5:16",
														"nodeType": "YulTypedName",
														"src": "21766:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21773:3:16",
														"nodeType": "YulTypedName",
														"src": "21773:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21781:3:16",
														"nodeType": "YulTypedName",
														"src": "21781:3:16",
														"type": ""
													}
												],
												"src": "21677:386:16"
											},
											{
												"body": {
													"nativeSrc": "22203:137:16",
													"nodeType": "YulBlock",
													"src": "22203:137:16",
													"statements": [
														{
															"nativeSrc": "22214:100:16",
															"nodeType": "YulAssignment",
															"src": "22214:100:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22301:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22301:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "22310:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22310:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "22221:79:16",
																	"nodeType": "YulIdentifier",
																	"src": "22221:79:16"
																},
																"nativeSrc": "22221:93:16",
																"nodeType": "YulFunctionCall",
																"src": "22221:93:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22214:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22214:3:16"
																}
															]
														},
														{
															"nativeSrc": "22324:10:16",
															"nodeType": "YulAssignment",
															"src": "22324:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "22331:3:16",
																"nodeType": "YulIdentifier",
																"src": "22331:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22324:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22324:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "22069:271:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22182:3:16",
														"nodeType": "YulTypedName",
														"src": "22182:3:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22188:6:16",
														"nodeType": "YulTypedName",
														"src": "22188:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22199:3:16",
														"nodeType": "YulTypedName",
														"src": "22199:3:16",
														"type": ""
													}
												],
												"src": "22069:271:16"
											},
											{
												"body": {
													"nativeSrc": "22452:73:16",
													"nodeType": "YulBlock",
													"src": "22452:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22474:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "22474:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22482:1:16",
																				"nodeType": "YulLiteral",
																				"src": "22482:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22470:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22470:3:16"
																		},
																		"nativeSrc": "22470:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22470:14:16"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "22486:31:16",
																		"nodeType": "YulLiteral",
																		"src": "22486:31:16",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22463:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "22463:6:16"
																},
																"nativeSrc": "22463:55:16",
																"nodeType": "YulFunctionCall",
																"src": "22463:55:16"
															},
															"nativeSrc": "22463:55:16",
															"nodeType": "YulExpressionStatement",
															"src": "22463:55:16"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nativeSrc": "22346:179:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22444:6:16",
														"nodeType": "YulTypedName",
														"src": "22444:6:16",
														"type": ""
													}
												],
												"src": "22346:179:16"
											},
											{
												"body": {
													"nativeSrc": "22677:220:16",
													"nodeType": "YulBlock",
													"src": "22677:220:16",
													"statements": [
														{
															"nativeSrc": "22687:74:16",
															"nodeType": "YulAssignment",
															"src": "22687:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22753:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22753:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22758:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22758:2:16",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22694:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "22694:58:16"
																},
																"nativeSrc": "22694:67:16",
																"nodeType": "YulFunctionCall",
																"src": "22694:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22687:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22687:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22859:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22859:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nativeSrc": "22770:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "22770:88:16"
																},
																"nativeSrc": "22770:93:16",
																"nodeType": "YulFunctionCall",
																"src": "22770:93:16"
															},
															"nativeSrc": "22770:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "22770:93:16"
														},
														{
															"nativeSrc": "22872:19:16",
															"nodeType": "YulAssignment",
															"src": "22872:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22883:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22883:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22888:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22888:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22879:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22879:3:16"
																},
																"nativeSrc": "22879:12:16",
																"nodeType": "YulFunctionCall",
																"src": "22879:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22872:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22872:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22531:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22665:3:16",
														"nodeType": "YulTypedName",
														"src": "22665:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22673:3:16",
														"nodeType": "YulTypedName",
														"src": "22673:3:16",
														"type": ""
													}
												],
												"src": "22531:366:16"
											},
											{
												"body": {
													"nativeSrc": "23074:248:16",
													"nodeType": "YulBlock",
													"src": "23074:248:16",
													"statements": [
														{
															"nativeSrc": "23084:26:16",
															"nodeType": "YulAssignment",
															"src": "23084:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23096:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "23096:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23107:2:16",
																		"nodeType": "YulLiteral",
																		"src": "23107:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23092:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "23092:3:16"
																},
																"nativeSrc": "23092:18:16",
																"nodeType": "YulFunctionCall",
																"src": "23092:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23084:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "23084:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23131:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "23131:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23142:1:16",
																				"nodeType": "YulLiteral",
																				"src": "23142:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23127:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "23127:3:16"
																		},
																		"nativeSrc": "23127:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "23127:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23150:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "23150:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23156:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "23156:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23146:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "23146:3:16"
																		},
																		"nativeSrc": "23146:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "23146:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23120:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "23120:6:16"
																},
																"nativeSrc": "23120:47:16",
																"nodeType": "YulFunctionCall",
																"src": "23120:47:16"
															},
															"nativeSrc": "23120:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "23120:47:16"
														},
														{
															"nativeSrc": "23176:139:16",
															"nodeType": "YulAssignment",
															"src": "23176:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23310:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "23310:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23184:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "23184:124:16"
																},
																"nativeSrc": "23184:131:16",
																"nodeType": "YulFunctionCall",
																"src": "23184:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23176:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "23176:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22903:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23054:9:16",
														"nodeType": "YulTypedName",
														"src": "23054:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23069:4:16",
														"nodeType": "YulTypedName",
														"src": "23069:4:16",
														"type": ""
													}
												],
												"src": "22903:419:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$531_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$531_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"IndividuallyCappedCrowdsale: ben\")\n\n        mstore(add(memPtr, 32), \"eficiary's cap exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100eb575f3560e01c8063521eb27311610089578063b3aefb7511610058578063b3aefb7514610324578063d547741f14610360578063ec8ac4d814610388578063fc0c546a146103a457610102565b8063521eb2731461026c57806380ad2cf31461029657806391d14854146102be578063a217fddf146102fa57610102565b80632c4e722e116100c55780632c4e722e146101c85780632f2ff15d146101f257806336568abe1461021a5780634042b66f1461024257610102565b806301ffc9a71461011457806321eff7fc14610150578063248a9ca31461018c57610102565b36610102576101006100fb6103ce565b6103d5565b005b61011261010d6103ce565b6103d5565b005b34801561011f575f80fd5b5061013a600480360381019061013591906113d6565b6104b3565b604051610147919061141b565b60405180910390f35b34801561015b575f80fd5b506101766004803603810190610171919061148e565b61052c565b60405161018391906114d1565b60405180910390f35b348015610197575f80fd5b506101b260048036038101906101ad919061151d565b610572565b6040516101bf9190611557565b60405180910390f35b3480156101d3575f80fd5b506101dc61058f565b6040516101e991906114d1565b60405180910390f35b3480156101fd575f80fd5b5061021860048036038101906102139190611570565b610598565b005b348015610225575f80fd5b50610240600480360381019061023b9190611570565b6105b9565b005b34801561024d575f80fd5b5061025661063c565b60405161026391906114d1565b60405180910390f35b348015610277575f80fd5b50610280610645565b60405161028d91906115ce565b60405180910390f35b3480156102a1575f80fd5b506102bc60048036038101906102b79190611611565b61066d565b005b3480156102c9575f80fd5b506102e460048036038101906102df9190611570565b6106c0565b6040516102f1919061141b565b60405180910390f35b348015610305575f80fd5b5061030e610724565b60405161031b9190611557565b60405180910390f35b34801561032f575f80fd5b5061034a6004803603810190610345919061148e565b61072a565b60405161035791906114d1565b60405180910390f35b34801561036b575f80fd5b5061038660048036038101906103819190611570565b610770565b005b6103a2600480360381019061039d919061148e565b6103d5565b005b3480156103af575f80fd5b506103b8610791565b6040516103c591906116aa565b60405180910390f35b5f33905090565b6103dd6107b9565b5f3490506103eb8282610806565b5f6103f5826108e3565b905061040c8260045461090090919063ffffffff16565b60048190555061041c8382610915565b8273ffffffffffffffffffffffffffffffffffffffff1661043b6103ce565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b84846040516104829291906116c3565b60405180910390a36104948383610923565b61049c6109c2565b6104a68383610a29565b50506104b0610a2d565b50565b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610525575061052482610a36565b5b9050919050565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8381526020019081526020015f20600101549050919050565b5f600354905090565b6105a182610572565b6105aa81610a9f565b6105b48383610ab3565b505050565b6105c16103ce565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461062e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106259061176a565b60405180910390fd5b6106388282610b8e565b5050565b5f600454905090565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f801b61067981610a9f565b8160075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61077982610572565b61078281610a9f565b61078c8383610b8e565b505050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f54036107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f4906117d2565b60405180910390fd5b60025f81905550565b6108108282610c69565b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461089e8260065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461090090919063ffffffff16565b11156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d690611860565b60405180910390fd5b5050565b5f6108f960035483610d1d90919063ffffffff16565b9050919050565b5f818361090d91906118ab565b905092915050565b61091f8282610d32565b5050565b61092d8282610d82565b61097d8160065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461090090919063ffffffff16565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f19350505050158015610a26573d5f803e3d5ffd5b50565b5050565b60015f81905550565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610ab081610aab6103ce565b610d86565b50565b610abd82826106c0565b610b8a57600160055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610b2f6103ce565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610b9882826106c0565b15610c65575f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610c0a6103ce565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce9061194e565b60405180910390fd5b5f8103610d19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d10906119b6565b60405180910390fd5b5050565b5f8183610d2a91906119d4565b905092915050565b610d7e828260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e0a9092919063ffffffff16565b5050565b5050565b610d9082826106c0565b610e0657610d9d81610e90565b610daa835f1c6020610ebd565b604051602001610dbb929190611b15565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfd9190611b96565b60405180910390fd5b5050565b610e8b8363a9059cbb60e01b8484604051602401610e29929190611bc5565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506110f2565b505050565b6060610eb68273ffffffffffffffffffffffffffffffffffffffff16601460ff16610ebd565b9050919050565b60605f6002836002610ecf91906119d4565b610ed991906118ab565b67ffffffffffffffff811115610ef257610ef1611bec565b5b6040519080825280601f01601f191660200182016040528015610f245781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f81518110610f5b57610f5a611c19565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610fbe57610fbd611c19565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f6001846002610ffc91906119d4565b61100691906118ab565b90505b60018111156110a5577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061104857611047611c19565b5b1a60f81b82828151811061105f5761105e611c19565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c94508061109e90611c46565b9050611009565b505f84146110e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110df90611cb7565b60405180910390fd5b8091505092915050565b5f611153826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111b89092919063ffffffff16565b90505f815114806111745750808060200190518101906111739190611cff565b5b6111b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111aa90611d9a565b60405180910390fd5b505050565b60606111c684845f856111cf565b90509392505050565b606082471015611214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120b90611e28565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff16858760405161123c9190611e8a565b5f6040518083038185875af1925050503d805f8114611276576040519150601f19603f3d011682016040523d82523d5f602084013e61127b565b606091505b509150915061128c87838387611298565b92505050949350505050565b606083156112f9575f8351036112f1576112b18561130c565b6112f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e790611eea565b60405180910390fd5b5b829050611304565b611303838361132e565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f825111156113405781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113749190611b96565b60405180910390fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113b581611381565b81146113bf575f80fd5b50565b5f813590506113d0816113ac565b92915050565b5f602082840312156113eb576113ea61137d565b5b5f6113f8848285016113c2565b91505092915050565b5f8115159050919050565b61141581611401565b82525050565b5f60208201905061142e5f83018461140c565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61145d82611434565b9050919050565b61146d81611453565b8114611477575f80fd5b50565b5f8135905061148881611464565b92915050565b5f602082840312156114a3576114a261137d565b5b5f6114b08482850161147a565b91505092915050565b5f819050919050565b6114cb816114b9565b82525050565b5f6020820190506114e45f8301846114c2565b92915050565b5f819050919050565b6114fc816114ea565b8114611506575f80fd5b50565b5f81359050611517816114f3565b92915050565b5f602082840312156115325761153161137d565b5b5f61153f84828501611509565b91505092915050565b611551816114ea565b82525050565b5f60208201905061156a5f830184611548565b92915050565b5f80604083850312156115865761158561137d565b5b5f61159385828601611509565b92505060206115a48582860161147a565b9150509250929050565b5f6115b882611434565b9050919050565b6115c8816115ae565b82525050565b5f6020820190506115e15f8301846115bf565b92915050565b6115f0816114b9565b81146115fa575f80fd5b50565b5f8135905061160b816115e7565b92915050565b5f80604083850312156116275761162661137d565b5b5f6116348582860161147a565b9250506020611645858286016115fd565b9150509250929050565b5f819050919050565b5f61167261166d61166884611434565b61164f565b611434565b9050919050565b5f61168382611658565b9050919050565b5f61169482611679565b9050919050565b6116a48161168a565b82525050565b5f6020820190506116bd5f83018461169b565b92915050565b5f6040820190506116d65f8301856114c2565b6116e360208301846114c2565b9392505050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f611754602f836116ea565b915061175f826116fa565b604082019050919050565b5f6020820190508181035f83015261178181611748565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6117bc601f836116ea565b91506117c782611788565b602082019050919050565b5f6020820190508181035f8301526117e9816117b0565b9050919050565b7f496e646976696475616c6c7943617070656443726f776473616c653a2062656e5f8201527f6566696369617279277320636170206578636565646564000000000000000000602082015250565b5f61184a6037836116ea565b9150611855826117f0565b604082019050919050565b5f6020820190508181035f8301526118778161183e565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118b5826114b9565b91506118c0836114b9565b92508282019050808211156118d8576118d761187e565b5b92915050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f611938602a836116ea565b9150611943826118de565b604082019050919050565b5f6020820190508181035f8301526119658161192c565b9050919050565b7f43726f776473616c653a20776569416d6f756e742069732030000000000000005f82015250565b5f6119a06019836116ea565b91506119ab8261196c565b602082019050919050565b5f6020820190508181035f8301526119cd81611994565b9050919050565b5f6119de826114b9565b91506119e9836114b9565b92508282026119f7816114b9565b91508282048414831517611a0e57611a0d61187e565b5b5092915050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f611a53601783611a15565b9150611a5e82611a1f565b601782019050919050565b5f81519050919050565b5f5b83811015611a90578082015181840152602081019050611a75565b5f8484015250505050565b5f611aa582611a69565b611aaf8185611a15565b9350611abf818560208601611a73565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f611aff601183611a15565b9150611b0a82611acb565b601182019050919050565b5f611b1f82611a47565b9150611b2b8285611a9b565b9150611b3682611af3565b9150611b428284611a9b565b91508190509392505050565b5f601f19601f8301169050919050565b5f611b6882611a69565b611b7281856116ea565b9350611b82818560208601611a73565b611b8b81611b4e565b840191505092915050565b5f6020820190508181035f830152611bae8184611b5e565b905092915050565b611bbf81611453565b82525050565b5f604082019050611bd85f830185611bb6565b611be560208301846114c2565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611c50826114b9565b91505f8203611c6257611c6161187e565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f611ca16020836116ea565b9150611cac82611c6d565b602082019050919050565b5f6020820190508181035f830152611cce81611c95565b9050919050565b611cde81611401565b8114611ce8575f80fd5b50565b5f81519050611cf981611cd5565b92915050565b5f60208284031215611d1457611d1361137d565b5b5f611d2184828501611ceb565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f611d84602a836116ea565b9150611d8f82611d2a565b604082019050919050565b5f6020820190508181035f830152611db181611d78565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f611e126026836116ea565b9150611e1d82611db8565b604082019050919050565b5f6020820190508181035f830152611e3f81611e06565b9050919050565b5f81519050919050565b5f81905092915050565b5f611e6482611e46565b611e6e8185611e50565b9350611e7e818560208601611a73565b80840191505092915050565b5f611e958284611e5a565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f611ed4601d836116ea565b9150611edf82611ea0565b602082019050919050565b5f6020820190508181035f830152611f0181611ec8565b905091905056fea2646970667358221220373a380c0b3933f7bb6f6df5430e2b4785ea7ea9bf1108c9471d24962d4cfd7064736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x521EB273 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xB3AEFB75 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB3AEFB75 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3A4 JUMPI PUSH2 0x102 JUMP JUMPDEST DUP1 PUSH4 0x521EB273 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x80AD2CF3 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2FA JUMPI PUSH2 0x102 JUMP JUMPDEST DUP1 PUSH4 0x2C4E722E GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x242 JUMPI PUSH2 0x102 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x21EFF7FC EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x18C JUMPI PUSH2 0x102 JUMP JUMPDEST CALLDATASIZE PUSH2 0x102 JUMPI PUSH2 0x100 PUSH2 0xFB PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x112 PUSH2 0x10D PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x151D JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x58F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x5B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0x724 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x770 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0x7B9 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x3EB DUP3 DUP3 PUSH2 0x806 JUMP JUMPDEST PUSH0 PUSH2 0x3F5 DUP3 PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP PUSH2 0x40C DUP3 PUSH1 0x4 SLOAD PUSH2 0x900 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x41C DUP4 DUP3 PUSH2 0x915 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x43B PUSH2 0x3CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x482 SWAP3 SWAP2 SWAP1 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x494 DUP4 DUP4 PUSH2 0x923 JUMP JUMPDEST PUSH2 0x49C PUSH2 0x9C2 JUMP JUMPDEST PUSH2 0x4A6 DUP4 DUP4 PUSH2 0xA29 JUMP JUMPDEST POP POP PUSH2 0x4B0 PUSH2 0xA2D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x525 JUMPI POP PUSH2 0x524 DUP3 PUSH2 0xA36 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5A1 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x5AA DUP2 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x5B4 DUP4 DUP4 PUSH2 0xAB3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5C1 PUSH2 0x3CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x638 DUP3 DUP3 PUSH2 0xB8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x679 DUP2 PUSH2 0xA9F JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x779 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH2 0x782 DUP2 PUSH2 0xA9F JUMP JUMPDEST PUSH2 0x78C DUP4 DUP4 PUSH2 0xB8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F4 SWAP1 PUSH2 0x17D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x810 DUP3 DUP3 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x89E DUP3 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x900 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8F9 PUSH1 0x3 SLOAD DUP4 PUSH2 0xD1D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x91F DUP3 DUP3 PUSH2 0xD32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x92D DUP3 DUP3 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x97D DUP2 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x900 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA26 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB0 DUP2 PUSH2 0xAAB PUSH2 0x3CE JUMP JUMPDEST PUSH2 0xD86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xABD DUP3 DUP3 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0xB8A JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB2F PUSH2 0x3CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB98 DUP3 DUP3 PUSH2 0x6C0 JUMP JUMPDEST ISZERO PUSH2 0xC65 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC0A PUSH2 0x3CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCE SWAP1 PUSH2 0x194E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xD19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD10 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7E DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE0A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD90 DUP3 DUP3 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0xE06 JUMPI PUSH2 0xD9D DUP2 PUSH2 0xE90 JUMP JUMPDEST PUSH2 0xDAA DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDBB SWAP3 SWAP2 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFD SWAP2 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE8B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE29 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEB6 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xEBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xECF SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF2 JUMPI PUSH2 0xEF1 PUSH2 0x1BEC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF24 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xFBE JUMPI PUSH2 0xFBD PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xFFC SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH2 0x1006 SWAP2 SWAP1 PUSH2 0x18AB JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10A5 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1048 JUMPI PUSH2 0x1047 PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x105F JUMPI PUSH2 0x105E PUSH2 0x1C19 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x109E SWAP1 PUSH2 0x1C46 JUMP JUMPDEST SWAP1 POP PUSH2 0x1009 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DF SWAP1 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1153 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11B8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x1174 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1173 SWAP2 SWAP1 PUSH2 0x1CFF JUMP JUMPDEST JUMPDEST PUSH2 0x11B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AA SWAP1 PUSH2 0x1D9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11C6 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x11CF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1214 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120B SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x123C SWAP2 SWAP1 PUSH2 0x1E8A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1276 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x127B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x128C DUP8 DUP4 DUP4 DUP8 PUSH2 0x1298 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x12F9 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x12F1 JUMPI PUSH2 0x12B1 DUP6 PUSH2 0x130C JUMP JUMPDEST PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E7 SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x1303 DUP4 DUP4 PUSH2 0x132E JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x1340 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1374 SWAP2 SWAP1 PUSH2 0x1B96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B5 DUP2 PUSH2 0x1381 JUMP JUMPDEST DUP2 EQ PUSH2 0x13BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13D0 DUP2 PUSH2 0x13AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EB JUMPI PUSH2 0x13EA PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F8 DUP5 DUP3 DUP6 ADD PUSH2 0x13C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1415 DUP2 PUSH2 0x1401 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142E PUSH0 DUP4 ADD DUP5 PUSH2 0x140C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x145D DUP3 PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146D DUP2 PUSH2 0x1453 JUMP JUMPDEST DUP2 EQ PUSH2 0x1477 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1488 DUP2 PUSH2 0x1464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A2 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B0 DUP5 DUP3 DUP6 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14CB DUP2 PUSH2 0x14B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E4 PUSH0 DUP4 ADD DUP5 PUSH2 0x14C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FC DUP2 PUSH2 0x14EA JUMP JUMPDEST DUP2 EQ PUSH2 0x1506 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1517 DUP2 PUSH2 0x14F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1532 JUMPI PUSH2 0x1531 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x153F DUP5 DUP3 DUP6 ADD PUSH2 0x1509 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1551 DUP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156A PUSH0 DUP4 ADD DUP5 PUSH2 0x1548 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1586 JUMPI PUSH2 0x1585 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1593 DUP6 DUP3 DUP7 ADD PUSH2 0x1509 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A4 DUP6 DUP3 DUP7 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15B8 DUP3 PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C8 DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15F0 DUP2 PUSH2 0x14B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x15FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160B DUP2 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1627 JUMPI PUSH2 0x1626 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1634 DUP6 DUP3 DUP7 ADD PUSH2 0x147A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1645 DUP6 DUP3 DUP7 ADD PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1672 PUSH2 0x166D PUSH2 0x1668 DUP5 PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x164F JUMP JUMPDEST PUSH2 0x1434 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1683 DUP3 PUSH2 0x1658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 DUP3 PUSH2 0x1679 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A4 DUP2 PUSH2 0x168A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BD PUSH0 DUP4 ADD DUP5 PUSH2 0x169B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16D6 PUSH0 DUP4 ADD DUP6 PUSH2 0x14C2 JUMP JUMPDEST PUSH2 0x16E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14C2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1754 PUSH1 0x2F DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x175F DUP3 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1781 DUP2 PUSH2 0x1748 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17BC PUSH1 0x1F DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x17C7 DUP3 PUSH2 0x1788 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17E9 DUP2 PUSH2 0x17B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E646976696475616C6C7943617070656443726F776473616C653A2062656E PUSH0 DUP3 ADD MSTORE PUSH32 0x6566696369617279277320636170206578636565646564000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x184A PUSH1 0x37 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1855 DUP3 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1877 DUP2 PUSH2 0x183E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18B5 DUP3 PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C0 DUP4 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x18D8 JUMPI PUSH2 0x18D7 PUSH2 0x187E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1938 PUSH1 0x2A DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1943 DUP3 PUSH2 0x18DE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1965 DUP2 PUSH2 0x192C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19A0 PUSH1 0x19 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x19AB DUP3 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19CD DUP2 PUSH2 0x1994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DE DUP3 PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E9 DUP4 PUSH2 0x14B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19F7 DUP2 PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A0E JUMPI PUSH2 0x1A0D PUSH2 0x187E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A53 PUSH1 0x17 DUP4 PUSH2 0x1A15 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5E DUP3 PUSH2 0x1A1F JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A90 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A75 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA5 DUP3 PUSH2 0x1A69 JUMP JUMPDEST PUSH2 0x1AAF DUP2 DUP6 PUSH2 0x1A15 JUMP JUMPDEST SWAP4 POP PUSH2 0x1ABF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFF PUSH1 0x11 DUP4 PUSH2 0x1A15 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0A DUP3 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1F DUP3 PUSH2 0x1A47 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B2B DUP3 DUP6 PUSH2 0x1A9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B36 DUP3 PUSH2 0x1AF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B42 DUP3 DUP5 PUSH2 0x1A9B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B68 DUP3 PUSH2 0x1A69 JUMP JUMPDEST PUSH2 0x1B72 DUP2 DUP6 PUSH2 0x16EA JUMP JUMPDEST SWAP4 POP PUSH2 0x1B82 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST PUSH2 0x1B8B DUP2 PUSH2 0x1B4E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BAE DUP2 DUP5 PUSH2 0x1B5E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BBF DUP2 PUSH2 0x1453 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BD8 PUSH0 DUP4 ADD DUP6 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x1BE5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14C2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C50 DUP3 PUSH2 0x14B9 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1C62 JUMPI PUSH2 0x1C61 PUSH2 0x187E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA1 PUSH1 0x20 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CAC DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CCE DUP2 PUSH2 0x1C95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDE DUP2 PUSH2 0x1401 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CF9 DUP2 PUSH2 0x1CD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x137D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D21 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D84 PUSH1 0x2A DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8F DUP3 PUSH2 0x1D2A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB1 DUP2 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E12 PUSH1 0x26 DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E3F DUP2 PUSH2 0x1E06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E64 DUP3 PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1E6E DUP2 DUP6 PUSH2 0x1E50 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E7E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A73 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E95 DUP3 DUP5 PUSH2 0x1E5A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED4 PUSH1 0x1D DUP4 PUSH2 0x16EA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EDF DUP3 PUSH2 0x1EA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F01 DUP2 PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY GASPRICE CODESIZE 0xC SIGNEXTEND CODECOPY CALLER 0xF7 0xBB PUSH16 0x6DF5430E2B4785EA7EA9BF1108C9471D 0x24 SWAP7 0x2D 0x4C REVERT PUSH17 0x64736F6C63430008150033000000000000 ",
							"sourceMap": "313:2346:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:23:14;3361:12;:10;:12::i;:::-;3351:9;:23::i;:::-;313:2346:15;;3270:23:14;3280:12;:10;:12::i;:::-;3270:9;:23::i;:::-;313:2346:15;2732:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1514:129:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504::0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3784:85:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4929:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6038:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3937:87:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3605:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;871:131:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3021:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:111:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4289:622:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3446:78;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;656:96:7;709:7;735:10;728:17;;656:96;:::o;4289:622:14:-;2261:21:2;:19;:21::i;:::-;4368:17:14::1;4388:9;4368:29;;4408:44;4429:11;4442:9;4408:20;:44::i;:::-;4514:14;4531:26;4547:9;4531:15;:26::i;:::-;4514:43;;4608:25;4623:9;4608:10;;:14;;:25;;;;:::i;:::-;4595:10;:38;;;;4646:37;4663:11;4676:6;4646:16;:37::i;:::-;4729:11;4699:61;;4715:12;:10;:12::i;:::-;4699:61;;;4742:9;4753:6;4699:61;;;;;;;:::i;:::-;;;;;;;;4773:46;4796:11;4809:9;4773:22;:46::i;:::-;4832:15;:13;:15::i;:::-;4858:45;4880:11;4893:9;4858:21;:45::i;:::-;4357:554;;2303:20:2::0;:18;:20::i;:::-;4289:622:14;:::o;2732:202:0:-;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;1514:129:15:-;1581:7;1608:14;:27;1623:11;1608:27;;;;;;;;;;;;;;;;1601:34;;1514:129;;;:::o;4504::0:-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;3784:85:14:-;3829:7;3856:5;;3849:12;;3784:85;:::o;4929:145:0:-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;3937:87:14:-;3979:7;4006:10;;3999:17;;3937:87;:::o;3605:89::-;3644:15;3679:7;;;;;;;;;;;3672:14;;3605:89;:::o;871:131:15:-;2198:4:0;939:18:15;;2631:16:0;2642:4;2631:10;:16::i;:::-;991:3:15::1;970:5;:18;976:11;970:18;;;;;;;;;;;;;;;:24;;;;871:131:::0;;;:::o;3021:145:0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2153:49::-;2198:4;2153:49;;;:::o;1201:111:15:-;1259:7;1286:5;:18;1292:11;1286:18;;;;;;;;;;;;;;;;1279:25;;1201:111;;;:::o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;3446:78:14:-;3484:6;3510;;;;;;;;;;;3503:13;;3446:78;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1860:359:15:-;1964:50;1991:11;2004:9;1964:26;:50::i;:::-;2133:5;:18;2139:11;2133:18;;;;;;;;;;;;;;;;2087:42;2119:9;2087:14;:27;2102:11;2087:27;;;;;;;;;;;;;;;;:31;;:42;;;;:::i;:::-;:64;;2079:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;1860:359;;:::o;7856:130:14:-;7931:7;7958:20;7972:5;;7958:9;:13;;:20;;;;:::i;:::-;7951:27;;7856:130;;;:::o;2755:96:12:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7023:144:14:-;7119:40;7134:11;7147;7119:14;:40::i;:::-;7023:144;;:::o;2412:244:15:-;2513:52;2542:11;2555:9;2513:28;:52::i;:::-;2606:42;2638:9;2606:14;:27;2621:11;2606:27;;;;;;;;;;;;;;;;:31;;:42;;;;:::i;:::-;2576:14;:27;2591:11;2576:27;;;;;;;;;;;;;;;:72;;;;2412:244;;:::o;8078:88:14:-;8131:7;;;;;;;;;;;:16;;:27;8148:9;8131:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8078:88::o;6155:159::-;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;829:155:9:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;5464:388:14:-;5598:1;5575:25;;:11;:25;;;5567:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5679:1;5666:9;:14;5658:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5464:388;;:::o;3465:96:12:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;6602:147:14:-;6696:45;6716:11;6729;6696:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6602:147;;:::o;7445:155::-;;;:::o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;941:175:5:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;2407:149:8:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;5196:642:5:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:6:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:16;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:222::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2711:71;2779:1;2768:9;2764:17;2755:6;2711:71;:::i;:::-;2567:222;;;;:::o;2795:77::-;2832:7;2861:5;2850:16;;2795:77;;;:::o;2878:122::-;2951:24;2969:5;2951:24;:::i;:::-;2944:5;2941:35;2931:63;;2990:1;2987;2980:12;2931:63;2878:122;:::o;3006:139::-;3052:5;3090:6;3077:20;3068:29;;3106:33;3133:5;3106:33;:::i;:::-;3006:139;;;;:::o;3151:329::-;3210:6;3259:2;3247:9;3238:7;3234:23;3230:32;3227:119;;;3265:79;;:::i;:::-;3227:119;3385:1;3410:53;3455:7;3446:6;3435:9;3431:22;3410:53;:::i;:::-;3400:63;;3356:117;3151:329;;;;:::o;3486:118::-;3573:24;3591:5;3573:24;:::i;:::-;3568:3;3561:37;3486:118;;:::o;3610:222::-;3703:4;3741:2;3730:9;3726:18;3718:26;;3754:71;3822:1;3811:9;3807:17;3798:6;3754:71;:::i;:::-;3610:222;;;;:::o;3838:474::-;3906:6;3914;3963:2;3951:9;3942:7;3938:23;3934:32;3931:119;;;3969:79;;:::i;:::-;3931:119;4089:1;4114:53;4159:7;4150:6;4139:9;4135:22;4114:53;:::i;:::-;4104:63;;4060:117;4216:2;4242:53;4287:7;4278:6;4267:9;4263:22;4242:53;:::i;:::-;4232:63;;4187:118;3838:474;;;;;:::o;4318:104::-;4363:7;4392:24;4410:5;4392:24;:::i;:::-;4381:35;;4318:104;;;:::o;4428:142::-;4531:32;4557:5;4531:32;:::i;:::-;4526:3;4519:45;4428:142;;:::o;4576:254::-;4685:4;4723:2;4712:9;4708:18;4700:26;;4736:87;4820:1;4809:9;4805:17;4796:6;4736:87;:::i;:::-;4576:254;;;;:::o;4836:122::-;4909:24;4927:5;4909:24;:::i;:::-;4902:5;4899:35;4889:63;;4948:1;4945;4938:12;4889:63;4836:122;:::o;4964:139::-;5010:5;5048:6;5035:20;5026:29;;5064:33;5091:5;5064:33;:::i;:::-;4964:139;;;;:::o;5109:474::-;5177:6;5185;5234:2;5222:9;5213:7;5209:23;5205:32;5202:119;;;5240:79;;:::i;:::-;5202:119;5360:1;5385:53;5430:7;5421:6;5410:9;5406:22;5385:53;:::i;:::-;5375:63;;5331:117;5487:2;5513:53;5558:7;5549:6;5538:9;5534:22;5513:53;:::i;:::-;5503:63;;5458:118;5109:474;;;;;:::o;5589:60::-;5617:3;5638:5;5631:12;;5589:60;;;:::o;5655:142::-;5705:9;5738:53;5756:34;5765:24;5783:5;5765:24;:::i;:::-;5756:34;:::i;:::-;5738:53;:::i;:::-;5725:66;;5655:142;;;:::o;5803:126::-;5853:9;5886:37;5917:5;5886:37;:::i;:::-;5873:50;;5803:126;;;:::o;5935:140::-;5999:9;6032:37;6063:5;6032:37;:::i;:::-;6019:50;;5935:140;;;:::o;6081:159::-;6182:51;6227:5;6182:51;:::i;:::-;6177:3;6170:64;6081:159;;:::o;6246:250::-;6353:4;6391:2;6380:9;6376:18;6368:26;;6404:85;6486:1;6475:9;6471:17;6462:6;6404:85;:::i;:::-;6246:250;;;;:::o;6502:332::-;6623:4;6661:2;6650:9;6646:18;6638:26;;6674:71;6742:1;6731:9;6727:17;6718:6;6674:71;:::i;:::-;6755:72;6823:2;6812:9;6808:18;6799:6;6755:72;:::i;:::-;6502:332;;;;;:::o;6840:169::-;6924:11;6958:6;6953:3;6946:19;6998:4;6993:3;6989:14;6974:29;;6840:169;;;;:::o;7015:234::-;7155:34;7151:1;7143:6;7139:14;7132:58;7224:17;7219:2;7211:6;7207:15;7200:42;7015:234;:::o;7255:366::-;7397:3;7418:67;7482:2;7477:3;7418:67;:::i;:::-;7411:74;;7494:93;7583:3;7494:93;:::i;:::-;7612:2;7607:3;7603:12;7596:19;;7255:366;;;:::o;7627:419::-;7793:4;7831:2;7820:9;7816:18;7808:26;;7880:9;7874:4;7870:20;7866:1;7855:9;7851:17;7844:47;7908:131;8034:4;7908:131;:::i;:::-;7900:139;;7627:419;;;:::o;8052:181::-;8192:33;8188:1;8180:6;8176:14;8169:57;8052:181;:::o;8239:366::-;8381:3;8402:67;8466:2;8461:3;8402:67;:::i;:::-;8395:74;;8478:93;8567:3;8478:93;:::i;:::-;8596:2;8591:3;8587:12;8580:19;;8239:366;;;:::o;8611:419::-;8777:4;8815:2;8804:9;8800:18;8792:26;;8864:9;8858:4;8854:20;8850:1;8839:9;8835:17;8828:47;8892:131;9018:4;8892:131;:::i;:::-;8884:139;;8611:419;;;:::o;9036:242::-;9176:34;9172:1;9164:6;9160:14;9153:58;9245:25;9240:2;9232:6;9228:15;9221:50;9036:242;:::o;9284:366::-;9426:3;9447:67;9511:2;9506:3;9447:67;:::i;:::-;9440:74;;9523:93;9612:3;9523:93;:::i;:::-;9641:2;9636:3;9632:12;9625:19;;9284:366;;;:::o;9656:419::-;9822:4;9860:2;9849:9;9845:18;9837:26;;9909:9;9903:4;9899:20;9895:1;9884:9;9880:17;9873:47;9937:131;10063:4;9937:131;:::i;:::-;9929:139;;9656:419;;;:::o;10081:180::-;10129:77;10126:1;10119:88;10226:4;10223:1;10216:15;10250:4;10247:1;10240:15;10267:191;10307:3;10326:20;10344:1;10326:20;:::i;:::-;10321:25;;10360:20;10378:1;10360:20;:::i;:::-;10355:25;;10403:1;10400;10396:9;10389:16;;10424:3;10421:1;10418:10;10415:36;;;10431:18;;:::i;:::-;10415:36;10267:191;;;;:::o;10464:229::-;10604:34;10600:1;10592:6;10588:14;10581:58;10673:12;10668:2;10660:6;10656:15;10649:37;10464:229;:::o;10699:366::-;10841:3;10862:67;10926:2;10921:3;10862:67;:::i;:::-;10855:74;;10938:93;11027:3;10938:93;:::i;:::-;11056:2;11051:3;11047:12;11040:19;;10699:366;;;:::o;11071:419::-;11237:4;11275:2;11264:9;11260:18;11252:26;;11324:9;11318:4;11314:20;11310:1;11299:9;11295:17;11288:47;11352:131;11478:4;11352:131;:::i;:::-;11344:139;;11071:419;;;:::o;11496:175::-;11636:27;11632:1;11624:6;11620:14;11613:51;11496:175;:::o;11677:366::-;11819:3;11840:67;11904:2;11899:3;11840:67;:::i;:::-;11833:74;;11916:93;12005:3;11916:93;:::i;:::-;12034:2;12029:3;12025:12;12018:19;;11677:366;;;:::o;12049:419::-;12215:4;12253:2;12242:9;12238:18;12230:26;;12302:9;12296:4;12292:20;12288:1;12277:9;12273:17;12266:47;12330:131;12456:4;12330:131;:::i;:::-;12322:139;;12049:419;;;:::o;12474:410::-;12514:7;12537:20;12555:1;12537:20;:::i;:::-;12532:25;;12571:20;12589:1;12571:20;:::i;:::-;12566:25;;12626:1;12623;12619:9;12648:30;12666:11;12648:30;:::i;:::-;12637:41;;12827:1;12818:7;12814:15;12811:1;12808:22;12788:1;12781:9;12761:83;12738:139;;12857:18;;:::i;:::-;12738:139;12522:362;12474:410;;;;:::o;12890:148::-;12992:11;13029:3;13014:18;;12890:148;;;;:::o;13044:173::-;13184:25;13180:1;13172:6;13168:14;13161:49;13044:173;:::o;13223:402::-;13383:3;13404:85;13486:2;13481:3;13404:85;:::i;:::-;13397:92;;13498:93;13587:3;13498:93;:::i;:::-;13616:2;13611:3;13607:12;13600:19;;13223:402;;;:::o;13631:99::-;13683:6;13717:5;13711:12;13701:22;;13631:99;;;:::o;13736:246::-;13817:1;13827:113;13841:6;13838:1;13835:13;13827:113;;;13926:1;13921:3;13917:11;13911:18;13907:1;13902:3;13898:11;13891:39;13863:2;13860:1;13856:10;13851:15;;13827:113;;;13974:1;13965:6;13960:3;13956:16;13949:27;13798:184;13736:246;;;:::o;13988:390::-;14094:3;14122:39;14155:5;14122:39;:::i;:::-;14177:89;14259:6;14254:3;14177:89;:::i;:::-;14170:96;;14275:65;14333:6;14328:3;14321:4;14314:5;14310:16;14275:65;:::i;:::-;14365:6;14360:3;14356:16;14349:23;;14098:280;13988:390;;;;:::o;14384:167::-;14524:19;14520:1;14512:6;14508:14;14501:43;14384:167;:::o;14557:402::-;14717:3;14738:85;14820:2;14815:3;14738:85;:::i;:::-;14731:92;;14832:93;14921:3;14832:93;:::i;:::-;14950:2;14945:3;14941:12;14934:19;;14557:402;;;:::o;14965:967::-;15347:3;15369:148;15513:3;15369:148;:::i;:::-;15362:155;;15534:95;15625:3;15616:6;15534:95;:::i;:::-;15527:102;;15646:148;15790:3;15646:148;:::i;:::-;15639:155;;15811:95;15902:3;15893:6;15811:95;:::i;:::-;15804:102;;15923:3;15916:10;;14965:967;;;;;:::o;15938:102::-;15979:6;16030:2;16026:7;16021:2;16014:5;16010:14;16006:28;15996:38;;15938:102;;;:::o;16046:377::-;16134:3;16162:39;16195:5;16162:39;:::i;:::-;16217:71;16281:6;16276:3;16217:71;:::i;:::-;16210:78;;16297:65;16355:6;16350:3;16343:4;16336:5;16332:16;16297:65;:::i;:::-;16387:29;16409:6;16387:29;:::i;:::-;16382:3;16378:39;16371:46;;16138:285;16046:377;;;;:::o;16429:313::-;16542:4;16580:2;16569:9;16565:18;16557:26;;16629:9;16623:4;16619:20;16615:1;16604:9;16600:17;16593:47;16657:78;16730:4;16721:6;16657:78;:::i;:::-;16649:86;;16429:313;;;;:::o;16748:118::-;16835:24;16853:5;16835:24;:::i;:::-;16830:3;16823:37;16748:118;;:::o;16872:332::-;16993:4;17031:2;17020:9;17016:18;17008:26;;17044:71;17112:1;17101:9;17097:17;17088:6;17044:71;:::i;:::-;17125:72;17193:2;17182:9;17178:18;17169:6;17125:72;:::i;:::-;16872:332;;;;;:::o;17210:180::-;17258:77;17255:1;17248:88;17355:4;17352:1;17345:15;17379:4;17376:1;17369:15;17396:180;17444:77;17441:1;17434:88;17541:4;17538:1;17531:15;17565:4;17562:1;17555:15;17582:171;17621:3;17644:24;17662:5;17644:24;:::i;:::-;17635:33;;17690:4;17683:5;17680:15;17677:41;;17698:18;;:::i;:::-;17677:41;17745:1;17738:5;17734:13;17727:20;;17582:171;;;:::o;17759:182::-;17899:34;17895:1;17887:6;17883:14;17876:58;17759:182;:::o;17947:366::-;18089:3;18110:67;18174:2;18169:3;18110:67;:::i;:::-;18103:74;;18186:93;18275:3;18186:93;:::i;:::-;18304:2;18299:3;18295:12;18288:19;;17947:366;;;:::o;18319:419::-;18485:4;18523:2;18512:9;18508:18;18500:26;;18572:9;18566:4;18562:20;18558:1;18547:9;18543:17;18536:47;18600:131;18726:4;18600:131;:::i;:::-;18592:139;;18319:419;;;:::o;18744:116::-;18814:21;18829:5;18814:21;:::i;:::-;18807:5;18804:32;18794:60;;18850:1;18847;18840:12;18794:60;18744:116;:::o;18866:137::-;18920:5;18951:6;18945:13;18936:22;;18967:30;18991:5;18967:30;:::i;:::-;18866:137;;;;:::o;19009:345::-;19076:6;19125:2;19113:9;19104:7;19100:23;19096:32;19093:119;;;19131:79;;:::i;:::-;19093:119;19251:1;19276:61;19329:7;19320:6;19309:9;19305:22;19276:61;:::i;:::-;19266:71;;19222:125;19009:345;;;;:::o;19360:229::-;19500:34;19496:1;19488:6;19484:14;19477:58;19569:12;19564:2;19556:6;19552:15;19545:37;19360:229;:::o;19595:366::-;19737:3;19758:67;19822:2;19817:3;19758:67;:::i;:::-;19751:74;;19834:93;19923:3;19834:93;:::i;:::-;19952:2;19947:3;19943:12;19936:19;;19595:366;;;:::o;19967:419::-;20133:4;20171:2;20160:9;20156:18;20148:26;;20220:9;20214:4;20210:20;20206:1;20195:9;20191:17;20184:47;20248:131;20374:4;20248:131;:::i;:::-;20240:139;;19967:419;;;:::o;20392:225::-;20532:34;20528:1;20520:6;20516:14;20509:58;20601:8;20596:2;20588:6;20584:15;20577:33;20392:225;:::o;20623:366::-;20765:3;20786:67;20850:2;20845:3;20786:67;:::i;:::-;20779:74;;20862:93;20951:3;20862:93;:::i;:::-;20980:2;20975:3;20971:12;20964:19;;20623:366;;;:::o;20995:419::-;21161:4;21199:2;21188:9;21184:18;21176:26;;21248:9;21242:4;21238:20;21234:1;21223:9;21219:17;21212:47;21276:131;21402:4;21276:131;:::i;:::-;21268:139;;20995:419;;;:::o;21420:98::-;21471:6;21505:5;21499:12;21489:22;;21420:98;;;:::o;21524:147::-;21625:11;21662:3;21647:18;;21524:147;;;;:::o;21677:386::-;21781:3;21809:38;21841:5;21809:38;:::i;:::-;21863:88;21944:6;21939:3;21863:88;:::i;:::-;21856:95;;21960:65;22018:6;22013:3;22006:4;21999:5;21995:16;21960:65;:::i;:::-;22050:6;22045:3;22041:16;22034:23;;21785:278;21677:386;;;;:::o;22069:271::-;22199:3;22221:93;22310:3;22301:6;22221:93;:::i;:::-;22214:100;;22331:3;22324:10;;22069:271;;;;:::o;22346:179::-;22486:31;22482:1;22474:6;22470:14;22463:55;22346:179;:::o;22531:366::-;22673:3;22694:67;22758:2;22753:3;22694:67;:::i;:::-;22687:74;;22770:93;22859:3;22770:93;:::i;:::-;22888:2;22883:3;22879:12;22872:19;;22531:366;;;:::o;22903:419::-;23069:4;23107:2;23096:9;23092:18;23084:26;;23156:9;23150:4;23146:20;23142:1;23131:9;23127:17;23120:47;23184:131;23310:4;23184:131;:::i;:::-;23176:139;;22903:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1599600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"DEFAULT_ADMIN_ROLE()": "419",
								"buyTokens(address)": "infinite",
								"getCap(address)": "2851",
								"getContribution(address)": "2875",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"rate()": "2455",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setCap(address,uint256)": "infinite",
								"supportsInterface(bytes4)": "741",
								"token()": "infinite",
								"wallet()": "2538",
								"weiRaised()": "2521"
							},
							"internal": {
								"_preValidatePurchase(address,uint256)": "infinite",
								"_updatePurchasingState(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 2659,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 531,
									"end": 677,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 677,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 531,
									"end": 677,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 531,
									"end": 677,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 531,
									"end": 677,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 531,
									"end": 677,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 531,
									"end": 677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 531,
									"end": 677,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 648,
									"end": 654,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 656,
									"end": 664,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 666,
									"end": 673,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2644,
									"end": 2645,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2635,
									"end": 2641,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2635,
									"end": 2645,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 14,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 2627,
									"end": 2670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2689,
									"end": 2697,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 14,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 2681,
									"end": 2753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2800,
									"end": 2801,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2780,
									"end": 2787,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 14,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 2764,
									"end": 2843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2864,
									"end": 2870,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2856,
									"end": 2861,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2919,
									"end": 2926,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 531,
									"end": 677,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 531,
									"end": 677,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 826,
									"end": 930,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 871,
									"end": 878,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 900,
									"end": 924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 900,
									"end": 924,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 889,
									"end": 924,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 889,
									"end": 924,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 1043,
									"end": 1048,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 1017,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1010,
									"end": 1015,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 1050,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1062,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1054,
									"end": 1066,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "tag",
									"source": 16,
									"value": "56"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 936,
									"end": 1074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1145,
									"end": 1150,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1170,
									"end": 1183,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 1192,
									"end": 1233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "tag",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1282,
									"end": 1289,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1329,
									"end": 1334,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 1311,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1398,
									"end": 1405,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1445,
									"end": 1450,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 1427,
									"end": 1451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1582,
									"end": 1587,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 1550,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "tag",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1543,
									"end": 1548,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1540,
									"end": 1589,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "tag",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1463,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1690,
									"end": 1695,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1727,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1715,
									"end": 1728,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 1737,
									"end": 1784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "tag",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1906,
									"end": 1912,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1971,
									"end": 1973,
									"name": "PUSH",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1959,
									"end": 1968,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1950,
									"end": 1957,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 1969,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1942,
									"end": 1974,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1977,
									"end": 2056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "tag",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "tag",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2178,
									"end": 2185,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2158,
									"end": 2167,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2154,
									"end": 2176,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 2122,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2068,
									"end": 2196,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2235,
									"end": 2237,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2325,
									"end": 2332,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2322,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2305,
									"end": 2314,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2301,
									"end": 2323,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 2261,
									"end": 2333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "tag",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2206,
									"end": 2343,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2382,
									"end": 2384,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 2478,
									"end": 2485,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2458,
									"end": 2467,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2454,
									"end": 2476,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 2408,
									"end": 2486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "tag",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2353,
									"end": 2496,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2593,
									"end": 2604,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2633,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2622,
									"end": 2625,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2615,
									"end": 2634,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2667,
									"end": 2671,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2662,
									"end": 2665,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2824,
									"end": 2846,
									"name": "PUSH",
									"source": 16,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 2820,
									"end": 2821,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2812,
									"end": 2818,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2808,
									"end": 2822,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2801,
									"end": 2847,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2684,
									"end": 2854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3002,
									"end": 3005,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 3087,
									"end": 3089,
									"name": "PUSH",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 3082,
									"end": 3085,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 3023,
									"end": 3090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "tag",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 3188,
									"end": 3191,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 3099,
									"end": 3192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "tag",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3212,
									"end": 3215,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3208,
									"end": 3220,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3398,
									"end": 3402,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3438,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3425,
									"end": 3434,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3421,
									"end": 3439,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3475,
									"end": 3495,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 3471,
									"end": 3472,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3460,
									"end": 3469,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3473,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3449,
									"end": 3496,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 3639,
									"end": 3643,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 3513,
									"end": 3644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "tag",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3797,
									"end": 3831,
									"name": "PUSH",
									"source": 16,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 3793,
									"end": 3794,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3791,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3781,
									"end": 3795,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3774,
									"end": 3832,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3866,
									"end": 3873,
									"name": "PUSH",
									"source": 16,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3861,
									"end": 3863,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3853,
									"end": 3859,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3849,
									"end": 3864,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3842,
									"end": 3874,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3657,
									"end": 3881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4029,
									"end": 4032,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 4114,
									"end": 4116,
									"name": "PUSH",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 4109,
									"end": 4112,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 4050,
									"end": 4117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "tag",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 4215,
									"end": 4218,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 4126,
									"end": 4219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "tag",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4244,
									"end": 4246,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 4239,
									"end": 4242,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4235,
									"end": 4247,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4425,
									"end": 4429,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4463,
									"end": 4465,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4452,
									"end": 4461,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4521,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4506,
									"end": 4510,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4502,
									"end": 4522,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 4498,
									"end": 4499,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4487,
									"end": 4496,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4483,
									"end": 4500,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4476,
									"end": 4523,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 4540,
									"end": 4671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "tag",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4824,
									"end": 4858,
									"name": "PUSH",
									"source": 16,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4812,
									"end": 4818,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4808,
									"end": 4822,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4801,
									"end": 4859,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4893,
									"end": 4899,
									"name": "PUSH",
									"source": 16,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4888,
									"end": 4890,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4880,
									"end": 4886,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4876,
									"end": 4891,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4869,
									"end": 4900,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4684,
									"end": 4907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5055,
									"end": 5058,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 5140,
									"end": 5142,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 5135,
									"end": 5138,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 5076,
									"end": 5143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "tag",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 5241,
									"end": 5244,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 5152,
									"end": 5245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "tag",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5270,
									"end": 5272,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 5265,
									"end": 5268,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5261,
									"end": 5273,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "tag",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5451,
									"end": 5455,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5489,
									"end": 5491,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5478,
									"end": 5487,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5474,
									"end": 5492,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5538,
									"end": 5547,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5532,
									"end": 5536,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5528,
									"end": 5548,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 5524,
									"end": 5525,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5513,
									"end": 5522,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5509,
									"end": 5526,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5502,
									"end": 5549,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "92"
								},
								{
									"begin": 5692,
									"end": 5696,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 5566,
									"end": 5697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "tag",
									"source": 16,
									"value": "92"
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 2659,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220373a380c0b3933f7bb6f6df5430e2b4785ea7ea9bf1108c9471d24962d4cfd7064736f6c63430008150033",
									".code": [
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "521EB273"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "B3AEFB75"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "B3AEFB75"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "D547741F"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "EC8AC4D8"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "FC0C546A"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "521EB273"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "80AD2CF3"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "91D14854"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "A217FDDF"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "2C4E722E"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "2C4E722E"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "2F2FF15D"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "36568ABE"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "4042B66F"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "21EFF7FC"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH",
											"source": 15,
											"value": "248A9CA3"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3361,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 3361,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 3351,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 3280,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 3270,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 313,
											"end": 2659,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1514,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1514,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "tag",
											"source": 15,
											"value": "39"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1514,
											"end": 1643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 871,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 871,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1201,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 1201,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "98"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4397,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 4429,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 4451,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4408,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 4408,
											"end": 4452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 4547,
											"end": 4556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4531,
											"end": 4546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 4531,
											"end": 4557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 4623,
											"end": 4632,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4595,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 4663,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4676,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 4646,
											"end": 4683,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4729,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 4715,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 4715,
											"end": 4727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 4742,
											"end": 4751,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4753,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 4699,
											"end": 4760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 4796,
											"end": 4807,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4809,
											"end": 4818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 4773,
											"end": 4819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 4832,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 4832,
											"end": 4847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 4880,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4893,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 4858,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2915,
											"end": 2926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2891,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "tag",
											"source": 15,
											"value": "42"
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1581,
											"end": 1588,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1622,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1634,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1608,
											"end": 1635,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1635,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1635,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1514,
											"end": 1643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5012,
											"end": 5030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5053,
											"end": 5057,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5059,
											"end": 5066,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5042,
											"end": 5067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6144,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6144,
											"end": 6156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6125,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6237,
											"end": 6244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6219,
											"end": 6245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 957,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 939,
											"end": 957,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 991,
											"end": 994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 970,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 987,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 988,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 970,
											"end": 994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 970,
											"end": 994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 970,
											"end": 994,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 970,
											"end": 994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 871,
											"end": 1002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1266,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1291,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1286,
											"end": 1304,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5451,
											"end": 5455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5438,
											"end": 5456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5480,
											"end": 5484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5493,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5468,
											"end": 5494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1860,
											"end": 2219,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 1860,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1964,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 1991,
											"end": 2002,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1964,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "168"
										},
										{
											"begin": 1964,
											"end": 2014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1964,
											"end": 2014,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 1964,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2138,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2150,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2101,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2113,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2114,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 2087,
											"end": 2118,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2129,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2129,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2129,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2129,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2129,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 2087,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2151,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2087,
											"end": 2151,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 2079,
											"end": 2211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 2079,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 2219,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1860,
											"end": 2219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7931,
											"end": 7938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 7986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 7134,
											"end": 7145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7147,
											"end": 7158,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7119,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 7119,
											"end": 7159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7023,
											"end": 7167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2412,
											"end": 2656,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 2412,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2513,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 2542,
											"end": 2553,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2513,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 2513,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2513,
											"end": 2565,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 2513,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 2638,
											"end": 2647,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2620,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2632,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2633,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 2606,
											"end": 2637,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2648,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2648,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2648,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2648,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2606,
											"end": 2648,
											"name": "tag",
											"source": 15,
											"value": "185"
										},
										{
											"begin": 2606,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2590,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2602,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2603,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2648,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2648,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2648,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2576,
											"end": 2648,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2412,
											"end": 2656,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2412,
											"end": 2656,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2412,
											"end": 2656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "8FC"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8078,
											"end": 8166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3537,
											"end": 3541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3543,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3526,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7670,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7790,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7781,
											"end": 7788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8088,
											"end": 8095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8074,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8144,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8195,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8195,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8186,
											"end": 8193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "tag",
											"source": 14,
											"value": "168"
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5575,
											"end": 5586,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 5567,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5675,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 5658,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 6716,
											"end": 6727,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6602,
											"end": 6749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3932,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4115,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 4214,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4022,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3970,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2497,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 8,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2104,
											"name": "PUSH",
											"source": 8,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2162,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 5720,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5266,
											"end": 5838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2360,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2700,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2675,
											"end": 2701,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2764,
											"end": 2781,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 2711,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 2711,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2567,
											"end": 2789,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2567,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2832,
											"end": 2839,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2795,
											"end": 2872,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2795,
											"end": 2872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2941,
											"end": 2976,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2988,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2980,
											"end": 2992,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 2931,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2878,
											"end": 3000,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2878,
											"end": 3000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "tag",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3077,
											"end": 3097,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3068,
											"end": 3097,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3068,
											"end": 3097,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 3106,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 3106,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3145,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3210,
											"end": 3216,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3261,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3238,
											"end": 3245,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3234,
											"end": 3257,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3230,
											"end": 3262,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 3265,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 3227,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 3455,
											"end": 3462,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 3410,
											"end": 3463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 3410,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3400,
											"end": 3463,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3356,
											"end": 3473,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3151,
											"end": 3480,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3151,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 3591,
											"end": 3596,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 3573,
											"end": 3597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "tag",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 3573,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3568,
											"end": 3571,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3561,
											"end": 3598,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3486,
											"end": 3604,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3486,
											"end": 3604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "tag",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3726,
											"end": 3744,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3744,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3718,
											"end": 3744,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 3822,
											"end": 3823,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3820,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3807,
											"end": 3824,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3798,
											"end": 3804,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 3754,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 3754,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3610,
											"end": 3832,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3610,
											"end": 3832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3920,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3963,
											"end": 3965,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3942,
											"end": 3949,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3934,
											"end": 3966,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 3969,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 3969,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 3931,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4089,
											"end": 4090,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4135,
											"end": 4157,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 4114,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 4114,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4104,
											"end": 4167,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4104,
											"end": 4167,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4060,
											"end": 4177,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 4287,
											"end": 4294,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4267,
											"end": 4276,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 4242,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 4242,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4232,
											"end": 4295,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4187,
											"end": 4305,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 4312,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3838,
											"end": 4312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4318,
											"end": 4422,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 4318,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4363,
											"end": 4370,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 4410,
											"end": 4415,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4392,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 4392,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4392,
											"end": 4416,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 4392,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4381,
											"end": 4416,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4381,
											"end": 4416,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4318,
											"end": 4422,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4318,
											"end": 4422,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4318,
											"end": 4422,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4318,
											"end": 4422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4428,
											"end": 4570,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 4428,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 4557,
											"end": 4562,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 4531,
											"end": 4563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "tag",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4529,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4519,
											"end": 4564,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4428,
											"end": 4570,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4428,
											"end": 4570,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4428,
											"end": 4570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4576,
											"end": 4830,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 4576,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4685,
											"end": 4689,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4725,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4712,
											"end": 4721,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4700,
											"end": 4726,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4700,
											"end": 4726,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4736,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 4820,
											"end": 4821,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4818,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4805,
											"end": 4822,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4796,
											"end": 4802,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4736,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 4736,
											"end": 4823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4736,
											"end": 4823,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 4736,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4576,
											"end": 4830,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4576,
											"end": 4830,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4576,
											"end": 4830,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4576,
											"end": 4830,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4576,
											"end": 4830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4836,
											"end": 4958,
											"name": "tag",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 4836,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4909,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 4927,
											"end": 4932,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4909,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 4909,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4909,
											"end": 4933,
											"name": "tag",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 4909,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4902,
											"end": 4907,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4899,
											"end": 4934,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4889,
											"end": 4952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 4889,
											"end": 4952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4948,
											"end": 4949,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 4946,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4889,
											"end": 4952,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 4889,
											"end": 4952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4836,
											"end": 4958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4836,
											"end": 4958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4964,
											"end": 5103,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 4964,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5010,
											"end": 5015,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5054,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5035,
											"end": 5055,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5055,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5055,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5064,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 5091,
											"end": 5096,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5064,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 5064,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5064,
											"end": 5097,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 5064,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4964,
											"end": 5103,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4964,
											"end": 5103,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4964,
											"end": 5103,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4964,
											"end": 5103,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4964,
											"end": 5103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5109,
											"end": 5583,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 5109,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5234,
											"end": 5236,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5222,
											"end": 5231,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5213,
											"end": 5220,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5209,
											"end": 5232,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5205,
											"end": 5237,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5202,
											"end": 5321,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5202,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 5202,
											"end": 5321,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5240,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 5240,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 5240,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5240,
											"end": 5319,
											"name": "tag",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 5240,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5202,
											"end": 5321,
											"name": "tag",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 5202,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5360,
											"end": 5361,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5385,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 5430,
											"end": 5437,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5421,
											"end": 5427,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5406,
											"end": 5428,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5385,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 5385,
											"end": 5438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5385,
											"end": 5438,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 5385,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5375,
											"end": 5438,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5375,
											"end": 5438,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5331,
											"end": 5448,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5487,
											"end": 5489,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5513,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 5558,
											"end": 5565,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5549,
											"end": 5555,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5538,
											"end": 5547,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5534,
											"end": 5556,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5513,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 5513,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5513,
											"end": 5566,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 5513,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5503,
											"end": 5566,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5503,
											"end": 5566,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5458,
											"end": 5576,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5109,
											"end": 5583,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5109,
											"end": 5583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5109,
											"end": 5583,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5109,
											"end": 5583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5109,
											"end": 5583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5109,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5649,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 5589,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5617,
											"end": 5620,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5643,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5631,
											"end": 5643,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5631,
											"end": 5643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5649,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5649,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5649,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5589,
											"end": 5649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5655,
											"end": 5797,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 5655,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5705,
											"end": 5714,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 5756,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 5765,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 5783,
											"end": 5788,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5765,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 5765,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5765,
											"end": 5789,
											"name": "tag",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 5765,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5756,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 5756,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5756,
											"end": 5790,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 5756,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5738,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 5738,
											"end": 5791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5738,
											"end": 5791,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 5738,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5725,
											"end": 5791,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5655,
											"end": 5797,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5655,
											"end": 5797,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5655,
											"end": 5797,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5655,
											"end": 5797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5803,
											"end": 5929,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 5803,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5853,
											"end": 5862,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 5917,
											"end": 5922,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5886,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 5886,
											"end": 5923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5886,
											"end": 5923,
											"name": "tag",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 5886,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5873,
											"end": 5923,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5873,
											"end": 5923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5803,
											"end": 5929,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5803,
											"end": 5929,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5803,
											"end": 5929,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5803,
											"end": 5929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5999,
											"end": 6008,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6032,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 6032,
											"end": 6069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6032,
											"end": 6069,
											"name": "tag",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 6032,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6019,
											"end": 6069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6019,
											"end": 6069,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 6075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6081,
											"end": 6240,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 6081,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6182,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 6227,
											"end": 6232,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6182,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 6182,
											"end": 6233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6182,
											"end": 6233,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 6182,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6177,
											"end": 6180,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6170,
											"end": 6234,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6081,
											"end": 6240,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6081,
											"end": 6240,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6081,
											"end": 6240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6246,
											"end": 6496,
											"name": "tag",
											"source": 16,
											"value": "103"
										},
										{
											"begin": 6246,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6353,
											"end": 6357,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6391,
											"end": 6393,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6380,
											"end": 6389,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6368,
											"end": 6394,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6368,
											"end": 6394,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6404,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 6486,
											"end": 6487,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6484,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6471,
											"end": 6488,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6462,
											"end": 6468,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6404,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 6404,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6404,
											"end": 6489,
											"name": "tag",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 6404,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6246,
											"end": 6496,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6246,
											"end": 6496,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6246,
											"end": 6496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6246,
											"end": 6496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6246,
											"end": 6496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6502,
											"end": 6834,
											"name": "tag",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 6502,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6623,
											"end": 6627,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6661,
											"end": 6663,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6650,
											"end": 6659,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6646,
											"end": 6664,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6638,
											"end": 6664,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6638,
											"end": 6664,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6674,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 6742,
											"end": 6743,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6731,
											"end": 6740,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6727,
											"end": 6744,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6674,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 6674,
											"end": 6745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6674,
											"end": 6745,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 6674,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6755,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 6823,
											"end": 6825,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6812,
											"end": 6821,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6808,
											"end": 6826,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6799,
											"end": 6805,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6755,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 6755,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6755,
											"end": 6827,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 6755,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6502,
											"end": 6834,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6502,
											"end": 6834,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6502,
											"end": 6834,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6502,
											"end": 6834,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6502,
											"end": 6834,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6502,
											"end": 6834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6840,
											"end": 7009,
											"name": "tag",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 6840,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6924,
											"end": 6935,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6946,
											"end": 6965,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6998,
											"end": 7002,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6993,
											"end": 6996,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6989,
											"end": 7003,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6974,
											"end": 7003,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6974,
											"end": 7003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6840,
											"end": 7009,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6840,
											"end": 7009,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6840,
											"end": 7009,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6840,
											"end": 7009,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6840,
											"end": 7009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7015,
											"end": 7249,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 7015,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7155,
											"end": 7189,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 7151,
											"end": 7152,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7149,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7139,
											"end": 7153,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7132,
											"end": 7190,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7224,
											"end": 7241,
											"name": "PUSH",
											"source": 16,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7211,
											"end": 7217,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7207,
											"end": 7222,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7200,
											"end": 7242,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7015,
											"end": 7249,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7015,
											"end": 7249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7255,
											"end": 7621,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 7255,
											"end": 7621,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7397,
											"end": 7400,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 7482,
											"end": 7484,
											"name": "PUSH",
											"source": 16,
											"value": "2F"
										},
										{
											"begin": 7477,
											"end": 7480,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 7418,
											"end": 7485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 7418,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7411,
											"end": 7485,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7411,
											"end": 7485,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7494,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 7583,
											"end": 7586,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7494,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 7494,
											"end": 7587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7494,
											"end": 7587,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 7494,
											"end": 7587,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7612,
											"end": 7614,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7607,
											"end": 7610,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7603,
											"end": 7615,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7596,
											"end": 7615,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7596,
											"end": 7615,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7255,
											"end": 7621,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7255,
											"end": 7621,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7255,
											"end": 7621,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7255,
											"end": 7621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7627,
											"end": 8046,
											"name": "tag",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 7627,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7793,
											"end": 7797,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7831,
											"end": 7833,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7820,
											"end": 7829,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7816,
											"end": 7834,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7808,
											"end": 7834,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7808,
											"end": 7834,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7880,
											"end": 7889,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7874,
											"end": 7878,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7866,
											"end": 7867,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7855,
											"end": 7864,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7851,
											"end": 7868,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7844,
											"end": 7891,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7908,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 8034,
											"end": 8038,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7908,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 7908,
											"end": 8039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7908,
											"end": 8039,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 7908,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7900,
											"end": 8039,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7900,
											"end": 8039,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7627,
											"end": 8046,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7627,
											"end": 8046,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7627,
											"end": 8046,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7627,
											"end": 8046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8052,
											"end": 8233,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 8052,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8192,
											"end": 8225,
											"name": "PUSH",
											"source": 16,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8180,
											"end": 8186,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8176,
											"end": 8190,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8169,
											"end": 8226,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8052,
											"end": 8233,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8052,
											"end": 8233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8381,
											"end": 8384,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8402,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 8466,
											"end": 8468,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 8461,
											"end": 8464,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8402,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 8402,
											"end": 8469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8402,
											"end": 8469,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 8402,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8395,
											"end": 8469,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8395,
											"end": 8469,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8478,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 8567,
											"end": 8570,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8478,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 8478,
											"end": 8571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8478,
											"end": 8571,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 8478,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8596,
											"end": 8598,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8591,
											"end": 8594,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8587,
											"end": 8599,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8580,
											"end": 8599,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8580,
											"end": 8599,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8239,
											"end": 8605,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8239,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "tag",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8777,
											"end": 8781,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8817,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8804,
											"end": 8813,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8800,
											"end": 8818,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8792,
											"end": 8818,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8792,
											"end": 8818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8864,
											"end": 8873,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8858,
											"end": 8862,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8854,
											"end": 8874,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8848,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8835,
											"end": 8852,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8828,
											"end": 8875,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8892,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8892,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 8892,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8892,
											"end": 9023,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 8892,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8884,
											"end": 9023,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8884,
											"end": 9023,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8611,
											"end": 9030,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8611,
											"end": 9030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9036,
											"end": 9278,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 9036,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "PUSH",
											"source": 16,
											"value": "496E646976696475616C6C7943617070656443726F776473616C653A2062656E"
										},
										{
											"begin": 9172,
											"end": 9173,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9164,
											"end": 9170,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9160,
											"end": 9174,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9153,
											"end": 9211,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9245,
											"end": 9270,
											"name": "PUSH",
											"source": 16,
											"value": "6566696369617279277320636170206578636565646564000000000000000000"
										},
										{
											"begin": 9240,
											"end": 9242,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9232,
											"end": 9238,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9228,
											"end": 9243,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9221,
											"end": 9271,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9036,
											"end": 9278,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9036,
											"end": 9278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9284,
											"end": 9650,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 9284,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9426,
											"end": 9429,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9447,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 9511,
											"end": 9513,
											"name": "PUSH",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 9506,
											"end": 9509,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9447,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 9447,
											"end": 9514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9447,
											"end": 9514,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 9447,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9440,
											"end": 9514,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9440,
											"end": 9514,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9523,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 9612,
											"end": 9615,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9523,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 9523,
											"end": 9616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9523,
											"end": 9616,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 9523,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9641,
											"end": 9643,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9636,
											"end": 9639,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9632,
											"end": 9644,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9625,
											"end": 9644,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9284,
											"end": 9650,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9284,
											"end": 9650,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9284,
											"end": 9650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9284,
											"end": 9650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9656,
											"end": 10075,
											"name": "tag",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 9656,
											"end": 10075,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9822,
											"end": 9826,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9860,
											"end": 9862,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9849,
											"end": 9858,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9845,
											"end": 9863,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9837,
											"end": 9863,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9837,
											"end": 9863,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9909,
											"end": 9918,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9903,
											"end": 9907,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9899,
											"end": 9919,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9895,
											"end": 9896,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9884,
											"end": 9893,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9880,
											"end": 9897,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9873,
											"end": 9920,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 10063,
											"end": 10067,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 10068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 9937,
											"end": 10068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9937,
											"end": 10068,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 9937,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10068,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9929,
											"end": 10068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9656,
											"end": 10075,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9656,
											"end": 10075,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9656,
											"end": 10075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9656,
											"end": 10075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10081,
											"end": 10261,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 10081,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10129,
											"end": 10206,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10126,
											"end": 10127,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10119,
											"end": 10207,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10226,
											"end": 10230,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 10223,
											"end": 10224,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10216,
											"end": 10231,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10250,
											"end": 10254,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10240,
											"end": 10255,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10267,
											"end": 10458,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 10267,
											"end": 10458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10307,
											"end": 10310,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10326,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 10344,
											"end": 10345,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10326,
											"end": 10346,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 10326,
											"end": 10346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10326,
											"end": 10346,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 10326,
											"end": 10346,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10321,
											"end": 10346,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10321,
											"end": 10346,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10360,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 10378,
											"end": 10379,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10360,
											"end": 10380,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 10360,
											"end": 10380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10360,
											"end": 10380,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 10360,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10355,
											"end": 10380,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10355,
											"end": 10380,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10403,
											"end": 10404,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10400,
											"end": 10401,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10396,
											"end": 10405,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10389,
											"end": 10405,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10389,
											"end": 10405,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10424,
											"end": 10427,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10421,
											"end": 10422,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10418,
											"end": 10428,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10415,
											"end": 10451,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10415,
											"end": 10451,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 10415,
											"end": 10451,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 10431,
											"end": 10449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 10431,
											"end": 10449,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10415,
											"end": 10451,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 10415,
											"end": 10451,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10267,
											"end": 10458,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10267,
											"end": 10458,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10267,
											"end": 10458,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10267,
											"end": 10458,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10267,
											"end": 10458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10464,
											"end": 10693,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 10464,
											"end": 10693,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10604,
											"end": 10638,
											"name": "PUSH",
											"source": 16,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 10600,
											"end": 10601,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10592,
											"end": 10598,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10588,
											"end": 10602,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10581,
											"end": 10639,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10673,
											"end": 10685,
											"name": "PUSH",
											"source": 16,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10670,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10660,
											"end": 10666,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10656,
											"end": 10671,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10649,
											"end": 10686,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10464,
											"end": 10693,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10464,
											"end": 10693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10841,
											"end": 10844,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 10926,
											"end": 10928,
											"name": "PUSH",
											"source": 16,
											"value": "2A"
										},
										{
											"begin": 10921,
											"end": 10924,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10862,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 10862,
											"end": 10929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10862,
											"end": 10929,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 10862,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10855,
											"end": 10929,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10855,
											"end": 10929,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10938,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 11027,
											"end": 11030,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10938,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 10938,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10938,
											"end": 11031,
											"name": "tag",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 10938,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11056,
											"end": 11058,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11051,
											"end": 11054,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11047,
											"end": 11059,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11040,
											"end": 11059,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11040,
											"end": 11059,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10699,
											"end": 11065,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10699,
											"end": 11065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "tag",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11275,
											"end": 11277,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11264,
											"end": 11273,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11260,
											"end": 11278,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11252,
											"end": 11278,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11252,
											"end": 11278,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11324,
											"end": 11333,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11318,
											"end": 11322,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11314,
											"end": 11334,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11310,
											"end": 11311,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11308,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11295,
											"end": 11312,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11288,
											"end": 11335,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11352,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 11478,
											"end": 11482,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11352,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 11352,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11352,
											"end": 11483,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 11352,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11344,
											"end": 11483,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11344,
											"end": 11483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11071,
											"end": 11490,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11071,
											"end": 11490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11496,
											"end": 11671,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 11496,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11636,
											"end": 11663,
											"name": "PUSH",
											"source": 16,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 11632,
											"end": 11633,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11624,
											"end": 11630,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11620,
											"end": 11634,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11613,
											"end": 11664,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11496,
											"end": 11671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11496,
											"end": 11671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11677,
											"end": 12043,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 11677,
											"end": 12043,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11819,
											"end": 11822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11840,
											"end": 11907,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 11904,
											"end": 11906,
											"name": "PUSH",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 11899,
											"end": 11902,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11840,
											"end": 11907,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 11840,
											"end": 11907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11840,
											"end": 11907,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 11840,
											"end": 11907,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11833,
											"end": 11907,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11833,
											"end": 11907,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11916,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 12005,
											"end": 12008,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11916,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 11916,
											"end": 12009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11916,
											"end": 12009,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 11916,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12034,
											"end": 12036,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12029,
											"end": 12032,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12025,
											"end": 12037,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12018,
											"end": 12037,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12018,
											"end": 12037,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11677,
											"end": 12043,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11677,
											"end": 12043,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11677,
											"end": 12043,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11677,
											"end": 12043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12049,
											"end": 12468,
											"name": "tag",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 12049,
											"end": 12468,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12215,
											"end": 12219,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12253,
											"end": 12255,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12238,
											"end": 12256,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12230,
											"end": 12256,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12230,
											"end": 12256,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12302,
											"end": 12311,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12296,
											"end": 12300,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12292,
											"end": 12312,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12288,
											"end": 12289,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12277,
											"end": 12286,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12273,
											"end": 12290,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12266,
											"end": 12313,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12330,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 12456,
											"end": 12460,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12330,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 12330,
											"end": 12461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12330,
											"end": 12461,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 12330,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12322,
											"end": 12461,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12322,
											"end": 12461,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12049,
											"end": 12468,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12049,
											"end": 12468,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12049,
											"end": 12468,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12049,
											"end": 12468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12474,
											"end": 12884,
											"name": "tag",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 12474,
											"end": 12884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12514,
											"end": 12521,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 12555,
											"end": 12556,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 12537,
											"end": 12557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "tag",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 12537,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12532,
											"end": 12557,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12532,
											"end": 12557,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12571,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 12589,
											"end": 12590,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12571,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 12571,
											"end": 12591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12571,
											"end": 12591,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 12571,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12626,
											"end": 12627,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12623,
											"end": 12624,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12619,
											"end": 12628,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 12648,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 12666,
											"end": 12677,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12648,
											"end": 12678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 12648,
											"end": 12678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12648,
											"end": 12678,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 12648,
											"end": 12678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12637,
											"end": 12678,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12637,
											"end": 12678,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12827,
											"end": 12828,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12818,
											"end": 12825,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12814,
											"end": 12829,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12811,
											"end": 12812,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12808,
											"end": 12830,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 12788,
											"end": 12789,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12781,
											"end": 12790,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12761,
											"end": 12844,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 12738,
											"end": 12877,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 12738,
											"end": 12877,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12857,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 12857,
											"end": 12875,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 12857,
											"end": 12875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12857,
											"end": 12875,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 12857,
											"end": 12875,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12738,
											"end": 12877,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 12738,
											"end": 12877,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12522,
											"end": 12884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12474,
											"end": 12884,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12474,
											"end": 12884,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12474,
											"end": 12884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12474,
											"end": 12884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12474,
											"end": 12884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12890,
											"end": 13038,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 12890,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12992,
											"end": 13003,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13029,
											"end": 13032,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13014,
											"end": 13032,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13014,
											"end": 13032,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12890,
											"end": 13038,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12890,
											"end": 13038,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12890,
											"end": 13038,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12890,
											"end": 13038,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12890,
											"end": 13038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13044,
											"end": 13217,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 13044,
											"end": 13217,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13184,
											"end": 13209,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 13180,
											"end": 13181,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13172,
											"end": 13178,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13168,
											"end": 13182,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13161,
											"end": 13210,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13044,
											"end": 13217,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13044,
											"end": 13217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13223,
											"end": 13625,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 13223,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13383,
											"end": 13386,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13404,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 13486,
											"end": 13488,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 13481,
											"end": 13484,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13404,
											"end": 13489,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 13404,
											"end": 13489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13404,
											"end": 13489,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 13404,
											"end": 13489,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13489,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13397,
											"end": 13489,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13498,
											"end": 13591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 13587,
											"end": 13590,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13498,
											"end": 13591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 13498,
											"end": 13591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13498,
											"end": 13591,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 13498,
											"end": 13591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13616,
											"end": 13618,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 13611,
											"end": 13614,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13607,
											"end": 13619,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13600,
											"end": 13619,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13600,
											"end": 13619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13223,
											"end": 13625,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13223,
											"end": 13625,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13223,
											"end": 13625,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13223,
											"end": 13625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13631,
											"end": 13730,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 13631,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13683,
											"end": 13689,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13717,
											"end": 13722,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13711,
											"end": 13723,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 13701,
											"end": 13723,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13701,
											"end": 13723,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13631,
											"end": 13730,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13631,
											"end": 13730,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13631,
											"end": 13730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13631,
											"end": 13730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13736,
											"end": 13982,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 13736,
											"end": 13982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13817,
											"end": 13818,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13827,
											"end": 13940,
											"name": "tag",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 13827,
											"end": 13940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13841,
											"end": 13847,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13838,
											"end": 13839,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13835,
											"end": 13848,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13827,
											"end": 13940,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13827,
											"end": 13940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 13827,
											"end": 13940,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13926,
											"end": 13927,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13921,
											"end": 13924,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13917,
											"end": 13928,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13911,
											"end": 13929,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 13907,
											"end": 13908,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13902,
											"end": 13905,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13898,
											"end": 13909,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13891,
											"end": 13930,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13863,
											"end": 13865,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13860,
											"end": 13861,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13856,
											"end": 13866,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13851,
											"end": 13866,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13851,
											"end": 13866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13827,
											"end": 13940,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 13827,
											"end": 13940,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13827,
											"end": 13940,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 13827,
											"end": 13940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13974,
											"end": 13975,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13965,
											"end": 13971,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13960,
											"end": 13963,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13956,
											"end": 13972,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13949,
											"end": 13976,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13798,
											"end": 13982,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13736,
											"end": 13982,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13736,
											"end": 13982,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13736,
											"end": 13982,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13736,
											"end": 13982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13988,
											"end": 14378,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 13988,
											"end": 14378,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14094,
											"end": 14097,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 14155,
											"end": 14160,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14122,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 14122,
											"end": 14161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14122,
											"end": 14161,
											"name": "tag",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 14122,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14177,
											"end": 14266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 14259,
											"end": 14265,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14254,
											"end": 14257,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14177,
											"end": 14266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 14177,
											"end": 14266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14177,
											"end": 14266,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 14177,
											"end": 14266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14170,
											"end": 14266,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14170,
											"end": 14266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14275,
											"end": 14340,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 14333,
											"end": 14339,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14328,
											"end": 14331,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14321,
											"end": 14325,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14314,
											"end": 14319,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 14310,
											"end": 14326,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14275,
											"end": 14340,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 14275,
											"end": 14340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14275,
											"end": 14340,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 14275,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14365,
											"end": 14371,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14360,
											"end": 14363,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14356,
											"end": 14372,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14349,
											"end": 14372,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14349,
											"end": 14372,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14098,
											"end": 14378,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13988,
											"end": 14378,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13988,
											"end": 14378,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13988,
											"end": 14378,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13988,
											"end": 14378,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13988,
											"end": 14378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14384,
											"end": 14551,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 14384,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14524,
											"end": 14543,
											"name": "PUSH",
											"source": 16,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 14520,
											"end": 14521,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14518,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14508,
											"end": 14522,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14501,
											"end": 14544,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14384,
											"end": 14551,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14384,
											"end": 14551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14557,
											"end": 14959,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 14557,
											"end": 14959,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14717,
											"end": 14720,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14738,
											"end": 14823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 14820,
											"end": 14822,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 14815,
											"end": 14818,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14738,
											"end": 14823,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 14738,
											"end": 14823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14738,
											"end": 14823,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 14738,
											"end": 14823,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14731,
											"end": 14823,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14731,
											"end": 14823,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14832,
											"end": 14925,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 14921,
											"end": 14924,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14832,
											"end": 14925,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 14832,
											"end": 14925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14832,
											"end": 14925,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 14832,
											"end": 14925,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14950,
											"end": 14952,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 14945,
											"end": 14948,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14941,
											"end": 14953,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14934,
											"end": 14953,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14934,
											"end": 14953,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14557,
											"end": 14959,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14557,
											"end": 14959,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14557,
											"end": 14959,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14557,
											"end": 14959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 15932,
											"name": "tag",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 14965,
											"end": 15932,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15347,
											"end": 15350,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15369,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 15513,
											"end": 15516,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15369,
											"end": 15517,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 15369,
											"end": 15517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15369,
											"end": 15517,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 15369,
											"end": 15517,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15362,
											"end": 15517,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15362,
											"end": 15517,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15534,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 15625,
											"end": 15628,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15616,
											"end": 15622,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15534,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 15534,
											"end": 15629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15534,
											"end": 15629,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 15534,
											"end": 15629,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15527,
											"end": 15629,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15527,
											"end": 15629,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15646,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 15790,
											"end": 15793,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15646,
											"end": 15794,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 15646,
											"end": 15794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15646,
											"end": 15794,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 15646,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15639,
											"end": 15794,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15639,
											"end": 15794,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15811,
											"end": 15906,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 15902,
											"end": 15905,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15893,
											"end": 15899,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15811,
											"end": 15906,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 15811,
											"end": 15906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15811,
											"end": 15906,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 15811,
											"end": 15906,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15804,
											"end": 15906,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15804,
											"end": 15906,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15923,
											"end": 15926,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15916,
											"end": 15926,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15916,
											"end": 15926,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 15932,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 15932,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 15932,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 15932,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 15932,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 15932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15938,
											"end": 16040,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 15938,
											"end": 16040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15979,
											"end": 15985,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16030,
											"end": 16032,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 16026,
											"end": 16033,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 16021,
											"end": 16023,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 16014,
											"end": 16019,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16010,
											"end": 16024,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16006,
											"end": 16034,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15996,
											"end": 16034,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15996,
											"end": 16034,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15938,
											"end": 16040,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15938,
											"end": 16040,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15938,
											"end": 16040,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15938,
											"end": 16040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16046,
											"end": 16423,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 16046,
											"end": 16423,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16134,
											"end": 16137,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16162,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 16195,
											"end": 16200,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16162,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 16162,
											"end": 16201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16162,
											"end": 16201,
											"name": "tag",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 16162,
											"end": 16201,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16217,
											"end": 16288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 16281,
											"end": 16287,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16276,
											"end": 16279,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16217,
											"end": 16288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 16217,
											"end": 16288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16217,
											"end": 16288,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 16217,
											"end": 16288,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16210,
											"end": 16288,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16210,
											"end": 16288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16297,
											"end": 16362,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 16355,
											"end": 16361,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16350,
											"end": 16353,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16343,
											"end": 16347,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16336,
											"end": 16341,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16332,
											"end": 16348,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16297,
											"end": 16362,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 16297,
											"end": 16362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16297,
											"end": 16362,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 16297,
											"end": 16362,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16387,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 16409,
											"end": 16415,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16387,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 16387,
											"end": 16416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16387,
											"end": 16416,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 16387,
											"end": 16416,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16382,
											"end": 16385,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16378,
											"end": 16417,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16371,
											"end": 16417,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16371,
											"end": 16417,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16138,
											"end": 16423,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16046,
											"end": 16423,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16046,
											"end": 16423,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16046,
											"end": 16423,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16046,
											"end": 16423,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16046,
											"end": 16423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16429,
											"end": 16742,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 16429,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16542,
											"end": 16546,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16580,
											"end": 16582,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16569,
											"end": 16578,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16565,
											"end": 16583,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16557,
											"end": 16583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16557,
											"end": 16583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16629,
											"end": 16638,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16623,
											"end": 16627,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16619,
											"end": 16639,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 16615,
											"end": 16616,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16604,
											"end": 16613,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16600,
											"end": 16617,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16593,
											"end": 16640,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16657,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 16730,
											"end": 16734,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16721,
											"end": 16727,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16657,
											"end": 16735,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 16657,
											"end": 16735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16657,
											"end": 16735,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 16657,
											"end": 16735,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16649,
											"end": 16735,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16649,
											"end": 16735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16429,
											"end": 16742,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16429,
											"end": 16742,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16429,
											"end": 16742,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16429,
											"end": 16742,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16429,
											"end": 16742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16748,
											"end": 16866,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 16748,
											"end": 16866,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16835,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 16853,
											"end": 16858,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16835,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 16835,
											"end": 16859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16835,
											"end": 16859,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 16835,
											"end": 16859,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16830,
											"end": 16833,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16823,
											"end": 16860,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16748,
											"end": 16866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16748,
											"end": 16866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16748,
											"end": 16866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16872,
											"end": 17204,
											"name": "tag",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 16872,
											"end": 17204,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16993,
											"end": 16997,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17031,
											"end": 17033,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 17020,
											"end": 17029,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17016,
											"end": 17034,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17008,
											"end": 17034,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17008,
											"end": 17034,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17044,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 17112,
											"end": 17113,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17110,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17097,
											"end": 17114,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17088,
											"end": 17094,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17044,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 17044,
											"end": 17115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17044,
											"end": 17115,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 17044,
											"end": 17115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17125,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 17193,
											"end": 17195,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17182,
											"end": 17191,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17178,
											"end": 17196,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17169,
											"end": 17175,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17125,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 17125,
											"end": 17197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17125,
											"end": 17197,
											"name": "tag",
											"source": 16,
											"value": "529"
										},
										{
											"begin": 17125,
											"end": 17197,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16872,
											"end": 17204,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16872,
											"end": 17204,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16872,
											"end": 17204,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16872,
											"end": 17204,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16872,
											"end": 17204,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16872,
											"end": 17204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17210,
											"end": 17390,
											"name": "tag",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 17210,
											"end": 17390,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17258,
											"end": 17335,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17255,
											"end": 17256,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17248,
											"end": 17336,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17355,
											"end": 17359,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 17352,
											"end": 17353,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17379,
											"end": 17383,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 17376,
											"end": 17377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17369,
											"end": 17384,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 17396,
											"end": 17576,
											"name": "tag",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 17396,
											"end": 17576,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17444,
											"end": 17521,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17441,
											"end": 17442,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17434,
											"end": 17522,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17541,
											"end": 17545,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 17538,
											"end": 17539,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 17531,
											"end": 17546,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17565,
											"end": 17569,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 17562,
											"end": 17563,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17555,
											"end": 17570,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 17582,
											"end": 17753,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 17582,
											"end": 17753,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17621,
											"end": 17624,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17644,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 17662,
											"end": 17667,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17644,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 17644,
											"end": 17668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17644,
											"end": 17668,
											"name": "tag",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 17644,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17635,
											"end": 17668,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17635,
											"end": 17668,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17690,
											"end": 17694,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17683,
											"end": 17688,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17680,
											"end": 17695,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 17677,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 17677,
											"end": 17718,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17698,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 17698,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 17698,
											"end": 17716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17698,
											"end": 17716,
											"name": "tag",
											"source": 16,
											"value": "535"
										},
										{
											"begin": 17698,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17677,
											"end": 17718,
											"name": "tag",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 17677,
											"end": 17718,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17745,
											"end": 17746,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 17738,
											"end": 17743,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17734,
											"end": 17747,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17582,
											"end": 17753,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17582,
											"end": 17753,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17582,
											"end": 17753,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17582,
											"end": 17753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17759,
											"end": 17941,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 17759,
											"end": 17941,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17899,
											"end": 17933,
											"name": "PUSH",
											"source": 16,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 17895,
											"end": 17896,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17887,
											"end": 17893,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17883,
											"end": 17897,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17876,
											"end": 17934,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17759,
											"end": 17941,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17759,
											"end": 17941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17947,
											"end": 18313,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 17947,
											"end": 18313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18089,
											"end": 18092,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18110,
											"end": 18177,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 18174,
											"end": 18176,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18169,
											"end": 18172,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18110,
											"end": 18177,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 18110,
											"end": 18177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18110,
											"end": 18177,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 18110,
											"end": 18177,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18103,
											"end": 18177,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18103,
											"end": 18177,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18186,
											"end": 18279,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 18275,
											"end": 18278,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18186,
											"end": 18279,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 18186,
											"end": 18279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18186,
											"end": 18279,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 18186,
											"end": 18279,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18304,
											"end": 18306,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18299,
											"end": 18302,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18295,
											"end": 18307,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18288,
											"end": 18307,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18288,
											"end": 18307,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17947,
											"end": 18313,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17947,
											"end": 18313,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17947,
											"end": 18313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17947,
											"end": 18313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18319,
											"end": 18738,
											"name": "tag",
											"source": 16,
											"value": "261"
										},
										{
											"begin": 18319,
											"end": 18738,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18485,
											"end": 18489,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18523,
											"end": 18525,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18512,
											"end": 18521,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18508,
											"end": 18526,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18500,
											"end": 18526,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18500,
											"end": 18526,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18572,
											"end": 18581,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18566,
											"end": 18570,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18562,
											"end": 18582,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 18558,
											"end": 18559,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18547,
											"end": 18556,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18543,
											"end": 18560,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18536,
											"end": 18583,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 18600,
											"end": 18731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 18726,
											"end": 18730,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18600,
											"end": 18731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 18600,
											"end": 18731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18600,
											"end": 18731,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 18600,
											"end": 18731,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18592,
											"end": 18731,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18592,
											"end": 18731,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18319,
											"end": 18738,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18319,
											"end": 18738,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18319,
											"end": 18738,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18319,
											"end": 18738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18744,
											"end": 18860,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 18744,
											"end": 18860,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18814,
											"end": 18835,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 18829,
											"end": 18834,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18814,
											"end": 18835,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 18814,
											"end": 18835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18814,
											"end": 18835,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 18814,
											"end": 18835,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18807,
											"end": 18812,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18804,
											"end": 18836,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 18854,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 18794,
											"end": 18854,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18850,
											"end": 18851,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18847,
											"end": 18848,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18840,
											"end": 18852,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 18794,
											"end": 18854,
											"name": "tag",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 18794,
											"end": 18854,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18744,
											"end": 18860,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18744,
											"end": 18860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18866,
											"end": 19003,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 18866,
											"end": 19003,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18920,
											"end": 18925,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18951,
											"end": 18957,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18945,
											"end": 18958,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 18936,
											"end": 18958,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18936,
											"end": 18958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18967,
											"end": 18997,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 18991,
											"end": 18996,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18967,
											"end": 18997,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 18967,
											"end": 18997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18967,
											"end": 18997,
											"name": "tag",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 18967,
											"end": 18997,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18866,
											"end": 19003,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18866,
											"end": 19003,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18866,
											"end": 19003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18866,
											"end": 19003,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18866,
											"end": 19003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19354,
											"name": "tag",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 19009,
											"end": 19354,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19076,
											"end": 19082,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19125,
											"end": 19127,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19113,
											"end": 19122,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19104,
											"end": 19111,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19100,
											"end": 19123,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 19096,
											"end": 19128,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 19093,
											"end": 19212,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19093,
											"end": 19212,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 19093,
											"end": 19212,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19131,
											"end": 19210,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 19131,
											"end": 19210,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 19131,
											"end": 19210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19131,
											"end": 19210,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 19131,
											"end": 19210,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19093,
											"end": 19212,
											"name": "tag",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 19093,
											"end": 19212,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19251,
											"end": 19252,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19276,
											"end": 19337,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 19329,
											"end": 19336,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19320,
											"end": 19326,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19309,
											"end": 19318,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19305,
											"end": 19327,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19276,
											"end": 19337,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 19276,
											"end": 19337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19276,
											"end": 19337,
											"name": "tag",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 19276,
											"end": 19337,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19266,
											"end": 19337,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19266,
											"end": 19337,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19222,
											"end": 19347,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19354,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19354,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19354,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19354,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19009,
											"end": 19354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19360,
											"end": 19589,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 19360,
											"end": 19589,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19500,
											"end": 19534,
											"name": "PUSH",
											"source": 16,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 19496,
											"end": 19497,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19488,
											"end": 19494,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19484,
											"end": 19498,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19477,
											"end": 19535,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19569,
											"end": 19581,
											"name": "PUSH",
											"source": 16,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 19564,
											"end": 19566,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19556,
											"end": 19562,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19552,
											"end": 19567,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19545,
											"end": 19582,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19360,
											"end": 19589,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19360,
											"end": 19589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19595,
											"end": 19961,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 19595,
											"end": 19961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19737,
											"end": 19740,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19758,
											"end": 19825,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 19822,
											"end": 19824,
											"name": "PUSH",
											"source": 16,
											"value": "2A"
										},
										{
											"begin": 19817,
											"end": 19820,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19758,
											"end": 19825,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 19758,
											"end": 19825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19758,
											"end": 19825,
											"name": "tag",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 19758,
											"end": 19825,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19751,
											"end": 19825,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19751,
											"end": 19825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19834,
											"end": 19927,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 19923,
											"end": 19926,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19834,
											"end": 19927,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 19834,
											"end": 19927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19834,
											"end": 19927,
											"name": "tag",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 19834,
											"end": 19927,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19952,
											"end": 19954,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 19947,
											"end": 19950,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19943,
											"end": 19955,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19936,
											"end": 19955,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19936,
											"end": 19955,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19595,
											"end": 19961,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19595,
											"end": 19961,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19595,
											"end": 19961,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19595,
											"end": 19961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19967,
											"end": 20386,
											"name": "tag",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 19967,
											"end": 20386,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20133,
											"end": 20137,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20171,
											"end": 20173,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20160,
											"end": 20169,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20156,
											"end": 20174,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20148,
											"end": 20174,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20148,
											"end": 20174,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20220,
											"end": 20229,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20214,
											"end": 20218,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20210,
											"end": 20230,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 20206,
											"end": 20207,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20195,
											"end": 20204,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20191,
											"end": 20208,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20184,
											"end": 20231,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20379,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 20374,
											"end": 20378,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20379,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 20248,
											"end": 20379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20379,
											"name": "tag",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 20248,
											"end": 20379,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20240,
											"end": 20379,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20240,
											"end": 20379,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19967,
											"end": 20386,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19967,
											"end": 20386,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19967,
											"end": 20386,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19967,
											"end": 20386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20392,
											"end": 20617,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 20392,
											"end": 20617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20532,
											"end": 20566,
											"name": "PUSH",
											"source": 16,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 20528,
											"end": 20529,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20520,
											"end": 20526,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20516,
											"end": 20530,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20509,
											"end": 20567,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20601,
											"end": 20609,
											"name": "PUSH",
											"source": 16,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20596,
											"end": 20598,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20588,
											"end": 20594,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20584,
											"end": 20599,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20577,
											"end": 20610,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20392,
											"end": 20617,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20392,
											"end": 20617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20623,
											"end": 20989,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 20623,
											"end": 20989,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20765,
											"end": 20768,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20786,
											"end": 20853,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 20850,
											"end": 20852,
											"name": "PUSH",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 20845,
											"end": 20848,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20786,
											"end": 20853,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 20786,
											"end": 20853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20786,
											"end": 20853,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 20786,
											"end": 20853,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20779,
											"end": 20853,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20779,
											"end": 20853,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20862,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 20951,
											"end": 20954,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20862,
											"end": 20955,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 20862,
											"end": 20955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20862,
											"end": 20955,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 20862,
											"end": 20955,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20980,
											"end": 20982,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 20975,
											"end": 20978,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20971,
											"end": 20983,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20964,
											"end": 20983,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20964,
											"end": 20983,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20623,
											"end": 20989,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20623,
											"end": 20989,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20623,
											"end": 20989,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20623,
											"end": 20989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20995,
											"end": 21414,
											"name": "tag",
											"source": 16,
											"value": "277"
										},
										{
											"begin": 20995,
											"end": 21414,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21161,
											"end": 21165,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21199,
											"end": 21201,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21188,
											"end": 21197,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21184,
											"end": 21202,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21176,
											"end": 21202,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21176,
											"end": 21202,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21248,
											"end": 21257,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21242,
											"end": 21246,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21238,
											"end": 21258,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 21234,
											"end": 21235,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21223,
											"end": 21232,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21219,
											"end": 21236,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21212,
											"end": 21259,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21276,
											"end": 21407,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 21402,
											"end": 21406,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21276,
											"end": 21407,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 21276,
											"end": 21407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21276,
											"end": 21407,
											"name": "tag",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 21276,
											"end": 21407,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21268,
											"end": 21407,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21268,
											"end": 21407,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20995,
											"end": 21414,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20995,
											"end": 21414,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20995,
											"end": 21414,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20995,
											"end": 21414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21420,
											"end": 21518,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 21420,
											"end": 21518,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21471,
											"end": 21477,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21505,
											"end": 21510,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21499,
											"end": 21511,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 21489,
											"end": 21511,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21489,
											"end": 21511,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21420,
											"end": 21518,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21420,
											"end": 21518,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21420,
											"end": 21518,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21420,
											"end": 21518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21524,
											"end": 21671,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 21524,
											"end": 21671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21625,
											"end": 21636,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21662,
											"end": 21665,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21647,
											"end": 21665,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21647,
											"end": 21665,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21524,
											"end": 21671,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21524,
											"end": 21671,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21524,
											"end": 21671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21524,
											"end": 21671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21524,
											"end": 21671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21677,
											"end": 22063,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 21677,
											"end": 22063,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21781,
											"end": 21784,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21809,
											"end": 21847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 21841,
											"end": 21846,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21809,
											"end": 21847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 21809,
											"end": 21847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21809,
											"end": 21847,
											"name": "tag",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 21809,
											"end": 21847,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21863,
											"end": 21951,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 21944,
											"end": 21950,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21939,
											"end": 21942,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21863,
											"end": 21951,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 21863,
											"end": 21951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21863,
											"end": 21951,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 21863,
											"end": 21951,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21856,
											"end": 21951,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 21856,
											"end": 21951,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21960,
											"end": 22025,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 22018,
											"end": 22024,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22013,
											"end": 22016,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22006,
											"end": 22010,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21999,
											"end": 22004,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21995,
											"end": 22011,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21960,
											"end": 22025,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 21960,
											"end": 22025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21960,
											"end": 22025,
											"name": "tag",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 21960,
											"end": 22025,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22050,
											"end": 22056,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 22045,
											"end": 22048,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22041,
											"end": 22057,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22034,
											"end": 22057,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22034,
											"end": 22057,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21785,
											"end": 22063,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21677,
											"end": 22063,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21677,
											"end": 22063,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21677,
											"end": 22063,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21677,
											"end": 22063,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21677,
											"end": 22063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22069,
											"end": 22340,
											"name": "tag",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 22069,
											"end": 22340,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22199,
											"end": 22202,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22221,
											"end": 22314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 22310,
											"end": 22313,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22301,
											"end": 22307,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22221,
											"end": 22314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 22221,
											"end": 22314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22221,
											"end": 22314,
											"name": "tag",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 22221,
											"end": 22314,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22214,
											"end": 22314,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22214,
											"end": 22314,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22331,
											"end": 22334,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22324,
											"end": 22334,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22324,
											"end": 22334,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22069,
											"end": 22340,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 22069,
											"end": 22340,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22069,
											"end": 22340,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22069,
											"end": 22340,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22069,
											"end": 22340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22346,
											"end": 22525,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 22346,
											"end": 22525,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22486,
											"end": 22517,
											"name": "PUSH",
											"source": 16,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 22482,
											"end": 22483,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22474,
											"end": 22480,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22470,
											"end": 22484,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22463,
											"end": 22518,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22346,
											"end": 22525,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22346,
											"end": 22525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22531,
											"end": 22897,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 22531,
											"end": 22897,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22673,
											"end": 22676,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22694,
											"end": 22761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 22758,
											"end": 22760,
											"name": "PUSH",
											"source": 16,
											"value": "1D"
										},
										{
											"begin": 22753,
											"end": 22756,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22694,
											"end": 22761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 22694,
											"end": 22761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22694,
											"end": 22761,
											"name": "tag",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 22694,
											"end": 22761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22687,
											"end": 22761,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22687,
											"end": 22761,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22770,
											"end": 22863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 22859,
											"end": 22862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22770,
											"end": 22863,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 22770,
											"end": 22863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22770,
											"end": 22863,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 22770,
											"end": 22863,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22888,
											"end": 22890,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22883,
											"end": 22886,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22879,
											"end": 22891,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22872,
											"end": 22891,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22872,
											"end": 22891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22531,
											"end": 22897,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22531,
											"end": 22897,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22531,
											"end": 22897,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22531,
											"end": 22897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22903,
											"end": 23322,
											"name": "tag",
											"source": 16,
											"value": "292"
										},
										{
											"begin": 22903,
											"end": 23322,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23069,
											"end": 23073,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23107,
											"end": 23109,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 23096,
											"end": 23105,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23092,
											"end": 23110,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23084,
											"end": 23110,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23084,
											"end": 23110,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23156,
											"end": 23165,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23150,
											"end": 23154,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23146,
											"end": 23166,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 23142,
											"end": 23143,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23131,
											"end": 23140,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23127,
											"end": 23144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23120,
											"end": 23167,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 23184,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 23310,
											"end": 23314,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23184,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 23184,
											"end": 23315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23184,
											"end": 23315,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 23184,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23176,
											"end": 23315,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23176,
											"end": 23315,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22903,
											"end": 23322,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22903,
											"end": 23322,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22903,
											"end": 23322,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22903,
											"end": 23322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/individuallyCappedCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"buyTokens(address)": "ec8ac4d8",
							"getCap(address)": "b3aefb75",
							"getContribution(address)": "21eff7fc",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"rate()": "2c4e722e",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setCap(address,uint256)": "80ad2cf3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inRate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"inWallet\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"inToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"getCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"getContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"setCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale with per-beneficiary caps.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"getCap(address)\":{\"details\":\"Returns the cap of a specific beneficiary.\",\"params\":{\"beneficiary\":\"Address whose cap is to be checked\"},\"returns\":{\"_0\":\"Current cap for individual beneficiary\"}},\"getContribution(address)\":{\"details\":\"Returns the amount contributed so far by a specific beneficiary.\",\"params\":{\"beneficiary\":\"Address of contributor\"},\"returns\":{\"_0\":\"Beneficiary contribution so far\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setCap(address,uint256)\":{\"details\":\"Sets a specific beneficiary's maximum contribution.\",\"params\":{\"beneficiary\":\"Address to be capped\",\"cap\":\"Wei limit for individual contribution\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"IndividuallyCappedCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/validation/individuallyCappedCrowdsale.sol\":\"IndividuallyCappedCrowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]},\"crowdsale/validation/individuallyCappedCrowdsale.sol\":{\"keccak256\":\"0x7a0724b721694920326d80c76c6412c374e00efafe9e05b8fb4011eda138692e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b049c2be6ca2e44f08649188ef800d2d929f15a829ef7172040d9d547bdeb05d\",\"dweb:/ipfs/QmTAMhvxSwFMJiLgjdhD4AeK6YFWnMR3yoK9Gk157DAD1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 399,
								"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2865,
								"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)531"
							},
							{
								"astId": 2867,
								"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 2869,
								"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2871,
								"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 24,
								"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 3170,
								"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
								"label": "_contributions",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 3174,
								"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
								"label": "_caps",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)531": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "crowdsale/validation/individuallyCappedCrowdsale.sol:IndividuallyCappedCrowdsale",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							1295
						],
						"ERC165": [
							1548
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1560
						],
						"Math": [
							2426
						],
						"SignedMath": [
							2843
						],
						"Strings": [
							1524
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1296,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1525,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1549,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1967:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1295,
										"src": "1967:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1967:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": [
											"1976:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1976:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1976:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"1992:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1548,
										"src": "1992:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1992:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								1548,
								1560,
								388,
								1295
							],
							"name": "AccessControl",
							"nameLocation": "1950:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2056:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2031:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2031:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2050:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2081:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2073:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2073:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2012:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "2005:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2140:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2103:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2103:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": [
													"2122:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "2122:8:0"
											},
											"referencedDeclaration": 19,
											"src": "2122:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2177:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2153:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2153:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2198:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2621:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2642:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 92,
														"src": "2631:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2631:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2657:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2209:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2598:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:14:0"
									},
									"src": "2589:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1547
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2823:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2840:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2860:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2855:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2855:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2876:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2855:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2840:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2915:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2891:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2897:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1547,
															"src": "2891:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2891:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2840:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2833:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2671:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2741:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2799:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2766:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2759:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2759:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2817:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2817:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:6:0"
									},
									"scope": 315,
									"src": "2732:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										355
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "3113:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3137:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3130:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3143:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3130:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3130:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "3123:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2940:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3030:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3089:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3038:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:6:0"
									},
									"scope": 315,
									"src": "3021:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3516:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "3543:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3543:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 131,
														"src": "3526:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3526:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3526:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3172:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3469:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3488:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3480:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3516:0:0"
									},
									"scope": 315,
									"src": "3460:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3917:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3931:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3940:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3946:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3932:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3927:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3956:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4064:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4135:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1524,
																								"src": "4115:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1524_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4123:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1498,
																							"src": "4115:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4115:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4169:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4242:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4234:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4234:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4234:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4249:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1524,
																								"src": "4214:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1524_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4222:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1478,
																							"src": "4214:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4214:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4022:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4026:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4022:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4022:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3994:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3994:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3994:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3970:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3970:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3970:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3569:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3853:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3872:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3864:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:0:0"
									},
									"scope": 315,
									"src": "3844:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4587:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4611:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4604:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4617:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4604:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4597:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4329:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4513:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4560:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:9:0"
									},
									"scope": 315,
									"src": "4504:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5032:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5053:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "5042:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "5042:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4639:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5012:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5012:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"5003:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5003:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5003:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4938:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4994:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4956:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4948:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4947:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5032:0:0"
									},
									"scope": 315,
									"src": "4929:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5458:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5468:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5468:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5468:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5080:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5451:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5438:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5438:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": [
													"5429:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5429:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5429:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5363:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5420:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5382:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5374:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:0:0"
									},
									"scope": 315,
									"src": "5354:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6115:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "6144:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6144:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6133:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6158:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "6125:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6219:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6219:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5507:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6047:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6106:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6068:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6060:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6082:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6074:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6115:0:0"
									},
									"scope": 315,
									"src": "6038:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "7005:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "7026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "7032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "7015:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7015:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "7015:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6258:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6946:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6965:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6957:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6956:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7005:0:0"
									},
									"scope": 315,
									"src": "6937:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7245:174:0",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7263:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7255:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7283:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7255:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7311:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7318:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7311:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7324:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7311:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7336:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7311:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7311:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7383:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7402:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7360:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7355:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "7053:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7181:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7217:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7209:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7194:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7245:0:0"
									},
									"scope": 315,
									"src": "7172:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7655:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7669:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7678:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7670:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7665:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7694:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7708:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7715:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7708:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7721:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7708:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7729:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7708:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7740:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7708:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7708:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7775:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7781:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "7790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7763:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7758:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7425:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7596:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7606:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:0"
									},
									"scope": 315,
									"src": "7587:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "8060:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "8082:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "8088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "8074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8074:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "8070:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "8098:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "8112:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "8119:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8112:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8125:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "8112:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8112:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8112:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "8112:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8180:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8186:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "8195:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8195:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8168:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8168:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8163:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7826:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8000:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8020:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8012:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8011:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:0"
									},
									"scope": 315,
									"src": "7991:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1932:6295:0",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "108:8120:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							453
						]
					},
					"id": 454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 394,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 453,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 392,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 393,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 397,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 453,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 395,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 399,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 453,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 402,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 403,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 453,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 413,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 418,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 422,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 423,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 428,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 429,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 453,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 436,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 437,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 453,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 448,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 446,
												"id": 450,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 453,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 454,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							531
						]
					},
					"id": 532,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 455,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 456,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 465,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 474,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 531,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 531,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 531,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 531,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 531,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 531,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 532,
							"src": "202:2534:3",
							"usedErrors": [],
							"usedEvents": [
								465,
								474
							]
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							567
						]
					},
					"id": 568,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 533,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 534,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 567,
							"linearizedBaseContracts": [
								567
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 544,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 546,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 567,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 567,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 563,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 567,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 568,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1273
						],
						"IERC20": [
							531
						],
						"IERC20Permit": [
							567
						],
						"SafeERC20": [
							943
						]
					},
					"id": 944,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 569,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 570,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 532,
							"src": "140:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 571,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 568,
							"src": "164:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 1274,
							"src": "205:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 573,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 943,
							"linearizedBaseContracts": [
								943
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 576,
									"libraryName": {
										"id": 574,
										"name": "Address",
										"nameLocations": [
											"731:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1273,
										"src": "731:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:5",
									"typeName": {
										"id": 575,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "1013:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "1043:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 591,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "1073:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$531",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 498,
																		"src": "1073:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 594,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1098:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "1102:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 589,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 587,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1023:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:5"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "963:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 578,
														"name": "IERC20",
														"nameLocations": [
															"963:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "963:6:5"
													},
													"referencedDeclaration": 531,
													"src": "963:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "977:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:5"
									},
									"scope": 943,
									"src": "941:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "1445:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "1475:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 617,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "1505:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$531",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 530,
																		"src": "1505:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 620,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "1534:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 621,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1540:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "1544:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 615,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 613,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1455:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:5"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1381:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "1381:6:5"
													},
													"referencedDeclaration": 531,
													"src": "1381:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1395:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1409:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1421:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:5"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:5"
									},
									"scope": 943,
									"src": "1355:203:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "1894:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "2143:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 642,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 647,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$943",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$943",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 645,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 649,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 633,
																					"src": "2190:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 643,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "2159:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$531",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 508,
																				"src": "2159:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 653,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 659,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 662,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "2344:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$531",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 518,
																		"src": "2344:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 665,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "2368:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "2377:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 660,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 658,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "2294:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:5"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1839:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 629,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "1839:6:5"
													},
													"referencedDeclaration": 531,
													"src": "1839:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1870:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:5"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:5"
									},
									"scope": 943,
									"src": "1818:573:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "2668:194:5",
										"statements": [
											{
												"assignments": [
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "2678:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 688,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$943",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$943",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "2732:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 684,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "2701:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "2701:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 694,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "2770:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 697,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 675,
																			"src": "2800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$531",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 518,
																		"src": "2800:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 700,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "2824:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 701,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "2833:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 702,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "2848:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 695,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 693,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "2750:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:5"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2613:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "2613:6:5"
													},
													"referencedDeclaration": 531,
													"src": "2613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2627:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2644:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:5"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:5"
									},
									"scope": 943,
									"src": "2582:280:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "3139:321:5",
										"statements": [
											{
												"id": 751,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:5",
												"statements": [
													{
														"assignments": [
															720
														],
														"declarations": [
															{
																"constant": false,
																"id": 720,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 751,
																"src": "3173:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 719,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 729,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 725,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$943",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$943",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 723,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 727,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "3227:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 721,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "3196:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 508,
																"src": "3196:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 731,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 720,
																		"src": "3257:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 732,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 716,
																		"src": "3273:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 730,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 736,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 738,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "3358:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 741,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "3388:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$531",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 518,
																				"src": "3388:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 744,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 714,
																			"src": "3412:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 745,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "3421:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 746,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 716,
																				"src": "3436:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 739,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 737,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "3338:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 750,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3084:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "3084:6:5"
													},
													"referencedDeclaration": 531,
													"src": "3084:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3098:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3115:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:5"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:5"
									},
									"scope": 943,
									"src": "3053:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "3856:333:5",
										"statements": [
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 799,
														"src": "3866:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 764,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 774,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 768,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "3917:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:5",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 518,
																"src": "3917:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:5",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 771,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "3941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "3950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 766,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:5",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:5"
											},
											{
												"condition": {
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 776,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "3996:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$531",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 777,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "4003:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$531",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 775,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "3972:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 798,
												"nodeType": "IfStatement",
												"src": "3967:216:5",
												"trueBody": {
													"id": 797,
													"nodeType": "Block",
													"src": "4018:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 781,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "4052:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 784,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 757,
																						"src": "4082:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$531",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:5",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 518,
																					"src": "4082:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:5",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "4106:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 782,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:5",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 780,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "4032:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 791,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 793,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "4152:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 794,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "4159:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 792,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "4132:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 796,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "3801:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 755,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "3801:6:5"
													},
													"referencedDeclaration": 531,
													"src": "3801:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "3815:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "3832:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:5"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:5"
									},
									"scope": 943,
									"src": "3779:410:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "4556:257:5",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "4566:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 821,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"arguments": [
														{
															"id": 825,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4601:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 823,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$567",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "4588:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 831,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4630:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4637:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4646:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 834,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "4653:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 835,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "4663:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 836,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4666:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 837,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "4669:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 828,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4617:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$567",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 552,
														"src": "4617:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:5"
											},
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "4681:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [
														{
															"id": 844,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4715:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 842,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4702:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$567",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "4702:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 848,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "4739:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 849,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "4753:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:5"
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:5",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4370:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$567",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 803,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 802,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 567,
														"src": "4370:12:5"
													},
													"referencedDeclaration": 567,
													"src": "4370:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$567",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4398:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4421:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4469:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4495:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 813,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4512:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4531:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:5"
									},
									"scope": 943,
									"src": "4341:472:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "5266:572:5",
										"statements": [
											{
												"assignments": [
													867
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "5615:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 866,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 876,
												"initialValue": {
													"arguments": [
														{
															"id": 873,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5669:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 870,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "5649:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 868,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1033,
														"src": "5641:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 878,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "5728:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 884,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "5765:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 885,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 887,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 882,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:5",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:5"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5225:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 859,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "5225:6:5"
													},
													"referencedDeclaration": 531,
													"src": "5225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5239:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 862,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:5"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:5"
									},
									"scope": 943,
									"src": "5196:642:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "6428:505:5",
										"statements": [
											{
												"assignments": [
													906,
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "6724:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 905,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "6738:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [
														{
															"id": 914,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "6785:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 911,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "6773:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 909,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 917,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "6819:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 918,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "6831:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 924,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "6868:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 926,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 925,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 927,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 922,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 930,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 936,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "6919:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 934,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 932,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "6892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$1273_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:5",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 961,
															"src": "6892:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 904,
												"id": 940,
												"nodeType": "Return",
												"src": "6800:126:5"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "6372:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 896,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "6372:6:5"
													},
													"referencedDeclaration": 531,
													"src": "6372:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "6386:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:5"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "6422:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 902,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:5"
									},
									"scope": 943,
									"src": "6339:594:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 944,
							"src": "701:6234:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6821:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1273
						]
					},
					"id": 1274,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 945,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 946,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1273,
							"linearizedBaseContracts": [
								1273
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "1478:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 954,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "1702:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 953,
												"id": 959,
												"nodeType": "Return",
												"src": "1695:30:6"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1432:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1472:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:6"
									},
									"scope": 1273,
									"src": "1412:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "2718:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 972,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1273",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1273",
																				"typeString": "library Address"
																			}
																		],
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 970,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 975,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2761:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:6"
											},
											{
												"assignments": [
													981,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "2813:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 980,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 988,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 982,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2831:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 984,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2853:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 990,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "2882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:6"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2666:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2693:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:6"
									},
									"scope": 1273,
									"src": "2647:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "3790:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1006,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "3829:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "3837:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1005,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1053,
															1097
														],
														"referencedDeclaration": 1097,
														"src": "3807:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1011,
												"nodeType": "Return",
												"src": "3800:79:6"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "3723:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "3739:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:6"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "3776:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:6"
									},
									"scope": 1273,
									"src": "3701:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "4255:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "4294:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "4302:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1029,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "4311:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1025,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1053,
															1097
														],
														"referencedDeclaration": 1097,
														"src": "4272:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1024,
												"id": 1031,
												"nodeType": "Return",
												"src": "4265:59:6"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4163:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1017,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4190:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1019,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:6"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4241:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:6"
									},
									"scope": 1273,
									"src": "4108:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "4806:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1046,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "4845:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "4853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1048,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "4859:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1045,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1053,
															1097
														],
														"referencedDeclaration": 1097,
														"src": "4823:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1044,
												"id": 1051,
												"nodeType": "Return",
												"src": "4816:94:6"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "4724:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "4740:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1037,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "4759:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:6"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "4792:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:6"
									},
									"scope": 1273,
									"src": "4693:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "5344:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1070,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1273",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1273",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1068,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1073,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "5387:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:6"
											},
											{
												"assignments": [
													1079,
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "5446:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1078,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "5460:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1080,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1086,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "5513:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1082,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "5487:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1084,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "5506:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "5562:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "5570:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1092,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "5579:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1093,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "5591:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1089,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "5535:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1095,
												"nodeType": "Return",
												"src": "5528:76:6"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5205:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5229:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1057,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5256:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5279:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5330:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:6"
									},
									"scope": 1273,
									"src": "5165:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "5888:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1108,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "5924:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "5932:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1107,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1114,
															1143
														],
														"referencedDeclaration": 1143,
														"src": "5905:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1112,
												"nodeType": "Return",
												"src": "5898:80:6"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5816:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:6"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5874:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:6"
									},
									"scope": 1273,
									"src": "5788:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "6327:168:6",
										"statements": [
											{
												"assignments": [
													1127,
													1129
												],
												"declarations": [
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "6338:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1126,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "6352:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1128,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1134,
												"initialValue": {
													"arguments": [
														{
															"id": 1132,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "6397:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1130,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "6379:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "6446:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "6454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1138,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "6463:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1139,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "6475:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1135,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "6419:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1141,
												"nodeType": "Return",
												"src": "6412:76:6"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "6206:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "6230:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "6257:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:6"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "6313:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:6"
									},
									"scope": 1273,
									"src": "6169:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "6771:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1154,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "6809:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "6817:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1153,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1160,
															1189
														],
														"referencedDeclaration": 1189,
														"src": "6788:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1152,
												"id": 1158,
												"nodeType": "Return",
												"src": "6781:84:6"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "6704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "6720:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:6"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "6757:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:6"
									},
									"scope": 1273,
									"src": "6674:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "7213:170:6",
										"statements": [
											{
												"assignments": [
													1173,
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "7224:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1172,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "7238:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1174,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1180,
												"initialValue": {
													"arguments": [
														{
															"id": 1178,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "7285:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1176,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "7265:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1182,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "7334:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "7342:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1184,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "7351:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "7363:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1181,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "7307:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1187,
												"nodeType": "Return",
												"src": "7300:76:6"
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "7097:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "7121:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "7148:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "7199:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:6"
									},
									"scope": 1273,
									"src": "7058:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "7865:434:6",
										"statements": [
											{
												"condition": {
													"id": 1203,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1194,
													"src": "7879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "8235:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1221,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "8257:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1222,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "8269:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1220,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "8249:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1224,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:6"
														}
													]
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "7875:418:6",
												"trueBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "7888:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1204,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "7906:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1216,
															"nodeType": "IfStatement",
															"src": "7902:286:6",
															"trueBody": {
																"id": 1215,
																"nodeType": "Block",
																"src": "7930:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1210,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1192,
																							"src": "8132:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1209,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 961,
																						"src": "8121:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1212,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1208,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1214,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1217,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "8208:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1202,
															"id": 1218,
															"nodeType": "Return",
															"src": "8201:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7716:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7740:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7762:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7795:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1197,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:6"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7851:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:6"
									},
									"scope": 1273,
									"src": "7671:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "8680:135:6",
										"statements": [
											{
												"condition": {
													"id": 1240,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1231,
													"src": "8694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "8751:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1245,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "8773:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1246,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "8785:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1244,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "8765:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:6"
														}
													]
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "8690:119:6",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "8703:42:6",
													"statements": [
														{
															"expression": {
																"id": 1241,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "8724:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1239,
															"id": 1242,
															"nodeType": "Return",
															"src": "8717:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "8555:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "8577:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "8610:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:6"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "8666:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:6"
									},
									"scope": 1273,
									"src": "8520:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "8904:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "8980:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1269,
													"nodeType": "Block",
													"src": "9310:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1266,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "9331:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1265,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1268,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:6"
														}
													]
												},
												"id": 1270,
												"nodeType": "IfStatement",
												"src": "8976:379:6",
												"trueBody": {
													"id": 1264,
													"nodeType": "Block",
													"src": "9003:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:6",
																"nodeType": "YulBlock",
																"src": "9161:133:6",
																"statements": [
																	{
																		"nativeSrc": "9179:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:6"
																			},
																			"nativeSrc": "9202:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:6",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:6",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:6"
																					},
																					"nativeSrc": "9243:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:6"
																			},
																			"nativeSrc": "9236:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:6"
																		},
																		"nativeSrc": "9236:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1254,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1254,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:6",
																	"valueSize": 1
																}
															],
															"id": 1263,
															"nodeType": "InlineAssembly",
															"src": "9152:142:6"
														}
													]
												}
											}
										]
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "8838:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "8863:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:6"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:6"
									},
									"scope": 1273,
									"src": "8821:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1274,
							"src": "194:9169:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1295
						]
					},
					"id": 1296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1275,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1276,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1295,
							"linearizedBaseContracts": [
								1295
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1281,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1280,
												"id": 1283,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1295,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1290,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1292,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1295,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1296,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2426
						],
						"SignedMath": [
							2843
						],
						"Strings": [
							1524
						]
					},
					"id": 1525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 2427,
							"src": "126:25:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 2844,
							"src": "152:31:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1300,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1524,
							"linearizedBaseContracts": [
								1524
							],
							"name": "Strings",
							"nameLocation": "228:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1303,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "242:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1301,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1302,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1306,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "302:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1304,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1305,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "518:625:8",
										"statements": [
											{
												"id": 1352,
												"nodeType": "UncheckedBlock",
												"src": "528:609:8",
												"statements": [
													{
														"assignments": [
															1315
														],
														"declarations": [
															{
																"constant": false,
																"id": 1315,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1352,
																"src": "552:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1314,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1322,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1318,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "580:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1316,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "569:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2426_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2263,
																	"src": "569:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:8"
													},
													{
														"assignments": [
															1324
														],
														"declarations": [
															{
																"constant": false,
																"id": 1324,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1352,
																"src": "604:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1323,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1329,
														"initialValue": {
															"arguments": [
																{
																	"id": 1327,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "638:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1325,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:8"
													},
													{
														"assignments": [
															1331
														],
														"declarations": [
															{
																"constant": false,
																"id": 1331,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1352,
																"src": "659:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1332,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:8"
													},
													{
														"AST": {
															"nativeSrc": "740:67:8",
															"nodeType": "YulBlock",
															"src": "740:67:8",
															"statements": [
																{
																	"nativeSrc": "758:35:8",
																	"nodeType": "YulAssignment",
																	"src": "758:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:8",
																						"nodeType": "YulLiteral",
																						"src": "781:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:8"
																				},
																				"nativeSrc": "777:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:8"
																		},
																		"nativeSrc": "765:28:8",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1324,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1331,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:8",
																"valueSize": 1
															}
														],
														"id": 1333,
														"nodeType": "InlineAssembly",
														"src": "731:76:8"
													},
													{
														"body": {
															"id": 1348,
															"nodeType": "Block",
															"src": "833:267:8",
															"statements": [
																{
																	"expression": {
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:8",
																		"subExpression": {
																			"id": 1335,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "851:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1337,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:8"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:8",
																		"nodeType": "YulBlock",
																		"src": "934:84:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:8",
																											"nodeType": "YulLiteral",
																											"src": "985:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:8"
																									},
																									"nativeSrc": "974:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:8"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:8",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:8"
																							},
																							"nativeSrc": "969:30:8",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:8"
																					},
																					"nativeSrc": "956:44:8",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:8"
																				},
																				"nativeSrc": "956:44:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1303,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1331,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1309,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1338,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:8"
																},
																{
																	"expression": {
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "1035:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1342,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1343,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "1068:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1347,
																	"nodeType": "IfStatement",
																	"src": "1064:21:8",
																	"trueBody": {
																		"id": 1346,
																		"nodeType": "Break",
																		"src": "1080:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1349,
														"nodeType": "WhileStatement",
														"src": "820:280:8"
													},
													{
														"expression": {
															"id": 1350,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "1120:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1313,
														"id": 1351,
														"nodeType": "Return",
														"src": "1113:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "465:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:8"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "503:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:8"
									},
									"scope": 1524,
									"src": "447:696:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "1313:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1366,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1357,
																			"src": "1354:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:8",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1375,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1357,
																					"src": "1400:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1373,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2843,
																					"src": "1385:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2843_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:8",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2842,
																				"src": "1385:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1372,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1354,
																			1382
																		],
																		"referencedDeclaration": 1354,
																		"src": "1376:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1364,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:8",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1362,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1361,
												"id": 1380,
												"nodeType": "Return",
												"src": "1323:86:8"
											}
										]
									},
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:8",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "1261:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1356,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:8"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "1298:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:8"
									},
									"scope": 1524,
									"src": "1243:173:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "1595:100:8",
										"statements": [
											{
												"id": 1400,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "1648:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1394,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "1667:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1392,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2426,
																				"src": "1655:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2426_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2386,
																			"src": "1655:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1390,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1402,
																	1478,
																	1498
																],
																"referencedDeclaration": 1478,
																"src": "1636:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1389,
														"id": 1399,
														"nodeType": "Return",
														"src": "1629:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1542:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:8"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1580:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:8"
									},
									"scope": 1524,
									"src": "1521:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "1908:347:8",
										"statements": [
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "1918:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1412,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1417,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "1954:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1414,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:8"
											},
											{
												"expression": {
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1423,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "1975:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1425,
														"indexExpression": {
															"hexValue": "30",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:8"
											},
											{
												"expression": {
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1429,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2000:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1431,
														"indexExpression": {
															"hexValue": "31",
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:8"
											},
											{
												"body": {
													"id": 1463,
													"nodeType": "Block",
													"src": "2070:83:8",
													"statements": [
														{
															"expression": {
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1449,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "2084:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1451,
																	"indexExpression": {
																		"id": 1450,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "2091:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1452,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "2096:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1456,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "2105:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1458,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:8"
														},
														{
															"expression": {
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1459,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "2131:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1462,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1443,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "2058:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1464,
												"initializationExpression": {
													"assignments": [
														1436
													],
													"declarations": [
														{
															"constant": false,
															"id": 1436,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1464,
															"src": "2030:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1435,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1442,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1438,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "2046:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:8",
														"subExpression": {
															"id": 1446,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "2067:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1466,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "2170:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1474,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2241:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1472,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1476,
												"nodeType": "Return",
												"src": "2227:21:8"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1839:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1854:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:8"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1893:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:8"
									},
									"scope": 1524,
									"src": "1818:437:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "2480:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1491,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1481,
																			"src": "2525:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1489,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1487,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1494,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "2533:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1486,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1402,
															1478,
															1498
														],
														"referencedDeclaration": 1478,
														"src": "2497:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1485,
												"id": 1496,
												"nodeType": "Return",
												"src": "2490:59:8"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "2428:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:8"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "2465:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:8"
									},
									"scope": 1524,
									"src": "2407:149:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "2711:66:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1511,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "2744:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1509,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1508,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1517,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "2767:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1515,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1514,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1521,
												"nodeType": "Return",
												"src": "2721:49:8"
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:8",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2648:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2665:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:8"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2705:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:8"
									},
									"scope": 1524,
									"src": "2633:144:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1525,
							"src": "220:2559:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1548
						],
						"IERC165": [
							1560
						]
					},
					"id": 1549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1549,
							"sourceUnit": 1561,
							"src": "124:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1529,
										"name": "IERC165",
										"nameLocations": [
											"754:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1560,
										"src": "754:7:9"
									},
									"id": 1530,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1528,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1548,
							"linearizedBaseContracts": [
								1548,
								1560
							],
							"name": "ERC165",
							"nameLocation": "744:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1559
									],
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "920:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1539,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "937:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1541,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "957:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1560_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1560_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1540,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1560",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1545,
												"nodeType": "Return",
												"src": "930:47:9"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1535,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:9"
									},
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "856:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:9"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "914:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:9"
									},
									"scope": 1548,
									"src": "829:155:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1549,
							"src": "726:260:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1560
						]
					},
					"id": 1561,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1550,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1551,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1560,
							"linearizedBaseContracts": [
								1560
							],
							"name": "IERC165",
							"nameLocation": "415:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "801:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1553,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:10"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "844:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:10"
									},
									"scope": 1560,
									"src": "774:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1561,
							"src": "405:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2426
						]
					},
					"id": 2427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1562,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1563,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2426,
							"linearizedBaseContracts": [
								2426
							],
							"name": "Math",
							"nameLocation": "210:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1567,
									"members": [
										{
											"id": 1564,
											"name": "Down",
											"nameLocation": "245:4:11",
											"nodeType": "EnumValue",
											"src": "245:4:11"
										},
										{
											"id": 1565,
											"name": "Up",
											"nameLocation": "287:2:11",
											"nodeType": "EnumValue",
											"src": "287:2:11"
										},
										{
											"id": 1566,
											"name": "Zero",
											"nameLocation": "318:4:11",
											"nodeType": "EnumValue",
											"src": "318:4:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:11",
									"nodeType": "EnumDefinition",
									"src": "221:122:11"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "480:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1577,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "497:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1578,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "501:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1581,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "509:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:11",
													"trueExpression": {
														"id": 1580,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "505:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1583,
												"nodeType": "Return",
												"src": "490:20:11"
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "426:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "437:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:11"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "471:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:11"
									},
									"scope": 2426,
									"src": "413:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "655:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1595,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "672:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1596,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "676:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1599,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "684:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:11",
													"trueExpression": {
														"id": 1598,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "680:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1594,
												"id": 1601,
												"nodeType": "Return",
												"src": "665:20:11"
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "646:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:11"
									},
									"scope": 2426,
									"src": "588:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "876:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1613,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1614,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "935:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1616,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1617,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1606,
																		"src": "941:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1618,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "945:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1620,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1612,
												"id": 1624,
												"nodeType": "Return",
												"src": "923:28:11"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "822:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "833:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:11"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "867:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:11"
									},
									"scope": 2426,
									"src": "805:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "1228:123:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1636,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "1316:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1640,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1629,
																			"src": "1330:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "1339:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1635,
												"id": 1649,
												"nodeType": "Return",
												"src": "1309:35:11"
											}
										]
									},
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1174:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1185:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:11"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1219:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:11"
									},
									"scope": 2426,
									"src": "1157:194:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "1765:4115:11",
										"statements": [
											{
												"id": 1772,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:11",
												"statements": [
													{
														"assignments": [
															1664
														],
														"declarations": [
															{
																"constant": false,
																"id": 1664,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "2096:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1663,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1665,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:11"
													},
													{
														"assignments": [
															1667
														],
														"declarations": [
															{
																"constant": false,
																"id": 1667,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "2168:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1666,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1668,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:11"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:11",
															"nodeType": "YulBlock",
															"src": "2248:157:11",
															"statements": [
																{
																	"nativeSrc": "2266:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:11"
																				},
																				"nativeSrc": "2289:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:11"
																		},
																		"nativeSrc": "2276:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:11",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:11",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:11"
																		},
																		"nativeSrc": "2322:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:11",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:11"
																				},
																				"nativeSrc": "2361:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:11"
																				},
																				"nativeSrc": "2377:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:11"
																		},
																		"nativeSrc": "2357:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1654,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1654,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1656,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1656,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:11",
																"valueSize": 1
															}
														],
														"id": 1669,
														"nodeType": "InlineAssembly",
														"src": "2239:166:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1670,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "2486:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1678,
														"nodeType": "IfStatement",
														"src": "2482:368:11",
														"trueBody": {
															"id": 1677,
															"nodeType": "Block",
															"src": "2498:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1673,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1664,
																			"src": "2816:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1674,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "2824:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1662,
																	"id": 1676,
																	"nodeType": "Return",
																	"src": "2809:26:11"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1680,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "2960:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1681,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "2974:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1679,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1685,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:11"
													},
													{
														"assignments": [
															1687
														],
														"declarations": [
															{
																"constant": false,
																"id": 1687,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "3261:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1688,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:11"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:11",
															"nodeType": "YulBlock",
															"src": "3301:291:11",
															"statements": [
																{
																	"nativeSrc": "3370:38:11",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:11"
																		},
																		"nativeSrc": "3383:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:11",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:11"
																				},
																				"nativeSrc": "3510:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:11"
																		},
																		"nativeSrc": "3499:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:11",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:11"
																		},
																		"nativeSrc": "3557:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1658,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1687,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1687,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1687,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1654,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1656,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:11",
																"valueSize": 1
															}
														],
														"id": 1689,
														"nodeType": "InlineAssembly",
														"src": "3292:300:11"
													},
													{
														"assignments": [
															1691
														],
														"declarations": [
															{
																"constant": false,
																"id": 1691,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "3899:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1690,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1699,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1692,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "3914:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:11",
																			"subExpression": {
																				"id": 1693,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1658,
																				"src": "3930:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1697,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:11"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:11",
															"nodeType": "YulBlock",
															"src": "3969:362:11",
															"statements": [
																{
																	"nativeSrc": "4034:37:11",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:11"
																		},
																		"nativeSrc": "4049:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:11",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:11"
																		},
																		"nativeSrc": "4147:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:11",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:11",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:11"
																						},
																						"nativeSrc": "4294:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:11"
																				},
																				"nativeSrc": "4290:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:11"
																		},
																		"nativeSrc": "4286:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1658,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1658,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:11",
																"valueSize": 1
															}
														],
														"id": 1700,
														"nodeType": "InlineAssembly",
														"src": "3960:371:11"
													},
													{
														"expression": {
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1701,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "4397:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1702,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "4406:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1703,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "4414:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1706,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:11"
													},
													{
														"assignments": [
															1708
														],
														"declarations": [
															{
																"constant": false,
																"id": 1708,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "4736:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1707,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1715,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1710,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "4759:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1712,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:11"
													},
													{
														"expression": {
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1716,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "4992:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1718,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5007:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1719,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5021:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1723,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:11"
													},
													{
														"expression": {
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1724,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5061:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1726,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5076:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1727,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5090:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1731,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:11"
													},
													{
														"expression": {
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1732,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5131:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1734,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5146:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1735,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5160:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1739,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:11"
													},
													{
														"expression": {
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1740,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5201:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1742,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5216:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1743,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5230:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1747,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:11"
													},
													{
														"expression": {
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1748,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5271:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1750,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5286:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1751,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5300:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1755,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:11"
													},
													{
														"expression": {
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1756,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5342:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1758,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5357:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1759,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5371:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1763,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:11"
													},
													{
														"expression": {
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1764,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "5812:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1765,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "5821:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1766,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "5829:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1769,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:11"
													},
													{
														"expression": {
															"id": 1770,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "5857:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1662,
														"id": 1771,
														"nodeType": "Return",
														"src": "5850:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1683:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1694:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1705:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:11"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1749:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:11"
									},
									"scope": 2426,
									"src": "1667:4213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "6122:189:11",
										"statements": [
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "6132:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1796,
												"initialValue": {
													"arguments": [
														{
															"id": 1792,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "6156:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1793,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "6159:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1794,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "6162:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1791,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1774,
															1818
														],
														"referencedDeclaration": 1774,
														"src": "6149:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1567",
															"typeString": "enum Math.Rounding"
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1797,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "6188:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1567",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1798,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "6200:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:11",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1565,
															"src": "6200:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1567",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1802,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "6222:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1803,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "6225:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1804,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "6228:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1801,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1814,
												"nodeType": "IfStatement",
												"src": "6184:98:11",
												"trueBody": {
													"id": 1813,
													"nodeType": "Block",
													"src": "6246:36:11",
													"statements": [
														{
															"expression": {
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1809,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "6260:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1812,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1815,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1790,
													"src": "6298:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1816,
												"nodeType": "Return",
												"src": "6291:13:11"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6028:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6039:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6050:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6071:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1783,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1782,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "6071:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "6071:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:11"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6113:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:11"
									},
									"scope": 2426,
									"src": "6012:299:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "6587:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1826,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "6601:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"nodeType": "IfStatement",
												"src": "6597:45:11",
												"trueBody": {
													"id": 1831,
													"nodeType": "Block",
													"src": "6609:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1825,
															"id": 1830,
															"nodeType": "Return",
															"src": "6623:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													1834
												],
												"declarations": [
													{
														"constant": false,
														"id": 1834,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "7321:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1833,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1843,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1837,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "7349:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1836,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2098,
																			2134
																		],
																		"referencedDeclaration": 2098,
																		"src": "7344:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1841,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:11"
											},
											{
												"id": 1928,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:11",
												"statements": [
													{
														"expression": {
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1844,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7782:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1845,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7792:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1846,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7801:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1847,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "7805:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1850,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1854,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:11"
													},
													{
														"expression": {
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1855,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7831:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1856,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7841:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1857,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7850:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1858,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "7854:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1861,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1865,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:11"
													},
													{
														"expression": {
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1866,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7880:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1867,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7890:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1868,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7899:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1869,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "7903:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1872,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1876,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:11"
													},
													{
														"expression": {
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1877,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7929:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1878,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7939:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1879,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7948:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1880,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "7952:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1883,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1887,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:11"
													},
													{
														"expression": {
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1888,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7978:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1889,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7988:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1890,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7997:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1891,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "8001:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1894,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1898,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:11"
													},
													{
														"expression": {
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1899,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "8027:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1900,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "8037:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1903,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1901,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "8046:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1902,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "8050:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1905,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1909,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:11"
													},
													{
														"expression": {
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1910,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "8076:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1911,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "8086:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1912,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "8095:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1913,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "8099:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1916,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1920,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1922,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "8136:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1923,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "8144:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1924,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "8148:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1921,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "8132:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1825,
														"id": 1927,
														"nodeType": "Return",
														"src": "8125:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "6544:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:11"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "6578:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:11"
									},
									"scope": 2426,
									"src": "6530:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "8348:161:11",
										"statements": [
											{
												"id": 1964,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:11",
												"statements": [
													{
														"assignments": [
															1942
														],
														"declarations": [
															{
																"constant": false,
																"id": 1942,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1964,
																"src": "8382:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1941,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1946,
														"initialValue": {
															"arguments": [
																{
																	"id": 1944,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "8404:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1943,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1930,
																	1966
																],
																"referencedDeclaration": 1930,
																"src": "8399:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1947,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "8427:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1567",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1948,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1936,
																					"src": "8437:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1949,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "8449:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1950,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1565,
																					"src": "8449:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1954,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1952,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1942,
																						"src": "8464:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1953,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1942,
																						"src": "8473:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1955,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1933,
																					"src": "8482:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1961,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1940,
														"id": 1963,
														"nodeType": "Return",
														"src": "8420:72:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "8286:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "8297:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1935,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1934,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "8297:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "8297:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:11"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "8339:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:11"
									},
									"scope": 2426,
									"src": "8272:237:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "8694:922:11",
										"statements": [
											{
												"assignments": [
													1975
												],
												"declarations": [
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2097,
														"src": "8704:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1977,
												"initialValue": {
													"hexValue": "30",
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:11"
											},
											{
												"id": 2094,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "8760:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1992,
														"nodeType": "IfStatement",
														"src": "8756:99:11",
														"trueBody": {
															"id": 1991,
															"nodeType": "Block",
															"src": "8778:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1983,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "8796:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1986,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:11"
																},
																{
																	"expression": {
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1987,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "8827:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1990,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1993,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "8872:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2007,
														"nodeType": "IfStatement",
														"src": "8868:96:11",
														"trueBody": {
															"id": 2006,
															"nodeType": "Block",
															"src": "8889:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1998,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "8907:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2001,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:11"
																},
																{
																	"expression": {
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2002,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "8937:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2005,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "8981:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2022,
														"nodeType": "IfStatement",
														"src": "8977:96:11",
														"trueBody": {
															"id": 2021,
															"nodeType": "Block",
															"src": "8998:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2013,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9016:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2016,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:11"
																},
																{
																	"expression": {
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9046:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2020,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2023,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9090:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2037,
														"nodeType": "IfStatement",
														"src": "9086:96:11",
														"trueBody": {
															"id": 2036,
															"nodeType": "Block",
															"src": "9107:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2028,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9125:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2031,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:11"
																},
																{
																	"expression": {
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2032,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9155:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2035,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9199:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2052,
														"nodeType": "IfStatement",
														"src": "9195:93:11",
														"trueBody": {
															"id": 2051,
															"nodeType": "Block",
															"src": "9215:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9233:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2046,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:11"
																},
																{
																	"expression": {
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2047,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9262:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2050,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9305:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2067,
														"nodeType": "IfStatement",
														"src": "9301:93:11",
														"trueBody": {
															"id": 2066,
															"nodeType": "Block",
															"src": "9321:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2058,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9339:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2061,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:11"
																},
																{
																	"expression": {
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2062,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9368:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2065,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2068,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9411:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2082,
														"nodeType": "IfStatement",
														"src": "9407:93:11",
														"trueBody": {
															"id": 2081,
															"nodeType": "Block",
															"src": "9427:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2073,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9445:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2076,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:11"
																},
																{
																	"expression": {
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2077,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9474:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2080,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2083,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9517:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2093,
														"nodeType": "IfStatement",
														"src": "9513:64:11",
														"trueBody": {
															"id": 2092,
															"nodeType": "Block",
															"src": "9533:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2088,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9551:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2091,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2095,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1975,
													"src": "9603:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1973,
												"id": 2096,
												"nodeType": "Return",
												"src": "9596:13:11"
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:11",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "8647:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:11"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "8685:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:11"
									},
									"scope": 2426,
									"src": "8633:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2133,
										"nodeType": "Block",
										"src": "9849:165:11",
										"statements": [
											{
												"id": 2132,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:11",
												"statements": [
													{
														"assignments": [
															2110
														],
														"declarations": [
															{
																"constant": false,
																"id": 2110,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2132,
																"src": "9883:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2109,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2114,
														"initialValue": {
															"arguments": [
																{
																	"id": 2112,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "9905:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2111,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2098,
																	2134
																],
																"referencedDeclaration": 2098,
																"src": "9900:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2115,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "9932:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1567",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2116,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "9942:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2117,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "9954:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2118,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1565,
																					"src": "9954:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2122,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2121,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2110,
																						"src": "9974:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2123,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2101,
																					"src": "9983:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2108,
														"id": 2131,
														"nodeType": "Return",
														"src": "9925:72:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "9783:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "9798:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "9798:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "9798:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:11"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "9840:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:11"
									},
									"scope": 2426,
									"src": "9769:245:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "10201:854:11",
										"statements": [
											{
												"assignments": [
													2143
												],
												"declarations": [
													{
														"constant": false,
														"id": 2143,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "10211:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2142,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2145,
												"initialValue": {
													"hexValue": "30",
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:11"
											},
											{
												"id": 2259,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10267:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2162,
														"nodeType": "IfStatement",
														"src": "10263:103:11",
														"trueBody": {
															"id": 2161,
															"nodeType": "Block",
															"src": "10286:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10304:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2156,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:11"
																},
																{
																	"expression": {
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2157,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10339:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2160,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2163,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10383:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2179,
														"nodeType": "IfStatement",
														"src": "10379:103:11",
														"trueBody": {
															"id": 2178,
															"nodeType": "Block",
															"src": "10402:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2168,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10420:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2173,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:11"
																},
																{
																	"expression": {
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2174,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10455:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2177,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10499:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2196,
														"nodeType": "IfStatement",
														"src": "10495:103:11",
														"trueBody": {
															"id": 2195,
															"nodeType": "Block",
															"src": "10518:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2185,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10536:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2190,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:11"
																},
																{
																	"expression": {
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2191,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10571:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2194,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2197,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10615:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2213,
														"nodeType": "IfStatement",
														"src": "10611:100:11",
														"trueBody": {
															"id": 2212,
															"nodeType": "Block",
															"src": "10633:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2202,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10651:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2207,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:11"
																},
																{
																	"expression": {
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2208,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10685:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2211,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2214,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10728:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2230,
														"nodeType": "IfStatement",
														"src": "10724:100:11",
														"trueBody": {
															"id": 2229,
															"nodeType": "Block",
															"src": "10746:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2219,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10764:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2224,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:11"
																},
																{
																	"expression": {
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2225,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10798:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2228,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2231,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10841:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "10837:100:11",
														"trueBody": {
															"id": 2246,
															"nodeType": "Block",
															"src": "10859:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2236,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10877:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2241,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:11"
																},
																{
																	"expression": {
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2242,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10911:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2245,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2248,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10954:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2258,
														"nodeType": "IfStatement",
														"src": "10950:66:11",
														"trueBody": {
															"id": 2257,
															"nodeType": "Block",
															"src": "10972:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2253,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10990:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2256,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2260,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2143,
													"src": "11042:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2261,
												"nodeType": "Return",
												"src": "11035:13:11"
											}
										]
									},
									"documentation": {
										"id": 2135,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:11",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "10154:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:11"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "10192:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:11"
									},
									"scope": 2426,
									"src": "10139:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "11290:167:11",
										"statements": [
											{
												"id": 2297,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:11",
												"statements": [
													{
														"assignments": [
															2275
														],
														"declarations": [
															{
																"constant": false,
																"id": 2275,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2297,
																"src": "11324:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2274,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2279,
														"initialValue": {
															"arguments": [
																{
																	"id": 2277,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "11347:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2276,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2263,
																	2299
																],
																"referencedDeclaration": 2263,
																"src": "11341:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2280,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "11374:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1567",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2281,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2269,
																					"src": "11384:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2282,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "11396:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1565,
																					"src": "11396:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2287,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2286,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2275,
																						"src": "11417:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2288,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "11426:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2294,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2273,
														"id": 2296,
														"nodeType": "Return",
														"src": "11367:73:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "11224:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "11239:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2267,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "11239:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "11239:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:11"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "11281:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:11"
									},
									"scope": 2426,
									"src": "11209:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "11771:600:11",
										"statements": [
											{
												"assignments": [
													2308
												],
												"declarations": [
													{
														"constant": false,
														"id": 2308,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2385,
														"src": "11781:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2307,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2310,
												"initialValue": {
													"hexValue": "30",
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:11"
											},
											{
												"id": 2382,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "11837:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2325,
														"nodeType": "IfStatement",
														"src": "11833:98:11",
														"trueBody": {
															"id": 2324,
															"nodeType": "Block",
															"src": "11855:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2316,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "11873:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2319,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:11"
																},
																{
																	"expression": {
																		"id": 2322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2320,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11904:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2323,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "11948:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2340,
														"nodeType": "IfStatement",
														"src": "11944:95:11",
														"trueBody": {
															"id": 2339,
															"nodeType": "Block",
															"src": "11965:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "11983:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2334,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:11"
																},
																{
																	"expression": {
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2335,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "12013:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2338,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "12056:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2355,
														"nodeType": "IfStatement",
														"src": "12052:95:11",
														"trueBody": {
															"id": 2354,
															"nodeType": "Block",
															"src": "12073:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2346,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "12091:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2349,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:11"
																},
																{
																	"expression": {
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2350,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "12121:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2353,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2356,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "12164:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2370,
														"nodeType": "IfStatement",
														"src": "12160:95:11",
														"trueBody": {
															"id": 2369,
															"nodeType": "Block",
															"src": "12181:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2361,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "12199:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2364,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:11"
																},
																{
																	"expression": {
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2365,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "12229:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2368,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2371,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "12272:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2381,
														"nodeType": "IfStatement",
														"src": "12268:64:11",
														"trueBody": {
															"id": 2380,
															"nodeType": "Block",
															"src": "12288:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2376,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "12306:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2383,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2308,
													"src": "12358:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2306,
												"id": 2384,
												"nodeType": "Return",
												"src": "12351:13:11"
											}
										]
									},
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:11",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "11724:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:11"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "11762:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:11"
									},
									"scope": 2426,
									"src": "11708:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2424,
										"nodeType": "Block",
										"src": "12608:174:11",
										"statements": [
											{
												"id": 2423,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:11",
												"statements": [
													{
														"assignments": [
															2398
														],
														"declarations": [
															{
																"constant": false,
																"id": 2398,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2423,
																"src": "12642:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2397,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2402,
														"initialValue": {
															"arguments": [
																{
																	"id": 2400,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2389,
																	"src": "12666:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2399,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2386,
																	2425
																],
																"referencedDeclaration": 2386,
																"src": "12659:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2403,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2398,
																"src": "12693:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1567",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2404,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2392,
																					"src": "12703:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2405,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "12715:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2406,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1565,
																					"src": "12715:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2408,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2411,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2409,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2398,
																									"src": "12736:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2410,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2412,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "12751:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2420,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2396,
														"id": 2422,
														"nodeType": "Return",
														"src": "12686:79:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12542:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12557:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2391,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2390,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "12557:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "12557:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:11"
									},
									"returnParameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12599:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:11"
									},
									"scope": 2426,
									"src": "12526:256:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2427,
							"src": "202:12582:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2738
						]
					},
					"id": 2739,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2428,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2429,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:12",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2738,
							"linearizedBaseContracts": [
								2738
							],
							"name": "SafeMath",
							"nameLocation": "490:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "717:140:12",
										"statements": [
											{
												"id": 2459,
												"nodeType": "UncheckedBlock",
												"src": "727:124:12",
												"statements": [
													{
														"assignments": [
															2442
														],
														"declarations": [
															{
																"constant": false,
																"id": 2442,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2459,
																"src": "751:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2441,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2446,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2443,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "763:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2444,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2434,
																"src": "767:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2447,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2442,
																"src": "786:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2448,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "790:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2454,
														"nodeType": "IfStatement",
														"src": "782:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2440,
															"id": 2453,
															"nodeType": "Return",
															"src": "793:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2456,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "838:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2457,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2440,
														"id": 2458,
														"nodeType": "Return",
														"src": "824:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "657:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "668:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:12"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "702:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "708:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:12"
									},
									"scope": 2738,
									"src": "641:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2488,
										"nodeType": "Block",
										"src": "1078:113:12",
										"statements": [
											{
												"id": 2487,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2473,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2466,
																"src": "1116:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2474,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2464,
																"src": "1120:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2480,
														"nodeType": "IfStatement",
														"src": "1112:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2478,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2472,
															"id": 2479,
															"nodeType": "Return",
															"src": "1123:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2482,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2464,
																		"src": "1168:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2483,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2466,
																		"src": "1172:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2485,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2472,
														"id": 2486,
														"nodeType": "Return",
														"src": "1154:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "1018:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "1029:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:12"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "1063:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "1069:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:12"
									},
									"scope": 2738,
									"src": "1002:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2530,
										"nodeType": "Block",
										"src": "1415:417:12",
										"statements": [
											{
												"id": 2529,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2501,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "1683:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2508,
														"nodeType": "IfStatement",
														"src": "1679:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2506,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2500,
															"id": 2507,
															"nodeType": "Return",
															"src": "1691:16:12"
														}
													},
													{
														"assignments": [
															2510
														],
														"declarations": [
															{
																"constant": false,
																"id": 2510,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2529,
																"src": "1721:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2509,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2514,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2511,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "1733:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2512,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2494,
																"src": "1737:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2515,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2510,
																	"src": "1756:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2516,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "1760:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2518,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2494,
																"src": "1765:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2524,
														"nodeType": "IfStatement",
														"src": "1752:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2522,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2500,
															"id": 2523,
															"nodeType": "Return",
															"src": "1768:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2526,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2510,
																	"src": "1813:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2527,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2500,
														"id": 2528,
														"nodeType": "Return",
														"src": "1799:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2490,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1355:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1366:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:12"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1400:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1406:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:12"
									},
									"scope": 2738,
									"src": "1339:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2558,
										"nodeType": "Block",
										"src": "2057:114:12",
										"statements": [
											{
												"id": 2557,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2543,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2536,
																"src": "2095:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "2091:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2548,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2542,
															"id": 2549,
															"nodeType": "Return",
															"src": "2103:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2552,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2534,
																		"src": "2148:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2553,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2536,
																		"src": "2152:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2555,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2542,
														"id": 2556,
														"nodeType": "Return",
														"src": "2134:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2532,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "1997:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2008:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:12"
									},
									"returnParameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2042:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2048:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:12"
									},
									"scope": 2738,
									"src": "1981:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "2406:114:12",
										"statements": [
											{
												"id": 2585,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2571,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2564,
																"src": "2444:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2578,
														"nodeType": "IfStatement",
														"src": "2440:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2576,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2570,
															"id": 2577,
															"nodeType": "Return",
															"src": "2452:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2580,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "2497:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2581,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2564,
																		"src": "2501:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2583,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2570,
														"id": 2584,
														"nodeType": "Return",
														"src": "2483:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2346:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2357:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:12"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2391:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2566,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2397:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:12"
									},
									"scope": 2738,
									"src": "2330:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "2822:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2597,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2590,
														"src": "2839:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2598,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2592,
														"src": "2843:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2596,
												"id": 2600,
												"nodeType": "Return",
												"src": "2832:12:12"
											}
										]
									},
									"documentation": {
										"id": 2588,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:12",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2768:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2779:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:12"
									},
									"returnParameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2813:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:12"
									},
									"scope": 2738,
									"src": "2755:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2616,
										"nodeType": "Block",
										"src": "3189:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2612,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "3206:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2613,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2607,
														"src": "3210:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2611,
												"id": 2615,
												"nodeType": "Return",
												"src": "3199:12:12"
											}
										]
									},
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "3135:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "3146:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:12"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "3180:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:12"
									},
									"scope": 2738,
									"src": "3122:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2631,
										"nodeType": "Block",
										"src": "3532:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2627,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "3549:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2628,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2622,
														"src": "3553:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2626,
												"id": 2630,
												"nodeType": "Return",
												"src": "3542:12:12"
											}
										]
									},
									"documentation": {
										"id": 2618,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:12",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3478:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3489:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:12"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3523:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:12"
									},
									"scope": 2738,
									"src": "3465:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2646,
										"nodeType": "Block",
										"src": "3917:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2642,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2635,
														"src": "3934:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2643,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2637,
														"src": "3938:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2641,
												"id": 2645,
												"nodeType": "Return",
												"src": "3927:12:12"
											}
										]
									},
									"documentation": {
										"id": 2633,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "3863:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "3874:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:12"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "3908:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:12"
									},
									"scope": 2738,
									"src": "3850:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2661,
										"nodeType": "Block",
										"src": "4466:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2657,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2650,
														"src": "4483:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2658,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "4487:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2656,
												"id": 2660,
												"nodeType": "Return",
												"src": "4476:12:12"
											}
										]
									},
									"documentation": {
										"id": 2648,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "4412:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "4423:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:12"
									},
									"returnParameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "4457:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:12"
									},
									"scope": 2738,
									"src": "4399:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "5054:106:12",
										"statements": [
											{
												"id": 2685,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2675,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2667,
																		"src": "5096:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2676,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2665,
																		"src": "5101:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2678,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "5104:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2674,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2680,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2681,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2665,
																"src": "5138:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2682,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2667,
																"src": "5142:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2673,
														"id": 2684,
														"nodeType": "Return",
														"src": "5131:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2663,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "4972:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "4983:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "4994:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:12"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "5045:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:12"
									},
									"scope": 2738,
									"src": "4959:201:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2711,
										"nodeType": "Block",
										"src": "5739:105:12",
										"statements": [
											{
												"id": 2710,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2700,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2692,
																		"src": "5781:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2703,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2694,
																	"src": "5788:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2699,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2705,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2706,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2690,
																"src": "5822:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2707,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2692,
																"src": "5826:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2698,
														"id": 2709,
														"nodeType": "Return",
														"src": "5815:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "5657:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "5668:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "5679:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:12"
									},
									"returnParameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "5730:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:12"
									},
									"scope": 2738,
									"src": "5644:200:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2736,
										"nodeType": "Block",
										"src": "6585:105:12",
										"statements": [
											{
												"id": 2735,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2725,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2717,
																		"src": "6627:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2728,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2719,
																	"src": "6634:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2724,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2730,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2731,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2715,
																"src": "6668:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2732,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2717,
																"src": "6672:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2723,
														"id": 2734,
														"nodeType": "Return",
														"src": "6661:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2713,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "6503:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "6514:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "6525:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:12"
									},
									"returnParameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "6576:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:12"
									},
									"scope": 2738,
									"src": "6490:200:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2739,
							"src": "482:6210:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2843
						]
					},
					"id": 2844,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2740,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2741,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2843,
							"linearizedBaseContracts": [
								2843
							],
							"name": "SignedMath",
							"nameLocation": "223:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2758,
										"nodeType": "Block",
										"src": "375:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2751,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "392:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2752,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "396:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2755,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2746,
														"src": "404:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:13",
													"trueExpression": {
														"id": 2754,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2744,
														"src": "400:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2750,
												"id": 2757,
												"nodeType": "Return",
												"src": "385:20:13"
											}
										]
									},
									"documentation": {
										"id": 2742,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "324:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2743,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "334:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2745,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:13"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "367:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2748,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:13"
									},
									"scope": 2843,
									"src": "311:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2776,
										"nodeType": "Block",
										"src": "554:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2769,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "571:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2770,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2764,
															"src": "575:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2773,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2764,
														"src": "583:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:13",
													"trueExpression": {
														"id": 2772,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2762,
														"src": "579:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2768,
												"id": 2775,
												"nodeType": "Return",
												"src": "564:20:13"
											}
										]
									},
									"documentation": {
										"id": 2760,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "503:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2761,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "513:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2763,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:13"
									},
									"returnParameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "546:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2766,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:13"
									},
									"scope": 2843,
									"src": "490:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "796:162:13",
										"statements": [
											{
												"assignments": [
													2788
												],
												"declarations": [
													{
														"constant": false,
														"id": 2788,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2820,
														"src": "858:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2787,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2801,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2789,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2780,
																	"src": "870:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2790,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "874:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2792,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2793,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2780,
																				"src": "881:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2794,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2782,
																				"src": "885:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2796,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2799,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2802,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2788,
														"src": "910:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2807,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2788,
																						"src": "930:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2805,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2803,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2812,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2780,
																				"src": "944:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2813,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2782,
																				"src": "948:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2815,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2817,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2786,
												"id": 2819,
												"nodeType": "Return",
												"src": "903:48:13"
											}
										]
									},
									"documentation": {
										"id": 2778,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "745:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2779,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "755:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2781,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:13"
									},
									"returnParameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "788:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2784,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:13"
									},
									"scope": 2843,
									"src": "728:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "1102:158:13",
										"statements": [
											{
												"id": 2840,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2831,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "1227:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:13",
																		"subExpression": {
																			"id": 2835,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "1241:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:13",
																	"trueExpression": {
																		"id": 2834,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2824,
																		"src": "1236:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2829,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2828,
														"id": 2839,
														"nodeType": "Return",
														"src": "1212:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "1060:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2823,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:13"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "1093:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:13"
									},
									"scope": 2843,
									"src": "1047:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2844,
							"src": "215:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:13"
				},
				"id": 13
			},
			"crowdsale/crowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							1273
						],
						"Context": [
							1295
						],
						"Crowdsale": [
							3153
						],
						"IERC20": [
							531
						],
						"IERC20Permit": [
							567
						],
						"ReentrancyGuard": [
							453
						],
						"SafeERC20": [
							943
						],
						"SafeMath": [
							2738
						]
					},
					"id": 3154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2845,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2846,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 1296,
							"src": "60:51:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 532,
							"src": "113:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 454,
							"src": "171:62:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2849,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 944,
							"src": "235:65:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 2739,
							"src": "302:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2852,
										"name": "Context",
										"nameLocations": [
											"1102:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1295,
										"src": "1102:7:14"
									},
									"id": 2853,
									"nodeType": "InheritanceSpecifier",
									"src": "1102:7:14"
								},
								{
									"baseName": {
										"id": 2854,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1111:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 453,
										"src": "1111:15:14"
									},
									"id": 2855,
									"nodeType": "InheritanceSpecifier",
									"src": "1111:15:14"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2851,
								"nodeType": "StructuredDocumentation",
								"src": "363:706:14",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 3153,
							"linearizedBaseContracts": [
								3153,
								453,
								1295
							],
							"name": "Crowdsale",
							"nameLocation": "1089:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2858,
									"libraryName": {
										"id": 2856,
										"name": "SafeMath",
										"nameLocations": [
											"1140:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2738,
										"src": "1140:8:14"
									},
									"nodeType": "UsingForDirective",
									"src": "1134:27:14",
									"typeName": {
										"id": 2857,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1153:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2862,
									"libraryName": {
										"id": 2859,
										"name": "SafeERC20",
										"nameLocations": [
											"1173:9:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 943,
										"src": "1173:9:14"
									},
									"nodeType": "UsingForDirective",
									"src": "1167:27:14",
									"typeName": {
										"id": 2861,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2860,
											"name": "IERC20",
											"nameLocations": [
												"1187:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 531,
											"src": "1187:6:14"
										},
										"referencedDeclaration": 531,
										"src": "1187:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$531",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 2865,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1246:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 3153,
									"src": "1231:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$531",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2864,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2863,
											"name": "IERC20",
											"nameLocations": [
												"1231:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 531,
											"src": "1231:6:14"
										},
										"referencedDeclaration": 531,
										"src": "1231:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$531",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2867,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1327:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 3153,
									"src": "1303:31:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2866,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1303:15:14",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2869,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1647:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 3153,
									"src": "1631:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2868,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2871,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1706:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 3153,
									"src": "1690:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2870,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "1725:241:14",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 2882,
									"name": "TokensPurchased",
									"nameLocation": "1978:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "2010:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1994:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2037:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "2021:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2878,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2058:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "2050:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2880,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2073:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "2065:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:87:14"
									},
									"src": "1972:109:14"
								},
								{
									"body": {
										"id": 2935,
										"nodeType": "Block",
										"src": "2616:318:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2894,
																"name": "inRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2885,
																"src": "2635:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2644:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2635:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 2893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2627:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2899,
												"nodeType": "ExpressionStatement",
												"src": "2627:43:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2901,
																"name": "inWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "2689:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2709:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2701:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2902,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2701:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2701:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2689:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2713:39:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 2900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2681:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:72:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2909,
												"nodeType": "ExpressionStatement",
												"src": "2681:72:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2913,
																		"name": "inToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2890,
																		"src": "2780:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2772:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2911,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2772:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2772:16:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2800:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2792:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2915,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2792:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2792:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2772:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 2910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2764:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:79:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2922,
												"nodeType": "ExpressionStatement",
												"src": "2764:79:14"
											},
											{
												"expression": {
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2923,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2869,
														"src": "2856:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2924,
														"name": "inRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2885,
														"src": "2864:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2926,
												"nodeType": "ExpressionStatement",
												"src": "2856:14:14"
											},
											{
												"expression": {
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2927,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "2881:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2928,
														"name": "inWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2887,
														"src": "2891:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2881:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2930,
												"nodeType": "ExpressionStatement",
												"src": "2881:18:14"
											},
											{
												"expression": {
													"id": 2933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2931,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2865,
														"src": "2910:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$531",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2932,
														"name": "inToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2890,
														"src": "2919:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$531",
															"typeString": "contract IERC20"
														}
													},
													"src": "2910:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"id": 2934,
												"nodeType": "ExpressionStatement",
												"src": "2910:16:14"
											}
										]
									},
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "2089:450:14",
										"text": " @param inRate Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param inWallet Address where collected funds will be forwarded to\n @param inToken Address of the token being sold"
									},
									"id": 2936,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "2566:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "2558:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "2590:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "2574:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "2607:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "2600:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2888,
														"name": "IERC20",
														"nameLocations": [
															"2600:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "2600:6:14"
													},
													"referencedDeclaration": 531,
													"src": "2600:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:58:14"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:14"
									},
									"scope": 3153,
									"src": "2545:389:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "3259:42:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2941,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "3280:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3280:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2940,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3050,
														"src": "3270:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2944,
												"nodeType": "ExpressionStatement",
												"src": "3270:23:14"
											}
										]
									},
									"documentation": {
										"id": 2937,
										"nodeType": "StructuredDocumentation",
										"src": "2942:283:14",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 2946,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:2:14"
									},
									"returnParameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:14"
									},
									"scope": 3153,
									"src": "3231:70:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "3340:42:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2950,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "3361:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3361:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2949,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3050,
														"src": "3351:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2953,
												"nodeType": "ExpressionStatement",
												"src": "3351:23:14"
											}
										]
									},
									"id": 2955,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:2:14"
									},
									"returnParameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:0:14"
									},
									"scope": 3153,
									"src": "3313:69:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "3492:32:14",
										"statements": [
											{
												"expression": {
													"id": 2962,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2865,
													"src": "3510:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 2961,
												"id": 2963,
												"nodeType": "Return",
												"src": "3503:13:14"
											}
										]
									},
									"documentation": {
										"id": 2956,
										"nodeType": "StructuredDocumentation",
										"src": "3390:50:14",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 2965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3455:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:2:14"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "3484:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2959,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2958,
														"name": "IERC20",
														"nameLocations": [
															"3484:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "3484:6:14"
													},
													"referencedDeclaration": 531,
													"src": "3484:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:8:14"
									},
									"scope": 3153,
									"src": "3446:78:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2973,
										"nodeType": "Block",
										"src": "3661:33:14",
										"statements": [
											{
												"expression": {
													"id": 2971,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2867,
													"src": "3679:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 2970,
												"id": 2972,
												"nodeType": "Return",
												"src": "3672:14:14"
											}
										]
									},
									"documentation": {
										"id": 2966,
										"nodeType": "StructuredDocumentation",
										"src": "3532:67:14",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 2974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3614:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3620:2:14"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "3644:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3644:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3643:17:14"
									},
									"scope": 3153,
									"src": "3605:89:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2982,
										"nodeType": "Block",
										"src": "3838:31:14",
										"statements": [
											{
												"expression": {
													"id": 2980,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2869,
													"src": "3856:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2979,
												"id": 2981,
												"nodeType": "Return",
												"src": "3849:12:14"
											}
										]
									},
									"documentation": {
										"id": 2975,
										"nodeType": "StructuredDocumentation",
										"src": "3702:76:14",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 2983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3793:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3797:2:14"
									},
									"returnParameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "3829:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:9:14"
									},
									"scope": 3153,
									"src": "3784:85:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2991,
										"nodeType": "Block",
										"src": "3988:36:14",
										"statements": [
											{
												"expression": {
													"id": 2989,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2871,
													"src": "4006:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2988,
												"id": 2990,
												"nodeType": "Return",
												"src": "3999:17:14"
											}
										]
									},
									"documentation": {
										"id": 2984,
										"nodeType": "StructuredDocumentation",
										"src": "3877:54:14",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 2992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "3946:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:2:14"
									},
									"returnParameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "3979:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:9:14"
									},
									"scope": 3153,
									"src": "3937:87:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3049,
										"nodeType": "Block",
										"src": "4357:554:14",
										"statements": [
											{
												"assignments": [
													3001
												],
												"declarations": [
													{
														"constant": false,
														"id": 3001,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4376:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 3049,
														"src": "4368:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4368:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3004,
												"initialValue": {
													"expression": {
														"id": 3002,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4388:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4392:5:14",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4388:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4368:29:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3006,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4429:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3007,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4442:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3005,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3078,
														"src": "4408:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4408:44:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3009,
												"nodeType": "ExpressionStatement",
												"src": "4408:44:14"
											},
											{
												"assignments": [
													3011
												],
												"declarations": [
													{
														"constant": false,
														"id": 3011,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4522:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3049,
														"src": "4514:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3010,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4514:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3015,
												"initialValue": {
													"arguments": [
														{
															"id": 3013,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4547:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3012,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "4531:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4514:43:14"
											},
											{
												"expression": {
													"id": 3021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3016,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "4595:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3019,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3001,
																"src": "4623:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3017,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "4608:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4619:3:14",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2602,
															"src": "4608:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4595:38:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3022,
												"nodeType": "ExpressionStatement",
												"src": "4595:38:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3024,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4663:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3025,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3011,
															"src": "4676:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3023,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3117,
														"src": "4646:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3027,
												"nodeType": "ExpressionStatement",
												"src": "4646:37:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3029,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "4715:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4715:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3031,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4729:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3032,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4742:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3033,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3011,
															"src": "4753:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3028,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2882,
														"src": "4699:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:61:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3035,
												"nodeType": "EmitStatement",
												"src": "4694:66:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3037,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4796:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3038,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4809:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3036,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3126,
														"src": "4773:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4773:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3040,
												"nodeType": "ExpressionStatement",
												"src": "4773:46:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3041,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3152,
														"src": "4832:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:15:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3043,
												"nodeType": "ExpressionStatement",
												"src": "4832:15:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3045,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4880:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3046,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4893:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3044,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3087,
														"src": "4858:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 3047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4858:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3048,
												"nodeType": "ExpressionStatement",
												"src": "4858:45:14"
											}
										]
									},
									"documentation": {
										"id": 2993,
										"nodeType": "StructuredDocumentation",
										"src": "4032:251:14",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 3050,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2997,
												"name": "nonReentrant",
												"nameLocations": [
													"4336:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 418,
												"src": "4336:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4336:12:14"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4298:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4316:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3050,
												"src": "4308:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:21:14"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4357:0:14"
									},
									"scope": 3153,
									"src": "4289:622:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3077,
										"nodeType": "Block",
										"src": "5556:296:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3059,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3053,
																"src": "5575:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5598:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5590:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3060,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5590:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5575:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 3065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5602:44:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 3058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5567:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:80:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3067,
												"nodeType": "ExpressionStatement",
												"src": "5567:80:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3069,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3055,
																"src": "5666:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5679:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5666:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5682:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 3068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5658:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5658:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3074,
												"nodeType": "ExpressionStatement",
												"src": "5658:52:14"
											},
											{
												"expression": {
													"id": 3075,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5721:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$3153",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 3076,
												"nodeType": "ExpressionStatement",
												"src": "5721:4:14"
											}
										]
									},
									"documentation": {
										"id": 3051,
										"nodeType": "StructuredDocumentation",
										"src": "4919:539:14",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 3078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5473:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5502:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3078,
												"src": "5494:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5494:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5523:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3078,
												"src": "5515:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5493:40:14"
									},
									"returnParameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5556:0:14"
									},
									"scope": 3153,
									"src": "5464:388:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3086,
										"nodeType": "Block",
										"src": "6248:66:14",
										"statements": []
									},
									"documentation": {
										"id": 3079,
										"nodeType": "StructuredDocumentation",
										"src": "5860:289:14",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 3087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6164:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6194:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3087,
												"src": "6186:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6215:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3087,
												"src": "6207:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:40:14"
									},
									"returnParameters": {
										"id": 3085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6248:0:14"
									},
									"scope": 3153,
									"src": "6155:159:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3102,
										"nodeType": "Block",
										"src": "6685:64:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3098,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3090,
															"src": "6716:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3099,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3092,
															"src": "6729:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3095,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "6696:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														"id": 3097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6703:12:14",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 600,
														"src": "6696:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$531_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3101,
												"nodeType": "ExpressionStatement",
												"src": "6696:45:14"
											}
										]
									},
									"documentation": {
										"id": 3088,
										"nodeType": "StructuredDocumentation",
										"src": "6322:274:14",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 3103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6611:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3090,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6634:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3103,
												"src": "6626:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6626:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6655:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3103,
												"src": "6647:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6625:42:14"
									},
									"returnParameters": {
										"id": 3094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6685:0:14"
									},
									"scope": 3153,
									"src": "6602:147:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3116,
										"nodeType": "Block",
										"src": "7108:59:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3112,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3106,
															"src": "7134:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3113,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3108,
															"src": "7147:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3111,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3103,
														"src": "7119:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3115,
												"nodeType": "ExpressionStatement",
												"src": "7119:40:14"
											}
										]
									},
									"documentation": {
										"id": 3104,
										"nodeType": "StructuredDocumentation",
										"src": "6757:260:14",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 3117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "7032:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7057:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "7049:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7078:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "7070:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7070:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7048:42:14"
									},
									"returnParameters": {
										"id": 3110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7108:0:14"
									},
									"scope": 3153,
									"src": "7023:144:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3125,
										"nodeType": "Block",
										"src": "7534:66:14",
										"statements": []
									},
									"documentation": {
										"id": 3118,
										"nodeType": "StructuredDocumentation",
										"src": "7175:264:14",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 3126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7454:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7485:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "7477:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7506:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "7498:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:40:14"
									},
									"returnParameters": {
										"id": 3124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:14"
									},
									"scope": 3153,
									"src": "7445:155:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3139,
										"nodeType": "Block",
										"src": "7940:46:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3136,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2869,
															"src": "7972:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3134,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3129,
															"src": "7958:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7968:3:14",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2632,
														"src": "7958:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7958:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3133,
												"id": 3138,
												"nodeType": "Return",
												"src": "7951:27:14"
											}
										]
									},
									"documentation": {
										"id": 3127,
										"nodeType": "StructuredDocumentation",
										"src": "7608:242:14",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 3140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7865:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7889:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "7881:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7881:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7880:19:14"
									},
									"returnParameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "7931:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7931:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7930:9:14"
									},
									"scope": 3153,
									"src": "7856:130:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3151,
										"nodeType": "Block",
										"src": "8120:46:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8148:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8152:5:14",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8148:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3144,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2867,
															"src": "8131:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8139:8:14",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8131:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8131:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3150,
												"nodeType": "ExpressionStatement",
												"src": "8131:27:14"
											}
										]
									},
									"documentation": {
										"id": 3141,
										"nodeType": "StructuredDocumentation",
										"src": "7994:78:14",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 3152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "8087:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8100:2:14"
									},
									"returnParameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8120:0:14"
									},
									"scope": 3153,
									"src": "8078:88:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3154,
							"src": "1071:7098:14",
							"usedErrors": [],
							"usedEvents": [
								2882
							]
						}
					],
					"src": "33:8136:14"
				},
				"id": 14
			},
			"crowdsale/validation/individuallyCappedCrowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/validation/individuallyCappedCrowdsale.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Address": [
							1273
						],
						"Context": [
							1295
						],
						"Crowdsale": [
							3153
						],
						"ERC165": [
							1548
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1560
						],
						"IERC20": [
							531
						],
						"IERC20Permit": [
							567
						],
						"IndividuallyCappedCrowdsale": [
							3294
						],
						"Math": [
							2426
						],
						"ReentrancyGuard": [
							453
						],
						"SafeERC20": [
							943
						],
						"SafeMath": [
							2738
						],
						"SignedMath": [
							2843
						],
						"Strings": [
							1524
						]
					},
					"id": 3295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 3156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3295,
							"sourceUnit": 2739,
							"src": "62:57:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "crowdsale/crowdsale.sol",
							"file": "crowdsale/crowdsale.sol",
							"id": 3157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3295,
							"sourceUnit": 3154,
							"src": "121:33:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 3158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3295,
							"sourceUnit": 316,
							"src": "156:58:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3160,
										"name": "Crowdsale",
										"nameLocations": [
											"353:9:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3153,
										"src": "353:9:15"
									},
									"id": 3161,
									"nodeType": "InheritanceSpecifier",
									"src": "353:9:15"
								},
								{
									"baseName": {
										"id": 3162,
										"name": "AccessControl",
										"nameLocations": [
											"364:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "364:13:15"
									},
									"id": 3163,
									"nodeType": "InheritanceSpecifier",
									"src": "364:13:15"
								}
							],
							"canonicalName": "IndividuallyCappedCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3159,
								"nodeType": "StructuredDocumentation",
								"src": "218:93:15",
								"text": " @title IndividuallyCappedCrowdsale\n @dev Crowdsale with per-beneficiary caps."
							},
							"fullyImplemented": true,
							"id": 3294,
							"linearizedBaseContracts": [
								3294,
								315,
								1548,
								1560,
								388,
								3153,
								453,
								1295
							],
							"name": "IndividuallyCappedCrowdsale",
							"nameLocation": "322:27:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3166,
									"libraryName": {
										"id": 3164,
										"name": "SafeMath",
										"nameLocations": [
											"391:8:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2738,
										"src": "391:8:15"
									},
									"nodeType": "UsingForDirective",
									"src": "385:27:15",
									"typeName": {
										"id": 3165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "404:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 3170,
									"mutability": "mutable",
									"name": "_contributions",
									"nameLocation": "456:14:15",
									"nodeType": "VariableDeclaration",
									"scope": 3294,
									"src": "420:50:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3169,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3167,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "428:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "420:27:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3168,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "439:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3174,
									"mutability": "mutable",
									"name": "_caps",
									"nameLocation": "513:5:15",
									"nodeType": "VariableDeclaration",
									"scope": 3294,
									"src": "477:41:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3173,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3171,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "485:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "477:27:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "496:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3189,
										"nodeType": "Block",
										"src": "675:2:15",
										"statements": []
									},
									"id": 3190,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3184,
													"name": "inRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3176,
													"src": "648:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 3185,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3178,
													"src": "656:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 3186,
													"name": "inToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3181,
													"src": "666:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												}
											],
											"id": 3187,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3183,
												"name": "Crowdsale",
												"nameLocations": [
													"638:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3153,
												"src": "638:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "638:36:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "562:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3190,
												"src": "554:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3178,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "596:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3190,
												"src": "580:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:15:15",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "623:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3190,
												"src": "616:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 3180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3179,
														"name": "IERC20",
														"nameLocations": [
															"616:6:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "616:6:15"
													},
													"referencedDeclaration": 531,
													"src": "616:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:94:15"
									},
									"returnParameters": {
										"id": 3188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:0:15"
									},
									"scope": 3294,
									"src": "531:146:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3207,
										"nodeType": "Block",
										"src": "959:43:15",
										"statements": [
											{
												"expression": {
													"id": 3205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3201,
															"name": "_caps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "970:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3203,
														"indexExpression": {
															"id": 3202,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3193,
															"src": "976:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "970:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3204,
														"name": "cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3195,
														"src": "991:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "970:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3206,
												"nodeType": "ExpressionStatement",
												"src": "970:24:15"
											}
										]
									},
									"documentation": {
										"id": 3191,
										"nodeType": "StructuredDocumentation",
										"src": "683:182:15",
										"text": " @dev Sets a specific beneficiary's maximum contribution.\n @param beneficiary Address to be capped\n @param cap Wei limit for individual contribution"
									},
									"functionSelector": "80ad2cf3",
									"id": 3208,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3198,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "939:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3199,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3197,
												"name": "onlyRole",
												"nameLocations": [
													"930:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "930:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "930:28:15"
										}
									],
									"name": "setCap",
									"nameLocation": "880:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3193,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "895:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3208,
												"src": "887:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3195,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "916:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3208,
												"src": "908:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:34:15"
									},
									"returnParameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:15"
									},
									"scope": 3294,
									"src": "871:131:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3220,
										"nodeType": "Block",
										"src": "1268:44:15",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3216,
														"name": "_caps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3174,
														"src": "1286:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3218,
													"indexExpression": {
														"id": 3217,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3211,
														"src": "1292:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1286:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3215,
												"id": 3219,
												"nodeType": "Return",
												"src": "1279:25:15"
											}
										]
									},
									"documentation": {
										"id": 3209,
										"nodeType": "StructuredDocumentation",
										"src": "1010:185:15",
										"text": " @dev Returns the cap of a specific beneficiary.\n @param beneficiary Address whose cap is to be checked\n @return Current cap for individual beneficiary"
									},
									"functionSelector": "b3aefb75",
									"id": 3221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCap",
									"nameLocation": "1210:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3211,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1225:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3221,
												"src": "1217:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:21:15"
									},
									"returnParameters": {
										"id": 3215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3221,
												"src": "1259:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:9:15"
									},
									"scope": 3294,
									"src": "1201:111:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3233,
										"nodeType": "Block",
										"src": "1590:53:15",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3229,
														"name": "_contributions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3170,
														"src": "1608:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3231,
													"indexExpression": {
														"id": 3230,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "1623:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1608:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3228,
												"id": 3232,
												"nodeType": "Return",
												"src": "1601:34:15"
											}
										]
									},
									"documentation": {
										"id": 3222,
										"nodeType": "StructuredDocumentation",
										"src": "1320:188:15",
										"text": " @dev Returns the amount contributed so far by a specific beneficiary.\n @param beneficiary Address of contributor\n @return Beneficiary contribution so far"
									},
									"functionSelector": "21eff7fc",
									"id": 3234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContribution",
									"nameLocation": "1523:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3224,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1547:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "1539:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1538:21:15"
									},
									"returnParameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3234,
												"src": "1581:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1580:9:15"
									},
									"scope": 3294,
									"src": "1514:129:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3078
									],
									"body": {
										"id": 3264,
										"nodeType": "Block",
										"src": "1953:266:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3246,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3237,
															"src": "1991:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3247,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3239,
															"src": "2004:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3243,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1964:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_IndividuallyCappedCrowdsale_$3294_$",
																"typeString": "type(contract super IndividuallyCappedCrowdsale)"
															}
														},
														"id": 3245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1970:20:15",
														"memberName": "_preValidatePurchase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3078,
														"src": "1964:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 3248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1964:50:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3249,
												"nodeType": "ExpressionStatement",
												"src": "1964:50:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3255,
																		"name": "weiAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3239,
																		"src": "2119:9:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 3251,
																			"name": "_contributions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3170,
																			"src": "2087:14:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 3253,
																		"indexExpression": {
																			"id": 3252,
																			"name": "beneficiary",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3237,
																			"src": "2102:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2087:27:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2115:3:15",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2602,
																	"src": "2087:31:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2087:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 3257,
																	"name": "_caps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3174,
																	"src": "2133:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3259,
																"indexExpression": {
																	"id": 3258,
																	"name": "beneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3237,
																	"src": "2139:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2133:18:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2087:64:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e646976696475616c6c7943617070656443726f776473616c653a2062656e6566696369617279277320636170206578636565646564",
															"id": 3261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2153:57:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff",
																"typeString": "literal_string \"IndividuallyCappedCrowdsale: beneficiary's cap exceeded\""
															},
															"value": "IndividuallyCappedCrowdsale: beneficiary's cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d745a780982d4d6a34964211cd456fcfed21fc8adf57fd2f36cb57cfa66cf2ff",
																"typeString": "literal_string \"IndividuallyCappedCrowdsale: beneficiary's cap exceeded\""
															}
														],
														"id": 3250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2079:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:132:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3263,
												"nodeType": "ExpressionStatement",
												"src": "2079:132:15"
											}
										]
									},
									"documentation": {
										"id": 3235,
										"nodeType": "StructuredDocumentation",
										"src": "1651:203:15",
										"text": " @dev Extend parent behavior requiring purchase to respect the beneficiary's funding cap.\n @param beneficiary Token purchaser\n @param weiAmount Amount of wei contributed"
									},
									"id": 3265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "1869:20:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3241,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1939:8:15"
									},
									"parameters": {
										"id": 3240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3237,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "1898:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3265,
												"src": "1890:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3239,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "1919:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3265,
												"src": "1911:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1889:40:15"
									},
									"returnParameters": {
										"id": 3242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:0:15"
									},
									"scope": 3294,
									"src": "1860:359:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3126
									],
									"body": {
										"id": 3292,
										"nodeType": "Block",
										"src": "2502:154:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3277,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3268,
															"src": "2542:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3278,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3270,
															"src": "2555:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3274,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2513:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_IndividuallyCappedCrowdsale_$3294_$",
																"typeString": "type(contract super IndividuallyCappedCrowdsale)"
															}
														},
														"id": 3276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2519:22:15",
														"memberName": "_updatePurchasingState",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3126,
														"src": "2513:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:52:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3280,
												"nodeType": "ExpressionStatement",
												"src": "2513:52:15"
											},
											{
												"expression": {
													"id": 3290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3281,
															"name": "_contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3170,
															"src": "2576:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3283,
														"indexExpression": {
															"id": 3282,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3268,
															"src": "2591:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2576:27:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3288,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3270,
																"src": "2638:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 3284,
																	"name": "_contributions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3170,
																	"src": "2606:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3286,
																"indexExpression": {
																	"id": 3285,
																	"name": "beneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3268,
																	"src": "2621:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2606:27:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2634:3:15",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2602,
															"src": "2606:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2606:42:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2576:72:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3291,
												"nodeType": "ExpressionStatement",
												"src": "2576:72:15"
											}
										]
									},
									"documentation": {
										"id": 3266,
										"nodeType": "StructuredDocumentation",
										"src": "2227:179:15",
										"text": " @dev Extend parent behavior to update beneficiary contributions.\n @param beneficiary Token purchaser\n @param weiAmount Amount of wei contributed"
									},
									"id": 3293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "2421:22:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2493:8:15"
									},
									"parameters": {
										"id": 3271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3268,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2452:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3293,
												"src": "2444:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3270,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "2473:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3293,
												"src": "2465:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2443:40:15"
									},
									"returnParameters": {
										"id": 3273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2502:0:15"
									},
									"scope": 3294,
									"src": "2412:244:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3295,
							"src": "313:2346:15",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345,
								2882
							]
						}
					],
					"src": "33:2626:15"
				},
				"id": 15
			}
		}
	}
}