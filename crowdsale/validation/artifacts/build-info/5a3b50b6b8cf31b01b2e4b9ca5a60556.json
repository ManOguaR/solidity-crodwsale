{
	"id": "5a3b50b6b8cf31b01b2e4b9ca5a60556",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"crowdsale/validation/whitelistCrowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"crowdsale/crowdsale.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n\r\n/**\r\n * @title WhitelistCrowdsale\r\n * @dev Crowdsale in which only whitelisted users can contribute.\r\n */\r\ncontract WhitelistCrowdsale is Crowdsale, AccessControl {\r\n    bytes32 public constant WHITELISTED_ROLE = keccak256(\"WHITELISTED_ROLE\");\r\n    bytes32 public constant WHITELIST_ADMIN_ROLE = keccak256(\"WHITELIST_ADMIN_ROLE\");\r\n\r\n    constructor (uint256 inRate, address payable inWallet, IERC20 inToken)\r\n        Crowdsale(inRate, inWallet, inToken)\r\n    {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, inWallet);\r\n    }\r\n    \r\n    function addToWhitelist(address candidate) public onlyRole(WHITELIST_ADMIN_ROLE)\r\n    {\r\n        _grantRole(WHITELISTED_ROLE, candidate);\r\n    }\r\n\r\n    function addToWhitelist(address[] memory addresses) public onlyRole(WHITELIST_ADMIN_ROLE) {\r\n        for (uint i = 0; i < addresses.length; i++) {\r\n            // Perform some operation on each element of the array\r\n            _grantRole(WHITELISTED_ROLE, addresses[i]);\r\n        }\r\n    }\r\n\r\n    function removeFromWhitelist(address candidate) public onlyRole(WHITELIST_ADMIN_ROLE)\r\n    {\r\n        _revokeRole(WHITELISTED_ROLE, candidate);\r\n    }\r\n    \r\n    function removeFromWhitelist(address[] memory addresses) public onlyRole(WHITELIST_ADMIN_ROLE) {\r\n        for (uint i = 0; i < addresses.length; i++) {\r\n            // Perform some operation on each element of the array\r\n            _revokeRole(WHITELISTED_ROLE, addresses[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Extend parent behavior requiring beneficiary to be whitelisted. Note that no\r\n     * restriction is imposed on the account sending the transaction.\r\n     * @param _beneficiary Token beneficiary\r\n     * @param _weiAmount Amount of wei contributed\r\n     */\r\n    function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal override view {\r\n        require(hasRole(WHITELISTED_ROLE, _beneficiary), \"WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role\");\r\n        super._preValidatePurchase(_beneficiary, _weiAmount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"crowdsale/crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Crowdsale\r\n * @dev Crowdsale is a base contract for managing a token crowdsale,\r\n * allowing investors to purchase tokens with ether. This contract implements\r\n * such functionality in its most fundamental form and can be extended to provide additional\r\n * functionality and/or custom behavior.\r\n * The external interface represents the basic interface for purchasing tokens, and conforms\r\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\r\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\r\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\r\n * behavior.\r\n */\r\nabstract contract Crowdsale is Context, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // The token being sold\r\n    IERC20 private _token;\r\n\r\n    // Address where funds are collected\r\n    address payable private _wallet;\r\n\r\n    // How many token units a buyer gets per wei.\r\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\r\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\r\n    // 1 wei will give you 1 unit, or 0.001 TOK.\r\n    uint256 private _rate;\r\n\r\n    // Amount of wei raised\r\n    uint256 private _weiRaised;\r\n\r\n    /**\r\n     * Event for token purchase logging\r\n     * @param purchaser who paid for the tokens\r\n     * @param beneficiary who got the tokens\r\n     * @param value weis paid for purchase\r\n     * @param amount amount of tokens purchased\r\n     */\r\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\r\n\r\n    /**\r\n     * @param inRate Number of token units a buyer gets per wei\r\n     * @dev The rate is the conversion between wei and the smallest and indivisible\r\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\r\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\r\n     * @param inWallet Address where collected funds will be forwarded to\r\n     * @param inToken Address of the token being sold\r\n     */\r\n    constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {\r\n        require(inRate > 0, \"Crowdsale: rate is 0\");\r\n        require(inWallet != address(0), \"Crowdsale: wallet is the zero address\");\r\n        require(address(inToken) != address(0), \"Crowdsale: token is the zero address\");\r\n\r\n        _rate = inRate;\r\n        _wallet = inWallet;\r\n        _token = inToken;\r\n    }\r\n\r\n    /**\r\n     * @dev fallback function ***DO NOT OVERRIDE***\r\n     * Note that other contracts will transfer funds with a base gas stipend\r\n     * of 2300, which is not enough to call buyTokens. Consider calling\r\n     * buyTokens directly when purchasing tokens from a contract.\r\n     */\r\n    fallback() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n    \r\n    receive() external payable {\r\n        buyTokens(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @return the token being sold.\r\n     */\r\n    function token() public view returns (IERC20) {\r\n        return _token;\r\n    }\r\n\r\n    /**\r\n     * @return the address where funds are collected.\r\n     */\r\n    function wallet() public view returns (address payable) {\r\n        return _wallet;\r\n    }\r\n\r\n    /**\r\n     * @return the number of token units a buyer gets per wei.\r\n     */\r\n    function rate() public virtual view returns (uint256) {\r\n        return _rate;\r\n    }\r\n\r\n    /**\r\n     * @return the amount of wei raised.\r\n     */\r\n    function weiRaised() public view returns (uint256) {\r\n        return _weiRaised;\r\n    }\r\n\r\n    /**\r\n     * @dev low level token purchase ***DO NOT OVERRIDE***\r\n     * This function has a non-reentrancy guard, so it shouldn't be called by\r\n     * another `nonReentrant` function.\r\n     * @param beneficiary Recipient of the token purchase\r\n     */\r\n    function buyTokens(address beneficiary) public nonReentrant payable {\r\n        uint256 weiAmount = msg.value;\r\n        _preValidatePurchase(beneficiary, weiAmount);\r\n\r\n        // calculate token amount to be created\r\n        uint256 tokens = _getTokenAmount(weiAmount);\r\n\r\n        // update state\r\n        _weiRaised = _weiRaised.add(weiAmount);\r\n\r\n        _processPurchase(beneficiary, tokens);\r\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\r\n\r\n        _updatePurchasingState(beneficiary, weiAmount);\r\n\r\n        _forwardFunds();\r\n        _postValidatePurchase(beneficiary, weiAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\r\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\r\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\r\n     *     super._preValidatePurchase(beneficiary, weiAmount);\r\n     *     require(weiRaised().add(weiAmount) <= cap);\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\r\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    }\r\n\r\n    /**\r\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\r\n     * conditions are not met.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\r\n     * its tokens.\r\n     * @param beneficiary Address performing the token purchase\r\n     * @param tokenAmount Number of tokens to be emitted\r\n     */\r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _token.safeTransfer(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\r\n     * tokens.\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param tokenAmount Number of tokens to be purchased\r\n     */\r\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {\r\n        _deliverTokens(beneficiary, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\r\n     * etc.)\r\n     * @param beneficiary Address receiving the tokens\r\n     * @param weiAmount Value in wei involved in the purchase\r\n     */\r\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    /**\r\n     * @dev Override to extend the way in which ether is converted to tokens.\r\n     * @param weiAmount Value in wei to be converted into tokens\r\n     * @return Number of tokens that can be purchased with the specified _weiAmount\r\n     */\r\n    function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {\r\n        return weiAmount.mul(_rate);\r\n    }\r\n\r\n    /**\r\n     * @dev Determines how ETH is stored/forwarded on purchases.\r\n     */\r\n    function _forwardFunds() internal virtual {\r\n        _wallet.transfer(msg.value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 399,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6935  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x27 0x24 0xB5 0x2E EXTCODECOPY CALLVALUE PUSH18 0xE7F8B6FEB5693F47018FC51716AED6B39E89 SAR LOG1 0xBF 0xDA LOG4 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "701:6234:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6935,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e02724b52e3c3471e7f8b6feb5693f47018fc51716aed6b39e891da1bfdaa4d464736f6c63430008150033",
									".code": [
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6935,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/whitelistCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xCF02F35D13875A9E5D07 0x2E 0xE3 0x2A 0xC1 0xD2 INVALID CODESIZE BALANCE EXTCODEHASH 0xB4 0xBD SWAP6 SWAP13 0xA8 INVALID 0xC2 0xE0 0xEA DUP16 DELEGATECALL 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122069cf02f35d13875a9e5d072ee32ac1d2fe38313fb4bd959ca8fec2e0ea8ff4a964736f6c63430008150033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/whitelistCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205c24b455477bc2af814cafb59cb7bd4e26bd136094fee9d0a670479f3a12932c64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205c24b455477bc2af814cafb59cb7bd4e26bd136094fee9d0a670479f3a12932c64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x24 0xB4 SSTORE SELFBALANCE PUSH28 0xC2AF814CAFB59CB7BD4E26BD136094FEE9D0A670479F3A12932C6473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "220:2559:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205c24b455477bc2af814cafb59cb7bd4e26bd136094fee9d0a670479f3a12932c64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0x24 0xB4 SSTORE SELFBALANCE PUSH28 0xC2AF814CAFB59CB7BD4E26BD136094FEE9D0A670479F3A12932C6473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "220:2559:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c24b455477bc2af814cafb59cb7bd4e26bd136094fee9d0a670479f3a12932c64736f6c63430008150033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/whitelistCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x91664DBCF17BB45A6079AEDA4B705012075E80D52B551ABF072B32B46091AE64 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "202:12582:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x91664DBCF17BB45A6079AEDA4B705012075E80D52B551ABF072B32B46091AE64 PUSH20 0x6F6C634300081500330000000000000000000000 ",
							"sourceMap": "202:12582:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f91664dbcf17bb45a6079aeda4b705012075e80d52b551abf072b32b46091ae64736f6c63430008150033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/whitelistCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xDB DUP16 0x2A DUP6 0x4C 0xF SWAP11 PUSH26 0xDE968D63E796DFF1C13B9D12723FAE1D5EFECDE6868D5664736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "482:6210:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200cdb8f2a854c0f9a79de968d63e796dff1c13b9d12723fae1d5efecde6868d5664736f6c63430008150033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/whitelistCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f5e097cb597ed52993bfe45d336680951b11bf5d31ac976152129c8883b150bf64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f5e097cb597ed52993bfe45d336680951b11bf5d31ac976152129c8883b150bf64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xE0 SWAP8 0xCB MSIZE PUSH31 0xD52993BFE45D336680951B11BF5D31AC976152129C8883B150BF64736F6C63 NUMBER STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "215:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f5e097cb597ed52993bfe45d336680951b11bf5d31ac976152129c8883b150bf64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xE0 SWAP8 0xCB MSIZE PUSH31 0xD52993BFE45D336680951B11BF5D31AC976152129C8883B150BF64736F6C63 NUMBER STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "215:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5e097cb597ed52993bfe45d336680951b11bf5d31ac976152129c8883b150bf64736f6c63430008150033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/whitelistCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"inRate": "Number of token units a buyer gets per wei",
									"inToken": "Address of the token being sold",
									"inWallet": "Address where collected funds will be forwarded to"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"inRate\":\"Number of token units a buyer gets per wei\",\"inToken\":\"Address of the token being sold\",\"inWallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 399,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2865,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)531"
							},
							{
								"astId": 2867,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 2869,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2871,
								"contract": "crowdsale/crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)531": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"crowdsale/validation/whitelistCrowdsale.sol": {
				"WhitelistCrowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inRate",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "inWallet",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "inToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WHITELISTED_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WHITELIST_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "candidate",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale in which only whitelisted users can contribute.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "WhitelistCrowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"crowdsale/validation/whitelistCrowdsale.sol\":266:2178  contract WhitelistCrowdsale is Crowdsale, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":497:678  constructor (uint256 inRate, address payable inWallet, IERC20 inToken)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":587:593  inRate */\n  dup3\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":595:603  inWallet */\n  dup3\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":605:612  inToken */\n  dup3\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2644:2645  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2635:2641  inRate */\n  dup4\n    /* \"crowdsale/crowdsale.sol\":2635:2645  inRate > 0 */\n  gt\n    /* \"crowdsale/crowdsale.sol\":2627:2670  require(inRate > 0, \"Crowdsale: rate is 0\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"crowdsale/crowdsale.sol\":2709:2710  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2689:2697  inWallet */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2689:2711  inWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2681:2753  require(inWallet != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"crowdsale/crowdsale.sol\":2800:2801  0 */\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"crowdsale/crowdsale.sol\":2780:2787  inToken */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2772:2802  address(inToken) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"crowdsale/crowdsale.sol\":2764:2843  require(address(inToken) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"crowdsale/crowdsale.sol\":2864:2870  inRate */\n  dup3\n    /* \"crowdsale/crowdsale.sol\":2856:2861  _rate */\n  0x03\n    /* \"crowdsale/crowdsale.sol\":2856:2870  _rate = inRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2891:2899  inWallet */\n  dup2\n    /* \"crowdsale/crowdsale.sol\":2881:2888  _wallet */\n  0x02\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2881:2899  _wallet = inWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2919:2926  inToken */\n  dup1\n    /* \"crowdsale/crowdsale.sol\":2910:2916  _token */\n  0x01\n  0x00\n    /* \"crowdsale/crowdsale.sol\":2910:2926  _token = inToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"crowdsale/crowdsale.sol\":2545:2934  constructor (uint256 inRate, address payable inWallet, IERC20 inToken) {... */\n  pop\n  pop\n  pop\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":630:670  _grantRole(DEFAULT_ADMIN_ROLE, inWallet) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n  0x00\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":641:659  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":661:669  inWallet */\n  dup4\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":630:640  _grantRole */\n  shl(0x20, tag_20)\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":630:670  _grantRole(DEFAULT_ADMIN_ROLE, inWallet) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":497:678  constructor (uint256 inRate, address payable inWallet, IERC20 inToken)... */\n  pop\n  pop\n  pop\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":266:2178  contract WhitelistCrowdsale is Crowdsale, AccessControl {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7678:7682  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7684:7691  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7677  hasRole */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7740:7744  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7714  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7715:7719  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7728  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7729:7736  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n  tag_26\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7800  _msgSender */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7781:7788  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7775:7779  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3107:3111  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3136  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3137:3141  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3150  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3151:3158  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3123:3159  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_31:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_33:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_34:\n    /* \"#utility.yul\":490:514   */\n  tag_57\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_33\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_58:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_35:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_60\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_34\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_36:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:930   */\ntag_37:\n    /* \"#utility.yul\":871:878   */\n  0x00\n    /* \"#utility.yul\":900:924   */\n  tag_63\n    /* \"#utility.yul\":918:923   */\n  dup3\n    /* \"#utility.yul\":900:924   */\n  tag_36\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":889:924   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":936:1074   */\ntag_38:\n    /* \"#utility.yul\":1017:1049   */\n  tag_65\n    /* \"#utility.yul\":1043:1048   */\n  dup2\n    /* \"#utility.yul\":1017:1049   */\n  tag_37\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1010:1015   */\n  dup2\n    /* \"#utility.yul\":1007:1050   */\n  eq\n    /* \"#utility.yul\":997:1068   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1061:1062   */\n  dup1\n    /* \"#utility.yul\":1054:1066   */\n  revert\n    /* \"#utility.yul\":997:1068   */\ntag_66:\n    /* \"#utility.yul\":936:1074   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1080:1239   */\ntag_39:\n    /* \"#utility.yul\":1145:1150   */\n  0x00\n    /* \"#utility.yul\":1176:1182   */\n  dup2\n    /* \"#utility.yul\":1170:1183   */\n  mload\n    /* \"#utility.yul\":1161:1183   */\n  swap1\n  pop\n    /* \"#utility.yul\":1192:1233   */\n  tag_68\n    /* \"#utility.yul\":1227:1232   */\n  dup2\n    /* \"#utility.yul\":1192:1233   */\n  tag_38\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1080:1239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1245:1341   */\ntag_40:\n    /* \"#utility.yul\":1282:1289   */\n  0x00\n    /* \"#utility.yul\":1311:1335   */\n  tag_70\n    /* \"#utility.yul\":1329:1334   */\n  dup3\n    /* \"#utility.yul\":1311:1335   */\n  tag_36\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1300:1335   */\n  swap1\n  pop\n    /* \"#utility.yul\":1245:1341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1347:1457   */\ntag_41:\n    /* \"#utility.yul\":1398:1405   */\n  0x00\n    /* \"#utility.yul\":1427:1451   */\n  tag_72\n    /* \"#utility.yul\":1445:1450   */\n  dup3\n    /* \"#utility.yul\":1427:1451   */\n  tag_40\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1416:1451   */\n  swap1\n  pop\n    /* \"#utility.yul\":1347:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1613   */\ntag_42:\n    /* \"#utility.yul\":1550:1588   */\n  tag_74\n    /* \"#utility.yul\":1582:1587   */\n  dup2\n    /* \"#utility.yul\":1550:1588   */\n  tag_41\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1543:1548   */\n  dup2\n    /* \"#utility.yul\":1540:1589   */\n  eq\n    /* \"#utility.yul\":1530:1607   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1603:1604   */\n  0x00\n    /* \"#utility.yul\":1600:1601   */\n  dup1\n    /* \"#utility.yul\":1593:1605   */\n  revert\n    /* \"#utility.yul\":1530:1607   */\ntag_75:\n    /* \"#utility.yul\":1463:1613   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1790   */\ntag_43:\n    /* \"#utility.yul\":1690:1695   */\n  0x00\n    /* \"#utility.yul\":1721:1727   */\n  dup2\n    /* \"#utility.yul\":1715:1728   */\n  mload\n    /* \"#utility.yul\":1706:1728   */\n  swap1\n  pop\n    /* \"#utility.yul\":1737:1784   */\n  tag_77\n    /* \"#utility.yul\":1778:1783   */\n  dup2\n    /* \"#utility.yul\":1737:1784   */\n  tag_42\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1619:1790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:2503   */\ntag_3:\n    /* \"#utility.yul\":1906:1912   */\n  0x00\n    /* \"#utility.yul\":1914:1920   */\n  dup1\n    /* \"#utility.yul\":1922:1928   */\n  0x00\n    /* \"#utility.yul\":1971:1973   */\n  0x60\n    /* \"#utility.yul\":1959:1968   */\n  dup5\n    /* \"#utility.yul\":1950:1957   */\n  dup7\n    /* \"#utility.yul\":1946:1969   */\n  sub\n    /* \"#utility.yul\":1942:1974   */\n  slt\n    /* \"#utility.yul\":1939:2058   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1977:2056   */\n  tag_80\n  tag_31\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1939:2058   */\ntag_79:\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2122:2186   */\n  tag_81\n    /* \"#utility.yul\":2178:2185   */\n  dup7\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2158:2167   */\n  dup8\n    /* \"#utility.yul\":2154:2176   */\n  add\n    /* \"#utility.yul\":2122:2186   */\n  tag_35\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2112:2186   */\n  swap4\n  pop\n    /* \"#utility.yul\":2068:2196   */\n  pop\n    /* \"#utility.yul\":2235:2237   */\n  0x20\n    /* \"#utility.yul\":2261:2333   */\n  tag_82\n    /* \"#utility.yul\":2325:2332   */\n  dup7\n    /* \"#utility.yul\":2316:2322   */\n  dup3\n    /* \"#utility.yul\":2305:2314   */\n  dup8\n    /* \"#utility.yul\":2301:2323   */\n  add\n    /* \"#utility.yul\":2261:2333   */\n  tag_39\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2251:2333   */\n  swap3\n  pop\n    /* \"#utility.yul\":2206:2343   */\n  pop\n    /* \"#utility.yul\":2382:2384   */\n  0x40\n    /* \"#utility.yul\":2408:2486   */\n  tag_83\n    /* \"#utility.yul\":2478:2485   */\n  dup7\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2458:2467   */\n  dup8\n    /* \"#utility.yul\":2454:2476   */\n  add\n    /* \"#utility.yul\":2408:2486   */\n  tag_43\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2398:2486   */\n  swap2\n  pop\n    /* \"#utility.yul\":2353:2496   */\n  pop\n    /* \"#utility.yul\":1796:2503   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2509:2678   */\ntag_44:\n    /* \"#utility.yul\":2593:2604   */\n  0x00\n    /* \"#utility.yul\":2627:2633   */\n  dup3\n    /* \"#utility.yul\":2622:2625   */\n  dup3\n    /* \"#utility.yul\":2615:2634   */\n  mstore\n    /* \"#utility.yul\":2667:2671   */\n  0x20\n    /* \"#utility.yul\":2662:2665   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2643:2672   */\n  swap1\n  pop\n    /* \"#utility.yul\":2509:2678   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2684:2854   */\ntag_45:\n    /* \"#utility.yul\":2824:2846   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":2820:2821   */\n  0x00\n    /* \"#utility.yul\":2812:2818   */\n  dup3\n    /* \"#utility.yul\":2808:2822   */\n  add\n    /* \"#utility.yul\":2801:2847   */\n  mstore\n    /* \"#utility.yul\":2684:2854   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2860:3226   */\ntag_46:\n    /* \"#utility.yul\":3002:3005   */\n  0x00\n    /* \"#utility.yul\":3023:3090   */\n  tag_87\n    /* \"#utility.yul\":3087:3089   */\n  0x14\n    /* \"#utility.yul\":3082:3085   */\n  dup4\n    /* \"#utility.yul\":3023:3090   */\n  tag_44\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3016:3090   */\n  swap2\n  pop\n    /* \"#utility.yul\":3099:3192   */\n  tag_88\n    /* \"#utility.yul\":3188:3191   */\n  dup3\n    /* \"#utility.yul\":3099:3192   */\n  tag_45\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3217:3219   */\n  0x20\n    /* \"#utility.yul\":3212:3215   */\n  dup3\n    /* \"#utility.yul\":3208:3220   */\n  add\n    /* \"#utility.yul\":3201:3220   */\n  swap1\n  pop\n    /* \"#utility.yul\":2860:3226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3651   */\ntag_11:\n    /* \"#utility.yul\":3398:3402   */\n  0x00\n    /* \"#utility.yul\":3436:3438   */\n  0x20\n    /* \"#utility.yul\":3425:3434   */\n  dup3\n    /* \"#utility.yul\":3421:3439   */\n  add\n    /* \"#utility.yul\":3413:3439   */\n  swap1\n  pop\n    /* \"#utility.yul\":3485:3494   */\n  dup2\n    /* \"#utility.yul\":3479:3483   */\n  dup2\n    /* \"#utility.yul\":3475:3495   */\n  sub\n    /* \"#utility.yul\":3471:3472   */\n  0x00\n    /* \"#utility.yul\":3460:3469   */\n  dup4\n    /* \"#utility.yul\":3456:3473   */\n  add\n    /* \"#utility.yul\":3449:3496   */\n  mstore\n    /* \"#utility.yul\":3513:3644   */\n  tag_90\n    /* \"#utility.yul\":3639:3643   */\n  dup2\n    /* \"#utility.yul\":3513:3644   */\n  tag_46\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3505:3644   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3651   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3657:3881   */\ntag_47:\n    /* \"#utility.yul\":3797:3831   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":3793:3794   */\n  0x00\n    /* \"#utility.yul\":3785:3791   */\n  dup3\n    /* \"#utility.yul\":3781:3795   */\n  add\n    /* \"#utility.yul\":3774:3832   */\n  mstore\n    /* \"#utility.yul\":3866:3873   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3861:3863   */\n  0x20\n    /* \"#utility.yul\":3853:3859   */\n  dup3\n    /* \"#utility.yul\":3849:3864   */\n  add\n    /* \"#utility.yul\":3842:3874   */\n  mstore\n    /* \"#utility.yul\":3657:3881   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3887:4253   */\ntag_48:\n    /* \"#utility.yul\":4029:4032   */\n  0x00\n    /* \"#utility.yul\":4050:4117   */\n  tag_93\n    /* \"#utility.yul\":4114:4116   */\n  0x25\n    /* \"#utility.yul\":4109:4112   */\n  dup4\n    /* \"#utility.yul\":4050:4117   */\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4043:4117   */\n  swap2\n  pop\n    /* \"#utility.yul\":4126:4219   */\n  tag_94\n    /* \"#utility.yul\":4215:4218   */\n  dup3\n    /* \"#utility.yul\":4126:4219   */\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4244:4246   */\n  0x40\n    /* \"#utility.yul\":4239:4242   */\n  dup3\n    /* \"#utility.yul\":4235:4247   */\n  add\n    /* \"#utility.yul\":4228:4247   */\n  swap1\n  pop\n    /* \"#utility.yul\":3887:4253   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4259:4678   */\ntag_14:\n    /* \"#utility.yul\":4425:4429   */\n  0x00\n    /* \"#utility.yul\":4463:4465   */\n  0x20\n    /* \"#utility.yul\":4452:4461   */\n  dup3\n    /* \"#utility.yul\":4448:4466   */\n  add\n    /* \"#utility.yul\":4440:4466   */\n  swap1\n  pop\n    /* \"#utility.yul\":4512:4521   */\n  dup2\n    /* \"#utility.yul\":4506:4510   */\n  dup2\n    /* \"#utility.yul\":4502:4522   */\n  sub\n    /* \"#utility.yul\":4498:4499   */\n  0x00\n    /* \"#utility.yul\":4487:4496   */\n  dup4\n    /* \"#utility.yul\":4483:4500   */\n  add\n    /* \"#utility.yul\":4476:4523   */\n  mstore\n    /* \"#utility.yul\":4540:4671   */\n  tag_96\n    /* \"#utility.yul\":4666:4670   */\n  dup2\n    /* \"#utility.yul\":4540:4671   */\n  tag_48\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4532:4671   */\n  swap1\n  pop\n    /* \"#utility.yul\":4259:4678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4684:4907   */\ntag_49:\n    /* \"#utility.yul\":4824:4858   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":4820:4821   */\n  0x00\n    /* \"#utility.yul\":4812:4818   */\n  dup3\n    /* \"#utility.yul\":4808:4822   */\n  add\n    /* \"#utility.yul\":4801:4859   */\n  mstore\n    /* \"#utility.yul\":4893:4899   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4888:4890   */\n  0x20\n    /* \"#utility.yul\":4880:4886   */\n  dup3\n    /* \"#utility.yul\":4876:4891   */\n  add\n    /* \"#utility.yul\":4869:4900   */\n  mstore\n    /* \"#utility.yul\":4684:4907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4913:5279   */\ntag_50:\n    /* \"#utility.yul\":5055:5058   */\n  0x00\n    /* \"#utility.yul\":5076:5143   */\n  tag_99\n    /* \"#utility.yul\":5140:5142   */\n  0x24\n    /* \"#utility.yul\":5135:5138   */\n  dup4\n    /* \"#utility.yul\":5076:5143   */\n  tag_44\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5069:5143   */\n  swap2\n  pop\n    /* \"#utility.yul\":5152:5245   */\n  tag_100\n    /* \"#utility.yul\":5241:5244   */\n  dup3\n    /* \"#utility.yul\":5152:5245   */\n  tag_49\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5270:5272   */\n  0x40\n    /* \"#utility.yul\":5265:5268   */\n  dup3\n    /* \"#utility.yul\":5261:5273   */\n  add\n    /* \"#utility.yul\":5254:5273   */\n  swap1\n  pop\n    /* \"#utility.yul\":4913:5279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5285:5704   */\ntag_17:\n    /* \"#utility.yul\":5451:5455   */\n  0x00\n    /* \"#utility.yul\":5489:5491   */\n  0x20\n    /* \"#utility.yul\":5478:5487   */\n  dup3\n    /* \"#utility.yul\":5474:5492   */\n  add\n    /* \"#utility.yul\":5466:5492   */\n  swap1\n  pop\n    /* \"#utility.yul\":5538:5547   */\n  dup2\n    /* \"#utility.yul\":5532:5536   */\n  dup2\n    /* \"#utility.yul\":5528:5548   */\n  sub\n    /* \"#utility.yul\":5524:5525   */\n  0x00\n    /* \"#utility.yul\":5513:5522   */\n  dup4\n    /* \"#utility.yul\":5509:5526   */\n  add\n    /* \"#utility.yul\":5502:5549   */\n  mstore\n    /* \"#utility.yul\":5566:5697   */\n  tag_102\n    /* \"#utility.yul\":5692:5696   */\n  dup2\n    /* \"#utility.yul\":5566:5697   */\n  tag_50\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5558:5697   */\n  swap1\n  pop\n    /* \"#utility.yul\":5285:5704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"crowdsale/validation/whitelistCrowdsale.sol\":266:2178  contract WhitelistCrowdsale is Crowdsale, AccessControl {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":266:2178  contract WhitelistCrowdsale is Crowdsale, AccessControl {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a3226ec\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x7a3226ec\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x7f649783\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x36568abe\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x54202c4e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x548db174\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      tag_26\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      tag_27\n        /* \"crowdsale/crowdsale.sol\":3361:3371  _msgSender */\n      tag_28\n        /* \"crowdsale/crowdsale.sol\":3361:3373  _msgSender() */\n      jump\t// in\n    tag_27:\n        /* \"crowdsale/crowdsale.sol\":3351:3360  buyTokens */\n      tag_29\n        /* \"crowdsale/crowdsale.sol\":3351:3374  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_26:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":266:2178  contract WhitelistCrowdsale is Crowdsale, AccessControl {... */\n      stop\n    tag_2:\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      tag_32\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      tag_33\n        /* \"crowdsale/crowdsale.sol\":3280:3290  _msgSender */\n      tag_28\n        /* \"crowdsale/crowdsale.sol\":3280:3292  _msgSender() */\n      jump\t// in\n    tag_33:\n        /* \"crowdsale/crowdsale.sol\":3270:3279  buyTokens */\n      tag_29\n        /* \"crowdsale/crowdsale.sol\":3270:3293  buyTokens(_msgSender()) */\n      jump\t// in\n    tag_32:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":266:2178  contract WhitelistCrowdsale is Crowdsale, AccessControl {... */\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":408:488  bytes32 public constant WHITELIST_ADMIN_ROLE = keccak256(\"WHITELIST_ADMIN_ROLE\") */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1301:1596  function removeFromWhitelist(address[] memory addresses) public onlyRole(WHITELIST_ADMIN_ROLE) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":329:401  bytes32 public constant WHITELISTED_ROLE = keccak256(\"WHITELISTED_ROLE\") */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":842:1131  function addToWhitelist(address[] memory addresses) public onlyRole(WHITELIST_ADMIN_ROLE) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1139:1289  function removeFromWhitelist(address candidate) public onlyRole(WHITELIST_ADMIN_ROLE)... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":690:834  function addToWhitelist(address candidate) public onlyRole(WHITELIST_ADMIN_ROLE)... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_19:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_111:\n      tag_29\n      jump\t// in\n    tag_110:\n      stop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_120\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_119:\n        /* \"crowdsale/crowdsale.sol\":4368:4385  uint256 weiAmount */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4388:4397  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":4368:4397  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_122\n        /* \"crowdsale/crowdsale.sol\":4429:4440  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4442:4451  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4408:4428  _preValidatePurchase */\n      tag_123\n        /* \"crowdsale/crowdsale.sol\":4408:4452  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_122:\n        /* \"crowdsale/crowdsale.sol\":4514:4528  uint256 tokens */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      tag_124\n        /* \"crowdsale/crowdsale.sol\":4547:4556  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4531:4546  _getTokenAmount */\n      tag_125\n        /* \"crowdsale/crowdsale.sol\":4531:4557  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_124:\n        /* \"crowdsale/crowdsale.sol\":4514:4557  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      tag_126\n        /* \"crowdsale/crowdsale.sol\":4623:4632  weiAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4608:4618  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":4608:4622  _weiRaised.add */\n      tag_127\n      swap1\n        /* \"crowdsale/crowdsale.sol\":4608:4633  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"crowdsale/crowdsale.sol\":4595:4605  _weiRaised */\n      0x04\n        /* \"crowdsale/crowdsale.sol\":4595:4633  _weiRaised = _weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      tag_128\n        /* \"crowdsale/crowdsale.sol\":4663:4674  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4676:4682  tokens */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4646:4662  _processPurchase */\n      tag_129\n        /* \"crowdsale/crowdsale.sol\":4646:4683  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_128:\n        /* \"crowdsale/crowdsale.sol\":4729:4740  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      tag_130\n        /* \"crowdsale/crowdsale.sol\":4715:4725  _msgSender */\n      tag_28\n        /* \"crowdsale/crowdsale.sol\":4715:4727  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \"crowdsale/crowdsale.sol\":4742:4751  weiAmount */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4753:4759  tokens */\n      dup5\n        /* \"crowdsale/crowdsale.sol\":4699:4760  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_131\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_133\n        /* \"crowdsale/crowdsale.sol\":4796:4807  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4809:4818  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4773:4795  _updatePurchasingState */\n      tag_134\n        /* \"crowdsale/crowdsale.sol\":4773:4819  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_133:\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      tag_135\n        /* \"crowdsale/crowdsale.sol\":4832:4845  _forwardFunds */\n      tag_136\n        /* \"crowdsale/crowdsale.sol\":4832:4847  _forwardFunds() */\n      jump\t// in\n    tag_135:\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_137\n        /* \"crowdsale/crowdsale.sol\":4880:4891  beneficiary */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4893:4902  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":4858:4879  _postValidatePurchase */\n      tag_138\n        /* \"crowdsale/crowdsale.sol\":4858:4903  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_137:\n        /* \"crowdsale/crowdsale.sol\":4357:4911  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_139\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_140\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_139:\n        /* \"crowdsale/crowdsale.sol\":4289:4911  function buyTokens(address beneficiary) public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2817:2821  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2855:2887  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2851  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_142\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2915:2926  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2914  super.supportsInterface */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2833:2927  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4578:4585  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4610  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4611:4615  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4626  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4597:4626  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n    tag_50:\n        /* \"crowdsale/crowdsale.sol\":3829:3836  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3856:3861  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":3849:3861  return _rate */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3784:3869  function rate() public virtual view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5025:5029  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5024  getRoleAdmin */\n      tag_45\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5053:5057  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5059:5066  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5052  _grantRole */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6154  _msgSender */\n      tag_28\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6140  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6125:6208  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6231:6235  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6237:6244  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6230  _revokeRole */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n    tag_64:\n        /* \"crowdsale/crowdsale.sol\":3979:3986  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":4006:4016  _weiRaised */\n      sload(0x04)\n        /* \"crowdsale/crowdsale.sol\":3999:4016  return _weiRaised */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3937:4024  function weiRaised() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n    tag_68:\n        /* \"crowdsale/crowdsale.sol\":3644:3659  address payable */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3679:3686  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3672:3686  return _wallet */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3605:3694  function wallet() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":408:488  bytes32 public constant WHITELIST_ADMIN_ROLE = keccak256(\"WHITELIST_ADMIN_ROLE\") */\n    tag_73:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":455:488  keccak256(\"WHITELIST_ADMIN_ROLE\") */\n      0x28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e2\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":408:488  bytes32 public constant WHITELIST_ADMIN_ROLE = keccak256(\"WHITELIST_ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1301:1596  function removeFromWhitelist(address[] memory addresses) public onlyRole(WHITELIST_ADMIN_ROLE) {... */\n    tag_79:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":455:488  keccak256(\"WHITELIST_ADMIN_ROLE\") */\n      0x28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_164:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1412:1418  uint i */\n      0x00\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1407:1589  for (uint i = 0; i < addresses.length; i++) {... */\n    tag_166:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1428:1437  addresses */\n      dup3\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1428:1444  addresses.length */\n      mload\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1424:1425  i */\n      dup2\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1424:1444  i < addresses.length */\n      lt\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1407:1589  for (uint i = 0; i < addresses.length; i++) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1534:1577  _revokeRole(WHITELISTED_ROLE, addresses[i]) */\n      tag_169\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":372:401  keccak256(\"WHITELISTED_ROLE\") */\n      0x8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1564:1573  addresses */\n      dup5\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1574:1575  i */\n      dup4\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1564:1576  addresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_170\n      jumpi\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n    tag_170:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1534:1545  _revokeRole */\n      tag_160\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1534:1577  _revokeRole(WHITELISTED_ROLE, addresses[i]) */\n      jump\t// in\n    tag_169:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1446:1449  i++ */\n      dup1\n      dup1\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      swap2\n      pop\n      pop\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1407:1589  for (uint i = 0; i < addresses.length; i++) {... */\n      jump(tag_166)\n    tag_167:\n      pop\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1301:1596  function removeFromWhitelist(address[] memory addresses) public onlyRole(WHITELIST_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":329:401  bytes32 public constant WHITELISTED_ROLE = keccak256(\"WHITELISTED_ROLE\") */\n    tag_82:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":372:401  keccak256(\"WHITELISTED_ROLE\") */\n      0x8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":329:401  bytes32 public constant WHITELISTED_ROLE = keccak256(\"WHITELISTED_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":842:1131  function addToWhitelist(address[] memory addresses) public onlyRole(WHITELIST_ADMIN_ROLE) {... */\n    tag_87:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":455:488  keccak256(\"WHITELIST_ADMIN_ROLE\") */\n      0x28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_176\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_176:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":948:954  uint i */\n      0x00\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":943:1124  for (uint i = 0; i < addresses.length; i++) {... */\n    tag_178:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":964:973  addresses */\n      dup3\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":964:980  addresses.length */\n      mload\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":960:961  i */\n      dup2\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":960:980  i < addresses.length */\n      lt\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":943:1124  for (uint i = 0; i < addresses.length; i++) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1070:1112  _grantRole(WHITELISTED_ROLE, addresses[i]) */\n      tag_181\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":372:401  keccak256(\"WHITELISTED_ROLE\") */\n      0x8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1099:1108  addresses */\n      dup5\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1109:1110  i */\n      dup4\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1099:1111  addresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_183\n      tag_172\n      jump\t// in\n    tag_183:\n    tag_182:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1070:1080  _grantRole */\n      tag_153\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1070:1112  _grantRole(WHITELISTED_ROLE, addresses[i]) */\n      jump\t// in\n    tag_181:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":982:985  i++ */\n      dup1\n      dup1\n      tag_184\n      swap1\n      tag_174\n      jump\t// in\n    tag_184:\n      swap2\n      pop\n      pop\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":943:1124  for (uint i = 0; i < addresses.length; i++) {... */\n      jump(tag_178)\n    tag_179:\n      pop\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":842:1131  function addToWhitelist(address[] memory addresses) public onlyRole(WHITELIST_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1139:1289  function removeFromWhitelist(address candidate) public onlyRole(WHITELIST_ADMIN_ROLE)... */\n    tag_92:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":455:488  keccak256(\"WHITELIST_ADMIN_ROLE\") */\n      0x28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_186:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1241:1281  _revokeRole(WHITELISTED_ROLE, candidate) */\n      tag_188\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":372:401  keccak256(\"WHITELISTED_ROLE\") */\n      0x8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1271:1280  candidate */\n      dup4\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1241:1252  _revokeRole */\n      tag_160\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1241:1281  _revokeRole(WHITELISTED_ROLE, candidate) */\n      jump\t// in\n    tag_188:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1139:1289  function removeFromWhitelist(address candidate) public onlyRole(WHITELIST_ADMIN_ROLE)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3107:3111  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3136  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3137:3141  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3150  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3151:3158  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3123:3159  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      tag_190\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5451:5455  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5450  getRoleAdmin */\n      tag_45\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_192\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5480:5484  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5486:5493  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5479  _revokeRole */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":690:834  function addToWhitelist(address candidate) public onlyRole(WHITELIST_ADMIN_ROLE)... */\n    tag_109:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":455:488  keccak256(\"WHITELIST_ADMIN_ROLE\") */\n      0x28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_196:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":787:826  _grantRole(WHITELISTED_ROLE, candidate) */\n      tag_198\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":372:401  keccak256(\"WHITELISTED_ROLE\") */\n      0x8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":816:825  candidate */\n      dup4\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":787:797  _grantRole */\n      tag_153\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":787:826  _grantRole(WHITELISTED_ROLE, candidate) */\n      jump\t// in\n    tag_198:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":690:834  function addToWhitelist(address candidate) public onlyRole(WHITELIST_ADMIN_ROLE)... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n    tag_114:\n        /* \"crowdsale/crowdsale.sol\":3484:3490  IERC20 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":3510:3516  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":3503:3516  return _token */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":3446:3524  function token() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1881:2175  function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal override view {... */\n    tag_123:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1995:2034  hasRole(WHITELISTED_ROLE, _beneficiary) */\n      tag_205\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":372:401  keccak256(\"WHITELISTED_ROLE\") */\n      0x8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":2021:2033  _beneficiary */\n      dup4\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1995:2002  hasRole */\n      tag_96\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1995:2034  hasRole(WHITELISTED_ROLE, _beneficiary) */\n      jump\t// in\n    tag_205:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1987:2104  require(hasRole(WHITELISTED_ROLE, _beneficiary), \"WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":2115:2167  super._preValidatePurchase(_beneficiary, _weiAmount) */\n      tag_209\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":2142:2154  _beneficiary */\n      dup3\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":2156:2166  _weiAmount */\n      dup3\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":2115:2141  super._preValidatePurchase */\n      tag_210\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":2115:2167  super._preValidatePurchase(_beneficiary, _weiAmount) */\n      jump\t// in\n    tag_209:\n        /* \"crowdsale/validation/whitelistCrowdsale.sol\":1881:2175  function _preValidatePurchase(address _beneficiary, uint256 _weiAmount) internal override view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n    tag_125:\n        /* \"crowdsale/crowdsale.sol\":7931:7938  uint256 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      tag_212\n        /* \"crowdsale/crowdsale.sol\":7972:7977  _rate */\n      sload(0x03)\n        /* \"crowdsale/crowdsale.sol\":7958:7967  weiAmount */\n      dup4\n        /* \"crowdsale/crowdsale.sol\":7958:7971  weiAmount.mul */\n      tag_213\n      swap1\n        /* \"crowdsale/crowdsale.sol\":7958:7978  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"crowdsale/crowdsale.sol\":7951:7978  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \"crowdsale/crowdsale.sol\":7856:7986  function _getTokenAmount(uint256 weiAmount) internal virtual view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_129:\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      tag_218\n        /* \"crowdsale/crowdsale.sol\":7134:7145  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7147:7158  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":7119:7133  _deliverTokens */\n      tag_219\n        /* \"crowdsale/crowdsale.sol\":7119:7159  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_218:\n        /* \"crowdsale/crowdsale.sol\":7023:7167  function _processPurchase(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":7445:7600  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal virtual {... */\n    tag_134:\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n    tag_136:\n        /* \"crowdsale/crowdsale.sol\":8131:8138  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8147  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \"crowdsale/crowdsale.sol\":8148:8157  msg.value */\n      callvalue\n        /* \"crowdsale/crowdsale.sol\":8131:8158  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n        /* \"crowdsale/crowdsale.sol\":8078:8166  function _forwardFunds() internal virtual {... */\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6155:6314  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_138:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      tag_228\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3537:3541  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3553  _msgSender */\n      tag_28\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3536  _checkRole */\n      tag_230\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7678:7682  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7684:7691  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7677  hasRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7740:7744  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7714  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7715:7719  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7728  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7729:7736  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7800  _msgSender */\n      tag_28\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7781:7788  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7775:7779  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8086  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8088:8095  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8081  hasRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8144:8149  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8118  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8119:8123  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8132  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8133:8140  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8149  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      tag_238\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8205  _msgSender */\n      tag_28\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8186:8193  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8180:8184  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n    tag_210:\n        /* \"crowdsale/crowdsale.sol\":5598:5599  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":5575:5586  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":5575:5600  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"crowdsale/crowdsale.sol\":5567:5647  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"crowdsale/crowdsale.sol\":5679:5680  0 */\n      0x00\n        /* \"crowdsale/crowdsale.sol\":5666:5675  weiAmount */\n      dup2\n        /* \"crowdsale/crowdsale.sol\":5666:5680  weiAmount != 0 */\n      sub\n        /* \"crowdsale/crowdsale.sol\":5658:5710  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_243:\n        /* \"crowdsale/crowdsale.sol\":5464:5852  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal virtual view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n    tag_219:\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      tag_250\n        /* \"crowdsale/crowdsale.sol\":6716:6727  beneficiary */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6729:6740  tokenAmount */\n      dup3\n        /* \"crowdsale/crowdsale.sol\":6696:6702  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"crowdsale/crowdsale.sol\":6696:6715  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_251\n      swap1\n        /* \"crowdsale/crowdsale.sol\":6696:6741  _token.safeTransfer(beneficiary, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"crowdsale/crowdsale.sol\":6602:6749  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      tag_253\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3940:3944  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3946:3953  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3939  hasRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4135:4142  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4134  Strings.toHexString */\n      tag_256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      tag_257\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4242:4246  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4234:4247  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4249:4251  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4233  Strings.toHexString */\n      tag_258\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4022:4274  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_259\n      swap3\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3970:4306  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_265\n      swap3\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_269\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2525:2529  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2508  toHexString */\n      tag_258\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2490:2549  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_271\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_272\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_273\n      jumpi\n      tag_274\n      tag_275\n      jump\t// in\n    tag_274:\n    tag_273:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_276\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_276:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_277\n      jumpi\n      tag_278\n      tag_172\n      jump\t// in\n    tag_278:\n    tag_277:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_279\n      jumpi\n      tag_280\n      tag_172\n      jump\t// in\n    tag_280:\n    tag_279:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_284\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_285\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2104  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2110  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_286\n      jumpi\n      tag_287\n      tag_172\n      jump\t// in\n    tag_287:\n    tag_286:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_288\n      jumpi\n      tag_289\n      tag_172\n      jump\t// in\n    tag_289:\n    tag_288:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2065:2068  --i */\n      dup1\n      tag_290\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_281)\n    tag_282:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2179:2180  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2175  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2241:2247  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2227:2248  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5638  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5669:5673  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5649:5654  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5668  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_297\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5641:5710  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5615:5710  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5749:5750  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5738  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5745  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5750  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_298\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5765:5775  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5754:5784  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_299\n      swap2\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5728:5784  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5720:5831  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5266:5838  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5196:5838  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_297:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_306\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap1\n      tag_310\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_315\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_314)\n    tag_315:\n      0x60\n      swap2\n      pop\n    tag_314:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_316\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_317\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_320:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_318)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_327\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_318:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap2\n      swap1\n      tag_262\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_334:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_335:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_336:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_337:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_338:\n        /* \"#utility.yul\":561:584   */\n      tag_408\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_337\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_409:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_339:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_411\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_338\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_37:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_414\n      tag_335\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":833:952   */\n    tag_413:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_415\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_339\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_340:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_341:\n        /* \"#utility.yul\":1268:1289   */\n      tag_418\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_340\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_40:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_420\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_341\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_342:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_343:\n        /* \"#utility.yul\":1674:1698   */\n      tag_423\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_342\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_424:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_344:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_426\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_343\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_44:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_429\n      tag_335\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":1950:2069   */\n    tag_428:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_430\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_344\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_345:\n        /* \"#utility.yul\":2296:2320   */\n      tag_432\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_342\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_47:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_434\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_345\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2638   */\n    tag_346:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2616:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2762   */\n    tag_347:\n        /* \"#utility.yul\":2731:2755   */\n      tag_437\n        /* \"#utility.yul\":2749:2754   */\n      dup2\n        /* \"#utility.yul\":2731:2755   */\n      tag_346\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2726:2729   */\n      dup3\n        /* \"#utility.yul\":2719:2756   */\n      mstore\n        /* \"#utility.yul\":2644:2762   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2768:2990   */\n    tag_52:\n        /* \"#utility.yul\":2861:2865   */\n      0x00\n        /* \"#utility.yul\":2899:2901   */\n      0x20\n        /* \"#utility.yul\":2888:2897   */\n      dup3\n        /* \"#utility.yul\":2884:2902   */\n      add\n        /* \"#utility.yul\":2876:2902   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:2983   */\n      tag_439\n        /* \"#utility.yul\":2980:2981   */\n      0x00\n        /* \"#utility.yul\":2969:2978   */\n      dup4\n        /* \"#utility.yul\":2965:2982   */\n      add\n        /* \"#utility.yul\":2956:2962   */\n      dup5\n        /* \"#utility.yul\":2912:2983   */\n      tag_347\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2768:2990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2996:3122   */\n    tag_348:\n        /* \"#utility.yul\":3033:3040   */\n      0x00\n        /* \"#utility.yul\":3073:3115   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3066:3071   */\n      dup3\n        /* \"#utility.yul\":3062:3116   */\n      and\n        /* \"#utility.yul\":3051:3116   */\n      swap1\n      pop\n        /* \"#utility.yul\":2996:3122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3128:3224   */\n    tag_349:\n        /* \"#utility.yul\":3165:3172   */\n      0x00\n        /* \"#utility.yul\":3194:3218   */\n      tag_442\n        /* \"#utility.yul\":3212:3217   */\n      dup3\n        /* \"#utility.yul\":3194:3218   */\n      tag_348\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3183:3218   */\n      swap1\n      pop\n        /* \"#utility.yul\":3128:3224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3352   */\n    tag_350:\n        /* \"#utility.yul\":3303:3327   */\n      tag_444\n        /* \"#utility.yul\":3321:3326   */\n      dup2\n        /* \"#utility.yul\":3303:3327   */\n      tag_349\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":3296:3301   */\n      dup2\n        /* \"#utility.yul\":3293:3328   */\n      eq\n        /* \"#utility.yul\":3283:3346   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      dup1\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3283:3346   */\n    tag_445:\n        /* \"#utility.yul\":3230:3352   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3358:3497   */\n    tag_351:\n        /* \"#utility.yul\":3404:3409   */\n      0x00\n        /* \"#utility.yul\":3442:3448   */\n      dup2\n        /* \"#utility.yul\":3429:3449   */\n      calldataload\n        /* \"#utility.yul\":3420:3449   */\n      swap1\n      pop\n        /* \"#utility.yul\":3458:3491   */\n      tag_447\n        /* \"#utility.yul\":3485:3490   */\n      dup2\n        /* \"#utility.yul\":3458:3491   */\n      tag_350\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":3358:3497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3503:3977   */\n    tag_56:\n        /* \"#utility.yul\":3571:3577   */\n      0x00\n        /* \"#utility.yul\":3579:3585   */\n      dup1\n        /* \"#utility.yul\":3628:3630   */\n      0x40\n        /* \"#utility.yul\":3616:3625   */\n      dup4\n        /* \"#utility.yul\":3607:3614   */\n      dup6\n        /* \"#utility.yul\":3603:3626   */\n      sub\n        /* \"#utility.yul\":3599:3631   */\n      slt\n        /* \"#utility.yul\":3596:3715   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":3634:3713   */\n      tag_450\n      tag_335\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3596:3715   */\n    tag_449:\n        /* \"#utility.yul\":3754:3755   */\n      0x00\n        /* \"#utility.yul\":3779:3832   */\n      tag_451\n        /* \"#utility.yul\":3824:3831   */\n      dup6\n        /* \"#utility.yul\":3815:3821   */\n      dup3\n        /* \"#utility.yul\":3804:3813   */\n      dup7\n        /* \"#utility.yul\":3800:3822   */\n      add\n        /* \"#utility.yul\":3779:3832   */\n      tag_344\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":3769:3832   */\n      swap3\n      pop\n        /* \"#utility.yul\":3725:3842   */\n      pop\n        /* \"#utility.yul\":3881:3883   */\n      0x20\n        /* \"#utility.yul\":3907:3960   */\n      tag_452\n        /* \"#utility.yul\":3952:3959   */\n      dup6\n        /* \"#utility.yul\":3943:3949   */\n      dup3\n        /* \"#utility.yul\":3932:3941   */\n      dup7\n        /* \"#utility.yul\":3928:3950   */\n      add\n        /* \"#utility.yul\":3907:3960   */\n      tag_351\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3897:3960   */\n      swap2\n      pop\n        /* \"#utility.yul\":3852:3970   */\n      pop\n        /* \"#utility.yul\":3503:3977   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3983:4087   */\n    tag_352:\n        /* \"#utility.yul\":4028:4035   */\n      0x00\n        /* \"#utility.yul\":4057:4081   */\n      tag_454\n        /* \"#utility.yul\":4075:4080   */\n      dup3\n        /* \"#utility.yul\":4057:4081   */\n      tag_348\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4046:4081   */\n      swap1\n      pop\n        /* \"#utility.yul\":3983:4087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4093:4235   */\n    tag_353:\n        /* \"#utility.yul\":4196:4228   */\n      tag_456\n        /* \"#utility.yul\":4222:4227   */\n      dup2\n        /* \"#utility.yul\":4196:4228   */\n      tag_352\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4191:4194   */\n      dup3\n        /* \"#utility.yul\":4184:4229   */\n      mstore\n        /* \"#utility.yul\":4093:4235   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4241:4495   */\n    tag_70:\n        /* \"#utility.yul\":4350:4354   */\n      0x00\n        /* \"#utility.yul\":4388:4390   */\n      0x20\n        /* \"#utility.yul\":4377:4386   */\n      dup3\n        /* \"#utility.yul\":4373:4391   */\n      add\n        /* \"#utility.yul\":4365:4391   */\n      swap1\n      pop\n        /* \"#utility.yul\":4401:4488   */\n      tag_458\n        /* \"#utility.yul\":4485:4486   */\n      0x00\n        /* \"#utility.yul\":4474:4483   */\n      dup4\n        /* \"#utility.yul\":4470:4487   */\n      add\n        /* \"#utility.yul\":4461:4467   */\n      dup5\n        /* \"#utility.yul\":4401:4488   */\n      tag_353\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":4241:4495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4501:4618   */\n    tag_354:\n        /* \"#utility.yul\":4610:4611   */\n      0x00\n        /* \"#utility.yul\":4607:4608   */\n      dup1\n        /* \"#utility.yul\":4600:4612   */\n      revert\n        /* \"#utility.yul\":4624:4726   */\n    tag_355:\n        /* \"#utility.yul\":4665:4671   */\n      0x00\n        /* \"#utility.yul\":4716:4718   */\n      0x1f\n        /* \"#utility.yul\":4712:4719   */\n      not\n        /* \"#utility.yul\":4707:4709   */\n      0x1f\n        /* \"#utility.yul\":4700:4705   */\n      dup4\n        /* \"#utility.yul\":4696:4710   */\n      add\n        /* \"#utility.yul\":4692:4720   */\n      and\n        /* \"#utility.yul\":4682:4720   */\n      swap1\n      pop\n        /* \"#utility.yul\":4624:4726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4732:4912   */\n    tag_275:\n        /* \"#utility.yul\":4780:4857   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4777:4778   */\n      0x00\n        /* \"#utility.yul\":4770:4858   */\n      mstore\n        /* \"#utility.yul\":4877:4881   */\n      0x41\n        /* \"#utility.yul\":4874:4875   */\n      0x04\n        /* \"#utility.yul\":4867:4882   */\n      mstore\n        /* \"#utility.yul\":4901:4905   */\n      0x24\n        /* \"#utility.yul\":4898:4899   */\n      0x00\n        /* \"#utility.yul\":4891:4906   */\n      revert\n        /* \"#utility.yul\":4918:5199   */\n    tag_356:\n        /* \"#utility.yul\":5001:5028   */\n      tag_463\n        /* \"#utility.yul\":5023:5027   */\n      dup3\n        /* \"#utility.yul\":5001:5028   */\n      tag_355\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":4993:4999   */\n      dup2\n        /* \"#utility.yul\":4989:5029   */\n      add\n        /* \"#utility.yul\":5131:5137   */\n      dup2\n        /* \"#utility.yul\":5119:5129   */\n      dup2\n        /* \"#utility.yul\":5116:5138   */\n      lt\n        /* \"#utility.yul\":5095:5113   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5083:5093   */\n      dup3\n        /* \"#utility.yul\":5080:5114   */\n      gt\n        /* \"#utility.yul\":5077:5139   */\n      or\n        /* \"#utility.yul\":5074:5162   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5142:5160   */\n      tag_465\n      tag_275\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5074:5162   */\n    tag_464:\n        /* \"#utility.yul\":5182:5192   */\n      dup1\n        /* \"#utility.yul\":5178:5180   */\n      0x40\n        /* \"#utility.yul\":5171:5193   */\n      mstore\n        /* \"#utility.yul\":4961:5199   */\n      pop\n        /* \"#utility.yul\":4918:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5334   */\n    tag_357:\n        /* \"#utility.yul\":5239:5245   */\n      0x00\n        /* \"#utility.yul\":5266:5286   */\n      tag_467\n      tag_334\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5256:5286   */\n      swap1\n      pop\n        /* \"#utility.yul\":5295:5328   */\n      tag_468\n        /* \"#utility.yul\":5323:5327   */\n      dup3\n        /* \"#utility.yul\":5315:5321   */\n      dup3\n        /* \"#utility.yul\":5295:5328   */\n      tag_356\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5205:5334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5340:5651   */\n    tag_358:\n        /* \"#utility.yul\":5417:5421   */\n      0x00\n        /* \"#utility.yul\":5507:5525   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5499:5505   */\n      dup3\n        /* \"#utility.yul\":5496:5526   */\n      gt\n        /* \"#utility.yul\":5493:5549   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":5529:5547   */\n      tag_471\n      tag_275\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":5493:5549   */\n    tag_470:\n        /* \"#utility.yul\":5579:5583   */\n      0x20\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5567:5584   */\n      mul\n        /* \"#utility.yul\":5559:5584   */\n      swap1\n      pop\n        /* \"#utility.yul\":5639:5643   */\n      0x20\n        /* \"#utility.yul\":5633:5637   */\n      dup2\n        /* \"#utility.yul\":5629:5644   */\n      add\n        /* \"#utility.yul\":5621:5644   */\n      swap1\n      pop\n        /* \"#utility.yul\":5340:5651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5657:5774   */\n    tag_359:\n        /* \"#utility.yul\":5766:5767   */\n      0x00\n        /* \"#utility.yul\":5763:5764   */\n      dup1\n        /* \"#utility.yul\":5756:5768   */\n      revert\n        /* \"#utility.yul\":5797:6507   */\n    tag_360:\n        /* \"#utility.yul\":5893:5898   */\n      0x00\n        /* \"#utility.yul\":5918:5999   */\n      tag_474\n        /* \"#utility.yul\":5934:5998   */\n      tag_475\n        /* \"#utility.yul\":5991:5997   */\n      dup5\n        /* \"#utility.yul\":5934:5998   */\n      tag_358\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":5918:5999   */\n      tag_357\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5909:5999   */\n      swap1\n      pop\n        /* \"#utility.yul\":6019:6024   */\n      dup1\n        /* \"#utility.yul\":6048:6054   */\n      dup4\n        /* \"#utility.yul\":6041:6046   */\n      dup3\n        /* \"#utility.yul\":6034:6055   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x20\n        /* \"#utility.yul\":6075:6080   */\n      dup3\n        /* \"#utility.yul\":6071:6087   */\n      add\n        /* \"#utility.yul\":6064:6087   */\n      swap1\n      pop\n        /* \"#utility.yul\":6135:6139   */\n      0x20\n        /* \"#utility.yul\":6127:6133   */\n      dup5\n        /* \"#utility.yul\":6123:6140   */\n      mul\n        /* \"#utility.yul\":6115:6121   */\n      dup4\n        /* \"#utility.yul\":6111:6141   */\n      add\n        /* \"#utility.yul\":6164:6167   */\n      dup6\n        /* \"#utility.yul\":6156:6162   */\n      dup2\n        /* \"#utility.yul\":6153:6168   */\n      gt\n        /* \"#utility.yul\":6150:6272   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":6183:6262   */\n      tag_477\n      tag_359\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6150:6272   */\n    tag_476:\n        /* \"#utility.yul\":6298:6304   */\n      dup4\n        /* \"#utility.yul\":6281:6501   */\n    tag_478:\n        /* \"#utility.yul\":6315:6321   */\n      dup2\n        /* \"#utility.yul\":6310:6313   */\n      dup2\n        /* \"#utility.yul\":6307:6322   */\n      lt\n        /* \"#utility.yul\":6281:6501   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":6390:6393   */\n      dup1\n        /* \"#utility.yul\":6419:6456   */\n      tag_481\n        /* \"#utility.yul\":6452:6455   */\n      dup9\n        /* \"#utility.yul\":6440:6450   */\n      dup3\n        /* \"#utility.yul\":6419:6456   */\n      tag_351\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6414:6417   */\n      dup5\n        /* \"#utility.yul\":6407:6457   */\n      mstore\n        /* \"#utility.yul\":6486:6490   */\n      0x20\n        /* \"#utility.yul\":6481:6484   */\n      dup5\n        /* \"#utility.yul\":6477:6491   */\n      add\n        /* \"#utility.yul\":6470:6491   */\n      swap4\n      pop\n        /* \"#utility.yul\":6357:6501   */\n      pop\n        /* \"#utility.yul\":6341:6345   */\n      0x20\n        /* \"#utility.yul\":6336:6339   */\n      dup2\n        /* \"#utility.yul\":6332:6346   */\n      add\n        /* \"#utility.yul\":6325:6346   */\n      swap1\n      pop\n        /* \"#utility.yul\":6281:6501   */\n      jump(tag_478)\n    tag_480:\n        /* \"#utility.yul\":6285:6306   */\n      pop\n        /* \"#utility.yul\":5899:6507   */\n      pop\n      pop\n        /* \"#utility.yul\":5797:6507   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6530:6900   */\n    tag_361:\n        /* \"#utility.yul\":6601:6606   */\n      0x00\n        /* \"#utility.yul\":6650:6653   */\n      dup3\n        /* \"#utility.yul\":6643:6647   */\n      0x1f\n        /* \"#utility.yul\":6635:6641   */\n      dup4\n        /* \"#utility.yul\":6631:6648   */\n      add\n        /* \"#utility.yul\":6627:6654   */\n      slt\n        /* \"#utility.yul\":6617:6739   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":6658:6737   */\n      tag_484\n      tag_354\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":6617:6739   */\n    tag_483:\n        /* \"#utility.yul\":6775:6781   */\n      dup2\n        /* \"#utility.yul\":6762:6782   */\n      calldataload\n        /* \"#utility.yul\":6800:6894   */\n      tag_485\n        /* \"#utility.yul\":6890:6893   */\n      dup5\n        /* \"#utility.yul\":6882:6888   */\n      dup3\n        /* \"#utility.yul\":6875:6879   */\n      0x20\n        /* \"#utility.yul\":6867:6873   */\n      dup7\n        /* \"#utility.yul\":6863:6880   */\n      add\n        /* \"#utility.yul\":6800:6894   */\n      tag_360\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6791:6894   */\n      swap2\n      pop\n        /* \"#utility.yul\":6607:6900   */\n      pop\n        /* \"#utility.yul\":6530:6900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6906:7445   */\n    tag_78:\n        /* \"#utility.yul\":6990:6996   */\n      0x00\n        /* \"#utility.yul\":7039:7041   */\n      0x20\n        /* \"#utility.yul\":7027:7036   */\n      dup3\n        /* \"#utility.yul\":7018:7025   */\n      dup5\n        /* \"#utility.yul\":7014:7037   */\n      sub\n        /* \"#utility.yul\":7010:7042   */\n      slt\n        /* \"#utility.yul\":7007:7126   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":7045:7124   */\n      tag_488\n      tag_335\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":7007:7126   */\n    tag_487:\n        /* \"#utility.yul\":7193:7194   */\n      0x00\n        /* \"#utility.yul\":7182:7191   */\n      dup3\n        /* \"#utility.yul\":7178:7195   */\n      add\n        /* \"#utility.yul\":7165:7196   */\n      calldataload\n        /* \"#utility.yul\":7223:7241   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7215:7221   */\n      dup2\n        /* \"#utility.yul\":7212:7242   */\n      gt\n        /* \"#utility.yul\":7209:7326   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":7245:7324   */\n      tag_490\n      tag_336\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":7209:7326   */\n    tag_489:\n        /* \"#utility.yul\":7350:7428   */\n      tag_491\n        /* \"#utility.yul\":7420:7427   */\n      dup5\n        /* \"#utility.yul\":7411:7417   */\n      dup3\n        /* \"#utility.yul\":7400:7409   */\n      dup6\n        /* \"#utility.yul\":7396:7418   */\n      add\n        /* \"#utility.yul\":7350:7428   */\n      tag_361\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7340:7428   */\n      swap2\n      pop\n        /* \"#utility.yul\":7136:7438   */\n      pop\n        /* \"#utility.yul\":6906:7445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7451:7780   */\n    tag_91:\n        /* \"#utility.yul\":7510:7516   */\n      0x00\n        /* \"#utility.yul\":7559:7561   */\n      0x20\n        /* \"#utility.yul\":7547:7556   */\n      dup3\n        /* \"#utility.yul\":7538:7545   */\n      dup5\n        /* \"#utility.yul\":7534:7557   */\n      sub\n        /* \"#utility.yul\":7530:7562   */\n      slt\n        /* \"#utility.yul\":7527:7646   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":7565:7644   */\n      tag_494\n      tag_335\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":7527:7646   */\n    tag_493:\n        /* \"#utility.yul\":7685:7686   */\n      0x00\n        /* \"#utility.yul\":7710:7763   */\n      tag_495\n        /* \"#utility.yul\":7755:7762   */\n      dup5\n        /* \"#utility.yul\":7746:7752   */\n      dup3\n        /* \"#utility.yul\":7735:7744   */\n      dup6\n        /* \"#utility.yul\":7731:7753   */\n      add\n        /* \"#utility.yul\":7710:7763   */\n      tag_351\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7700:7763   */\n      swap2\n      pop\n        /* \"#utility.yul\":7656:7773   */\n      pop\n        /* \"#utility.yul\":7451:7780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7786:7846   */\n    tag_362:\n        /* \"#utility.yul\":7814:7817   */\n      0x00\n        /* \"#utility.yul\":7835:7840   */\n      dup2\n        /* \"#utility.yul\":7828:7840   */\n      swap1\n      pop\n        /* \"#utility.yul\":7786:7846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7852:7994   */\n    tag_363:\n        /* \"#utility.yul\":7902:7911   */\n      0x00\n        /* \"#utility.yul\":7935:7988   */\n      tag_498\n        /* \"#utility.yul\":7953:7987   */\n      tag_499\n        /* \"#utility.yul\":7962:7986   */\n      tag_500\n        /* \"#utility.yul\":7980:7985   */\n      dup5\n        /* \"#utility.yul\":7962:7986   */\n      tag_348\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":7953:7987   */\n      tag_362\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7935:7988   */\n      tag_348\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7922:7988   */\n      swap1\n      pop\n        /* \"#utility.yul\":7852:7994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8000:8126   */\n    tag_364:\n        /* \"#utility.yul\":8050:8059   */\n      0x00\n        /* \"#utility.yul\":8083:8120   */\n      tag_502\n        /* \"#utility.yul\":8114:8119   */\n      dup3\n        /* \"#utility.yul\":8083:8120   */\n      tag_363\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8070:8120   */\n      swap1\n      pop\n        /* \"#utility.yul\":8000:8126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8132:8272   */\n    tag_365:\n        /* \"#utility.yul\":8196:8205   */\n      0x00\n        /* \"#utility.yul\":8229:8266   */\n      tag_504\n        /* \"#utility.yul\":8260:8265   */\n      dup3\n        /* \"#utility.yul\":8229:8266   */\n      tag_364\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8216:8266   */\n      swap1\n      pop\n        /* \"#utility.yul\":8132:8272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8278:8437   */\n    tag_366:\n        /* \"#utility.yul\":8379:8430   */\n      tag_506\n        /* \"#utility.yul\":8424:8429   */\n      dup2\n        /* \"#utility.yul\":8379:8430   */\n      tag_365\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8374:8377   */\n      dup3\n        /* \"#utility.yul\":8367:8431   */\n      mstore\n        /* \"#utility.yul\":8278:8437   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8443:8693   */\n    tag_116:\n        /* \"#utility.yul\":8550:8554   */\n      0x00\n        /* \"#utility.yul\":8588:8590   */\n      0x20\n        /* \"#utility.yul\":8577:8586   */\n      dup3\n        /* \"#utility.yul\":8573:8591   */\n      add\n        /* \"#utility.yul\":8565:8591   */\n      swap1\n      pop\n        /* \"#utility.yul\":8601:8686   */\n      tag_508\n        /* \"#utility.yul\":8683:8684   */\n      0x00\n        /* \"#utility.yul\":8672:8681   */\n      dup4\n        /* \"#utility.yul\":8668:8685   */\n      add\n        /* \"#utility.yul\":8659:8665   */\n      dup5\n        /* \"#utility.yul\":8601:8686   */\n      tag_366\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":8443:8693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8699:9031   */\n    tag_132:\n        /* \"#utility.yul\":8820:8824   */\n      0x00\n        /* \"#utility.yul\":8858:8860   */\n      0x40\n        /* \"#utility.yul\":8847:8856   */\n      dup3\n        /* \"#utility.yul\":8843:8861   */\n      add\n        /* \"#utility.yul\":8835:8861   */\n      swap1\n      pop\n        /* \"#utility.yul\":8871:8942   */\n      tag_510\n        /* \"#utility.yul\":8939:8940   */\n      0x00\n        /* \"#utility.yul\":8928:8937   */\n      dup4\n        /* \"#utility.yul\":8924:8941   */\n      add\n        /* \"#utility.yul\":8915:8921   */\n      dup6\n        /* \"#utility.yul\":8871:8942   */\n      tag_347\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8952:9024   */\n      tag_511\n        /* \"#utility.yul\":9020:9022   */\n      0x20\n        /* \"#utility.yul\":9009:9018   */\n      dup4\n        /* \"#utility.yul\":9005:9023   */\n      add\n        /* \"#utility.yul\":8996:9002   */\n      dup5\n        /* \"#utility.yul\":8952:9024   */\n      tag_347\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":8699:9031   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9037:9206   */\n    tag_367:\n        /* \"#utility.yul\":9121:9132   */\n      0x00\n        /* \"#utility.yul\":9155:9161   */\n      dup3\n        /* \"#utility.yul\":9150:9153   */\n      dup3\n        /* \"#utility.yul\":9143:9162   */\n      mstore\n        /* \"#utility.yul\":9195:9199   */\n      0x20\n        /* \"#utility.yul\":9190:9193   */\n      dup3\n        /* \"#utility.yul\":9186:9200   */\n      add\n        /* \"#utility.yul\":9171:9200   */\n      swap1\n      pop\n        /* \"#utility.yul\":9037:9206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9212:9446   */\n    tag_368:\n        /* \"#utility.yul\":9352:9386   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":9348:9349   */\n      0x00\n        /* \"#utility.yul\":9340:9346   */\n      dup3\n        /* \"#utility.yul\":9336:9350   */\n      add\n        /* \"#utility.yul\":9329:9387   */\n      mstore\n        /* \"#utility.yul\":9421:9438   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":9416:9418   */\n      0x20\n        /* \"#utility.yul\":9408:9414   */\n      dup3\n        /* \"#utility.yul\":9404:9419   */\n      add\n        /* \"#utility.yul\":9397:9439   */\n      mstore\n        /* \"#utility.yul\":9212:9446   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9452:9818   */\n    tag_369:\n        /* \"#utility.yul\":9594:9597   */\n      0x00\n        /* \"#utility.yul\":9615:9682   */\n      tag_515\n        /* \"#utility.yul\":9679:9681   */\n      0x2f\n        /* \"#utility.yul\":9674:9677   */\n      dup4\n        /* \"#utility.yul\":9615:9682   */\n      tag_367\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9608:9682   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9784   */\n      tag_516\n        /* \"#utility.yul\":9780:9783   */\n      dup3\n        /* \"#utility.yul\":9691:9784   */\n      tag_368\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":9809:9811   */\n      0x40\n        /* \"#utility.yul\":9804:9807   */\n      dup3\n        /* \"#utility.yul\":9800:9812   */\n      add\n        /* \"#utility.yul\":9793:9812   */\n      swap1\n      pop\n        /* \"#utility.yul\":9452:9818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9824:10243   */\n    tag_158:\n        /* \"#utility.yul\":9990:9994   */\n      0x00\n        /* \"#utility.yul\":10028:10030   */\n      0x20\n        /* \"#utility.yul\":10017:10026   */\n      dup3\n        /* \"#utility.yul\":10013:10031   */\n      add\n        /* \"#utility.yul\":10005:10031   */\n      swap1\n      pop\n        /* \"#utility.yul\":10077:10086   */\n      dup2\n        /* \"#utility.yul\":10071:10075   */\n      dup2\n        /* \"#utility.yul\":10067:10087   */\n      sub\n        /* \"#utility.yul\":10063:10064   */\n      0x00\n        /* \"#utility.yul\":10052:10061   */\n      dup4\n        /* \"#utility.yul\":10048:10065   */\n      add\n        /* \"#utility.yul\":10041:10088   */\n      mstore\n        /* \"#utility.yul\":10105:10236   */\n      tag_518\n        /* \"#utility.yul\":10231:10235   */\n      dup2\n        /* \"#utility.yul\":10105:10236   */\n      tag_369\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10097:10236   */\n      swap1\n      pop\n        /* \"#utility.yul\":9824:10243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10249:10429   */\n    tag_172:\n        /* \"#utility.yul\":10297:10374   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10294:10295   */\n      0x00\n        /* \"#utility.yul\":10287:10375   */\n      mstore\n        /* \"#utility.yul\":10394:10398   */\n      0x32\n        /* \"#utility.yul\":10391:10392   */\n      0x04\n        /* \"#utility.yul\":10384:10399   */\n      mstore\n        /* \"#utility.yul\":10418:10422   */\n      0x24\n        /* \"#utility.yul\":10415:10416   */\n      0x00\n        /* \"#utility.yul\":10408:10423   */\n      revert\n        /* \"#utility.yul\":10435:10615   */\n    tag_370:\n        /* \"#utility.yul\":10483:10560   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10480:10481   */\n      0x00\n        /* \"#utility.yul\":10473:10561   */\n      mstore\n        /* \"#utility.yul\":10580:10584   */\n      0x11\n        /* \"#utility.yul\":10577:10578   */\n      0x04\n        /* \"#utility.yul\":10570:10585   */\n      mstore\n        /* \"#utility.yul\":10604:10608   */\n      0x24\n        /* \"#utility.yul\":10601:10602   */\n      0x00\n        /* \"#utility.yul\":10594:10609   */\n      revert\n        /* \"#utility.yul\":10621:10854   */\n    tag_174:\n        /* \"#utility.yul\":10660:10663   */\n      0x00\n        /* \"#utility.yul\":10683:10707   */\n      tag_522\n        /* \"#utility.yul\":10701:10706   */\n      dup3\n        /* \"#utility.yul\":10683:10707   */\n      tag_346\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":10674:10707   */\n      swap2\n      pop\n        /* \"#utility.yul\":10729:10795   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10722:10727   */\n      dup3\n        /* \"#utility.yul\":10719:10796   */\n      sub\n        /* \"#utility.yul\":10716:10819   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":10799:10817   */\n      tag_524\n      tag_370\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10716:10819   */\n    tag_523:\n        /* \"#utility.yul\":10846:10847   */\n      0x01\n        /* \"#utility.yul\":10839:10844   */\n      dup3\n        /* \"#utility.yul\":10835:10848   */\n      add\n        /* \"#utility.yul\":10828:10848   */\n      swap1\n      pop\n        /* \"#utility.yul\":10621:10854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10860:11041   */\n    tag_371:\n        /* \"#utility.yul\":11000:11033   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10996:10997   */\n      0x00\n        /* \"#utility.yul\":10988:10994   */\n      dup3\n        /* \"#utility.yul\":10984:10998   */\n      add\n        /* \"#utility.yul\":10977:11034   */\n      mstore\n        /* \"#utility.yul\":10860:11041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11047:11413   */\n    tag_372:\n        /* \"#utility.yul\":11189:11192   */\n      0x00\n        /* \"#utility.yul\":11210:11277   */\n      tag_527\n        /* \"#utility.yul\":11274:11276   */\n      0x1f\n        /* \"#utility.yul\":11269:11272   */\n      dup4\n        /* \"#utility.yul\":11210:11277   */\n      tag_367\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":11203:11277   */\n      swap2\n      pop\n        /* \"#utility.yul\":11286:11379   */\n      tag_528\n        /* \"#utility.yul\":11375:11378   */\n      dup3\n        /* \"#utility.yul\":11286:11379   */\n      tag_371\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11404:11406   */\n      0x20\n        /* \"#utility.yul\":11399:11402   */\n      dup3\n        /* \"#utility.yul\":11395:11407   */\n      add\n        /* \"#utility.yul\":11388:11407   */\n      swap1\n      pop\n        /* \"#utility.yul\":11047:11413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11419:11838   */\n    tag_203:\n        /* \"#utility.yul\":11585:11589   */\n      0x00\n        /* \"#utility.yul\":11623:11625   */\n      0x20\n        /* \"#utility.yul\":11612:11621   */\n      dup3\n        /* \"#utility.yul\":11608:11626   */\n      add\n        /* \"#utility.yul\":11600:11626   */\n      swap1\n      pop\n        /* \"#utility.yul\":11672:11681   */\n      dup2\n        /* \"#utility.yul\":11666:11670   */\n      dup2\n        /* \"#utility.yul\":11662:11682   */\n      sub\n        /* \"#utility.yul\":11658:11659   */\n      0x00\n        /* \"#utility.yul\":11647:11656   */\n      dup4\n        /* \"#utility.yul\":11643:11660   */\n      add\n        /* \"#utility.yul\":11636:11683   */\n      mstore\n        /* \"#utility.yul\":11700:11831   */\n      tag_530\n        /* \"#utility.yul\":11826:11830   */\n      dup2\n        /* \"#utility.yul\":11700:11831   */\n      tag_372\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11692:11831   */\n      swap1\n      pop\n        /* \"#utility.yul\":11419:11838   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11844:12133   */\n    tag_373:\n        /* \"#utility.yul\":11984:12018   */\n      0x57686974656c69737443726f776473616c653a2062656e656669636961727920\n        /* \"#utility.yul\":11980:11981   */\n      0x00\n        /* \"#utility.yul\":11972:11978   */\n      dup3\n        /* \"#utility.yul\":11968:11982   */\n      add\n        /* \"#utility.yul\":11961:12019   */\n      mstore\n        /* \"#utility.yul\":12053:12087   */\n      0x646f65736e27742068617665207468652057686974656c697374656420726f6c\n        /* \"#utility.yul\":12048:12050   */\n      0x20\n        /* \"#utility.yul\":12040:12046   */\n      dup3\n        /* \"#utility.yul\":12036:12051   */\n      add\n        /* \"#utility.yul\":12029:12088   */\n      mstore\n        /* \"#utility.yul\":12122:12125   */\n      0x6500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12117:12119   */\n      0x40\n        /* \"#utility.yul\":12109:12115   */\n      dup3\n        /* \"#utility.yul\":12105:12120   */\n      add\n        /* \"#utility.yul\":12098:12126   */\n      mstore\n        /* \"#utility.yul\":11844:12133   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12139:12505   */\n    tag_374:\n        /* \"#utility.yul\":12281:12284   */\n      0x00\n        /* \"#utility.yul\":12302:12369   */\n      tag_533\n        /* \"#utility.yul\":12366:12368   */\n      0x41\n        /* \"#utility.yul\":12361:12364   */\n      dup4\n        /* \"#utility.yul\":12302:12369   */\n      tag_367\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12295:12369   */\n      swap2\n      pop\n        /* \"#utility.yul\":12378:12471   */\n      tag_534\n        /* \"#utility.yul\":12467:12470   */\n      dup3\n        /* \"#utility.yul\":12378:12471   */\n      tag_373\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12496:12498   */\n      0x60\n        /* \"#utility.yul\":12491:12494   */\n      dup3\n        /* \"#utility.yul\":12487:12499   */\n      add\n        /* \"#utility.yul\":12480:12499   */\n      swap1\n      pop\n        /* \"#utility.yul\":12139:12505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12511:12930   */\n    tag_208:\n        /* \"#utility.yul\":12677:12681   */\n      0x00\n        /* \"#utility.yul\":12715:12717   */\n      0x20\n        /* \"#utility.yul\":12704:12713   */\n      dup3\n        /* \"#utility.yul\":12700:12718   */\n      add\n        /* \"#utility.yul\":12692:12718   */\n      swap1\n      pop\n        /* \"#utility.yul\":12764:12773   */\n      dup2\n        /* \"#utility.yul\":12758:12762   */\n      dup2\n        /* \"#utility.yul\":12754:12774   */\n      sub\n        /* \"#utility.yul\":12750:12751   */\n      0x00\n        /* \"#utility.yul\":12739:12748   */\n      dup4\n        /* \"#utility.yul\":12735:12752   */\n      add\n        /* \"#utility.yul\":12728:12775   */\n      mstore\n        /* \"#utility.yul\":12792:12923   */\n      tag_536\n        /* \"#utility.yul\":12918:12922   */\n      dup2\n        /* \"#utility.yul\":12792:12923   */\n      tag_374\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12784:12923   */\n      swap1\n      pop\n        /* \"#utility.yul\":12511:12930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12936:13127   */\n    tag_216:\n        /* \"#utility.yul\":12976:12979   */\n      0x00\n        /* \"#utility.yul\":12995:13015   */\n      tag_538\n        /* \"#utility.yul\":13013:13014   */\n      dup3\n        /* \"#utility.yul\":12995:13015   */\n      tag_346\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12990:13015   */\n      swap2\n      pop\n        /* \"#utility.yul\":13029:13049   */\n      tag_539\n        /* \"#utility.yul\":13047:13048   */\n      dup4\n        /* \"#utility.yul\":13029:13049   */\n      tag_346\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":13024:13049   */\n      swap3\n      pop\n        /* \"#utility.yul\":13072:13073   */\n      dup3\n        /* \"#utility.yul\":13069:13070   */\n      dup3\n        /* \"#utility.yul\":13065:13074   */\n      add\n        /* \"#utility.yul\":13058:13074   */\n      swap1\n      pop\n        /* \"#utility.yul\":13093:13096   */\n      dup1\n        /* \"#utility.yul\":13090:13091   */\n      dup3\n        /* \"#utility.yul\":13087:13097   */\n      gt\n        /* \"#utility.yul\":13084:13120   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":13100:13118   */\n      tag_541\n      tag_370\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13084:13120   */\n    tag_540:\n        /* \"#utility.yul\":12936:13127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13133:13362   */\n    tag_375:\n        /* \"#utility.yul\":13273:13307   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":13269:13270   */\n      0x00\n        /* \"#utility.yul\":13261:13267   */\n      dup3\n        /* \"#utility.yul\":13257:13271   */\n      add\n        /* \"#utility.yul\":13250:13308   */\n      mstore\n        /* \"#utility.yul\":13342:13354   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13337:13339   */\n      0x20\n        /* \"#utility.yul\":13329:13335   */\n      dup3\n        /* \"#utility.yul\":13325:13340   */\n      add\n        /* \"#utility.yul\":13318:13355   */\n      mstore\n        /* \"#utility.yul\":13133:13362   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13368:13734   */\n    tag_376:\n        /* \"#utility.yul\":13510:13513   */\n      0x00\n        /* \"#utility.yul\":13531:13598   */\n      tag_544\n        /* \"#utility.yul\":13595:13597   */\n      0x2a\n        /* \"#utility.yul\":13590:13593   */\n      dup4\n        /* \"#utility.yul\":13531:13598   */\n      tag_367\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":13524:13598   */\n      swap2\n      pop\n        /* \"#utility.yul\":13607:13700   */\n      tag_545\n        /* \"#utility.yul\":13696:13699   */\n      dup3\n        /* \"#utility.yul\":13607:13700   */\n      tag_375\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13725:13727   */\n      0x40\n        /* \"#utility.yul\":13720:13723   */\n      dup3\n        /* \"#utility.yul\":13716:13728   */\n      add\n        /* \"#utility.yul\":13709:13728   */\n      swap1\n      pop\n        /* \"#utility.yul\":13368:13734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13740:14159   */\n    tag_242:\n        /* \"#utility.yul\":13906:13910   */\n      0x00\n        /* \"#utility.yul\":13944:13946   */\n      0x20\n        /* \"#utility.yul\":13933:13942   */\n      dup3\n        /* \"#utility.yul\":13929:13947   */\n      add\n        /* \"#utility.yul\":13921:13947   */\n      swap1\n      pop\n        /* \"#utility.yul\":13993:14002   */\n      dup2\n        /* \"#utility.yul\":13987:13991   */\n      dup2\n        /* \"#utility.yul\":13983:14003   */\n      sub\n        /* \"#utility.yul\":13979:13980   */\n      0x00\n        /* \"#utility.yul\":13968:13977   */\n      dup4\n        /* \"#utility.yul\":13964:13981   */\n      add\n        /* \"#utility.yul\":13957:14004   */\n      mstore\n        /* \"#utility.yul\":14021:14152   */\n      tag_547\n        /* \"#utility.yul\":14147:14151   */\n      dup2\n        /* \"#utility.yul\":14021:14152   */\n      tag_376\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":14013:14152   */\n      swap1\n      pop\n        /* \"#utility.yul\":13740:14159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14165:14340   */\n    tag_377:\n        /* \"#utility.yul\":14305:14332   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":14301:14302   */\n      0x00\n        /* \"#utility.yul\":14293:14299   */\n      dup3\n        /* \"#utility.yul\":14289:14303   */\n      add\n        /* \"#utility.yul\":14282:14333   */\n      mstore\n        /* \"#utility.yul\":14165:14340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14346:14712   */\n    tag_378:\n        /* \"#utility.yul\":14488:14491   */\n      0x00\n        /* \"#utility.yul\":14509:14576   */\n      tag_550\n        /* \"#utility.yul\":14573:14575   */\n      0x19\n        /* \"#utility.yul\":14568:14571   */\n      dup4\n        /* \"#utility.yul\":14509:14576   */\n      tag_367\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":14502:14576   */\n      swap2\n      pop\n        /* \"#utility.yul\":14585:14678   */\n      tag_551\n        /* \"#utility.yul\":14674:14677   */\n      dup3\n        /* \"#utility.yul\":14585:14678   */\n      tag_377\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":14703:14705   */\n      0x20\n        /* \"#utility.yul\":14698:14701   */\n      dup3\n        /* \"#utility.yul\":14694:14706   */\n      add\n        /* \"#utility.yul\":14687:14706   */\n      swap1\n      pop\n        /* \"#utility.yul\":14346:14712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14718:15137   */\n    tag_245:\n        /* \"#utility.yul\":14884:14888   */\n      0x00\n        /* \"#utility.yul\":14922:14924   */\n      0x20\n        /* \"#utility.yul\":14911:14920   */\n      dup3\n        /* \"#utility.yul\":14907:14925   */\n      add\n        /* \"#utility.yul\":14899:14925   */\n      swap1\n      pop\n        /* \"#utility.yul\":14971:14980   */\n      dup2\n        /* \"#utility.yul\":14965:14969   */\n      dup2\n        /* \"#utility.yul\":14961:14981   */\n      sub\n        /* \"#utility.yul\":14957:14958   */\n      0x00\n        /* \"#utility.yul\":14946:14955   */\n      dup4\n        /* \"#utility.yul\":14942:14959   */\n      add\n        /* \"#utility.yul\":14935:14982   */\n      mstore\n        /* \"#utility.yul\":14999:15130   */\n      tag_553\n        /* \"#utility.yul\":15125:15129   */\n      dup2\n        /* \"#utility.yul\":14999:15130   */\n      tag_378\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":14991:15130   */\n      swap1\n      pop\n        /* \"#utility.yul\":14718:15137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15143:15553   */\n    tag_248:\n        /* \"#utility.yul\":15183:15190   */\n      0x00\n        /* \"#utility.yul\":15206:15226   */\n      tag_555\n        /* \"#utility.yul\":15224:15225   */\n      dup3\n        /* \"#utility.yul\":15206:15226   */\n      tag_346\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":15201:15226   */\n      swap2\n      pop\n        /* \"#utility.yul\":15240:15260   */\n      tag_556\n        /* \"#utility.yul\":15258:15259   */\n      dup4\n        /* \"#utility.yul\":15240:15260   */\n      tag_346\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15235:15260   */\n      swap3\n      pop\n        /* \"#utility.yul\":15295:15296   */\n      dup3\n        /* \"#utility.yul\":15292:15293   */\n      dup3\n        /* \"#utility.yul\":15288:15297   */\n      mul\n        /* \"#utility.yul\":15317:15347   */\n      tag_557\n        /* \"#utility.yul\":15335:15346   */\n      dup2\n        /* \"#utility.yul\":15317:15347   */\n      tag_346\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":15306:15347   */\n      swap2\n      pop\n        /* \"#utility.yul\":15496:15497   */\n      dup3\n        /* \"#utility.yul\":15487:15494   */\n      dup3\n        /* \"#utility.yul\":15483:15498   */\n      div\n        /* \"#utility.yul\":15480:15481   */\n      dup5\n        /* \"#utility.yul\":15477:15499   */\n      eq\n        /* \"#utility.yul\":15457:15458   */\n      dup4\n        /* \"#utility.yul\":15450:15459   */\n      iszero\n        /* \"#utility.yul\":15430:15513   */\n      or\n        /* \"#utility.yul\":15407:15546   */\n      tag_558\n      jumpi\n        /* \"#utility.yul\":15526:15544   */\n      tag_559\n      tag_370\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":15407:15546   */\n    tag_558:\n        /* \"#utility.yul\":15191:15553   */\n      pop\n        /* \"#utility.yul\":15143:15553   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15559:15707   */\n    tag_379:\n        /* \"#utility.yul\":15661:15672   */\n      0x00\n        /* \"#utility.yul\":15698:15701   */\n      dup2\n        /* \"#utility.yul\":15683:15701   */\n      swap1\n      pop\n        /* \"#utility.yul\":15559:15707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15713:15886   */\n    tag_380:\n        /* \"#utility.yul\":15853:15878   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":15849:15850   */\n      0x00\n        /* \"#utility.yul\":15841:15847   */\n      dup3\n        /* \"#utility.yul\":15837:15851   */\n      add\n        /* \"#utility.yul\":15830:15879   */\n      mstore\n        /* \"#utility.yul\":15713:15886   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15892:16294   */\n    tag_381:\n        /* \"#utility.yul\":16052:16055   */\n      0x00\n        /* \"#utility.yul\":16073:16158   */\n      tag_563\n        /* \"#utility.yul\":16155:16157   */\n      0x17\n        /* \"#utility.yul\":16150:16153   */\n      dup4\n        /* \"#utility.yul\":16073:16158   */\n      tag_379\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":16066:16158   */\n      swap2\n      pop\n        /* \"#utility.yul\":16167:16260   */\n      tag_564\n        /* \"#utility.yul\":16256:16259   */\n      dup3\n        /* \"#utility.yul\":16167:16260   */\n      tag_380\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":16285:16287   */\n      0x17\n        /* \"#utility.yul\":16280:16283   */\n      dup3\n        /* \"#utility.yul\":16276:16288   */\n      add\n        /* \"#utility.yul\":16269:16288   */\n      swap1\n      pop\n        /* \"#utility.yul\":15892:16294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16300:16399   */\n    tag_382:\n        /* \"#utility.yul\":16352:16358   */\n      0x00\n        /* \"#utility.yul\":16386:16391   */\n      dup2\n        /* \"#utility.yul\":16380:16392   */\n      mload\n        /* \"#utility.yul\":16370:16392   */\n      swap1\n      pop\n        /* \"#utility.yul\":16300:16399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16405:16651   */\n    tag_383:\n        /* \"#utility.yul\":16486:16487   */\n      0x00\n        /* \"#utility.yul\":16496:16609   */\n    tag_567:\n        /* \"#utility.yul\":16510:16516   */\n      dup4\n        /* \"#utility.yul\":16507:16508   */\n      dup2\n        /* \"#utility.yul\":16504:16517   */\n      lt\n        /* \"#utility.yul\":16496:16609   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":16595:16596   */\n      dup1\n        /* \"#utility.yul\":16590:16593   */\n      dup3\n        /* \"#utility.yul\":16586:16597   */\n      add\n        /* \"#utility.yul\":16580:16598   */\n      mload\n        /* \"#utility.yul\":16576:16577   */\n      dup2\n        /* \"#utility.yul\":16571:16574   */\n      dup5\n        /* \"#utility.yul\":16567:16578   */\n      add\n        /* \"#utility.yul\":16560:16599   */\n      mstore\n        /* \"#utility.yul\":16532:16534   */\n      0x20\n        /* \"#utility.yul\":16529:16530   */\n      dup2\n        /* \"#utility.yul\":16525:16535   */\n      add\n        /* \"#utility.yul\":16520:16535   */\n      swap1\n      pop\n        /* \"#utility.yul\":16496:16609   */\n      jump(tag_567)\n    tag_569:\n        /* \"#utility.yul\":16643:16644   */\n      0x00\n        /* \"#utility.yul\":16634:16640   */\n      dup5\n        /* \"#utility.yul\":16629:16632   */\n      dup5\n        /* \"#utility.yul\":16625:16641   */\n      add\n        /* \"#utility.yul\":16618:16645   */\n      mstore\n        /* \"#utility.yul\":16467:16651   */\n      pop\n        /* \"#utility.yul\":16405:16651   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16657:17047   */\n    tag_384:\n        /* \"#utility.yul\":16763:16766   */\n      0x00\n        /* \"#utility.yul\":16791:16830   */\n      tag_571\n        /* \"#utility.yul\":16824:16829   */\n      dup3\n        /* \"#utility.yul\":16791:16830   */\n      tag_382\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":16846:16935   */\n      tag_572\n        /* \"#utility.yul\":16928:16934   */\n      dup2\n        /* \"#utility.yul\":16923:16926   */\n      dup6\n        /* \"#utility.yul\":16846:16935   */\n      tag_379\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":16839:16935   */\n      swap4\n      pop\n        /* \"#utility.yul\":16944:17009   */\n      tag_573\n        /* \"#utility.yul\":17002:17008   */\n      dup2\n        /* \"#utility.yul\":16997:17000   */\n      dup6\n        /* \"#utility.yul\":16990:16994   */\n      0x20\n        /* \"#utility.yul\":16983:16988   */\n      dup7\n        /* \"#utility.yul\":16979:16995   */\n      add\n        /* \"#utility.yul\":16944:17009   */\n      tag_383\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":17034:17040   */\n      dup1\n        /* \"#utility.yul\":17029:17032   */\n      dup5\n        /* \"#utility.yul\":17025:17041   */\n      add\n        /* \"#utility.yul\":17018:17041   */\n      swap2\n      pop\n        /* \"#utility.yul\":16767:17047   */\n      pop\n        /* \"#utility.yul\":16657:17047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17053:17220   */\n    tag_385:\n        /* \"#utility.yul\":17193:17212   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":17189:17190   */\n      0x00\n        /* \"#utility.yul\":17181:17187   */\n      dup3\n        /* \"#utility.yul\":17177:17191   */\n      add\n        /* \"#utility.yul\":17170:17213   */\n      mstore\n        /* \"#utility.yul\":17053:17220   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17226:17628   */\n    tag_386:\n        /* \"#utility.yul\":17386:17389   */\n      0x00\n        /* \"#utility.yul\":17407:17492   */\n      tag_576\n        /* \"#utility.yul\":17489:17491   */\n      0x11\n        /* \"#utility.yul\":17484:17487   */\n      dup4\n        /* \"#utility.yul\":17407:17492   */\n      tag_379\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":17400:17492   */\n      swap2\n      pop\n        /* \"#utility.yul\":17501:17594   */\n      tag_577\n        /* \"#utility.yul\":17590:17593   */\n      dup3\n        /* \"#utility.yul\":17501:17594   */\n      tag_385\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17619:17621   */\n      0x11\n        /* \"#utility.yul\":17614:17617   */\n      dup3\n        /* \"#utility.yul\":17610:17622   */\n      add\n        /* \"#utility.yul\":17603:17622   */\n      swap1\n      pop\n        /* \"#utility.yul\":17226:17628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17634:18601   */\n    tag_260:\n        /* \"#utility.yul\":18016:18019   */\n      0x00\n        /* \"#utility.yul\":18038:18186   */\n      tag_579\n        /* \"#utility.yul\":18182:18185   */\n      dup3\n        /* \"#utility.yul\":18038:18186   */\n      tag_381\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":18031:18186   */\n      swap2\n      pop\n        /* \"#utility.yul\":18203:18298   */\n      tag_580\n        /* \"#utility.yul\":18294:18297   */\n      dup3\n        /* \"#utility.yul\":18285:18291   */\n      dup6\n        /* \"#utility.yul\":18203:18298   */\n      tag_384\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":18196:18298   */\n      swap2\n      pop\n        /* \"#utility.yul\":18315:18463   */\n      tag_581\n        /* \"#utility.yul\":18459:18462   */\n      dup3\n        /* \"#utility.yul\":18315:18463   */\n      tag_386\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":18308:18463   */\n      swap2\n      pop\n        /* \"#utility.yul\":18480:18575   */\n      tag_582\n        /* \"#utility.yul\":18571:18574   */\n      dup3\n        /* \"#utility.yul\":18562:18568   */\n      dup5\n        /* \"#utility.yul\":18480:18575   */\n      tag_384\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":18473:18575   */\n      swap2\n      pop\n        /* \"#utility.yul\":18592:18595   */\n      dup2\n        /* \"#utility.yul\":18585:18595   */\n      swap1\n      pop\n        /* \"#utility.yul\":17634:18601   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18607:18984   */\n    tag_387:\n        /* \"#utility.yul\":18695:18698   */\n      0x00\n        /* \"#utility.yul\":18723:18762   */\n      tag_584\n        /* \"#utility.yul\":18756:18761   */\n      dup3\n        /* \"#utility.yul\":18723:18762   */\n      tag_382\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":18778:18849   */\n      tag_585\n        /* \"#utility.yul\":18842:18848   */\n      dup2\n        /* \"#utility.yul\":18837:18840   */\n      dup6\n        /* \"#utility.yul\":18778:18849   */\n      tag_367\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":18771:18849   */\n      swap4\n      pop\n        /* \"#utility.yul\":18858:18923   */\n      tag_586\n        /* \"#utility.yul\":18916:18922   */\n      dup2\n        /* \"#utility.yul\":18911:18914   */\n      dup6\n        /* \"#utility.yul\":18904:18908   */\n      0x20\n        /* \"#utility.yul\":18897:18902   */\n      dup7\n        /* \"#utility.yul\":18893:18909   */\n      add\n        /* \"#utility.yul\":18858:18923   */\n      tag_383\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":18948:18977   */\n      tag_587\n        /* \"#utility.yul\":18970:18976   */\n      dup2\n        /* \"#utility.yul\":18948:18977   */\n      tag_355\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18943:18946   */\n      dup5\n        /* \"#utility.yul\":18939:18978   */\n      add\n        /* \"#utility.yul\":18932:18978   */\n      swap2\n      pop\n        /* \"#utility.yul\":18699:18984   */\n      pop\n        /* \"#utility.yul\":18607:18984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18990:19303   */\n    tag_262:\n        /* \"#utility.yul\":19103:19107   */\n      0x00\n        /* \"#utility.yul\":19141:19143   */\n      0x20\n        /* \"#utility.yul\":19130:19139   */\n      dup3\n        /* \"#utility.yul\":19126:19144   */\n      add\n        /* \"#utility.yul\":19118:19144   */\n      swap1\n      pop\n        /* \"#utility.yul\":19190:19199   */\n      dup2\n        /* \"#utility.yul\":19184:19188   */\n      dup2\n        /* \"#utility.yul\":19180:19200   */\n      sub\n        /* \"#utility.yul\":19176:19177   */\n      0x00\n        /* \"#utility.yul\":19165:19174   */\n      dup4\n        /* \"#utility.yul\":19161:19178   */\n      add\n        /* \"#utility.yul\":19154:19201   */\n      mstore\n        /* \"#utility.yul\":19218:19296   */\n      tag_589\n        /* \"#utility.yul\":19291:19295   */\n      dup2\n        /* \"#utility.yul\":19282:19288   */\n      dup5\n        /* \"#utility.yul\":19218:19296   */\n      tag_387\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":19210:19296   */\n      swap1\n      pop\n        /* \"#utility.yul\":18990:19303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19309:19427   */\n    tag_388:\n        /* \"#utility.yul\":19396:19420   */\n      tag_591\n        /* \"#utility.yul\":19414:19419   */\n      dup2\n        /* \"#utility.yul\":19396:19420   */\n      tag_349\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":19391:19394   */\n      dup3\n        /* \"#utility.yul\":19384:19421   */\n      mstore\n        /* \"#utility.yul\":19309:19427   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19433:19765   */\n    tag_266:\n        /* \"#utility.yul\":19554:19558   */\n      0x00\n        /* \"#utility.yul\":19592:19594   */\n      0x40\n        /* \"#utility.yul\":19581:19590   */\n      dup3\n        /* \"#utility.yul\":19577:19595   */\n      add\n        /* \"#utility.yul\":19569:19595   */\n      swap1\n      pop\n        /* \"#utility.yul\":19605:19676   */\n      tag_593\n        /* \"#utility.yul\":19673:19674   */\n      0x00\n        /* \"#utility.yul\":19662:19671   */\n      dup4\n        /* \"#utility.yul\":19658:19675   */\n      add\n        /* \"#utility.yul\":19649:19655   */\n      dup6\n        /* \"#utility.yul\":19605:19676   */\n      tag_388\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":19686:19758   */\n      tag_594\n        /* \"#utility.yul\":19754:19756   */\n      0x20\n        /* \"#utility.yul\":19743:19752   */\n      dup4\n        /* \"#utility.yul\":19739:19757   */\n      add\n        /* \"#utility.yul\":19730:19736   */\n      dup5\n        /* \"#utility.yul\":19686:19758   */\n      tag_347\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":19433:19765   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19771:19942   */\n    tag_291:\n        /* \"#utility.yul\":19810:19813   */\n      0x00\n        /* \"#utility.yul\":19833:19857   */\n      tag_596\n        /* \"#utility.yul\":19851:19856   */\n      dup3\n        /* \"#utility.yul\":19833:19857   */\n      tag_346\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":19824:19857   */\n      swap2\n      pop\n        /* \"#utility.yul\":19879:19883   */\n      0x00\n        /* \"#utility.yul\":19872:19877   */\n      dup3\n        /* \"#utility.yul\":19869:19884   */\n      sub\n        /* \"#utility.yul\":19866:19907   */\n      tag_597\n      jumpi\n        /* \"#utility.yul\":19887:19905   */\n      tag_598\n      tag_370\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19866:19907   */\n    tag_597:\n        /* \"#utility.yul\":19934:19935   */\n      0x01\n        /* \"#utility.yul\":19927:19932   */\n      dup3\n        /* \"#utility.yul\":19923:19936   */\n      sub\n        /* \"#utility.yul\":19916:19936   */\n      swap1\n      pop\n        /* \"#utility.yul\":19771:19942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19948:20130   */\n    tag_389:\n        /* \"#utility.yul\":20088:20122   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":20084:20085   */\n      0x00\n        /* \"#utility.yul\":20076:20082   */\n      dup3\n        /* \"#utility.yul\":20072:20086   */\n      add\n        /* \"#utility.yul\":20065:20123   */\n      mstore\n        /* \"#utility.yul\":19948:20130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20136:20502   */\n    tag_390:\n        /* \"#utility.yul\":20278:20281   */\n      0x00\n        /* \"#utility.yul\":20299:20366   */\n      tag_601\n        /* \"#utility.yul\":20363:20365   */\n      0x20\n        /* \"#utility.yul\":20358:20361   */\n      dup4\n        /* \"#utility.yul\":20299:20366   */\n      tag_367\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":20292:20366   */\n      swap2\n      pop\n        /* \"#utility.yul\":20375:20468   */\n      tag_602\n        /* \"#utility.yul\":20464:20467   */\n      dup3\n        /* \"#utility.yul\":20375:20468   */\n      tag_389\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":20493:20495   */\n      0x20\n        /* \"#utility.yul\":20488:20491   */\n      dup3\n        /* \"#utility.yul\":20484:20496   */\n      add\n        /* \"#utility.yul\":20477:20496   */\n      swap1\n      pop\n        /* \"#utility.yul\":20136:20502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20508:20927   */\n    tag_294:\n        /* \"#utility.yul\":20674:20678   */\n      0x00\n        /* \"#utility.yul\":20712:20714   */\n      0x20\n        /* \"#utility.yul\":20701:20710   */\n      dup3\n        /* \"#utility.yul\":20697:20715   */\n      add\n        /* \"#utility.yul\":20689:20715   */\n      swap1\n      pop\n        /* \"#utility.yul\":20761:20770   */\n      dup2\n        /* \"#utility.yul\":20755:20759   */\n      dup2\n        /* \"#utility.yul\":20751:20771   */\n      sub\n        /* \"#utility.yul\":20747:20748   */\n      0x00\n        /* \"#utility.yul\":20736:20745   */\n      dup4\n        /* \"#utility.yul\":20732:20749   */\n      add\n        /* \"#utility.yul\":20725:20772   */\n      mstore\n        /* \"#utility.yul\":20789:20920   */\n      tag_604\n        /* \"#utility.yul\":20915:20919   */\n      dup2\n        /* \"#utility.yul\":20789:20920   */\n      tag_390\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":20781:20920   */\n      swap1\n      pop\n        /* \"#utility.yul\":20508:20927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20933:21049   */\n    tag_391:\n        /* \"#utility.yul\":21003:21024   */\n      tag_606\n        /* \"#utility.yul\":21018:21023   */\n      dup2\n        /* \"#utility.yul\":21003:21024   */\n      tag_340\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":20996:21001   */\n      dup2\n        /* \"#utility.yul\":20993:21025   */\n      eq\n        /* \"#utility.yul\":20983:21043   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":21039:21040   */\n      0x00\n        /* \"#utility.yul\":21036:21037   */\n      dup1\n        /* \"#utility.yul\":21029:21041   */\n      revert\n        /* \"#utility.yul\":20983:21043   */\n    tag_607:\n        /* \"#utility.yul\":20933:21049   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21055:21192   */\n    tag_392:\n        /* \"#utility.yul\":21109:21114   */\n      0x00\n        /* \"#utility.yul\":21140:21146   */\n      dup2\n        /* \"#utility.yul\":21134:21147   */\n      mload\n        /* \"#utility.yul\":21125:21147   */\n      swap1\n      pop\n        /* \"#utility.yul\":21156:21186   */\n      tag_609\n        /* \"#utility.yul\":21180:21185   */\n      dup2\n        /* \"#utility.yul\":21156:21186   */\n      tag_391\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":21055:21192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21198:21543   */\n    tag_300:\n        /* \"#utility.yul\":21265:21271   */\n      0x00\n        /* \"#utility.yul\":21314:21316   */\n      0x20\n        /* \"#utility.yul\":21302:21311   */\n      dup3\n        /* \"#utility.yul\":21293:21300   */\n      dup5\n        /* \"#utility.yul\":21289:21312   */\n      sub\n        /* \"#utility.yul\":21285:21317   */\n      slt\n        /* \"#utility.yul\":21282:21401   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":21320:21399   */\n      tag_612\n      tag_335\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":21282:21401   */\n    tag_611:\n        /* \"#utility.yul\":21440:21441   */\n      0x00\n        /* \"#utility.yul\":21465:21526   */\n      tag_613\n        /* \"#utility.yul\":21518:21525   */\n      dup5\n        /* \"#utility.yul\":21509:21515   */\n      dup3\n        /* \"#utility.yul\":21498:21507   */\n      dup6\n        /* \"#utility.yul\":21494:21516   */\n      add\n        /* \"#utility.yul\":21465:21526   */\n      tag_392\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":21455:21526   */\n      swap2\n      pop\n        /* \"#utility.yul\":21411:21536   */\n      pop\n        /* \"#utility.yul\":21198:21543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21549:21778   */\n    tag_393:\n        /* \"#utility.yul\":21689:21723   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":21685:21686   */\n      0x00\n        /* \"#utility.yul\":21677:21683   */\n      dup3\n        /* \"#utility.yul\":21673:21687   */\n      add\n        /* \"#utility.yul\":21666:21724   */\n      mstore\n        /* \"#utility.yul\":21758:21770   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21753:21755   */\n      0x20\n        /* \"#utility.yul\":21745:21751   */\n      dup3\n        /* \"#utility.yul\":21741:21756   */\n      add\n        /* \"#utility.yul\":21734:21771   */\n      mstore\n        /* \"#utility.yul\":21549:21778   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21784:22150   */\n    tag_394:\n        /* \"#utility.yul\":21926:21929   */\n      0x00\n        /* \"#utility.yul\":21947:22014   */\n      tag_616\n        /* \"#utility.yul\":22011:22013   */\n      0x2a\n        /* \"#utility.yul\":22006:22009   */\n      dup4\n        /* \"#utility.yul\":21947:22014   */\n      tag_367\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":21940:22014   */\n      swap2\n      pop\n        /* \"#utility.yul\":22023:22116   */\n      tag_617\n        /* \"#utility.yul\":22112:22115   */\n      dup3\n        /* \"#utility.yul\":22023:22116   */\n      tag_393\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":22141:22143   */\n      0x40\n        /* \"#utility.yul\":22136:22139   */\n      dup3\n        /* \"#utility.yul\":22132:22144   */\n      add\n        /* \"#utility.yul\":22125:22144   */\n      swap1\n      pop\n        /* \"#utility.yul\":21784:22150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22156:22575   */\n    tag_303:\n        /* \"#utility.yul\":22322:22326   */\n      0x00\n        /* \"#utility.yul\":22360:22362   */\n      0x20\n        /* \"#utility.yul\":22349:22358   */\n      dup3\n        /* \"#utility.yul\":22345:22363   */\n      add\n        /* \"#utility.yul\":22337:22363   */\n      swap1\n      pop\n        /* \"#utility.yul\":22409:22418   */\n      dup2\n        /* \"#utility.yul\":22403:22407   */\n      dup2\n        /* \"#utility.yul\":22399:22419   */\n      sub\n        /* \"#utility.yul\":22395:22396   */\n      0x00\n        /* \"#utility.yul\":22384:22393   */\n      dup4\n        /* \"#utility.yul\":22380:22397   */\n      add\n        /* \"#utility.yul\":22373:22420   */\n      mstore\n        /* \"#utility.yul\":22437:22568   */\n      tag_619\n        /* \"#utility.yul\":22563:22567   */\n      dup2\n        /* \"#utility.yul\":22437:22568   */\n      tag_394\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":22429:22568   */\n      swap1\n      pop\n        /* \"#utility.yul\":22156:22575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22581:22806   */\n    tag_395:\n        /* \"#utility.yul\":22721:22755   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":22717:22718   */\n      0x00\n        /* \"#utility.yul\":22709:22715   */\n      dup3\n        /* \"#utility.yul\":22705:22719   */\n      add\n        /* \"#utility.yul\":22698:22756   */\n      mstore\n        /* \"#utility.yul\":22790:22798   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22785:22787   */\n      0x20\n        /* \"#utility.yul\":22777:22783   */\n      dup3\n        /* \"#utility.yul\":22773:22788   */\n      add\n        /* \"#utility.yul\":22766:22799   */\n      mstore\n        /* \"#utility.yul\":22581:22806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22812:23178   */\n    tag_396:\n        /* \"#utility.yul\":22954:22957   */\n      0x00\n        /* \"#utility.yul\":22975:23042   */\n      tag_622\n        /* \"#utility.yul\":23039:23041   */\n      0x26\n        /* \"#utility.yul\":23034:23037   */\n      dup4\n        /* \"#utility.yul\":22975:23042   */\n      tag_367\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":22968:23042   */\n      swap2\n      pop\n        /* \"#utility.yul\":23051:23144   */\n      tag_623\n        /* \"#utility.yul\":23140:23143   */\n      dup3\n        /* \"#utility.yul\":23051:23144   */\n      tag_395\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":23169:23171   */\n      0x40\n        /* \"#utility.yul\":23164:23167   */\n      dup3\n        /* \"#utility.yul\":23160:23172   */\n      add\n        /* \"#utility.yul\":23153:23172   */\n      swap1\n      pop\n        /* \"#utility.yul\":22812:23178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23184:23603   */\n    tag_310:\n        /* \"#utility.yul\":23350:23354   */\n      0x00\n        /* \"#utility.yul\":23388:23390   */\n      0x20\n        /* \"#utility.yul\":23377:23386   */\n      dup3\n        /* \"#utility.yul\":23373:23391   */\n      add\n        /* \"#utility.yul\":23365:23391   */\n      swap1\n      pop\n        /* \"#utility.yul\":23437:23446   */\n      dup2\n        /* \"#utility.yul\":23431:23435   */\n      dup2\n        /* \"#utility.yul\":23427:23447   */\n      sub\n        /* \"#utility.yul\":23423:23424   */\n      0x00\n        /* \"#utility.yul\":23412:23421   */\n      dup4\n        /* \"#utility.yul\":23408:23425   */\n      add\n        /* \"#utility.yul\":23401:23448   */\n      mstore\n        /* \"#utility.yul\":23465:23596   */\n      tag_625\n        /* \"#utility.yul\":23591:23595   */\n      dup2\n        /* \"#utility.yul\":23465:23596   */\n      tag_396\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":23457:23596   */\n      swap1\n      pop\n        /* \"#utility.yul\":23184:23603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23609:23707   */\n    tag_397:\n        /* \"#utility.yul\":23660:23666   */\n      0x00\n        /* \"#utility.yul\":23694:23699   */\n      dup2\n        /* \"#utility.yul\":23688:23700   */\n      mload\n        /* \"#utility.yul\":23678:23700   */\n      swap1\n      pop\n        /* \"#utility.yul\":23609:23707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23713:23860   */\n    tag_398:\n        /* \"#utility.yul\":23814:23825   */\n      0x00\n        /* \"#utility.yul\":23851:23854   */\n      dup2\n        /* \"#utility.yul\":23836:23854   */\n      swap1\n      pop\n        /* \"#utility.yul\":23713:23860   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23866:24252   */\n    tag_399:\n        /* \"#utility.yul\":23970:23973   */\n      0x00\n        /* \"#utility.yul\":23998:24036   */\n      tag_629\n        /* \"#utility.yul\":24030:24035   */\n      dup3\n        /* \"#utility.yul\":23998:24036   */\n      tag_397\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":24052:24140   */\n      tag_630\n        /* \"#utility.yul\":24133:24139   */\n      dup2\n        /* \"#utility.yul\":24128:24131   */\n      dup6\n        /* \"#utility.yul\":24052:24140   */\n      tag_398\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":24045:24140   */\n      swap4\n      pop\n        /* \"#utility.yul\":24149:24214   */\n      tag_631\n        /* \"#utility.yul\":24207:24213   */\n      dup2\n        /* \"#utility.yul\":24202:24205   */\n      dup6\n        /* \"#utility.yul\":24195:24199   */\n      0x20\n        /* \"#utility.yul\":24188:24193   */\n      dup7\n        /* \"#utility.yul\":24184:24200   */\n      add\n        /* \"#utility.yul\":24149:24214   */\n      tag_383\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":24239:24245   */\n      dup1\n        /* \"#utility.yul\":24234:24237   */\n      dup5\n        /* \"#utility.yul\":24230:24246   */\n      add\n        /* \"#utility.yul\":24223:24246   */\n      swap2\n      pop\n        /* \"#utility.yul\":23974:24252   */\n      pop\n        /* \"#utility.yul\":23866:24252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24258:24529   */\n    tag_312:\n        /* \"#utility.yul\":24388:24391   */\n      0x00\n        /* \"#utility.yul\":24410:24503   */\n      tag_633\n        /* \"#utility.yul\":24499:24502   */\n      dup3\n        /* \"#utility.yul\":24490:24496   */\n      dup5\n        /* \"#utility.yul\":24410:24503   */\n      tag_399\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":24403:24503   */\n      swap2\n      pop\n        /* \"#utility.yul\":24520:24523   */\n      dup2\n        /* \"#utility.yul\":24513:24523   */\n      swap1\n      pop\n        /* \"#utility.yul\":24258:24529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24535:24714   */\n    tag_400:\n        /* \"#utility.yul\":24675:24706   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":24671:24672   */\n      0x00\n        /* \"#utility.yul\":24663:24669   */\n      dup3\n        /* \"#utility.yul\":24659:24673   */\n      add\n        /* \"#utility.yul\":24652:24707   */\n      mstore\n        /* \"#utility.yul\":24535:24714   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24720:25086   */\n    tag_401:\n        /* \"#utility.yul\":24862:24865   */\n      0x00\n        /* \"#utility.yul\":24883:24950   */\n      tag_636\n        /* \"#utility.yul\":24947:24949   */\n      0x1d\n        /* \"#utility.yul\":24942:24945   */\n      dup4\n        /* \"#utility.yul\":24883:24950   */\n      tag_367\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":24876:24950   */\n      swap2\n      pop\n        /* \"#utility.yul\":24959:25052   */\n      tag_637\n        /* \"#utility.yul\":25048:25051   */\n      dup3\n        /* \"#utility.yul\":24959:25052   */\n      tag_400\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":25077:25079   */\n      0x20\n        /* \"#utility.yul\":25072:25075   */\n      dup3\n        /* \"#utility.yul\":25068:25080   */\n      add\n        /* \"#utility.yul\":25061:25080   */\n      swap1\n      pop\n        /* \"#utility.yul\":24720:25086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25092:25511   */\n    tag_325:\n        /* \"#utility.yul\":25258:25262   */\n      0x00\n        /* \"#utility.yul\":25296:25298   */\n      0x20\n        /* \"#utility.yul\":25285:25294   */\n      dup3\n        /* \"#utility.yul\":25281:25299   */\n      add\n        /* \"#utility.yul\":25273:25299   */\n      swap1\n      pop\n        /* \"#utility.yul\":25345:25354   */\n      dup2\n        /* \"#utility.yul\":25339:25343   */\n      dup2\n        /* \"#utility.yul\":25335:25355   */\n      sub\n        /* \"#utility.yul\":25331:25332   */\n      0x00\n        /* \"#utility.yul\":25320:25329   */\n      dup4\n        /* \"#utility.yul\":25316:25333   */\n      add\n        /* \"#utility.yul\":25309:25356   */\n      mstore\n        /* \"#utility.yul\":25373:25504   */\n      tag_639\n        /* \"#utility.yul\":25499:25503   */\n      dup2\n        /* \"#utility.yul\":25373:25504   */\n      tag_401\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":25365:25504   */\n      swap1\n      pop\n        /* \"#utility.yul\":25092:25511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dd6984b3055296cee63dd0000b353c663d64c1e6bb869555be435a9371d5634d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2936": {
									"entryPoint": null,
									"id": 2936,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_3193": {
									"entryPoint": null,
									"id": 3193,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_407": {
									"entryPoint": null,
									"id": 407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 526,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1285": {
									"entryPoint": 862,
									"id": 1285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_79": {
									"entryPoint": 762,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 1004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$531_fromMemory": {
									"entryPoint": 1089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$531_fromMemory": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$531": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$531": {
									"entryPoint": 1064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5707:16",
										"nodeType": "YulBlock",
										"src": "0:5707:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "379:32:16",
													"nodeType": "YulBlock",
													"src": "379:32:16",
													"statements": [
														{
															"nativeSrc": "389:16:16",
															"nodeType": "YulAssignment",
															"src": "389:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:16",
																"nodeType": "YulIdentifier",
																"src": "400:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:16",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:16",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:77:16"
											},
											{
												"body": {
													"nativeSrc": "460:79:16",
													"nodeType": "YulBlock",
													"src": "460:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:16",
																"nodeType": "YulBlock",
																"src": "517:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:16",
																					"nodeType": "YulLiteral",
																					"src": "526:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:16",
																					"nodeType": "YulLiteral",
																					"src": "529:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:16"
																			},
																			"nativeSrc": "519:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:16"
																		},
																		"nativeSrc": "519:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:16"
																				},
																				"nativeSrc": "490:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:16"
																		},
																		"nativeSrc": "480:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:16"
																},
																"nativeSrc": "473:43:16",
																"nodeType": "YulFunctionCall",
																"src": "473:43:16"
															},
															"nativeSrc": "470:63:16",
															"nodeType": "YulIf",
															"src": "470:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:16",
														"nodeType": "YulTypedName",
														"src": "453:5:16",
														"type": ""
													}
												],
												"src": "417:122:16"
											},
											{
												"body": {
													"nativeSrc": "608:80:16",
													"nodeType": "YulBlock",
													"src": "608:80:16",
													"statements": [
														{
															"nativeSrc": "618:22:16",
															"nodeType": "YulAssignment",
															"src": "618:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:16"
																},
																"nativeSrc": "627:13:16",
																"nodeType": "YulFunctionCall",
																"src": "627:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:16"
																},
																"nativeSrc": "649:33:16",
																"nodeType": "YulFunctionCall",
																"src": "649:33:16"
															},
															"nativeSrc": "649:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:16",
														"nodeType": "YulTypedName",
														"src": "586:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:16",
														"nodeType": "YulTypedName",
														"src": "594:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:16",
														"nodeType": "YulTypedName",
														"src": "602:5:16",
														"type": ""
													}
												],
												"src": "545:143:16"
											},
											{
												"body": {
													"nativeSrc": "739:81:16",
													"nodeType": "YulBlock",
													"src": "739:81:16",
													"statements": [
														{
															"nativeSrc": "749:65:16",
															"nodeType": "YulAssignment",
															"src": "749:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:16",
																		"nodeType": "YulLiteral",
																		"src": "771:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:16"
																},
																"nativeSrc": "760:54:16",
																"nodeType": "YulFunctionCall",
																"src": "760:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:16",
														"nodeType": "YulTypedName",
														"src": "721:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:16",
														"nodeType": "YulTypedName",
														"src": "731:7:16",
														"type": ""
													}
												],
												"src": "694:126:16"
											},
											{
												"body": {
													"nativeSrc": "879:51:16",
													"nodeType": "YulBlock",
													"src": "879:51:16",
													"statements": [
														{
															"nativeSrc": "889:35:16",
															"nodeType": "YulAssignment",
															"src": "889:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "918:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "918:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "900:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "900:17:16"
																},
																"nativeSrc": "900:24:16",
																"nodeType": "YulFunctionCall",
																"src": "900:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "889:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "889:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "826:104:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "861:5:16",
														"nodeType": "YulTypedName",
														"src": "861:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "871:7:16",
														"nodeType": "YulTypedName",
														"src": "871:7:16",
														"type": ""
													}
												],
												"src": "826:104:16"
											},
											{
												"body": {
													"nativeSrc": "987:87:16",
													"nodeType": "YulBlock",
													"src": "987:87:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1052:16:16",
																"nodeType": "YulBlock",
																"src": "1052:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1061:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1054:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:16"
																			},
																			"nativeSrc": "1054:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1054:12:16"
																		},
																		"nativeSrc": "1054:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1010:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1010:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1043:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1043:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "1017:25:16",
																					"nodeType": "YulIdentifier",
																					"src": "1017:25:16"
																				},
																				"nativeSrc": "1017:32:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1017:32:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1007:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:16"
																		},
																		"nativeSrc": "1007:43:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1007:43:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1000:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:16"
																},
																"nativeSrc": "1000:51:16",
																"nodeType": "YulFunctionCall",
																"src": "1000:51:16"
															},
															"nativeSrc": "997:71:16",
															"nodeType": "YulIf",
															"src": "997:71:16"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "936:138:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "980:5:16",
														"nodeType": "YulTypedName",
														"src": "980:5:16",
														"type": ""
													}
												],
												"src": "936:138:16"
											},
											{
												"body": {
													"nativeSrc": "1151:88:16",
													"nodeType": "YulBlock",
													"src": "1151:88:16",
													"statements": [
														{
															"nativeSrc": "1161:22:16",
															"nodeType": "YulAssignment",
															"src": "1161:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1176:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1176:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1170:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1170:5:16"
																},
																"nativeSrc": "1170:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1170:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1161:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1227:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1227:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "1192:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "1192:34:16"
																},
																"nativeSrc": "1192:41:16",
																"nodeType": "YulFunctionCall",
																"src": "1192:41:16"
															},
															"nativeSrc": "1192:41:16",
															"nodeType": "YulExpressionStatement",
															"src": "1192:41:16"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nativeSrc": "1080:159:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1129:6:16",
														"nodeType": "YulTypedName",
														"src": "1129:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1137:3:16",
														"nodeType": "YulTypedName",
														"src": "1137:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1145:5:16",
														"nodeType": "YulTypedName",
														"src": "1145:5:16",
														"type": ""
													}
												],
												"src": "1080:159:16"
											},
											{
												"body": {
													"nativeSrc": "1290:51:16",
													"nodeType": "YulBlock",
													"src": "1290:51:16",
													"statements": [
														{
															"nativeSrc": "1300:35:16",
															"nodeType": "YulAssignment",
															"src": "1300:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1329:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1329:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1311:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1311:17:16"
																},
																"nativeSrc": "1311:24:16",
																"nodeType": "YulFunctionCall",
																"src": "1311:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1300:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1300:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1245:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1272:5:16",
														"nodeType": "YulTypedName",
														"src": "1272:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1282:7:16",
														"nodeType": "YulTypedName",
														"src": "1282:7:16",
														"type": ""
													}
												],
												"src": "1245:96:16"
											},
											{
												"body": {
													"nativeSrc": "1406:51:16",
													"nodeType": "YulBlock",
													"src": "1406:51:16",
													"statements": [
														{
															"nativeSrc": "1416:35:16",
															"nodeType": "YulAssignment",
															"src": "1416:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1445:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1427:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1427:17:16"
																},
																"nativeSrc": "1427:24:16",
																"nodeType": "YulFunctionCall",
																"src": "1427:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1416:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1416:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$531",
												"nativeSrc": "1347:110:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1388:5:16",
														"nodeType": "YulTypedName",
														"src": "1388:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1398:7:16",
														"nodeType": "YulTypedName",
														"src": "1398:7:16",
														"type": ""
													}
												],
												"src": "1347:110:16"
											},
											{
												"body": {
													"nativeSrc": "1520:93:16",
													"nodeType": "YulBlock",
													"src": "1520:93:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1591:16:16",
																"nodeType": "YulBlock",
																"src": "1591:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1600:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1603:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1593:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:16"
																			},
																			"nativeSrc": "1593:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:16"
																		},
																		"nativeSrc": "1593:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1543:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1543:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1582:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1582:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$531",
																					"nativeSrc": "1550:31:16",
																					"nodeType": "YulIdentifier",
																					"src": "1550:31:16"
																				},
																				"nativeSrc": "1550:38:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1550:38:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1540:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1540:2:16"
																		},
																		"nativeSrc": "1540:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:49:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1533:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:16"
																},
																"nativeSrc": "1533:57:16",
																"nodeType": "YulFunctionCall",
																"src": "1533:57:16"
															},
															"nativeSrc": "1530:77:16",
															"nodeType": "YulIf",
															"src": "1530:77:16"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$531",
												"nativeSrc": "1463:150:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1513:5:16",
														"nodeType": "YulTypedName",
														"src": "1513:5:16",
														"type": ""
													}
												],
												"src": "1463:150:16"
											},
											{
												"body": {
													"nativeSrc": "1696:94:16",
													"nodeType": "YulBlock",
													"src": "1696:94:16",
													"statements": [
														{
															"nativeSrc": "1706:22:16",
															"nodeType": "YulAssignment",
															"src": "1706:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1721:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1715:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1715:5:16"
																},
																"nativeSrc": "1715:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1715:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1706:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1778:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1778:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$531",
																	"nativeSrc": "1737:40:16",
																	"nodeType": "YulIdentifier",
																	"src": "1737:40:16"
																},
																"nativeSrc": "1737:47:16",
																"nodeType": "YulFunctionCall",
																"src": "1737:47:16"
															},
															"nativeSrc": "1737:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "1737:47:16"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$531_fromMemory",
												"nativeSrc": "1619:171:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1674:6:16",
														"nodeType": "YulTypedName",
														"src": "1674:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1682:3:16",
														"nodeType": "YulTypedName",
														"src": "1682:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1690:5:16",
														"nodeType": "YulTypedName",
														"src": "1690:5:16",
														"type": ""
													}
												],
												"src": "1619:171:16"
											},
											{
												"body": {
													"nativeSrc": "1929:574:16",
													"nodeType": "YulBlock",
													"src": "1929:574:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1975:83:16",
																"nodeType": "YulBlock",
																"src": "1975:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1977:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "1977:77:16"
																			},
																			"nativeSrc": "1977:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1977:79:16"
																		},
																		"nativeSrc": "1977:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1977:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1950:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1950:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1959:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1959:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1946:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:16"
																		},
																		"nativeSrc": "1946:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1946:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1971:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1971:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1942:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:16"
																},
																"nativeSrc": "1942:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1942:32:16"
															},
															"nativeSrc": "1939:119:16",
															"nodeType": "YulIf",
															"src": "1939:119:16"
														},
														{
															"nativeSrc": "2068:128:16",
															"nodeType": "YulBlock",
															"src": "2068:128:16",
															"statements": [
																{
																	"nativeSrc": "2083:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2083:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2097:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2087:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2087:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2112:74:16",
																	"nodeType": "YulAssignment",
																	"src": "2112:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:16"
																				},
																				"nativeSrc": "2154:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2122:31:16",
																			"nodeType": "YulIdentifier",
																			"src": "2122:31:16"
																		},
																		"nativeSrc": "2122:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2112:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2112:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2206:137:16",
															"nodeType": "YulBlock",
															"src": "2206:137:16",
															"statements": [
																{
																	"nativeSrc": "2221:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2221:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2235:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2225:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2225:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2251:82:16",
																	"nodeType": "YulAssignment",
																	"src": "2251:82:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2305:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2305:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2316:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2316:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2301:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2301:3:16"
																				},
																				"nativeSrc": "2301:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2301:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2325:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2325:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nativeSrc": "2261:39:16",
																			"nodeType": "YulIdentifier",
																			"src": "2261:39:16"
																		},
																		"nativeSrc": "2261:72:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2261:72:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2251:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2251:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2353:143:16",
															"nodeType": "YulBlock",
															"src": "2353:143:16",
															"statements": [
																{
																	"nativeSrc": "2368:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2368:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2382:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2382:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2372:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2372:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2398:88:16",
																	"nodeType": "YulAssignment",
																	"src": "2398:88:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2458:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2458:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2469:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2469:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2454:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2454:3:16"
																				},
																				"nativeSrc": "2454:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2454:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2478:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$531_fromMemory",
																			"nativeSrc": "2408:45:16",
																			"nodeType": "YulIdentifier",
																			"src": "2408:45:16"
																		},
																		"nativeSrc": "2408:78:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2408:78:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2398:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2398:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$531_fromMemory",
												"nativeSrc": "1796:707:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1883:9:16",
														"nodeType": "YulTypedName",
														"src": "1883:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1894:7:16",
														"nodeType": "YulTypedName",
														"src": "1894:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1906:6:16",
														"nodeType": "YulTypedName",
														"src": "1906:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1914:6:16",
														"nodeType": "YulTypedName",
														"src": "1914:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1922:6:16",
														"nodeType": "YulTypedName",
														"src": "1922:6:16",
														"type": ""
													}
												],
												"src": "1796:707:16"
											},
											{
												"body": {
													"nativeSrc": "2605:73:16",
													"nodeType": "YulBlock",
													"src": "2605:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2622:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2627:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2615:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:16"
																},
																"nativeSrc": "2615:19:16",
																"nodeType": "YulFunctionCall",
																"src": "2615:19:16"
															},
															"nativeSrc": "2615:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "2615:19:16"
														},
														{
															"nativeSrc": "2643:29:16",
															"nodeType": "YulAssignment",
															"src": "2643:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2662:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2662:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2667:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2667:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2658:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:16"
																},
																"nativeSrc": "2658:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2658:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2643:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "2643:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2509:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2577:3:16",
														"nodeType": "YulTypedName",
														"src": "2577:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2582:6:16",
														"nodeType": "YulTypedName",
														"src": "2582:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2593:11:16",
														"nodeType": "YulTypedName",
														"src": "2593:11:16",
														"type": ""
													}
												],
												"src": "2509:169:16"
											},
											{
												"body": {
													"nativeSrc": "2790:64:16",
													"nodeType": "YulBlock",
													"src": "2790:64:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2812:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2820:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2820:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:16"
																		},
																		"nativeSrc": "2808:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nativeSrc": "2824:22:16",
																		"nodeType": "YulLiteral",
																		"src": "2824:22:16",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:16"
																},
																"nativeSrc": "2801:46:16",
																"nodeType": "YulFunctionCall",
																"src": "2801:46:16"
															},
															"nativeSrc": "2801:46:16",
															"nodeType": "YulExpressionStatement",
															"src": "2801:46:16"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nativeSrc": "2684:170:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2782:6:16",
														"nodeType": "YulTypedName",
														"src": "2782:6:16",
														"type": ""
													}
												],
												"src": "2684:170:16"
											},
											{
												"body": {
													"nativeSrc": "3006:220:16",
													"nodeType": "YulBlock",
													"src": "3006:220:16",
													"statements": [
														{
															"nativeSrc": "3016:74:16",
															"nodeType": "YulAssignment",
															"src": "3016:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3082:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3082:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3087:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3087:2:16",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3023:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "3023:58:16"
																},
																"nativeSrc": "3023:67:16",
																"nodeType": "YulFunctionCall",
																"src": "3023:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3016:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3188:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3188:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nativeSrc": "3099:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "3099:88:16"
																},
																"nativeSrc": "3099:93:16",
																"nodeType": "YulFunctionCall",
																"src": "3099:93:16"
															},
															"nativeSrc": "3099:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "3099:93:16"
														},
														{
															"nativeSrc": "3201:19:16",
															"nodeType": "YulAssignment",
															"src": "3201:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3212:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3212:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3208:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:16"
																},
																"nativeSrc": "3208:12:16",
																"nodeType": "YulFunctionCall",
																"src": "3208:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3201:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2860:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2994:3:16",
														"nodeType": "YulTypedName",
														"src": "2994:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3002:3:16",
														"nodeType": "YulTypedName",
														"src": "3002:3:16",
														"type": ""
													}
												],
												"src": "2860:366:16"
											},
											{
												"body": {
													"nativeSrc": "3403:248:16",
													"nodeType": "YulBlock",
													"src": "3403:248:16",
													"statements": [
														{
															"nativeSrc": "3413:26:16",
															"nodeType": "YulAssignment",
															"src": "3413:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3425:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3436:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3421:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:16"
																},
																"nativeSrc": "3421:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3421:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3413:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3460:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3471:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3471:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3456:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:16"
																		},
																		"nativeSrc": "3456:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3456:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3479:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "3479:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3485:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3475:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:16"
																		},
																		"nativeSrc": "3475:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3449:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:16"
																},
																"nativeSrc": "3449:47:16",
																"nodeType": "YulFunctionCall",
																"src": "3449:47:16"
															},
															"nativeSrc": "3449:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "3449:47:16"
														},
														{
															"nativeSrc": "3505:139:16",
															"nodeType": "YulAssignment",
															"src": "3505:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3639:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3639:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3513:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "3513:124:16"
																},
																"nativeSrc": "3513:131:16",
																"nodeType": "YulFunctionCall",
																"src": "3513:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3505:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3232:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3383:9:16",
														"nodeType": "YulTypedName",
														"src": "3383:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3398:4:16",
														"nodeType": "YulTypedName",
														"src": "3398:4:16",
														"type": ""
													}
												],
												"src": "3232:419:16"
											},
											{
												"body": {
													"nativeSrc": "3763:118:16",
													"nodeType": "YulBlock",
													"src": "3763:118:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3785:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3793:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3793:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3781:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:16"
																		},
																		"nativeSrc": "3781:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3781:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "3797:34:16",
																		"nodeType": "YulLiteral",
																		"src": "3797:34:16",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3774:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:16"
																},
																"nativeSrc": "3774:58:16",
																"nodeType": "YulFunctionCall",
																"src": "3774:58:16"
															},
															"nativeSrc": "3774:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "3774:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3853:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3861:2:16",
																				"nodeType": "YulLiteral",
																				"src": "3861:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3849:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:16"
																		},
																		"nativeSrc": "3849:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3849:15:16"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "3866:7:16",
																		"nodeType": "YulLiteral",
																		"src": "3866:7:16",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3842:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:16"
																},
																"nativeSrc": "3842:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3842:32:16"
															},
															"nativeSrc": "3842:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "3842:32:16"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nativeSrc": "3657:224:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3755:6:16",
														"nodeType": "YulTypedName",
														"src": "3755:6:16",
														"type": ""
													}
												],
												"src": "3657:224:16"
											},
											{
												"body": {
													"nativeSrc": "4033:220:16",
													"nodeType": "YulBlock",
													"src": "4033:220:16",
													"statements": [
														{
															"nativeSrc": "4043:74:16",
															"nodeType": "YulAssignment",
															"src": "4043:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4109:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4109:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4114:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4114:2:16",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4050:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "4050:58:16"
																},
																"nativeSrc": "4050:67:16",
																"nodeType": "YulFunctionCall",
																"src": "4050:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4043:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4215:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4215:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nativeSrc": "4126:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "4126:88:16"
																},
																"nativeSrc": "4126:93:16",
																"nodeType": "YulFunctionCall",
																"src": "4126:93:16"
															},
															"nativeSrc": "4126:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "4126:93:16"
														},
														{
															"nativeSrc": "4228:19:16",
															"nodeType": "YulAssignment",
															"src": "4228:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4239:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4239:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4244:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4244:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4235:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:16"
																},
																"nativeSrc": "4235:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4235:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4228:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3887:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4021:3:16",
														"nodeType": "YulTypedName",
														"src": "4021:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4029:3:16",
														"nodeType": "YulTypedName",
														"src": "4029:3:16",
														"type": ""
													}
												],
												"src": "3887:366:16"
											},
											{
												"body": {
													"nativeSrc": "4430:248:16",
													"nodeType": "YulBlock",
													"src": "4430:248:16",
													"statements": [
														{
															"nativeSrc": "4440:26:16",
															"nodeType": "YulAssignment",
															"src": "4440:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4452:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4463:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4448:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:16"
																},
																"nativeSrc": "4448:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4448:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4440:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4487:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4487:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4498:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4498:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4483:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4483:3:16"
																		},
																		"nativeSrc": "4483:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4506:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4506:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4512:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4502:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:16"
																		},
																		"nativeSrc": "4502:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4502:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4476:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4476:6:16"
																},
																"nativeSrc": "4476:47:16",
																"nodeType": "YulFunctionCall",
																"src": "4476:47:16"
															},
															"nativeSrc": "4476:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "4476:47:16"
														},
														{
															"nativeSrc": "4532:139:16",
															"nodeType": "YulAssignment",
															"src": "4532:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4666:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4540:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "4540:124:16"
																},
																"nativeSrc": "4540:131:16",
																"nodeType": "YulFunctionCall",
																"src": "4540:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4532:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4532:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4259:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4410:9:16",
														"nodeType": "YulTypedName",
														"src": "4410:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4425:4:16",
														"nodeType": "YulTypedName",
														"src": "4425:4:16",
														"type": ""
													}
												],
												"src": "4259:419:16"
											},
											{
												"body": {
													"nativeSrc": "4790:117:16",
													"nodeType": "YulBlock",
													"src": "4790:117:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4812:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4812:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4820:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4820:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:16"
																		},
																		"nativeSrc": "4808:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4808:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "4824:34:16",
																		"nodeType": "YulLiteral",
																		"src": "4824:34:16",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4801:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:16"
																},
																"nativeSrc": "4801:58:16",
																"nodeType": "YulFunctionCall",
																"src": "4801:58:16"
															},
															"nativeSrc": "4801:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "4801:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4880:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4880:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4888:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4888:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4876:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:16"
																		},
																		"nativeSrc": "4876:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4876:15:16"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "4893:6:16",
																		"nodeType": "YulLiteral",
																		"src": "4893:6:16",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4869:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:16"
																},
																"nativeSrc": "4869:31:16",
																"nodeType": "YulFunctionCall",
																"src": "4869:31:16"
															},
															"nativeSrc": "4869:31:16",
															"nodeType": "YulExpressionStatement",
															"src": "4869:31:16"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nativeSrc": "4684:223:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4782:6:16",
														"nodeType": "YulTypedName",
														"src": "4782:6:16",
														"type": ""
													}
												],
												"src": "4684:223:16"
											},
											{
												"body": {
													"nativeSrc": "5059:220:16",
													"nodeType": "YulBlock",
													"src": "5059:220:16",
													"statements": [
														{
															"nativeSrc": "5069:74:16",
															"nodeType": "YulAssignment",
															"src": "5069:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5135:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5135:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5140:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5140:2:16",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5076:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "5076:58:16"
																},
																"nativeSrc": "5076:67:16",
																"nodeType": "YulFunctionCall",
																"src": "5076:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5069:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5241:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5241:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nativeSrc": "5152:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "5152:88:16"
																},
																"nativeSrc": "5152:93:16",
																"nodeType": "YulFunctionCall",
																"src": "5152:93:16"
															},
															"nativeSrc": "5152:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "5152:93:16"
														},
														{
															"nativeSrc": "5254:19:16",
															"nodeType": "YulAssignment",
															"src": "5254:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5265:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5265:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5270:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5261:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:16"
																},
																"nativeSrc": "5261:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5261:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5254:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5254:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4913:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5047:3:16",
														"nodeType": "YulTypedName",
														"src": "5047:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5055:3:16",
														"nodeType": "YulTypedName",
														"src": "5055:3:16",
														"type": ""
													}
												],
												"src": "4913:366:16"
											},
											{
												"body": {
													"nativeSrc": "5456:248:16",
													"nodeType": "YulBlock",
													"src": "5456:248:16",
													"statements": [
														{
															"nativeSrc": "5466:26:16",
															"nodeType": "YulAssignment",
															"src": "5466:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5478:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5489:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5474:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:16"
																},
																"nativeSrc": "5474:18:16",
																"nodeType": "YulFunctionCall",
																"src": "5474:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5466:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5513:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5524:1:16",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:16"
																		},
																		"nativeSrc": "5509:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5532:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "5532:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5538:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5528:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:16"
																		},
																		"nativeSrc": "5528:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5528:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5502:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:16"
																},
																"nativeSrc": "5502:47:16",
																"nodeType": "YulFunctionCall",
																"src": "5502:47:16"
															},
															"nativeSrc": "5502:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "5502:47:16"
														},
														{
															"nativeSrc": "5558:139:16",
															"nodeType": "YulAssignment",
															"src": "5558:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5692:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5692:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5566:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "5566:124:16"
																},
																"nativeSrc": "5566:131:16",
																"nodeType": "YulFunctionCall",
																"src": "5566:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5558:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5558:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5285:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5436:9:16",
														"nodeType": "YulTypedName",
														"src": "5436:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5451:4:16",
														"nodeType": "YulTypedName",
														"src": "5451:4:16",
														"type": ""
													}
												],
												"src": "5285:419:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$531(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$531(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$531(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$531_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$531(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$531_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$531_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x27B9 CODESIZE SUB DUP1 PUSH3 0x27B9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x457 JUMP JUMPDEST DUP3 DUP3 DUP3 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xED SWAP1 PUSH3 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x15E SWAP1 PUSH3 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x205 PUSH0 DUP1 SHL DUP4 PUSH3 0x20E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x656 JUMP JUMPDEST PUSH3 0x220 DUP3 DUP3 PUSH3 0x2FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2F6 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x29B PUSH3 0x35E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x37D DUP2 PUSH3 0x369 JUMP JUMPDEST DUP2 EQ PUSH3 0x388 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x39B DUP2 PUSH3 0x372 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3CC DUP3 PUSH3 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3DE DUP2 PUSH3 0x3C0 JUMP JUMPDEST DUP2 EQ PUSH3 0x3E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x3FC DUP2 PUSH3 0x3D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x40E DUP3 PUSH3 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x421 DUP3 PUSH3 0x402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x433 DUP2 PUSH3 0x415 JUMP JUMPDEST DUP2 EQ PUSH3 0x43E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x451 DUP2 PUSH3 0x428 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x471 JUMPI PUSH3 0x470 PUSH3 0x365 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x480 DUP7 DUP3 DUP8 ADD PUSH3 0x38B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x493 DUP7 DUP3 DUP8 ADD PUSH3 0x3EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x4A6 DUP7 DUP3 DUP8 ADD PUSH3 0x441 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x4F6 PUSH1 0x14 DUP4 PUSH3 0x4B0 JUMP JUMPDEST SWAP2 POP PUSH3 0x503 DUP3 PUSH3 0x4C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x527 DUP2 PUSH3 0x4E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x58A PUSH1 0x25 DUP4 PUSH3 0x4B0 JUMP JUMPDEST SWAP2 POP PUSH3 0x597 DUP3 PUSH3 0x52E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x5BB DUP2 PUSH3 0x57C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x61E PUSH1 0x24 DUP4 PUSH3 0x4B0 JUMP JUMPDEST SWAP2 POP PUSH3 0x62B DUP3 PUSH3 0x5C2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x64F DUP2 PUSH3 0x610 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2155 DUP1 PUSH3 0x664 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A3226EC GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x419 JUMPI PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH4 0x7A3226EC EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x7F649783 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x347 JUMPI PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x54202C4E EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x548DB174 EQ PUSH2 0x2A5 JUMPI PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D7 JUMPI PUSH2 0x123 JUMP JUMPDEST CALLDATASIZE PUSH2 0x123 JUMPI PUSH2 0x121 PUSH2 0x11C PUSH2 0x443 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x12E PUSH2 0x443 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x165B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x452 PUSH2 0x969 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x460 DUP3 DUP3 PUSH2 0x9B6 JUMP JUMPDEST PUSH0 PUSH2 0x46A DUP3 PUSH2 0xA2D JUMP JUMPDEST SWAP1 POP PUSH2 0x481 DUP3 PUSH1 0x4 SLOAD PUSH2 0xA4A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x491 DUP4 DUP3 PUSH2 0xA5F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B0 PUSH2 0x443 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP3 SWAP2 SWAP1 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x509 DUP4 DUP4 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x511 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x51B DUP4 DUP4 PUSH2 0xAD8 JUMP JUMPDEST POP POP PUSH2 0x525 PUSH2 0xADC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x59A JUMPI POP PUSH2 0x599 DUP3 PUSH2 0xAE5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D0 DUP3 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x5D9 DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x5E3 DUP4 DUP4 PUSH2 0xB62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5F0 PUSH2 0x443 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x654 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x667 DUP3 DUP3 PUSH2 0xC3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 DUP2 JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 PUSH2 0x6EA DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x74C JUMPI PUSH2 0x739 PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xC3D JUMP JUMPDEST DUP1 DUP1 PUSH2 0x744 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP2 JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 PUSH2 0x79F DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x801 JUMPI PUSH2 0x7EE PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7E1 JUMPI PUSH2 0x7E0 PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xB62 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7F9 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 PUSH2 0x830 DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x85A PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP4 PUSH2 0xC3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x8D1 DUP3 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x8DA DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x8E4 DUP4 DUP4 PUSH2 0xC3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 PUSH2 0x913 DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x93D PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP4 PUSH2 0xB62 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x9E0 PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA16 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA29 DUP3 DUP3 PUSH2 0xD18 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA43 PUSH1 0x3 SLOAD DUP4 PUSH2 0xDCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA69 DUP3 DUP3 PUSH2 0xDE1 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAD5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5F DUP2 PUSH2 0xB5A PUSH2 0x443 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB6C DUP3 DUP3 PUSH2 0x85E JUMP JUMPDEST PUSH2 0xC39 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBDE PUSH2 0x443 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC47 DUP3 DUP3 PUSH2 0x85E JUMP JUMPDEST ISZERO PUSH2 0xD14 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCB9 PUSH2 0x443 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP1 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBF SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE2D DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE3B DUP3 DUP3 PUSH2 0x85E JUMP JUMPDEST PUSH2 0xEB1 JUMPI PUSH2 0xE48 DUP2 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0xE55 DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE66 SWAP3 SWAP2 SWAP1 PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA8 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF36 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xED4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x119D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xF68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0xF84 SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF9D JUMPI PUSH2 0xF9C PUSH2 0x1688 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFCF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1006 JUMPI PUSH2 0x1005 PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1069 JUMPI PUSH2 0x1068 PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x10A7 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1150 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0x196F JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x110A JUMPI PUSH2 0x1109 PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1149 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP PUSH2 0x10B4 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x1193 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118A SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11FE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1263 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x121F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x121E SWAP2 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST JUMPDEST PUSH2 0x125E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1255 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1271 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x127A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B6 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x20A1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1337 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1343 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13A4 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x139C JUMPI PUSH2 0x135C DUP6 PUSH2 0x13B7 JUMP JUMPDEST PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1392 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x13AE DUP4 DUP4 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x13EB JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146D DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP2 EQ PUSH2 0x1477 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1488 DUP2 PUSH2 0x1464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A2 PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B0 DUP5 DUP3 DUP6 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14CD DUP2 PUSH2 0x14B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x14C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FE DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1508 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1519 DUP2 PUSH2 0x14F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1534 JUMPI PUSH2 0x1533 PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1541 DUP5 DUP3 DUP6 ADD PUSH2 0x150B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1553 DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156C PUSH0 DUP4 ADD DUP5 PUSH2 0x154A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1584 DUP2 PUSH2 0x1572 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x159D PUSH0 DUP4 ADD DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15CC DUP3 PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x15C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F7 DUP2 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1620 DUP6 DUP3 DUP7 ADD PUSH2 0x150B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1631 DUP6 DUP3 DUP7 ADD PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1645 DUP3 PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1655 DUP2 PUSH2 0x163B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166E PUSH0 DUP4 ADD DUP5 PUSH2 0x164C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x16BE DUP3 PUSH2 0x1678 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x1688 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16EF PUSH2 0x1428 JUMP JUMPDEST SWAP1 POP PUSH2 0x16FB DUP3 DUP3 PUSH2 0x16B5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x171A JUMPI PUSH2 0x1719 PUSH2 0x1688 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1741 PUSH2 0x173C DUP5 PUSH2 0x1700 JUMP JUMPDEST PUSH2 0x16E6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x172B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x178D JUMPI DUP1 PUSH2 0x1779 DUP9 DUP3 PUSH2 0x15E9 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1766 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17AB JUMPI PUSH2 0x17AA PUSH2 0x1674 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17BB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x172F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D9 JUMPI PUSH2 0x17D8 PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17F6 JUMPI PUSH2 0x17F5 PUSH2 0x1435 JUMP JUMPDEST JUMPDEST PUSH2 0x1802 DUP5 DUP3 DUP6 ADD PUSH2 0x1797 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x182D DUP5 DUP3 DUP6 ADD PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1859 PUSH2 0x1854 PUSH2 0x184F DUP5 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x1836 JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x186A DUP3 PUSH2 0x183F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187B DUP3 PUSH2 0x1860 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188B DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18BD PUSH0 DUP4 ADD DUP6 PUSH2 0x157B JUMP JUMPDEST PUSH2 0x18CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x193B PUSH1 0x2F DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1946 DUP3 PUSH2 0x18E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1968 DUP2 PUSH2 0x192F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19D3 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A05 JUMPI PUSH2 0x1A04 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A44 PUSH1 0x1F DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A71 DUP2 PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57686974656C69737443726F776473616C653A2062656E656669636961727920 PUSH0 DUP3 ADD MSTORE PUSH32 0x646F65736E27742068617665207468652057686974656C697374656420726F6C PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF8 PUSH1 0x41 DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B03 DUP3 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B25 DUP2 PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B36 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B41 DUP4 PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B59 JUMPI PUSH2 0x1B58 PUSH2 0x199C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB9 PUSH1 0x2A DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC4 DUP3 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE6 DUP2 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C21 PUSH1 0x19 DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2C DUP3 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C4E DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5F DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6A DUP4 PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C78 DUP2 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C8F JUMPI PUSH2 0x1C8E PUSH2 0x199C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD4 PUSH1 0x17 DUP4 PUSH2 0x1C96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDF DUP3 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D11 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CF6 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D26 DUP3 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x1D30 DUP2 DUP6 PUSH2 0x1C96 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D80 PUSH1 0x11 DUP4 PUSH2 0x1C96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8B DUP3 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 DUP3 PUSH2 0x1CC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAC DUP3 DUP6 PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB7 DUP3 PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC3 DUP3 DUP5 PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD9 DUP3 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x1DE3 DUP2 DUP6 PUSH2 0x18D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1678 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1F DUP2 DUP5 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E30 DUP2 PUSH2 0x15C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E49 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x1E56 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E67 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB8 PUSH1 0x20 DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC3 DUP3 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EE5 DUP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF5 DUP2 PUSH2 0x14B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F10 DUP2 PUSH2 0x1EEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F38 DUP5 DUP3 DUP6 ADD PUSH2 0x1F02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9B PUSH1 0x2A DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA6 DUP3 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC8 DUP2 PUSH2 0x1F8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2029 PUSH1 0x26 DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2034 DUP3 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2056 DUP2 PUSH2 0x201D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x207B DUP3 PUSH2 0x205D JUMP JUMPDEST PUSH2 0x2085 DUP2 DUP6 PUSH2 0x2067 JUMP JUMPDEST SWAP4 POP PUSH2 0x2095 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20AC DUP3 DUP5 PUSH2 0x2071 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20EB PUSH1 0x1D DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2118 DUP2 PUSH2 0x20DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD PUSH10 0x84B3055296CEE63DD000 SIGNEXTEND CALLDATALOAD EXTCODECOPY PUSH7 0x3D64C1E6BB8695 SSTORE 0xBE NUMBER GAS SWAP4 PUSH18 0xD5634D64736F6C6343000815003300000000 ",
							"sourceMap": "266:1912:15:-:0;;;497:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;587:6;595:8;605:7;1716:1:2;1821:7;:22;;;;2644:1:14;2635:6;:10;2627:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2709:1;2689:22;;:8;:22;;;2681:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2800:1;2772:30;;2780:7;2772:30;;;2764:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2864:6;2856:5;:14;;;;2891:8;2881:7;;:18;;;;;;;;;;;;;;;;;;2919:7;2910:6;;:16;;;;;;;;;;;;;;;;;;2545:389;;;630:40:15::1;2198:4:0;641:18:15::0;::::1;661:8;630:10;;;:40;;:::i;:::-;497:181:::0;;;266:1912;;7587:233:0;7670:22;7678:4;7684:7;7670;;;:22;;:::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;;;:12;;:::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;3021:145::-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:16:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:104::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;826:104;;;:::o;936:138::-;1017:32;1043:5;1017:32;:::i;:::-;1010:5;1007:43;997:71;;1064:1;1061;1054:12;997:71;936:138;:::o;1080:159::-;1145:5;1176:6;1170:13;1161:22;;1192:41;1227:5;1192:41;:::i;:::-;1080:159;;;;:::o;1245:96::-;1282:7;1311:24;1329:5;1311:24;:::i;:::-;1300:35;;1245:96;;;:::o;1347:110::-;1398:7;1427:24;1445:5;1427:24;:::i;:::-;1416:35;;1347:110;;;:::o;1463:150::-;1550:38;1582:5;1550:38;:::i;:::-;1543:5;1540:49;1530:77;;1603:1;1600;1593:12;1530:77;1463:150;:::o;1619:171::-;1690:5;1721:6;1715:13;1706:22;;1737:47;1778:5;1737:47;:::i;:::-;1619:171;;;;:::o;1796:707::-;1906:6;1914;1922;1971:2;1959:9;1950:7;1946:23;1942:32;1939:119;;;1977:79;;:::i;:::-;1939:119;2097:1;2122:64;2178:7;2169:6;2158:9;2154:22;2122:64;:::i;:::-;2112:74;;2068:128;2235:2;2261:72;2325:7;2316:6;2305:9;2301:22;2261:72;:::i;:::-;2251:82;;2206:137;2382:2;2408:78;2478:7;2469:6;2458:9;2454:22;2408:78;:::i;:::-;2398:88;;2353:143;1796:707;;;;;:::o;2509:169::-;2593:11;2627:6;2622:3;2615:19;2667:4;2662:3;2658:14;2643:29;;2509:169;;;;:::o;2684:170::-;2824:22;2820:1;2812:6;2808:14;2801:46;2684:170;:::o;2860:366::-;3002:3;3023:67;3087:2;3082:3;3023:67;:::i;:::-;3016:74;;3099:93;3188:3;3099:93;:::i;:::-;3217:2;3212:3;3208:12;3201:19;;2860:366;;;:::o;3232:419::-;3398:4;3436:2;3425:9;3421:18;3413:26;;3485:9;3479:4;3475:20;3471:1;3460:9;3456:17;3449:47;3513:131;3639:4;3513:131;:::i;:::-;3505:139;;3232:419;;;:::o;3657:224::-;3797:34;3793:1;3785:6;3781:14;3774:58;3866:7;3861:2;3853:6;3849:15;3842:32;3657:224;:::o;3887:366::-;4029:3;4050:67;4114:2;4109:3;4050:67;:::i;:::-;4043:74;;4126:93;4215:3;4126:93;:::i;:::-;4244:2;4239:3;4235:12;4228:19;;3887:366;;;:::o;4259:419::-;4425:4;4463:2;4452:9;4448:18;4440:26;;4512:9;4506:4;4502:20;4498:1;4487:9;4483:17;4476:47;4540:131;4666:4;4540:131;:::i;:::-;4532:139;;4259:419;;;:::o;4684:223::-;4824:34;4820:1;4812:6;4808:14;4801:58;4893:6;4888:2;4880:6;4876:15;4869:31;4684:223;:::o;4913:366::-;5055:3;5076:67;5140:2;5135:3;5076:67;:::i;:::-;5069:74;;5152:93;5241:3;5152:93;:::i;:::-;5270:2;5265:3;5261:12;5254:19;;4913:366;;;:::o;5285:419::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5538:9;5532:4;5528:20;5524:1;5513:9;5509:17;5502:47;5566:131;5692:4;5566:131;:::i;:::-;5558:139;;5285:419;;;:::o;266:1912:15:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 2242,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WHITELISTED_ROLE_3167": {
									"entryPoint": 1873,
									"id": 3167,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WHITELIST_ADMIN_ROLE_3172": {
									"entryPoint": 1692,
									"id": 3172,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2946": {
									"entryPoint": null,
									"id": 2946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2955": {
									"entryPoint": null,
									"id": 2955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_894": {
									"entryPoint": 4509,
									"id": 894,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_131": {
									"entryPoint": 3633,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 2894,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_deliverTokens_3103": {
									"entryPoint": 3553,
									"id": 3103,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_3152": {
									"entryPoint": 2673,
									"id": 3152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_3140": {
									"entryPoint": 2605,
									"id": 3140,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_grantRole_283": {
									"entryPoint": 2914,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1285": {
									"entryPoint": 1091,
									"id": 1285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_441": {
									"entryPoint": 2780,
									"id": 441,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_433": {
									"entryPoint": 2409,
									"id": 433,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_postValidatePurchase_3087": {
									"entryPoint": 2776,
									"id": 3087,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_3078": {
									"entryPoint": 3352,
									"id": 3078,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_3306": {
									"entryPoint": 2486,
									"id": 3306,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_3117": {
									"entryPoint": 2655,
									"id": 3117,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_1272": {
									"entryPoint": 5081,
									"id": 1272,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revokeRole_314": {
									"entryPoint": 3133,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updatePurchasingState_3126": {
									"entryPoint": 2669,
									"id": 3126,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addToWhitelist_3207": {
									"entryPoint": 2281,
									"id": 3207,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addToWhitelist_3237": {
									"entryPoint": 1909,
									"id": 3237,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_2602": {
									"entryPoint": 2634,
									"id": 2602,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_3050": {
									"entryPoint": 1098,
									"id": 3050,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_1097": {
									"entryPoint": 4730,
									"id": 1097,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_1033": {
									"entryPoint": 4707,
									"id": 1033,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getRoleAdmin_146": {
									"entryPoint": 1441,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_166": {
									"entryPoint": 1479,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 2142,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_961": {
									"entryPoint": 5047,
									"id": 961,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_2632": {
									"entryPoint": 3532,
									"id": 2632,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rate_2983": {
									"entryPoint": 1470,
									"id": 2983,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhitelist_3251": {
									"entryPoint": 2054,
									"id": 3251,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeFromWhitelist_3281": {
									"entryPoint": 1728,
									"id": 3281,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_209": {
									"entryPoint": 1512,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_186": {
									"entryPoint": 2248,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_600": {
									"entryPoint": 3765,
									"id": 600,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1547": {
									"entryPoint": 2789,
									"id": 1547,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_60": {
									"entryPoint": 1320,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1478": {
									"entryPoint": 3944,
									"id": 1478,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1498": {
									"entryPoint": 3899,
									"id": 1498,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token_2965": {
									"entryPoint": 2369,
									"id": 2965,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_1228": {
									"entryPoint": 4931,
									"id": 1228,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@wallet_2974": {
									"entryPoint": 1652,
									"id": 2974,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@weiRaised_2992": {
									"entryPoint": 1643,
									"id": 2992,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5935,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7574,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 5723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed": {
									"entryPoint": 6289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7223,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6314,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 5691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$531_to_t_address": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5748,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5169,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 7812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548": {
									"entryPoint": 6776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 8143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 7007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 8375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 8001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 6369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25514:16",
										"nodeType": "YulBlock",
										"src": "0:25514:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "378:105:16",
													"nodeType": "YulBlock",
													"src": "378:105:16",
													"statements": [
														{
															"nativeSrc": "388:89:16",
															"nodeType": "YulAssignment",
															"src": "388:89:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:16",
																		"nodeType": "YulLiteral",
																		"src": "410:66:16",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:16"
																},
																"nativeSrc": "399:78:16",
																"nodeType": "YulFunctionCall",
																"src": "399:78:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:16",
														"nodeType": "YulTypedName",
														"src": "360:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:16",
														"nodeType": "YulTypedName",
														"src": "370:7:16",
														"type": ""
													}
												],
												"src": "334:149:16"
											},
											{
												"body": {
													"nativeSrc": "531:78:16",
													"nodeType": "YulBlock",
													"src": "531:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:16",
																"nodeType": "YulBlock",
																"src": "587:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:16",
																					"nodeType": "YulLiteral",
																					"src": "596:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "599:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:16"
																			},
																			"nativeSrc": "589:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:16"
																		},
																		"nativeSrc": "589:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:16"
																				},
																				"nativeSrc": "561:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:16"
																		},
																		"nativeSrc": "551:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:16"
																},
																"nativeSrc": "544:42:16",
																"nodeType": "YulFunctionCall",
																"src": "544:42:16"
															},
															"nativeSrc": "541:62:16",
															"nodeType": "YulIf",
															"src": "541:62:16"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:16",
														"nodeType": "YulTypedName",
														"src": "524:5:16",
														"type": ""
													}
												],
												"src": "489:120:16"
											},
											{
												"body": {
													"nativeSrc": "666:86:16",
													"nodeType": "YulBlock",
													"src": "666:86:16",
													"statements": [
														{
															"nativeSrc": "676:29:16",
															"nodeType": "YulAssignment",
															"src": "676:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:16"
																},
																"nativeSrc": "685:20:16",
																"nodeType": "YulFunctionCall",
																"src": "685:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:16"
																},
																"nativeSrc": "714:32:16",
																"nodeType": "YulFunctionCall",
																"src": "714:32:16"
															},
															"nativeSrc": "714:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:16",
														"nodeType": "YulTypedName",
														"src": "644:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:16",
														"nodeType": "YulTypedName",
														"src": "652:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:16",
														"nodeType": "YulTypedName",
														"src": "660:5:16",
														"type": ""
													}
												],
												"src": "615:137:16"
											},
											{
												"body": {
													"nativeSrc": "823:262:16",
													"nodeType": "YulBlock",
													"src": "823:262:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:16",
																"nodeType": "YulBlock",
																"src": "869:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:16"
																			},
																			"nativeSrc": "871:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:16"
																		},
																		"nativeSrc": "871:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:16"
																		},
																		"nativeSrc": "840:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:16",
																		"nodeType": "YulLiteral",
																		"src": "865:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:16"
																},
																"nativeSrc": "836:32:16",
																"nodeType": "YulFunctionCall",
																"src": "836:32:16"
															},
															"nativeSrc": "833:119:16",
															"nodeType": "YulIf",
															"src": "833:119:16"
														},
														{
															"nativeSrc": "962:116:16",
															"nodeType": "YulBlock",
															"src": "962:116:16",
															"statements": [
																{
																	"nativeSrc": "977:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:16",
																		"nodeType": "YulLiteral",
																		"src": "991:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:16",
																			"nodeType": "YulTypedName",
																			"src": "981:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:16",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:16"
																				},
																				"nativeSrc": "1036:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:16",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:16"
																		},
																		"nativeSrc": "1016:52:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:16",
														"nodeType": "YulTypedName",
														"src": "793:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:16",
														"nodeType": "YulTypedName",
														"src": "804:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:16",
														"nodeType": "YulTypedName",
														"src": "816:6:16",
														"type": ""
													}
												],
												"src": "758:327:16"
											},
											{
												"body": {
													"nativeSrc": "1133:48:16",
													"nodeType": "YulBlock",
													"src": "1133:48:16",
													"statements": [
														{
															"nativeSrc": "1143:32:16",
															"nodeType": "YulAssignment",
															"src": "1143:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:16"
																		},
																		"nativeSrc": "1161:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:16"
																},
																"nativeSrc": "1154:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:16",
														"nodeType": "YulTypedName",
														"src": "1115:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:16",
														"nodeType": "YulTypedName",
														"src": "1125:7:16",
														"type": ""
													}
												],
												"src": "1091:90:16"
											},
											{
												"body": {
													"nativeSrc": "1246:50:16",
													"nodeType": "YulBlock",
													"src": "1246:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:16"
																		},
																		"nativeSrc": "1268:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:16"
																},
																"nativeSrc": "1256:34:16",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:16"
															},
															"nativeSrc": "1256:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:16",
														"nodeType": "YulTypedName",
														"src": "1234:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:16",
														"nodeType": "YulTypedName",
														"src": "1241:3:16",
														"type": ""
													}
												],
												"src": "1187:109:16"
											},
											{
												"body": {
													"nativeSrc": "1394:118:16",
													"nodeType": "YulBlock",
													"src": "1394:118:16",
													"statements": [
														{
															"nativeSrc": "1404:26:16",
															"nodeType": "YulAssignment",
															"src": "1404:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:16"
																},
																"nativeSrc": "1412:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:16"
																		},
																		"nativeSrc": "1487:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:16"
																},
																"nativeSrc": "1440:65:16",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:16"
															},
															"nativeSrc": "1440:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:16",
														"nodeType": "YulTypedName",
														"src": "1366:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:16",
														"nodeType": "YulTypedName",
														"src": "1378:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:16",
														"nodeType": "YulTypedName",
														"src": "1389:4:16",
														"type": ""
													}
												],
												"src": "1302:210:16"
											},
											{
												"body": {
													"nativeSrc": "1563:32:16",
													"nodeType": "YulBlock",
													"src": "1563:32:16",
													"statements": [
														{
															"nativeSrc": "1573:16:16",
															"nodeType": "YulAssignment",
															"src": "1573:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:16",
																"nodeType": "YulIdentifier",
																"src": "1584:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:16",
														"nodeType": "YulTypedName",
														"src": "1545:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:16",
														"nodeType": "YulTypedName",
														"src": "1555:7:16",
														"type": ""
													}
												],
												"src": "1518:77:16"
											},
											{
												"body": {
													"nativeSrc": "1644:79:16",
													"nodeType": "YulBlock",
													"src": "1644:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:16",
																"nodeType": "YulBlock",
																"src": "1701:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:16"
																			},
																			"nativeSrc": "1703:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:16"
																		},
																		"nativeSrc": "1703:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:16"
																				},
																				"nativeSrc": "1674:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:16"
																		},
																		"nativeSrc": "1664:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:16"
																},
																"nativeSrc": "1657:43:16",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:16"
															},
															"nativeSrc": "1654:63:16",
															"nodeType": "YulIf",
															"src": "1654:63:16"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:16",
														"nodeType": "YulTypedName",
														"src": "1637:5:16",
														"type": ""
													}
												],
												"src": "1601:122:16"
											},
											{
												"body": {
													"nativeSrc": "1781:87:16",
													"nodeType": "YulBlock",
													"src": "1781:87:16",
													"statements": [
														{
															"nativeSrc": "1791:29:16",
															"nodeType": "YulAssignment",
															"src": "1791:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:16"
																},
																"nativeSrc": "1800:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:16"
																},
																"nativeSrc": "1829:33:16",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:16"
															},
															"nativeSrc": "1829:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:16"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:16",
														"nodeType": "YulTypedName",
														"src": "1759:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:16",
														"nodeType": "YulTypedName",
														"src": "1767:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:16",
														"nodeType": "YulTypedName",
														"src": "1775:5:16",
														"type": ""
													}
												],
												"src": "1729:139:16"
											},
											{
												"body": {
													"nativeSrc": "1940:263:16",
													"nodeType": "YulBlock",
													"src": "1940:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:16",
																"nodeType": "YulBlock",
																"src": "1986:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:16"
																			},
																			"nativeSrc": "1988:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:16"
																		},
																		"nativeSrc": "1988:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:16"
																		},
																		"nativeSrc": "1957:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:16"
																},
																"nativeSrc": "1953:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:16"
															},
															"nativeSrc": "1950:119:16",
															"nodeType": "YulIf",
															"src": "1950:119:16"
														},
														{
															"nativeSrc": "2079:117:16",
															"nodeType": "YulBlock",
															"src": "2079:117:16",
															"statements": [
																{
																	"nativeSrc": "2094:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:16",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:16"
																				},
																				"nativeSrc": "2154:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:16"
																		},
																		"nativeSrc": "2133:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:16",
														"nodeType": "YulTypedName",
														"src": "1910:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:16",
														"nodeType": "YulTypedName",
														"src": "1921:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:16",
														"nodeType": "YulTypedName",
														"src": "1933:6:16",
														"type": ""
													}
												],
												"src": "1874:329:16"
											},
											{
												"body": {
													"nativeSrc": "2274:53:16",
													"nodeType": "YulBlock",
													"src": "2274:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:16"
																		},
																		"nativeSrc": "2296:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:16"
																},
																"nativeSrc": "2284:37:16",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:16"
															},
															"nativeSrc": "2284:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:16"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:16",
														"nodeType": "YulTypedName",
														"src": "2262:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:16",
														"nodeType": "YulTypedName",
														"src": "2269:3:16",
														"type": ""
													}
												],
												"src": "2209:118:16"
											},
											{
												"body": {
													"nativeSrc": "2431:124:16",
													"nodeType": "YulBlock",
													"src": "2431:124:16",
													"statements": [
														{
															"nativeSrc": "2441:26:16",
															"nodeType": "YulAssignment",
															"src": "2441:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:16"
																},
																"nativeSrc": "2449:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:16"
																		},
																		"nativeSrc": "2530:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:16"
																},
																"nativeSrc": "2477:71:16",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:16"
															},
															"nativeSrc": "2477:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:16",
														"nodeType": "YulTypedName",
														"src": "2403:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:16",
														"nodeType": "YulTypedName",
														"src": "2415:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:16",
														"nodeType": "YulTypedName",
														"src": "2426:4:16",
														"type": ""
													}
												],
												"src": "2333:222:16"
											},
											{
												"body": {
													"nativeSrc": "2606:32:16",
													"nodeType": "YulBlock",
													"src": "2606:32:16",
													"statements": [
														{
															"nativeSrc": "2616:16:16",
															"nodeType": "YulAssignment",
															"src": "2616:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2627:5:16",
																"nodeType": "YulIdentifier",
																"src": "2627:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2561:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:16",
														"nodeType": "YulTypedName",
														"src": "2588:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:16",
														"nodeType": "YulTypedName",
														"src": "2598:7:16",
														"type": ""
													}
												],
												"src": "2561:77:16"
											},
											{
												"body": {
													"nativeSrc": "2709:53:16",
													"nodeType": "YulBlock",
													"src": "2709:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2726:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2726:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2749:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2749:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2731:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "2731:17:16"
																		},
																		"nativeSrc": "2731:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2719:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:16"
																},
																"nativeSrc": "2719:37:16",
																"nodeType": "YulFunctionCall",
																"src": "2719:37:16"
															},
															"nativeSrc": "2719:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "2719:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2644:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2697:5:16",
														"nodeType": "YulTypedName",
														"src": "2697:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2704:3:16",
														"nodeType": "YulTypedName",
														"src": "2704:3:16",
														"type": ""
													}
												],
												"src": "2644:118:16"
											},
											{
												"body": {
													"nativeSrc": "2866:124:16",
													"nodeType": "YulBlock",
													"src": "2866:124:16",
													"statements": [
														{
															"nativeSrc": "2876:26:16",
															"nodeType": "YulAssignment",
															"src": "2876:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2888:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2888:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2899:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2899:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2884:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2884:3:16"
																},
																"nativeSrc": "2884:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2884:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2876:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2876:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2956:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2956:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2969:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2969:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2980:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2980:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2965:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:16"
																		},
																		"nativeSrc": "2965:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2965:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2912:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "2912:43:16"
																},
																"nativeSrc": "2912:71:16",
																"nodeType": "YulFunctionCall",
																"src": "2912:71:16"
															},
															"nativeSrc": "2912:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "2912:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2768:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2838:9:16",
														"nodeType": "YulTypedName",
														"src": "2838:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2850:6:16",
														"nodeType": "YulTypedName",
														"src": "2850:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2861:4:16",
														"nodeType": "YulTypedName",
														"src": "2861:4:16",
														"type": ""
													}
												],
												"src": "2768:222:16"
											},
											{
												"body": {
													"nativeSrc": "3041:81:16",
													"nodeType": "YulBlock",
													"src": "3041:81:16",
													"statements": [
														{
															"nativeSrc": "3051:65:16",
															"nodeType": "YulAssignment",
															"src": "3051:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3066:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3066:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3073:42:16",
																		"nodeType": "YulLiteral",
																		"src": "3073:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3062:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3062:3:16"
																},
																"nativeSrc": "3062:54:16",
																"nodeType": "YulFunctionCall",
																"src": "3062:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3051:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3051:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2996:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:16",
														"nodeType": "YulTypedName",
														"src": "3023:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3033:7:16",
														"nodeType": "YulTypedName",
														"src": "3033:7:16",
														"type": ""
													}
												],
												"src": "2996:126:16"
											},
											{
												"body": {
													"nativeSrc": "3173:51:16",
													"nodeType": "YulBlock",
													"src": "3173:51:16",
													"statements": [
														{
															"nativeSrc": "3183:35:16",
															"nodeType": "YulAssignment",
															"src": "3183:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3212:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3212:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3194:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "3194:17:16"
																},
																"nativeSrc": "3194:24:16",
																"nodeType": "YulFunctionCall",
																"src": "3194:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3183:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3183:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3128:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3155:5:16",
														"nodeType": "YulTypedName",
														"src": "3155:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3165:7:16",
														"nodeType": "YulTypedName",
														"src": "3165:7:16",
														"type": ""
													}
												],
												"src": "3128:96:16"
											},
											{
												"body": {
													"nativeSrc": "3273:79:16",
													"nodeType": "YulBlock",
													"src": "3273:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3330:16:16",
																"nodeType": "YulBlock",
																"src": "3330:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3339:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3342:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3332:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:16"
																			},
																			"nativeSrc": "3332:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:16"
																		},
																		"nativeSrc": "3332:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3296:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3296:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3321:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3321:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3303:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "3303:17:16"
																				},
																				"nativeSrc": "3303:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3303:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3293:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3293:2:16"
																		},
																		"nativeSrc": "3293:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3293:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3286:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:16"
																},
																"nativeSrc": "3286:43:16",
																"nodeType": "YulFunctionCall",
																"src": "3286:43:16"
															},
															"nativeSrc": "3283:63:16",
															"nodeType": "YulIf",
															"src": "3283:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3230:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3266:5:16",
														"nodeType": "YulTypedName",
														"src": "3266:5:16",
														"type": ""
													}
												],
												"src": "3230:122:16"
											},
											{
												"body": {
													"nativeSrc": "3410:87:16",
													"nodeType": "YulBlock",
													"src": "3410:87:16",
													"statements": [
														{
															"nativeSrc": "3420:29:16",
															"nodeType": "YulAssignment",
															"src": "3420:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3442:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3442:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3429:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3429:12:16"
																},
																"nativeSrc": "3429:20:16",
																"nodeType": "YulFunctionCall",
																"src": "3429:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3420:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3420:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3485:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3485:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3458:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "3458:26:16"
																},
																"nativeSrc": "3458:33:16",
																"nodeType": "YulFunctionCall",
																"src": "3458:33:16"
															},
															"nativeSrc": "3458:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "3458:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3358:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3388:6:16",
														"nodeType": "YulTypedName",
														"src": "3388:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3396:3:16",
														"nodeType": "YulTypedName",
														"src": "3396:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3404:5:16",
														"nodeType": "YulTypedName",
														"src": "3404:5:16",
														"type": ""
													}
												],
												"src": "3358:139:16"
											},
											{
												"body": {
													"nativeSrc": "3586:391:16",
													"nodeType": "YulBlock",
													"src": "3586:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3632:83:16",
																"nodeType": "YulBlock",
																"src": "3632:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3634:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3634:77:16"
																			},
																			"nativeSrc": "3634:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3634:79:16"
																		},
																		"nativeSrc": "3634:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3634:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3607:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3607:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3616:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3616:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3603:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:16"
																		},
																		"nativeSrc": "3603:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3603:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3599:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3599:3:16"
																},
																"nativeSrc": "3599:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3599:32:16"
															},
															"nativeSrc": "3596:119:16",
															"nodeType": "YulIf",
															"src": "3596:119:16"
														},
														{
															"nativeSrc": "3725:117:16",
															"nodeType": "YulBlock",
															"src": "3725:117:16",
															"statements": [
																{
																	"nativeSrc": "3740:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3740:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3754:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3754:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3744:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3744:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3769:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3769:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3804:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3804:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3815:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3815:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3800:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3800:3:16"
																				},
																				"nativeSrc": "3800:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3800:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3824:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3824:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3779:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3779:20:16"
																		},
																		"nativeSrc": "3779:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3779:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3769:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3769:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3852:118:16",
															"nodeType": "YulBlock",
															"src": "3852:118:16",
															"statements": [
																{
																	"nativeSrc": "3867:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3867:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3881:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3881:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3871:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3871:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3897:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3897:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3932:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3932:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3943:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3943:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3928:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3928:3:16"
																				},
																				"nativeSrc": "3928:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3928:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3952:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3952:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3907:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3907:20:16"
																		},
																		"nativeSrc": "3907:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3907:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3897:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3897:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3503:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3548:9:16",
														"nodeType": "YulTypedName",
														"src": "3548:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3559:7:16",
														"nodeType": "YulTypedName",
														"src": "3559:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3571:6:16",
														"nodeType": "YulTypedName",
														"src": "3571:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3579:6:16",
														"nodeType": "YulTypedName",
														"src": "3579:6:16",
														"type": ""
													}
												],
												"src": "3503:474:16"
											},
											{
												"body": {
													"nativeSrc": "4036:51:16",
													"nodeType": "YulBlock",
													"src": "4036:51:16",
													"statements": [
														{
															"nativeSrc": "4046:35:16",
															"nodeType": "YulAssignment",
															"src": "4046:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4075:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4075:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4057:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "4057:17:16"
																},
																"nativeSrc": "4057:24:16",
																"nodeType": "YulFunctionCall",
																"src": "4057:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4046:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "4046:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "3983:104:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4018:5:16",
														"nodeType": "YulTypedName",
														"src": "4018:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4028:7:16",
														"nodeType": "YulTypedName",
														"src": "4028:7:16",
														"type": ""
													}
												],
												"src": "3983:104:16"
											},
											{
												"body": {
													"nativeSrc": "4174:61:16",
													"nodeType": "YulBlock",
													"src": "4174:61:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4191:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4191:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4222:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4222:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "4196:25:16",
																			"nodeType": "YulIdentifier",
																			"src": "4196:25:16"
																		},
																		"nativeSrc": "4196:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4196:32:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4184:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:16"
																},
																"nativeSrc": "4184:45:16",
																"nodeType": "YulFunctionCall",
																"src": "4184:45:16"
															},
															"nativeSrc": "4184:45:16",
															"nodeType": "YulExpressionStatement",
															"src": "4184:45:16"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "4093:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4162:5:16",
														"nodeType": "YulTypedName",
														"src": "4162:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4169:3:16",
														"nodeType": "YulTypedName",
														"src": "4169:3:16",
														"type": ""
													}
												],
												"src": "4093:142:16"
											},
											{
												"body": {
													"nativeSrc": "4355:140:16",
													"nodeType": "YulBlock",
													"src": "4355:140:16",
													"statements": [
														{
															"nativeSrc": "4365:26:16",
															"nodeType": "YulAssignment",
															"src": "4365:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4377:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4377:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4388:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4388:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4373:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4373:3:16"
																},
																"nativeSrc": "4373:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4373:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4365:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4365:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4461:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4461:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4474:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4474:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4485:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4485:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4470:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4470:3:16"
																		},
																		"nativeSrc": "4470:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4470:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "4401:59:16",
																	"nodeType": "YulIdentifier",
																	"src": "4401:59:16"
																},
																"nativeSrc": "4401:87:16",
																"nodeType": "YulFunctionCall",
																"src": "4401:87:16"
															},
															"nativeSrc": "4401:87:16",
															"nodeType": "YulExpressionStatement",
															"src": "4401:87:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "4241:254:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4327:9:16",
														"nodeType": "YulTypedName",
														"src": "4327:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4339:6:16",
														"nodeType": "YulTypedName",
														"src": "4339:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4350:4:16",
														"nodeType": "YulTypedName",
														"src": "4350:4:16",
														"type": ""
													}
												],
												"src": "4241:254:16"
											},
											{
												"body": {
													"nativeSrc": "4590:28:16",
													"nodeType": "YulBlock",
													"src": "4590:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4607:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4607:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4610:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4600:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4600:6:16"
																},
																"nativeSrc": "4600:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4600:12:16"
															},
															"nativeSrc": "4600:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "4600:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4501:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4501:117:16"
											},
											{
												"body": {
													"nativeSrc": "4672:54:16",
													"nodeType": "YulBlock",
													"src": "4672:54:16",
													"statements": [
														{
															"nativeSrc": "4682:38:16",
															"nodeType": "YulAssignment",
															"src": "4682:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4700:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4700:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4707:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4707:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4696:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4696:3:16"
																		},
																		"nativeSrc": "4696:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4696:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4716:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4716:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4712:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4712:3:16"
																		},
																		"nativeSrc": "4712:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4712:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4692:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4692:3:16"
																},
																"nativeSrc": "4692:28:16",
																"nodeType": "YulFunctionCall",
																"src": "4692:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4682:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4682:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4624:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4655:5:16",
														"nodeType": "YulTypedName",
														"src": "4655:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4665:6:16",
														"nodeType": "YulTypedName",
														"src": "4665:6:16",
														"type": ""
													}
												],
												"src": "4624:102:16"
											},
											{
												"body": {
													"nativeSrc": "4760:152:16",
													"nodeType": "YulBlock",
													"src": "4760:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4777:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4777:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4780:77:16",
																		"nodeType": "YulLiteral",
																		"src": "4780:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4770:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4770:6:16"
																},
																"nativeSrc": "4770:88:16",
																"nodeType": "YulFunctionCall",
																"src": "4770:88:16"
															},
															"nativeSrc": "4770:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "4770:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4874:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4874:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4877:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4877:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4867:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4867:6:16"
																},
																"nativeSrc": "4867:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4867:15:16"
															},
															"nativeSrc": "4867:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4867:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4898:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4898:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4901:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4901:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4891:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4891:6:16"
																},
																"nativeSrc": "4891:15:16",
																"nodeType": "YulFunctionCall",
																"src": "4891:15:16"
															},
															"nativeSrc": "4891:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "4891:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4732:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4732:180:16"
											},
											{
												"body": {
													"nativeSrc": "4961:238:16",
													"nodeType": "YulBlock",
													"src": "4961:238:16",
													"statements": [
														{
															"nativeSrc": "4971:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4971:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4993:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4993:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5023:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "5023:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5001:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "5001:21:16"
																		},
																		"nativeSrc": "5001:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5001:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4989:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4989:3:16"
																},
																"nativeSrc": "4989:40:16",
																"nodeType": "YulFunctionCall",
																"src": "4989:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4975:10:16",
																	"nodeType": "YulTypedName",
																	"src": "4975:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5140:22:16",
																"nodeType": "YulBlock",
																"src": "5140:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5142:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5142:16:16"
																			},
																			"nativeSrc": "5142:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5142:18:16"
																		},
																		"nativeSrc": "5142:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5142:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5083:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5083:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5095:18:16",
																				"nodeType": "YulLiteral",
																				"src": "5095:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5080:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5080:2:16"
																		},
																		"nativeSrc": "5080:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5080:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5119:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5119:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5131:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5131:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5116:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5116:2:16"
																		},
																		"nativeSrc": "5116:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5116:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5077:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5077:2:16"
																},
																"nativeSrc": "5077:62:16",
																"nodeType": "YulFunctionCall",
																"src": "5077:62:16"
															},
															"nativeSrc": "5074:88:16",
															"nodeType": "YulIf",
															"src": "5074:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5178:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5182:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "5182:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5171:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5171:6:16"
																},
																"nativeSrc": "5171:22:16",
																"nodeType": "YulFunctionCall",
																"src": "5171:22:16"
															},
															"nativeSrc": "5171:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "5171:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4918:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4947:6:16",
														"nodeType": "YulTypedName",
														"src": "4947:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4955:4:16",
														"nodeType": "YulTypedName",
														"src": "4955:4:16",
														"type": ""
													}
												],
												"src": "4918:281:16"
											},
											{
												"body": {
													"nativeSrc": "5246:88:16",
													"nodeType": "YulBlock",
													"src": "5246:88:16",
													"statements": [
														{
															"nativeSrc": "5256:30:16",
															"nodeType": "YulAssignment",
															"src": "5256:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5266:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "5266:18:16"
																},
																"nativeSrc": "5266:20:16",
																"nodeType": "YulFunctionCall",
																"src": "5266:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5256:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5256:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5315:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5315:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5323:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5323:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5295:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "5295:19:16"
																},
																"nativeSrc": "5295:33:16",
																"nodeType": "YulFunctionCall",
																"src": "5295:33:16"
															},
															"nativeSrc": "5295:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "5295:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5205:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5230:4:16",
														"nodeType": "YulTypedName",
														"src": "5230:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5239:6:16",
														"nodeType": "YulTypedName",
														"src": "5239:6:16",
														"type": ""
													}
												],
												"src": "5205:129:16"
											},
											{
												"body": {
													"nativeSrc": "5422:229:16",
													"nodeType": "YulBlock",
													"src": "5422:229:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5527:22:16",
																"nodeType": "YulBlock",
																"src": "5527:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5529:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5529:16:16"
																			},
																			"nativeSrc": "5529:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5529:18:16"
																		},
																		"nativeSrc": "5529:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5529:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5499:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5499:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5507:18:16",
																		"nodeType": "YulLiteral",
																		"src": "5507:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5496:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5496:2:16"
																},
																"nativeSrc": "5496:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5496:30:16"
															},
															"nativeSrc": "5493:56:16",
															"nodeType": "YulIf",
															"src": "5493:56:16"
														},
														{
															"nativeSrc": "5559:25:16",
															"nodeType": "YulAssignment",
															"src": "5559:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5571:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5571:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5579:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5579:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5567:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5567:3:16"
																},
																"nativeSrc": "5567:17:16",
																"nodeType": "YulFunctionCall",
																"src": "5567:17:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5559:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5559:4:16"
																}
															]
														},
														{
															"nativeSrc": "5621:23:16",
															"nodeType": "YulAssignment",
															"src": "5621:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5633:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5633:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5639:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5639:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5629:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5629:3:16"
																},
																"nativeSrc": "5629:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5629:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5621:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5621:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5340:311:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5406:6:16",
														"nodeType": "YulTypedName",
														"src": "5406:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5417:4:16",
														"nodeType": "YulTypedName",
														"src": "5417:4:16",
														"type": ""
													}
												],
												"src": "5340:311:16"
											},
											{
												"body": {
													"nativeSrc": "5746:28:16",
													"nodeType": "YulBlock",
													"src": "5746:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5763:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5763:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5766:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5766:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5756:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5756:6:16"
																},
																"nativeSrc": "5756:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5756:12:16"
															},
															"nativeSrc": "5756:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "5756:12:16"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5657:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5657:117:16"
											},
											{
												"body": {
													"nativeSrc": "5899:608:16",
													"nodeType": "YulBlock",
													"src": "5899:608:16",
													"statements": [
														{
															"nativeSrc": "5909:90:16",
															"nodeType": "YulAssignment",
															"src": "5909:90:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5991:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5991:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "5934:56:16",
																			"nodeType": "YulIdentifier",
																			"src": "5934:56:16"
																		},
																		"nativeSrc": "5934:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5934:64:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5918:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "5918:15:16"
																},
																"nativeSrc": "5918:81:16",
																"nodeType": "YulFunctionCall",
																"src": "5918:81:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5909:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "5909:5:16"
																}
															]
														},
														{
															"nativeSrc": "6008:16:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6008:16:16",
															"value": {
																"name": "array",
																"nativeSrc": "6019:5:16",
																"nodeType": "YulIdentifier",
																"src": "6019:5:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6012:3:16",
																	"nodeType": "YulTypedName",
																	"src": "6012:3:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6041:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6041:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6048:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6048:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6034:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6034:6:16"
																},
																"nativeSrc": "6034:21:16",
																"nodeType": "YulFunctionCall",
																"src": "6034:21:16"
															},
															"nativeSrc": "6034:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "6034:21:16"
														},
														{
															"nativeSrc": "6064:23:16",
															"nodeType": "YulAssignment",
															"src": "6064:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6075:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6075:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6071:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6071:3:16"
																},
																"nativeSrc": "6071:16:16",
																"nodeType": "YulFunctionCall",
																"src": "6071:16:16"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6064:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6064:3:16"
																}
															]
														},
														{
															"nativeSrc": "6097:44:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6097:44:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6115:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6115:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6127:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6127:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6135:4:16",
																				"nodeType": "YulLiteral",
																				"src": "6135:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6123:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6123:3:16"
																		},
																		"nativeSrc": "6123:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6123:17:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6111:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:16"
																},
																"nativeSrc": "6111:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6111:30:16"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6101:6:16",
																	"nodeType": "YulTypedName",
																	"src": "6101:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6169:103:16",
																"nodeType": "YulBlock",
																"src": "6169:103:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6183:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6183:77:16"
																			},
																			"nativeSrc": "6183:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6183:79:16"
																		},
																		"nativeSrc": "6183:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6183:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6156:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6156:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6164:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6164:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6153:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6153:2:16"
																},
																"nativeSrc": "6153:15:16",
																"nodeType": "YulFunctionCall",
																"src": "6153:15:16"
															},
															"nativeSrc": "6150:122:16",
															"nodeType": "YulIf",
															"src": "6150:122:16"
														},
														{
															"body": {
																"nativeSrc": "6357:144:16",
																"nodeType": "YulBlock",
																"src": "6357:144:16",
																"statements": [
																	{
																		"nativeSrc": "6372:21:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6372:21:16",
																		"value": {
																			"name": "src",
																			"nativeSrc": "6390:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6390:3:16"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "6376:10:16",
																				"nodeType": "YulTypedName",
																				"src": "6376:10:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6414:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6414:3:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "6440:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "6440:10:16"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "6452:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6452:3:16"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "6419:20:16",
																						"nodeType": "YulIdentifier",
																						"src": "6419:20:16"
																					},
																					"nativeSrc": "6419:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6419:37:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6407:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6407:6:16"
																			},
																			"nativeSrc": "6407:50:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6407:50:16"
																		},
																		"nativeSrc": "6407:50:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6407:50:16"
																	},
																	{
																		"nativeSrc": "6470:21:16",
																		"nodeType": "YulAssignment",
																		"src": "6470:21:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6481:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6481:3:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6486:4:16",
																					"nodeType": "YulLiteral",
																					"src": "6486:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6477:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6477:3:16"
																			},
																			"nativeSrc": "6477:14:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6477:14:16"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6470:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6470:3:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6310:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6310:3:16"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6315:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6315:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6307:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6307:2:16"
																},
																"nativeSrc": "6307:15:16",
																"nodeType": "YulFunctionCall",
																"src": "6307:15:16"
															},
															"nativeSrc": "6281:220:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6323:25:16",
																"nodeType": "YulBlock",
																"src": "6323:25:16",
																"statements": [
																	{
																		"nativeSrc": "6325:21:16",
																		"nodeType": "YulAssignment",
																		"src": "6325:21:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6336:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6336:3:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6341:4:16",
																					"nodeType": "YulLiteral",
																					"src": "6341:4:16",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6332:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6332:3:16"
																			},
																			"nativeSrc": "6332:14:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6332:14:16"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6325:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6325:3:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6285:21:16",
																"nodeType": "YulBlock",
																"src": "6285:21:16",
																"statements": [
																	{
																		"nativeSrc": "6287:17:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6287:17:16",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "6298:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6298:6:16"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "6291:3:16",
																				"nodeType": "YulTypedName",
																				"src": "6291:3:16",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6281:220:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5797:710:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5869:6:16",
														"nodeType": "YulTypedName",
														"src": "5869:6:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5877:6:16",
														"nodeType": "YulTypedName",
														"src": "5877:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5885:3:16",
														"nodeType": "YulTypedName",
														"src": "5885:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5893:5:16",
														"nodeType": "YulTypedName",
														"src": "5893:5:16",
														"type": ""
													}
												],
												"src": "5797:710:16"
											},
											{
												"body": {
													"nativeSrc": "6607:293:16",
													"nodeType": "YulBlock",
													"src": "6607:293:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6656:83:16",
																"nodeType": "YulBlock",
																"src": "6656:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6658:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6658:77:16"
																			},
																			"nativeSrc": "6658:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6658:79:16"
																		},
																		"nativeSrc": "6658:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6658:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6635:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6635:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6643:4:16",
																						"nodeType": "YulLiteral",
																						"src": "6643:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6631:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6631:3:16"
																				},
																				"nativeSrc": "6631:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6631:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6650:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6650:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6627:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6627:3:16"
																		},
																		"nativeSrc": "6627:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6620:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:16"
																},
																"nativeSrc": "6620:35:16",
																"nodeType": "YulFunctionCall",
																"src": "6620:35:16"
															},
															"nativeSrc": "6617:122:16",
															"nodeType": "YulIf",
															"src": "6617:122:16"
														},
														{
															"nativeSrc": "6748:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6748:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6775:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6775:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6762:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6762:12:16"
																},
																"nativeSrc": "6762:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6762:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6752:6:16",
																	"nodeType": "YulTypedName",
																	"src": "6752:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6791:103:16",
															"nodeType": "YulAssignment",
															"src": "6791:103:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6867:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6867:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6875:4:16",
																				"nodeType": "YulLiteral",
																				"src": "6875:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6863:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6863:3:16"
																		},
																		"nativeSrc": "6863:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6863:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6882:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6882:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6890:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6890:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6800:62:16",
																	"nodeType": "YulIdentifier",
																	"src": "6800:62:16"
																},
																"nativeSrc": "6800:94:16",
																"nodeType": "YulFunctionCall",
																"src": "6800:94:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6791:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6791:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6530:370:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6585:6:16",
														"nodeType": "YulTypedName",
														"src": "6585:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6593:3:16",
														"nodeType": "YulTypedName",
														"src": "6593:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6601:5:16",
														"nodeType": "YulTypedName",
														"src": "6601:5:16",
														"type": ""
													}
												],
												"src": "6530:370:16"
											},
											{
												"body": {
													"nativeSrc": "6997:448:16",
													"nodeType": "YulBlock",
													"src": "6997:448:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7043:83:16",
																"nodeType": "YulBlock",
																"src": "7043:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7045:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "7045:77:16"
																			},
																			"nativeSrc": "7045:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7045:79:16"
																		},
																		"nativeSrc": "7045:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7045:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7018:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7018:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7027:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7027:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7014:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7014:3:16"
																		},
																		"nativeSrc": "7014:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7014:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7039:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7039:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7010:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7010:3:16"
																},
																"nativeSrc": "7010:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7010:32:16"
															},
															"nativeSrc": "7007:119:16",
															"nodeType": "YulIf",
															"src": "7007:119:16"
														},
														{
															"nativeSrc": "7136:302:16",
															"nodeType": "YulBlock",
															"src": "7136:302:16",
															"statements": [
																{
																	"nativeSrc": "7151:45:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7151:45:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7182:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7182:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7193:1:16",
																						"nodeType": "YulLiteral",
																						"src": "7193:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7178:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7178:3:16"
																				},
																				"nativeSrc": "7178:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7178:17:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7165:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "7165:12:16"
																		},
																		"nativeSrc": "7165:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7165:31:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7155:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7155:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7243:83:16",
																		"nodeType": "YulBlock",
																		"src": "7243:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7245:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "7245:77:16"
																					},
																					"nativeSrc": "7245:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7245:79:16"
																				},
																				"nativeSrc": "7245:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "7245:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7215:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7215:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7223:18:16",
																				"nodeType": "YulLiteral",
																				"src": "7223:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7212:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7212:2:16"
																		},
																		"nativeSrc": "7212:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7212:30:16"
																	},
																	"nativeSrc": "7209:117:16",
																	"nodeType": "YulIf",
																	"src": "7209:117:16"
																},
																{
																	"nativeSrc": "7340:88:16",
																	"nodeType": "YulAssignment",
																	"src": "7340:88:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7400:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7400:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7411:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7411:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7396:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7396:3:16"
																				},
																				"nativeSrc": "7396:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7396:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7420:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7420:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "7350:45:16",
																			"nodeType": "YulIdentifier",
																			"src": "7350:45:16"
																		},
																		"nativeSrc": "7350:78:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7350:78:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7340:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7340:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6906:539:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6967:9:16",
														"nodeType": "YulTypedName",
														"src": "6967:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6978:7:16",
														"nodeType": "YulTypedName",
														"src": "6978:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6990:6:16",
														"nodeType": "YulTypedName",
														"src": "6990:6:16",
														"type": ""
													}
												],
												"src": "6906:539:16"
											},
											{
												"body": {
													"nativeSrc": "7517:263:16",
													"nodeType": "YulBlock",
													"src": "7517:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7563:83:16",
																"nodeType": "YulBlock",
																"src": "7563:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7565:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "7565:77:16"
																			},
																			"nativeSrc": "7565:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7565:79:16"
																		},
																		"nativeSrc": "7565:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7565:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7538:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7538:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7547:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7547:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7534:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7534:3:16"
																		},
																		"nativeSrc": "7534:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7534:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7559:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7559:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7530:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7530:3:16"
																},
																"nativeSrc": "7530:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7530:32:16"
															},
															"nativeSrc": "7527:119:16",
															"nodeType": "YulIf",
															"src": "7527:119:16"
														},
														{
															"nativeSrc": "7656:117:16",
															"nodeType": "YulBlock",
															"src": "7656:117:16",
															"statements": [
																{
																	"nativeSrc": "7671:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7671:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7685:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7685:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7675:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7675:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7700:63:16",
																	"nodeType": "YulAssignment",
																	"src": "7700:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7735:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7735:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7746:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7746:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7731:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7731:3:16"
																				},
																				"nativeSrc": "7731:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7731:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7755:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7755:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7710:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "7710:20:16"
																		},
																		"nativeSrc": "7710:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7710:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7700:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7700:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7451:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7487:9:16",
														"nodeType": "YulTypedName",
														"src": "7487:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7498:7:16",
														"nodeType": "YulTypedName",
														"src": "7498:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7510:6:16",
														"nodeType": "YulTypedName",
														"src": "7510:6:16",
														"type": ""
													}
												],
												"src": "7451:329:16"
											},
											{
												"body": {
													"nativeSrc": "7818:28:16",
													"nodeType": "YulBlock",
													"src": "7818:28:16",
													"statements": [
														{
															"nativeSrc": "7828:12:16",
															"nodeType": "YulAssignment",
															"src": "7828:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "7835:5:16",
																"nodeType": "YulIdentifier",
																"src": "7835:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7828:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7828:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7786:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7804:5:16",
														"nodeType": "YulTypedName",
														"src": "7804:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7814:3:16",
														"nodeType": "YulTypedName",
														"src": "7814:3:16",
														"type": ""
													}
												],
												"src": "7786:60:16"
											},
											{
												"body": {
													"nativeSrc": "7912:82:16",
													"nodeType": "YulBlock",
													"src": "7912:82:16",
													"statements": [
														{
															"nativeSrc": "7922:66:16",
															"nodeType": "YulAssignment",
															"src": "7922:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7980:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "7980:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "7962:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "7962:17:16"
																				},
																				"nativeSrc": "7962:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7962:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7953:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "7953:8:16"
																		},
																		"nativeSrc": "7953:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7953:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7935:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "7935:17:16"
																},
																"nativeSrc": "7935:53:16",
																"nodeType": "YulFunctionCall",
																"src": "7935:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7922:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "7922:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "7852:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7892:5:16",
														"nodeType": "YulTypedName",
														"src": "7892:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7902:9:16",
														"nodeType": "YulTypedName",
														"src": "7902:9:16",
														"type": ""
													}
												],
												"src": "7852:142:16"
											},
											{
												"body": {
													"nativeSrc": "8060:66:16",
													"nodeType": "YulBlock",
													"src": "8060:66:16",
													"statements": [
														{
															"nativeSrc": "8070:50:16",
															"nodeType": "YulAssignment",
															"src": "8070:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8114:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8114:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "8083:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "8083:30:16"
																},
																"nativeSrc": "8083:37:16",
																"nodeType": "YulFunctionCall",
																"src": "8083:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8070:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "8070:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "8000:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8040:5:16",
														"nodeType": "YulTypedName",
														"src": "8040:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8050:9:16",
														"nodeType": "YulTypedName",
														"src": "8050:9:16",
														"type": ""
													}
												],
												"src": "8000:126:16"
											},
											{
												"body": {
													"nativeSrc": "8206:66:16",
													"nodeType": "YulBlock",
													"src": "8206:66:16",
													"statements": [
														{
															"nativeSrc": "8216:50:16",
															"nodeType": "YulAssignment",
															"src": "8216:50:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8260:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8260:5:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "8229:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "8229:30:16"
																},
																"nativeSrc": "8229:37:16",
																"nodeType": "YulFunctionCall",
																"src": "8229:37:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8216:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "8216:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$531_to_t_address",
												"nativeSrc": "8132:140:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8186:5:16",
														"nodeType": "YulTypedName",
														"src": "8186:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8196:9:16",
														"nodeType": "YulTypedName",
														"src": "8196:9:16",
														"type": ""
													}
												],
												"src": "8132:140:16"
											},
											{
												"body": {
													"nativeSrc": "8357:80:16",
													"nodeType": "YulBlock",
													"src": "8357:80:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8374:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8374:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8424:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "8424:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$531_to_t_address",
																			"nativeSrc": "8379:44:16",
																			"nodeType": "YulIdentifier",
																			"src": "8379:44:16"
																		},
																		"nativeSrc": "8379:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8379:51:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8367:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8367:6:16"
																},
																"nativeSrc": "8367:64:16",
																"nodeType": "YulFunctionCall",
																"src": "8367:64:16"
															},
															"nativeSrc": "8367:64:16",
															"nodeType": "YulExpressionStatement",
															"src": "8367:64:16"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack",
												"nativeSrc": "8278:159:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8345:5:16",
														"nodeType": "YulTypedName",
														"src": "8345:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8352:3:16",
														"nodeType": "YulTypedName",
														"src": "8352:3:16",
														"type": ""
													}
												],
												"src": "8278:159:16"
											},
											{
												"body": {
													"nativeSrc": "8555:138:16",
													"nodeType": "YulBlock",
													"src": "8555:138:16",
													"statements": [
														{
															"nativeSrc": "8565:26:16",
															"nodeType": "YulAssignment",
															"src": "8565:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8577:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8577:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8588:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8588:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8573:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8573:3:16"
																},
																"nativeSrc": "8573:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8573:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8565:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8565:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8659:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8659:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8672:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8672:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8683:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8683:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8668:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8668:3:16"
																		},
																		"nativeSrc": "8668:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8668:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack",
																	"nativeSrc": "8601:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "8601:57:16"
																},
																"nativeSrc": "8601:85:16",
																"nodeType": "YulFunctionCall",
																"src": "8601:85:16"
															},
															"nativeSrc": "8601:85:16",
															"nodeType": "YulExpressionStatement",
															"src": "8601:85:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed",
												"nativeSrc": "8443:250:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8527:9:16",
														"nodeType": "YulTypedName",
														"src": "8527:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8539:6:16",
														"nodeType": "YulTypedName",
														"src": "8539:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8550:4:16",
														"nodeType": "YulTypedName",
														"src": "8550:4:16",
														"type": ""
													}
												],
												"src": "8443:250:16"
											},
											{
												"body": {
													"nativeSrc": "8825:206:16",
													"nodeType": "YulBlock",
													"src": "8825:206:16",
													"statements": [
														{
															"nativeSrc": "8835:26:16",
															"nodeType": "YulAssignment",
															"src": "8835:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8847:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8847:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8858:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8858:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8843:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8843:3:16"
																},
																"nativeSrc": "8843:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8843:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8835:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8835:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8915:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8915:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8928:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8928:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8939:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8939:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8924:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:16"
																		},
																		"nativeSrc": "8924:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8924:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8871:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "8871:43:16"
																},
																"nativeSrc": "8871:71:16",
																"nodeType": "YulFunctionCall",
																"src": "8871:71:16"
															},
															"nativeSrc": "8871:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "8871:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8996:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8996:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9009:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9009:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9020:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9020:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9005:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9005:3:16"
																		},
																		"nativeSrc": "9005:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9005:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8952:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "8952:43:16"
																},
																"nativeSrc": "8952:72:16",
																"nodeType": "YulFunctionCall",
																"src": "8952:72:16"
															},
															"nativeSrc": "8952:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "8952:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8699:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8789:9:16",
														"nodeType": "YulTypedName",
														"src": "8789:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8801:6:16",
														"nodeType": "YulTypedName",
														"src": "8801:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8809:6:16",
														"nodeType": "YulTypedName",
														"src": "8809:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8820:4:16",
														"nodeType": "YulTypedName",
														"src": "8820:4:16",
														"type": ""
													}
												],
												"src": "8699:332:16"
											},
											{
												"body": {
													"nativeSrc": "9133:73:16",
													"nodeType": "YulBlock",
													"src": "9133:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9150:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9150:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9155:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9155:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9143:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9143:6:16"
																},
																"nativeSrc": "9143:19:16",
																"nodeType": "YulFunctionCall",
																"src": "9143:19:16"
															},
															"nativeSrc": "9143:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "9143:19:16"
														},
														{
															"nativeSrc": "9171:29:16",
															"nodeType": "YulAssignment",
															"src": "9171:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9190:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9190:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9195:4:16",
																		"nodeType": "YulLiteral",
																		"src": "9195:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9186:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9186:3:16"
																},
																"nativeSrc": "9186:14:16",
																"nodeType": "YulFunctionCall",
																"src": "9186:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9171:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "9171:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9037:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9105:3:16",
														"nodeType": "YulTypedName",
														"src": "9105:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9110:6:16",
														"nodeType": "YulTypedName",
														"src": "9110:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9121:11:16",
														"nodeType": "YulTypedName",
														"src": "9121:11:16",
														"type": ""
													}
												],
												"src": "9037:169:16"
											},
											{
												"body": {
													"nativeSrc": "9318:128:16",
													"nodeType": "YulBlock",
													"src": "9318:128:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9340:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9340:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9348:1:16",
																				"nodeType": "YulLiteral",
																				"src": "9348:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9336:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:16"
																		},
																		"nativeSrc": "9336:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9336:14:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "9352:34:16",
																		"nodeType": "YulLiteral",
																		"src": "9352:34:16",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9329:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9329:6:16"
																},
																"nativeSrc": "9329:58:16",
																"nodeType": "YulFunctionCall",
																"src": "9329:58:16"
															},
															"nativeSrc": "9329:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "9329:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9408:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9408:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9416:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9416:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9404:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9404:3:16"
																		},
																		"nativeSrc": "9404:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9404:15:16"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "9421:17:16",
																		"nodeType": "YulLiteral",
																		"src": "9421:17:16",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9397:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9397:6:16"
																},
																"nativeSrc": "9397:42:16",
																"nodeType": "YulFunctionCall",
																"src": "9397:42:16"
															},
															"nativeSrc": "9397:42:16",
															"nodeType": "YulExpressionStatement",
															"src": "9397:42:16"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nativeSrc": "9212:234:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9310:6:16",
														"nodeType": "YulTypedName",
														"src": "9310:6:16",
														"type": ""
													}
												],
												"src": "9212:234:16"
											},
											{
												"body": {
													"nativeSrc": "9598:220:16",
													"nodeType": "YulBlock",
													"src": "9598:220:16",
													"statements": [
														{
															"nativeSrc": "9608:74:16",
															"nodeType": "YulAssignment",
															"src": "9608:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9674:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9674:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9679:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9679:2:16",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9615:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "9615:58:16"
																},
																"nativeSrc": "9615:67:16",
																"nodeType": "YulFunctionCall",
																"src": "9615:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9608:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9608:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9780:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9780:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nativeSrc": "9691:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "9691:88:16"
																},
																"nativeSrc": "9691:93:16",
																"nodeType": "YulFunctionCall",
																"src": "9691:93:16"
															},
															"nativeSrc": "9691:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "9691:93:16"
														},
														{
															"nativeSrc": "9793:19:16",
															"nodeType": "YulAssignment",
															"src": "9793:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9804:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9804:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9809:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9809:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9800:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9800:3:16"
																},
																"nativeSrc": "9800:12:16",
																"nodeType": "YulFunctionCall",
																"src": "9800:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9793:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9793:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9452:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9586:3:16",
														"nodeType": "YulTypedName",
														"src": "9586:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9594:3:16",
														"nodeType": "YulTypedName",
														"src": "9594:3:16",
														"type": ""
													}
												],
												"src": "9452:366:16"
											},
											{
												"body": {
													"nativeSrc": "9995:248:16",
													"nodeType": "YulBlock",
													"src": "9995:248:16",
													"statements": [
														{
															"nativeSrc": "10005:26:16",
															"nodeType": "YulAssignment",
															"src": "10005:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10017:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10017:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10028:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10028:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10013:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10013:3:16"
																},
																"nativeSrc": "10013:18:16",
																"nodeType": "YulFunctionCall",
																"src": "10013:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10005:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10005:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10052:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10052:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10063:1:16",
																				"nodeType": "YulLiteral",
																				"src": "10063:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10048:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10048:3:16"
																		},
																		"nativeSrc": "10048:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10048:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10071:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "10071:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10077:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10077:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10067:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10067:3:16"
																		},
																		"nativeSrc": "10067:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10067:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10041:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10041:6:16"
																},
																"nativeSrc": "10041:47:16",
																"nodeType": "YulFunctionCall",
																"src": "10041:47:16"
															},
															"nativeSrc": "10041:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "10041:47:16"
														},
														{
															"nativeSrc": "10097:139:16",
															"nodeType": "YulAssignment",
															"src": "10097:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10231:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10231:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10105:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "10105:124:16"
																},
																"nativeSrc": "10105:131:16",
																"nodeType": "YulFunctionCall",
																"src": "10105:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10097:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10097:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9824:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9975:9:16",
														"nodeType": "YulTypedName",
														"src": "9975:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9990:4:16",
														"nodeType": "YulTypedName",
														"src": "9990:4:16",
														"type": ""
													}
												],
												"src": "9824:419:16"
											},
											{
												"body": {
													"nativeSrc": "10277:152:16",
													"nodeType": "YulBlock",
													"src": "10277:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10294:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10294:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10297:77:16",
																		"nodeType": "YulLiteral",
																		"src": "10297:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10287:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10287:6:16"
																},
																"nativeSrc": "10287:88:16",
																"nodeType": "YulFunctionCall",
																"src": "10287:88:16"
															},
															"nativeSrc": "10287:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "10287:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10391:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10391:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10394:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10394:4:16",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10384:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10384:6:16"
																},
																"nativeSrc": "10384:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10384:15:16"
															},
															"nativeSrc": "10384:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10384:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10415:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10415:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10418:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10418:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10408:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10408:6:16"
																},
																"nativeSrc": "10408:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10408:15:16"
															},
															"nativeSrc": "10408:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10408:15:16"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10249:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "10249:180:16"
											},
											{
												"body": {
													"nativeSrc": "10463:152:16",
													"nodeType": "YulBlock",
													"src": "10463:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10480:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10480:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10483:77:16",
																		"nodeType": "YulLiteral",
																		"src": "10483:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10473:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10473:6:16"
																},
																"nativeSrc": "10473:88:16",
																"nodeType": "YulFunctionCall",
																"src": "10473:88:16"
															},
															"nativeSrc": "10473:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "10473:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10577:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10577:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10580:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10580:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10570:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10570:6:16"
																},
																"nativeSrc": "10570:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10570:15:16"
															},
															"nativeSrc": "10570:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10570:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10601:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10601:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10604:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10604:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10594:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10594:6:16"
																},
																"nativeSrc": "10594:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10594:15:16"
															},
															"nativeSrc": "10594:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "10594:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10435:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "10435:180:16"
											},
											{
												"body": {
													"nativeSrc": "10664:190:16",
													"nodeType": "YulBlock",
													"src": "10664:190:16",
													"statements": [
														{
															"nativeSrc": "10674:33:16",
															"nodeType": "YulAssignment",
															"src": "10674:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10701:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10701:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10683:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "10683:17:16"
																},
																"nativeSrc": "10683:24:16",
																"nodeType": "YulFunctionCall",
																"src": "10683:24:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10674:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10674:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10797:22:16",
																"nodeType": "YulBlock",
																"src": "10797:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10799:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10799:16:16"
																			},
																			"nativeSrc": "10799:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10799:18:16"
																		},
																		"nativeSrc": "10799:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10799:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10722:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10722:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10729:66:16",
																		"nodeType": "YulLiteral",
																		"src": "10729:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10719:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10719:2:16"
																},
																"nativeSrc": "10719:77:16",
																"nodeType": "YulFunctionCall",
																"src": "10719:77:16"
															},
															"nativeSrc": "10716:103:16",
															"nodeType": "YulIf",
															"src": "10716:103:16"
														},
														{
															"nativeSrc": "10828:20:16",
															"nodeType": "YulAssignment",
															"src": "10828:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10839:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "10839:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10846:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10846:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10835:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10835:3:16"
																},
																"nativeSrc": "10835:13:16",
																"nodeType": "YulFunctionCall",
																"src": "10835:13:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10828:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10828:3:16"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10621:233:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10650:5:16",
														"nodeType": "YulTypedName",
														"src": "10650:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10660:3:16",
														"nodeType": "YulTypedName",
														"src": "10660:3:16",
														"type": ""
													}
												],
												"src": "10621:233:16"
											},
											{
												"body": {
													"nativeSrc": "10966:75:16",
													"nodeType": "YulBlock",
													"src": "10966:75:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10988:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10988:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10996:1:16",
																				"nodeType": "YulLiteral",
																				"src": "10996:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10984:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10984:3:16"
																		},
																		"nativeSrc": "10984:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10984:14:16"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11000:33:16",
																		"nodeType": "YulLiteral",
																		"src": "11000:33:16",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10977:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10977:6:16"
																},
																"nativeSrc": "10977:57:16",
																"nodeType": "YulFunctionCall",
																"src": "10977:57:16"
															},
															"nativeSrc": "10977:57:16",
															"nodeType": "YulExpressionStatement",
															"src": "10977:57:16"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "10860:181:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10958:6:16",
														"nodeType": "YulTypedName",
														"src": "10958:6:16",
														"type": ""
													}
												],
												"src": "10860:181:16"
											},
											{
												"body": {
													"nativeSrc": "11193:220:16",
													"nodeType": "YulBlock",
													"src": "11193:220:16",
													"statements": [
														{
															"nativeSrc": "11203:74:16",
															"nodeType": "YulAssignment",
															"src": "11203:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11269:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11269:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11274:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11274:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11210:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "11210:58:16"
																},
																"nativeSrc": "11210:67:16",
																"nodeType": "YulFunctionCall",
																"src": "11210:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11203:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11203:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11375:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11375:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11286:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "11286:88:16"
																},
																"nativeSrc": "11286:93:16",
																"nodeType": "YulFunctionCall",
																"src": "11286:93:16"
															},
															"nativeSrc": "11286:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "11286:93:16"
														},
														{
															"nativeSrc": "11388:19:16",
															"nodeType": "YulAssignment",
															"src": "11388:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11399:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11399:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11404:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11404:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11395:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11395:3:16"
																},
																"nativeSrc": "11395:12:16",
																"nodeType": "YulFunctionCall",
																"src": "11395:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11388:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11388:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11047:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11181:3:16",
														"nodeType": "YulTypedName",
														"src": "11181:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11189:3:16",
														"nodeType": "YulTypedName",
														"src": "11189:3:16",
														"type": ""
													}
												],
												"src": "11047:366:16"
											},
											{
												"body": {
													"nativeSrc": "11590:248:16",
													"nodeType": "YulBlock",
													"src": "11590:248:16",
													"statements": [
														{
															"nativeSrc": "11600:26:16",
															"nodeType": "YulAssignment",
															"src": "11600:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11612:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "11612:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11623:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11623:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11608:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11608:3:16"
																},
																"nativeSrc": "11608:18:16",
																"nodeType": "YulFunctionCall",
																"src": "11608:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11600:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11600:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11647:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11647:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11658:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11658:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11643:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11643:3:16"
																		},
																		"nativeSrc": "11643:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11643:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11666:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "11666:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11672:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11672:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11662:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11662:3:16"
																		},
																		"nativeSrc": "11662:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11662:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11636:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11636:6:16"
																},
																"nativeSrc": "11636:47:16",
																"nodeType": "YulFunctionCall",
																"src": "11636:47:16"
															},
															"nativeSrc": "11636:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "11636:47:16"
														},
														{
															"nativeSrc": "11692:139:16",
															"nodeType": "YulAssignment",
															"src": "11692:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11826:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "11826:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11700:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "11700:124:16"
																},
																"nativeSrc": "11700:131:16",
																"nodeType": "YulFunctionCall",
																"src": "11700:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11692:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11692:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11419:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11570:9:16",
														"nodeType": "YulTypedName",
														"src": "11570:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11585:4:16",
														"nodeType": "YulTypedName",
														"src": "11585:4:16",
														"type": ""
													}
												],
												"src": "11419:419:16"
											},
											{
												"body": {
													"nativeSrc": "11950:183:16",
													"nodeType": "YulBlock",
													"src": "11950:183:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11972:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11972:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11980:1:16",
																				"nodeType": "YulLiteral",
																				"src": "11980:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11968:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11968:3:16"
																		},
																		"nativeSrc": "11968:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11968:14:16"
																	},
																	{
																		"hexValue": "57686974656c69737443726f776473616c653a2062656e656669636961727920",
																		"kind": "string",
																		"nativeSrc": "11984:34:16",
																		"nodeType": "YulLiteral",
																		"src": "11984:34:16",
																		"type": "",
																		"value": "WhitelistCrowdsale: beneficiary "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11961:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11961:6:16"
																},
																"nativeSrc": "11961:58:16",
																"nodeType": "YulFunctionCall",
																"src": "11961:58:16"
															},
															"nativeSrc": "11961:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "11961:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12040:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12040:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12048:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12048:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12036:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12036:3:16"
																		},
																		"nativeSrc": "12036:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12036:15:16"
																	},
																	{
																		"hexValue": "646f65736e27742068617665207468652057686974656c697374656420726f6c",
																		"kind": "string",
																		"nativeSrc": "12053:34:16",
																		"nodeType": "YulLiteral",
																		"src": "12053:34:16",
																		"type": "",
																		"value": "doesn't have the Whitelisted rol"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12029:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12029:6:16"
																},
																"nativeSrc": "12029:59:16",
																"nodeType": "YulFunctionCall",
																"src": "12029:59:16"
															},
															"nativeSrc": "12029:59:16",
															"nodeType": "YulExpressionStatement",
															"src": "12029:59:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12109:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12109:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12117:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12117:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12105:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12105:3:16"
																		},
																		"nativeSrc": "12105:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12105:15:16"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nativeSrc": "12122:3:16",
																		"nodeType": "YulLiteral",
																		"src": "12122:3:16",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12098:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12098:6:16"
																},
																"nativeSrc": "12098:28:16",
																"nodeType": "YulFunctionCall",
																"src": "12098:28:16"
															},
															"nativeSrc": "12098:28:16",
															"nodeType": "YulExpressionStatement",
															"src": "12098:28:16"
														}
													]
												},
												"name": "store_literal_in_memory_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548",
												"nativeSrc": "11844:289:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11942:6:16",
														"nodeType": "YulTypedName",
														"src": "11942:6:16",
														"type": ""
													}
												],
												"src": "11844:289:16"
											},
											{
												"body": {
													"nativeSrc": "12285:220:16",
													"nodeType": "YulBlock",
													"src": "12285:220:16",
													"statements": [
														{
															"nativeSrc": "12295:74:16",
															"nodeType": "YulAssignment",
															"src": "12295:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12361:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12361:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12366:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12366:2:16",
																		"type": "",
																		"value": "65"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12302:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "12302:58:16"
																},
																"nativeSrc": "12302:67:16",
																"nodeType": "YulFunctionCall",
																"src": "12302:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12295:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12295:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12467:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12467:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548",
																	"nativeSrc": "12378:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "12378:88:16"
																},
																"nativeSrc": "12378:93:16",
																"nodeType": "YulFunctionCall",
																"src": "12378:93:16"
															},
															"nativeSrc": "12378:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "12378:93:16"
														},
														{
															"nativeSrc": "12480:19:16",
															"nodeType": "YulAssignment",
															"src": "12480:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12491:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12491:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12496:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12496:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12487:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12487:3:16"
																},
																"nativeSrc": "12487:12:16",
																"nodeType": "YulFunctionCall",
																"src": "12487:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12480:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12480:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12139:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12273:3:16",
														"nodeType": "YulTypedName",
														"src": "12273:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12281:3:16",
														"nodeType": "YulTypedName",
														"src": "12281:3:16",
														"type": ""
													}
												],
												"src": "12139:366:16"
											},
											{
												"body": {
													"nativeSrc": "12682:248:16",
													"nodeType": "YulBlock",
													"src": "12682:248:16",
													"statements": [
														{
															"nativeSrc": "12692:26:16",
															"nodeType": "YulAssignment",
															"src": "12692:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12704:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12704:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12715:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12715:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12700:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12700:3:16"
																},
																"nativeSrc": "12700:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12700:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12692:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12692:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12739:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12739:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12750:1:16",
																				"nodeType": "YulLiteral",
																				"src": "12750:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12735:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12735:3:16"
																		},
																		"nativeSrc": "12735:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12735:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12758:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "12758:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12764:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12764:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12754:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12754:3:16"
																		},
																		"nativeSrc": "12754:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12754:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12728:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12728:6:16"
																},
																"nativeSrc": "12728:47:16",
																"nodeType": "YulFunctionCall",
																"src": "12728:47:16"
															},
															"nativeSrc": "12728:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "12728:47:16"
														},
														{
															"nativeSrc": "12784:139:16",
															"nodeType": "YulAssignment",
															"src": "12784:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12918:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12918:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12792:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "12792:124:16"
																},
																"nativeSrc": "12792:131:16",
																"nodeType": "YulFunctionCall",
																"src": "12792:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12784:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12784:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12511:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12662:9:16",
														"nodeType": "YulTypedName",
														"src": "12662:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12677:4:16",
														"nodeType": "YulTypedName",
														"src": "12677:4:16",
														"type": ""
													}
												],
												"src": "12511:419:16"
											},
											{
												"body": {
													"nativeSrc": "12980:147:16",
													"nodeType": "YulBlock",
													"src": "12980:147:16",
													"statements": [
														{
															"nativeSrc": "12990:25:16",
															"nodeType": "YulAssignment",
															"src": "12990:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13013:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13013:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12995:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12995:17:16"
																},
																"nativeSrc": "12995:20:16",
																"nodeType": "YulFunctionCall",
																"src": "12995:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12990:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "12990:1:16"
																}
															]
														},
														{
															"nativeSrc": "13024:25:16",
															"nodeType": "YulAssignment",
															"src": "13024:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13047:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13047:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13029:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "13029:17:16"
																},
																"nativeSrc": "13029:20:16",
																"nodeType": "YulFunctionCall",
																"src": "13029:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13024:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "13024:1:16"
																}
															]
														},
														{
															"nativeSrc": "13058:16:16",
															"nodeType": "YulAssignment",
															"src": "13058:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13069:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13069:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13072:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13072:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13065:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13065:3:16"
																},
																"nativeSrc": "13065:9:16",
																"nodeType": "YulFunctionCall",
																"src": "13065:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13058:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13058:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13098:22:16",
																"nodeType": "YulBlock",
																"src": "13098:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13100:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "13100:16:16"
																			},
																			"nativeSrc": "13100:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13100:18:16"
																		},
																		"nativeSrc": "13100:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13100:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13090:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "13090:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13093:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13093:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13087:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13087:2:16"
																},
																"nativeSrc": "13087:10:16",
																"nodeType": "YulFunctionCall",
																"src": "13087:10:16"
															},
															"nativeSrc": "13084:36:16",
															"nodeType": "YulIf",
															"src": "13084:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12936:191:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12967:1:16",
														"nodeType": "YulTypedName",
														"src": "12967:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12970:1:16",
														"nodeType": "YulTypedName",
														"src": "12970:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12976:3:16",
														"nodeType": "YulTypedName",
														"src": "12976:3:16",
														"type": ""
													}
												],
												"src": "12936:191:16"
											},
											{
												"body": {
													"nativeSrc": "13239:123:16",
													"nodeType": "YulBlock",
													"src": "13239:123:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13261:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13261:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13269:1:16",
																				"nodeType": "YulLiteral",
																				"src": "13269:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13257:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13257:3:16"
																		},
																		"nativeSrc": "13257:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13257:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nativeSrc": "13273:34:16",
																		"nodeType": "YulLiteral",
																		"src": "13273:34:16",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13250:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13250:6:16"
																},
																"nativeSrc": "13250:58:16",
																"nodeType": "YulFunctionCall",
																"src": "13250:58:16"
															},
															"nativeSrc": "13250:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "13250:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13329:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13329:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13337:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13337:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13325:3:16"
																		},
																		"nativeSrc": "13325:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13325:15:16"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "13342:12:16",
																		"nodeType": "YulLiteral",
																		"src": "13342:12:16",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13318:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13318:6:16"
																},
																"nativeSrc": "13318:37:16",
																"nodeType": "YulFunctionCall",
																"src": "13318:37:16"
															},
															"nativeSrc": "13318:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "13318:37:16"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nativeSrc": "13133:229:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13231:6:16",
														"nodeType": "YulTypedName",
														"src": "13231:6:16",
														"type": ""
													}
												],
												"src": "13133:229:16"
											},
											{
												"body": {
													"nativeSrc": "13514:220:16",
													"nodeType": "YulBlock",
													"src": "13514:220:16",
													"statements": [
														{
															"nativeSrc": "13524:74:16",
															"nodeType": "YulAssignment",
															"src": "13524:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13590:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13590:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13595:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13595:2:16",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13531:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "13531:58:16"
																},
																"nativeSrc": "13531:67:16",
																"nodeType": "YulFunctionCall",
																"src": "13531:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13524:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13524:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13696:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13696:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nativeSrc": "13607:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "13607:88:16"
																},
																"nativeSrc": "13607:93:16",
																"nodeType": "YulFunctionCall",
																"src": "13607:93:16"
															},
															"nativeSrc": "13607:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "13607:93:16"
														},
														{
															"nativeSrc": "13709:19:16",
															"nodeType": "YulAssignment",
															"src": "13709:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13720:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13720:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13725:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13725:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13716:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13716:3:16"
																},
																"nativeSrc": "13716:12:16",
																"nodeType": "YulFunctionCall",
																"src": "13716:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13709:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13709:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13368:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13502:3:16",
														"nodeType": "YulTypedName",
														"src": "13502:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13510:3:16",
														"nodeType": "YulTypedName",
														"src": "13510:3:16",
														"type": ""
													}
												],
												"src": "13368:366:16"
											},
											{
												"body": {
													"nativeSrc": "13911:248:16",
													"nodeType": "YulBlock",
													"src": "13911:248:16",
													"statements": [
														{
															"nativeSrc": "13921:26:16",
															"nodeType": "YulAssignment",
															"src": "13921:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13933:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "13933:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13944:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13944:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13929:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13929:3:16"
																},
																"nativeSrc": "13929:18:16",
																"nodeType": "YulFunctionCall",
																"src": "13929:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13921:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "13921:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13968:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13968:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13979:1:16",
																				"nodeType": "YulLiteral",
																				"src": "13979:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13964:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13964:3:16"
																		},
																		"nativeSrc": "13964:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13964:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13987:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "13987:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13993:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13993:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13983:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13983:3:16"
																		},
																		"nativeSrc": "13983:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13983:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13957:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13957:6:16"
																},
																"nativeSrc": "13957:47:16",
																"nodeType": "YulFunctionCall",
																"src": "13957:47:16"
															},
															"nativeSrc": "13957:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "13957:47:16"
														},
														{
															"nativeSrc": "14013:139:16",
															"nodeType": "YulAssignment",
															"src": "14013:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14147:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14147:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14021:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "14021:124:16"
																},
																"nativeSrc": "14021:131:16",
																"nodeType": "YulFunctionCall",
																"src": "14021:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14013:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14013:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13740:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13891:9:16",
														"nodeType": "YulTypedName",
														"src": "13891:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13906:4:16",
														"nodeType": "YulTypedName",
														"src": "13906:4:16",
														"type": ""
													}
												],
												"src": "13740:419:16"
											},
											{
												"body": {
													"nativeSrc": "14271:69:16",
													"nodeType": "YulBlock",
													"src": "14271:69:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14293:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "14293:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14301:1:16",
																				"nodeType": "YulLiteral",
																				"src": "14301:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14289:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14289:3:16"
																		},
																		"nativeSrc": "14289:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14289:14:16"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nativeSrc": "14305:27:16",
																		"nodeType": "YulLiteral",
																		"src": "14305:27:16",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14282:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14282:6:16"
																},
																"nativeSrc": "14282:51:16",
																"nodeType": "YulFunctionCall",
																"src": "14282:51:16"
															},
															"nativeSrc": "14282:51:16",
															"nodeType": "YulExpressionStatement",
															"src": "14282:51:16"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nativeSrc": "14165:175:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14263:6:16",
														"nodeType": "YulTypedName",
														"src": "14263:6:16",
														"type": ""
													}
												],
												"src": "14165:175:16"
											},
											{
												"body": {
													"nativeSrc": "14492:220:16",
													"nodeType": "YulBlock",
													"src": "14492:220:16",
													"statements": [
														{
															"nativeSrc": "14502:74:16",
															"nodeType": "YulAssignment",
															"src": "14502:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14568:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14568:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14573:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14573:2:16",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14509:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "14509:58:16"
																},
																"nativeSrc": "14509:67:16",
																"nodeType": "YulFunctionCall",
																"src": "14509:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14502:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14502:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14674:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14674:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nativeSrc": "14585:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "14585:88:16"
																},
																"nativeSrc": "14585:93:16",
																"nodeType": "YulFunctionCall",
																"src": "14585:93:16"
															},
															"nativeSrc": "14585:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "14585:93:16"
														},
														{
															"nativeSrc": "14687:19:16",
															"nodeType": "YulAssignment",
															"src": "14687:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14698:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14698:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14703:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14703:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14694:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14694:3:16"
																},
																"nativeSrc": "14694:12:16",
																"nodeType": "YulFunctionCall",
																"src": "14694:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14687:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14687:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14346:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14480:3:16",
														"nodeType": "YulTypedName",
														"src": "14480:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14488:3:16",
														"nodeType": "YulTypedName",
														"src": "14488:3:16",
														"type": ""
													}
												],
												"src": "14346:366:16"
											},
											{
												"body": {
													"nativeSrc": "14889:248:16",
													"nodeType": "YulBlock",
													"src": "14889:248:16",
													"statements": [
														{
															"nativeSrc": "14899:26:16",
															"nodeType": "YulAssignment",
															"src": "14899:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14911:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "14911:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14922:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14922:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14907:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14907:3:16"
																},
																"nativeSrc": "14907:18:16",
																"nodeType": "YulFunctionCall",
																"src": "14907:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14899:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14899:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14946:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14946:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14957:1:16",
																				"nodeType": "YulLiteral",
																				"src": "14957:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14942:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14942:3:16"
																		},
																		"nativeSrc": "14942:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14942:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14965:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "14965:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14971:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14971:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14961:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14961:3:16"
																		},
																		"nativeSrc": "14961:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14961:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14935:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14935:6:16"
																},
																"nativeSrc": "14935:47:16",
																"nodeType": "YulFunctionCall",
																"src": "14935:47:16"
															},
															"nativeSrc": "14935:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "14935:47:16"
														},
														{
															"nativeSrc": "14991:139:16",
															"nodeType": "YulAssignment",
															"src": "14991:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15125:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "15125:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14999:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "14999:124:16"
																},
																"nativeSrc": "14999:131:16",
																"nodeType": "YulFunctionCall",
																"src": "14999:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14991:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14991:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14718:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14869:9:16",
														"nodeType": "YulTypedName",
														"src": "14869:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14884:4:16",
														"nodeType": "YulTypedName",
														"src": "14884:4:16",
														"type": ""
													}
												],
												"src": "14718:419:16"
											},
											{
												"body": {
													"nativeSrc": "15191:362:16",
													"nodeType": "YulBlock",
													"src": "15191:362:16",
													"statements": [
														{
															"nativeSrc": "15201:25:16",
															"nodeType": "YulAssignment",
															"src": "15201:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15224:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "15224:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15206:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "15206:17:16"
																},
																"nativeSrc": "15206:20:16",
																"nodeType": "YulFunctionCall",
																"src": "15206:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15201:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "15201:1:16"
																}
															]
														},
														{
															"nativeSrc": "15235:25:16",
															"nodeType": "YulAssignment",
															"src": "15235:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15258:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "15258:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15240:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "15240:17:16"
																},
																"nativeSrc": "15240:20:16",
																"nodeType": "YulFunctionCall",
																"src": "15240:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15235:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "15235:1:16"
																}
															]
														},
														{
															"nativeSrc": "15269:28:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15269:28:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15292:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "15292:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15295:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "15295:1:16"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15288:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15288:3:16"
																},
																"nativeSrc": "15288:9:16",
																"nodeType": "YulFunctionCall",
																"src": "15288:9:16"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15273:11:16",
																	"nodeType": "YulTypedName",
																	"src": "15273:11:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15306:41:16",
															"nodeType": "YulAssignment",
															"src": "15306:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15335:11:16",
																		"nodeType": "YulIdentifier",
																		"src": "15335:11:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15317:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "15317:17:16"
																},
																"nativeSrc": "15317:30:16",
																"nodeType": "YulFunctionCall",
																"src": "15317:30:16"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15306:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "15306:7:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15524:22:16",
																"nodeType": "YulBlock",
																"src": "15524:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15526:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "15526:16:16"
																			},
																			"nativeSrc": "15526:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "15526:18:16"
																		},
																		"nativeSrc": "15526:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "15526:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15457:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "15457:1:16"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15450:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "15450:6:16"
																				},
																				"nativeSrc": "15450:9:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15450:9:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15480:1:16",
																						"nodeType": "YulIdentifier",
																						"src": "15480:1:16"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15487:7:16",
																								"nodeType": "YulIdentifier",
																								"src": "15487:7:16"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15496:1:16",
																								"nodeType": "YulIdentifier",
																								"src": "15496:1:16"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15483:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "15483:3:16"
																						},
																						"nativeSrc": "15483:15:16",
																						"nodeType": "YulFunctionCall",
																						"src": "15483:15:16"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15477:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "15477:2:16"
																				},
																				"nativeSrc": "15477:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "15477:22:16"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15430:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "15430:2:16"
																		},
																		"nativeSrc": "15430:83:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15430:83:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15410:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15410:6:16"
																},
																"nativeSrc": "15410:113:16",
																"nodeType": "YulFunctionCall",
																"src": "15410:113:16"
															},
															"nativeSrc": "15407:139:16",
															"nodeType": "YulIf",
															"src": "15407:139:16"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15143:410:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15174:1:16",
														"nodeType": "YulTypedName",
														"src": "15174:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15177:1:16",
														"nodeType": "YulTypedName",
														"src": "15177:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15183:7:16",
														"nodeType": "YulTypedName",
														"src": "15183:7:16",
														"type": ""
													}
												],
												"src": "15143:410:16"
											},
											{
												"body": {
													"nativeSrc": "15673:34:16",
													"nodeType": "YulBlock",
													"src": "15673:34:16",
													"statements": [
														{
															"nativeSrc": "15683:18:16",
															"nodeType": "YulAssignment",
															"src": "15683:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "15698:3:16",
																"nodeType": "YulIdentifier",
																"src": "15698:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15683:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "15683:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15559:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15645:3:16",
														"nodeType": "YulTypedName",
														"src": "15645:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15650:6:16",
														"nodeType": "YulTypedName",
														"src": "15650:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15661:11:16",
														"nodeType": "YulTypedName",
														"src": "15661:11:16",
														"type": ""
													}
												],
												"src": "15559:148:16"
											},
											{
												"body": {
													"nativeSrc": "15819:67:16",
													"nodeType": "YulBlock",
													"src": "15819:67:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15841:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "15841:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15849:1:16",
																				"nodeType": "YulLiteral",
																				"src": "15849:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15837:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15837:3:16"
																		},
																		"nativeSrc": "15837:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15837:14:16"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "15853:25:16",
																		"nodeType": "YulLiteral",
																		"src": "15853:25:16",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15830:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15830:6:16"
																},
																"nativeSrc": "15830:49:16",
																"nodeType": "YulFunctionCall",
																"src": "15830:49:16"
															},
															"nativeSrc": "15830:49:16",
															"nodeType": "YulExpressionStatement",
															"src": "15830:49:16"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nativeSrc": "15713:173:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15811:6:16",
														"nodeType": "YulTypedName",
														"src": "15811:6:16",
														"type": ""
													}
												],
												"src": "15713:173:16"
											},
											{
												"body": {
													"nativeSrc": "16056:238:16",
													"nodeType": "YulBlock",
													"src": "16056:238:16",
													"statements": [
														{
															"nativeSrc": "16066:92:16",
															"nodeType": "YulAssignment",
															"src": "16066:92:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16150:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16150:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16155:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16155:2:16",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16073:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "16073:76:16"
																},
																"nativeSrc": "16073:85:16",
																"nodeType": "YulFunctionCall",
																"src": "16073:85:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16066:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16066:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16256:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16256:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nativeSrc": "16167:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "16167:88:16"
																},
																"nativeSrc": "16167:93:16",
																"nodeType": "YulFunctionCall",
																"src": "16167:93:16"
															},
															"nativeSrc": "16167:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "16167:93:16"
														},
														{
															"nativeSrc": "16269:19:16",
															"nodeType": "YulAssignment",
															"src": "16269:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16280:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16280:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16285:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16285:2:16",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16276:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16276:3:16"
																},
																"nativeSrc": "16276:12:16",
																"nodeType": "YulFunctionCall",
																"src": "16276:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16269:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16269:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15892:402:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16044:3:16",
														"nodeType": "YulTypedName",
														"src": "16044:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16052:3:16",
														"nodeType": "YulTypedName",
														"src": "16052:3:16",
														"type": ""
													}
												],
												"src": "15892:402:16"
											},
											{
												"body": {
													"nativeSrc": "16359:40:16",
													"nodeType": "YulBlock",
													"src": "16359:40:16",
													"statements": [
														{
															"nativeSrc": "16370:22:16",
															"nodeType": "YulAssignment",
															"src": "16370:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16386:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16386:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16380:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "16380:5:16"
																},
																"nativeSrc": "16380:12:16",
																"nodeType": "YulFunctionCall",
																"src": "16380:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16370:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16370:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "16300:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16342:5:16",
														"nodeType": "YulTypedName",
														"src": "16342:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16352:6:16",
														"nodeType": "YulTypedName",
														"src": "16352:6:16",
														"type": ""
													}
												],
												"src": "16300:99:16"
											},
											{
												"body": {
													"nativeSrc": "16467:184:16",
													"nodeType": "YulBlock",
													"src": "16467:184:16",
													"statements": [
														{
															"nativeSrc": "16477:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16477:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "16486:1:16",
																"nodeType": "YulLiteral",
																"src": "16486:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "16481:1:16",
																	"nodeType": "YulTypedName",
																	"src": "16481:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16546:63:16",
																"nodeType": "YulBlock",
																"src": "16546:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "16571:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "16571:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "16576:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "16576:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16567:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "16567:3:16"
																					},
																					"nativeSrc": "16567:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "16567:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "16590:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "16590:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "16595:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "16595:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "16586:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "16586:3:16"
																							},
																							"nativeSrc": "16586:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "16586:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "16580:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "16580:5:16"
																					},
																					"nativeSrc": "16580:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "16580:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16560:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "16560:6:16"
																			},
																			"nativeSrc": "16560:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "16560:39:16"
																		},
																		"nativeSrc": "16560:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "16560:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "16507:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "16507:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16510:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16510:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16504:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "16504:2:16"
																},
																"nativeSrc": "16504:13:16",
																"nodeType": "YulFunctionCall",
																"src": "16504:13:16"
															},
															"nativeSrc": "16496:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16518:19:16",
																"nodeType": "YulBlock",
																"src": "16518:19:16",
																"statements": [
																	{
																		"nativeSrc": "16520:15:16",
																		"nodeType": "YulAssignment",
																		"src": "16520:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "16529:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "16529:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16532:2:16",
																					"nodeType": "YulLiteral",
																					"src": "16532:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16525:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "16525:3:16"
																			},
																			"nativeSrc": "16525:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "16525:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "16520:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "16520:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16500:3:16",
																"nodeType": "YulBlock",
																"src": "16500:3:16",
																"statements": []
															},
															"src": "16496:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "16629:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "16629:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "16634:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "16634:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16625:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16625:3:16"
																		},
																		"nativeSrc": "16625:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16625:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16643:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16643:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16618:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16618:6:16"
																},
																"nativeSrc": "16618:27:16",
																"nodeType": "YulFunctionCall",
																"src": "16618:27:16"
															},
															"nativeSrc": "16618:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "16618:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "16405:246:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "16449:3:16",
														"nodeType": "YulTypedName",
														"src": "16449:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "16454:3:16",
														"nodeType": "YulTypedName",
														"src": "16454:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16459:6:16",
														"nodeType": "YulTypedName",
														"src": "16459:6:16",
														"type": ""
													}
												],
												"src": "16405:246:16"
											},
											{
												"body": {
													"nativeSrc": "16767:280:16",
													"nodeType": "YulBlock",
													"src": "16767:280:16",
													"statements": [
														{
															"nativeSrc": "16777:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16777:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16824:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16824:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "16791:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "16791:32:16"
																},
																"nativeSrc": "16791:39:16",
																"nodeType": "YulFunctionCall",
																"src": "16791:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16781:6:16",
																	"nodeType": "YulTypedName",
																	"src": "16781:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16839:96:16",
															"nodeType": "YulAssignment",
															"src": "16839:96:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16923:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16923:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16928:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16928:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16846:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "16846:76:16"
																},
																"nativeSrc": "16846:89:16",
																"nodeType": "YulFunctionCall",
																"src": "16846:89:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16839:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16839:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16983:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16983:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16990:4:16",
																				"nodeType": "YulLiteral",
																				"src": "16990:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16979:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16979:3:16"
																		},
																		"nativeSrc": "16979:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16979:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16997:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16997:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17002:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17002:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16944:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "16944:34:16"
																},
																"nativeSrc": "16944:65:16",
																"nodeType": "YulFunctionCall",
																"src": "16944:65:16"
															},
															"nativeSrc": "16944:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "16944:65:16"
														},
														{
															"nativeSrc": "17018:23:16",
															"nodeType": "YulAssignment",
															"src": "17018:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17029:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17029:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17034:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17034:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17025:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17025:3:16"
																},
																"nativeSrc": "17025:16:16",
																"nodeType": "YulFunctionCall",
																"src": "17025:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17018:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17018:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16657:390:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16748:5:16",
														"nodeType": "YulTypedName",
														"src": "16748:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16755:3:16",
														"nodeType": "YulTypedName",
														"src": "16755:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16763:3:16",
														"nodeType": "YulTypedName",
														"src": "16763:3:16",
														"type": ""
													}
												],
												"src": "16657:390:16"
											},
											{
												"body": {
													"nativeSrc": "17159:61:16",
													"nodeType": "YulBlock",
													"src": "17159:61:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17181:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "17181:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17189:1:16",
																				"nodeType": "YulLiteral",
																				"src": "17189:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17177:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "17177:3:16"
																		},
																		"nativeSrc": "17177:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17177:14:16"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "17193:19:16",
																		"nodeType": "YulLiteral",
																		"src": "17193:19:16",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17170:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17170:6:16"
																},
																"nativeSrc": "17170:43:16",
																"nodeType": "YulFunctionCall",
																"src": "17170:43:16"
															},
															"nativeSrc": "17170:43:16",
															"nodeType": "YulExpressionStatement",
															"src": "17170:43:16"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nativeSrc": "17053:167:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17151:6:16",
														"nodeType": "YulTypedName",
														"src": "17151:6:16",
														"type": ""
													}
												],
												"src": "17053:167:16"
											},
											{
												"body": {
													"nativeSrc": "17390:238:16",
													"nodeType": "YulBlock",
													"src": "17390:238:16",
													"statements": [
														{
															"nativeSrc": "17400:92:16",
															"nodeType": "YulAssignment",
															"src": "17400:92:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17484:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17484:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17489:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17489:2:16",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17407:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "17407:76:16"
																},
																"nativeSrc": "17407:85:16",
																"nodeType": "YulFunctionCall",
																"src": "17407:85:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17400:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17400:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17590:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17590:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nativeSrc": "17501:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "17501:88:16"
																},
																"nativeSrc": "17501:93:16",
																"nodeType": "YulFunctionCall",
																"src": "17501:93:16"
															},
															"nativeSrc": "17501:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "17501:93:16"
														},
														{
															"nativeSrc": "17603:19:16",
															"nodeType": "YulAssignment",
															"src": "17603:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17614:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17614:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17619:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17619:2:16",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17610:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17610:3:16"
																},
																"nativeSrc": "17610:12:16",
																"nodeType": "YulFunctionCall",
																"src": "17610:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17603:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17603:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17226:402:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17378:3:16",
														"nodeType": "YulTypedName",
														"src": "17378:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17386:3:16",
														"nodeType": "YulTypedName",
														"src": "17386:3:16",
														"type": ""
													}
												],
												"src": "17226:402:16"
											},
											{
												"body": {
													"nativeSrc": "18020:581:16",
													"nodeType": "YulBlock",
													"src": "18020:581:16",
													"statements": [
														{
															"nativeSrc": "18031:155:16",
															"nodeType": "YulAssignment",
															"src": "18031:155:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18182:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18182:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18038:142:16",
																	"nodeType": "YulIdentifier",
																	"src": "18038:142:16"
																},
																"nativeSrc": "18038:148:16",
																"nodeType": "YulFunctionCall",
																"src": "18038:148:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18031:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18031:3:16"
																}
															]
														},
														{
															"nativeSrc": "18196:102:16",
															"nodeType": "YulAssignment",
															"src": "18196:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18285:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18285:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18294:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18294:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18203:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "18203:81:16"
																},
																"nativeSrc": "18203:95:16",
																"nodeType": "YulFunctionCall",
																"src": "18203:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18196:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18196:3:16"
																}
															]
														},
														{
															"nativeSrc": "18308:155:16",
															"nodeType": "YulAssignment",
															"src": "18308:155:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18459:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18459:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18315:142:16",
																	"nodeType": "YulIdentifier",
																	"src": "18315:142:16"
																},
																"nativeSrc": "18315:148:16",
																"nodeType": "YulFunctionCall",
																"src": "18315:148:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18308:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18308:3:16"
																}
															]
														},
														{
															"nativeSrc": "18473:102:16",
															"nodeType": "YulAssignment",
															"src": "18473:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18562:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18562:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18571:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18571:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18480:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "18480:81:16"
																},
																"nativeSrc": "18480:95:16",
																"nodeType": "YulFunctionCall",
																"src": "18480:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18473:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18473:3:16"
																}
															]
														},
														{
															"nativeSrc": "18585:10:16",
															"nodeType": "YulAssignment",
															"src": "18585:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "18592:3:16",
																"nodeType": "YulIdentifier",
																"src": "18592:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18585:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18585:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17634:967:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17991:3:16",
														"nodeType": "YulTypedName",
														"src": "17991:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17997:6:16",
														"nodeType": "YulTypedName",
														"src": "17997:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18005:6:16",
														"nodeType": "YulTypedName",
														"src": "18005:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18016:3:16",
														"nodeType": "YulTypedName",
														"src": "18016:3:16",
														"type": ""
													}
												],
												"src": "17634:967:16"
											},
											{
												"body": {
													"nativeSrc": "18699:285:16",
													"nodeType": "YulBlock",
													"src": "18699:285:16",
													"statements": [
														{
															"nativeSrc": "18709:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18709:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18756:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "18756:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18723:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "18723:32:16"
																},
																"nativeSrc": "18723:39:16",
																"nodeType": "YulFunctionCall",
																"src": "18723:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18713:6:16",
																	"nodeType": "YulTypedName",
																	"src": "18713:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18771:78:16",
															"nodeType": "YulAssignment",
															"src": "18771:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18837:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18837:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18842:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18842:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18778:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "18778:58:16"
																},
																"nativeSrc": "18778:71:16",
																"nodeType": "YulFunctionCall",
																"src": "18778:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18771:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18771:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18897:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "18897:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18904:4:16",
																				"nodeType": "YulLiteral",
																				"src": "18904:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18893:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18893:3:16"
																		},
																		"nativeSrc": "18893:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18893:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18911:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18911:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18916:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18916:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18858:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "18858:34:16"
																},
																"nativeSrc": "18858:65:16",
																"nodeType": "YulFunctionCall",
																"src": "18858:65:16"
															},
															"nativeSrc": "18858:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "18858:65:16"
														},
														{
															"nativeSrc": "18932:46:16",
															"nodeType": "YulAssignment",
															"src": "18932:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18943:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18943:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18970:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "18970:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "18948:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "18948:21:16"
																		},
																		"nativeSrc": "18948:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18948:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18939:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18939:3:16"
																},
																"nativeSrc": "18939:39:16",
																"nodeType": "YulFunctionCall",
																"src": "18939:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18932:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18932:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18607:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18680:5:16",
														"nodeType": "YulTypedName",
														"src": "18680:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18687:3:16",
														"nodeType": "YulTypedName",
														"src": "18687:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18695:3:16",
														"nodeType": "YulTypedName",
														"src": "18695:3:16",
														"type": ""
													}
												],
												"src": "18607:377:16"
											},
											{
												"body": {
													"nativeSrc": "19108:195:16",
													"nodeType": "YulBlock",
													"src": "19108:195:16",
													"statements": [
														{
															"nativeSrc": "19118:26:16",
															"nodeType": "YulAssignment",
															"src": "19118:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19130:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "19130:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19141:2:16",
																		"nodeType": "YulLiteral",
																		"src": "19141:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19126:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19126:3:16"
																},
																"nativeSrc": "19126:18:16",
																"nodeType": "YulFunctionCall",
																"src": "19126:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19118:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "19118:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19165:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "19165:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19176:1:16",
																				"nodeType": "YulLiteral",
																				"src": "19176:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19161:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19161:3:16"
																		},
																		"nativeSrc": "19161:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19161:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19184:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "19184:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19190:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "19190:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19180:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19180:3:16"
																		},
																		"nativeSrc": "19180:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19180:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19154:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19154:6:16"
																},
																"nativeSrc": "19154:47:16",
																"nodeType": "YulFunctionCall",
																"src": "19154:47:16"
															},
															"nativeSrc": "19154:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "19154:47:16"
														},
														{
															"nativeSrc": "19210:86:16",
															"nodeType": "YulAssignment",
															"src": "19210:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19282:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19282:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19291:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19291:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19218:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "19218:63:16"
																},
																"nativeSrc": "19218:78:16",
																"nodeType": "YulFunctionCall",
																"src": "19218:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19210:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "19210:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18990:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19080:9:16",
														"nodeType": "YulTypedName",
														"src": "19080:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19092:6:16",
														"nodeType": "YulTypedName",
														"src": "19092:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19103:4:16",
														"nodeType": "YulTypedName",
														"src": "19103:4:16",
														"type": ""
													}
												],
												"src": "18990:313:16"
											},
											{
												"body": {
													"nativeSrc": "19374:53:16",
													"nodeType": "YulBlock",
													"src": "19374:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19391:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19391:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19414:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "19414:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "19396:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "19396:17:16"
																		},
																		"nativeSrc": "19396:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19396:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19384:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "19384:6:16"
																},
																"nativeSrc": "19384:37:16",
																"nodeType": "YulFunctionCall",
																"src": "19384:37:16"
															},
															"nativeSrc": "19384:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "19384:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "19309:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19362:5:16",
														"nodeType": "YulTypedName",
														"src": "19362:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19369:3:16",
														"nodeType": "YulTypedName",
														"src": "19369:3:16",
														"type": ""
													}
												],
												"src": "19309:118:16"
											},
											{
												"body": {
													"nativeSrc": "19559:206:16",
													"nodeType": "YulBlock",
													"src": "19559:206:16",
													"statements": [
														{
															"nativeSrc": "19569:26:16",
															"nodeType": "YulAssignment",
															"src": "19569:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19581:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "19581:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19592:2:16",
																		"nodeType": "YulLiteral",
																		"src": "19592:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19577:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19577:3:16"
																},
																"nativeSrc": "19577:18:16",
																"nodeType": "YulFunctionCall",
																"src": "19577:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19569:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "19569:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19649:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19649:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19662:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "19662:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19673:1:16",
																				"nodeType": "YulLiteral",
																				"src": "19673:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19658:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19658:3:16"
																		},
																		"nativeSrc": "19658:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19658:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19605:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "19605:43:16"
																},
																"nativeSrc": "19605:71:16",
																"nodeType": "YulFunctionCall",
																"src": "19605:71:16"
															},
															"nativeSrc": "19605:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "19605:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19730:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19730:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19743:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "19743:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19754:2:16",
																				"nodeType": "YulLiteral",
																				"src": "19754:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19739:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19739:3:16"
																		},
																		"nativeSrc": "19739:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19739:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19686:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "19686:43:16"
																},
																"nativeSrc": "19686:72:16",
																"nodeType": "YulFunctionCall",
																"src": "19686:72:16"
															},
															"nativeSrc": "19686:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "19686:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19433:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19523:9:16",
														"nodeType": "YulTypedName",
														"src": "19523:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19535:6:16",
														"nodeType": "YulTypedName",
														"src": "19535:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19543:6:16",
														"nodeType": "YulTypedName",
														"src": "19543:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19554:4:16",
														"nodeType": "YulTypedName",
														"src": "19554:4:16",
														"type": ""
													}
												],
												"src": "19433:332:16"
											},
											{
												"body": {
													"nativeSrc": "19814:128:16",
													"nodeType": "YulBlock",
													"src": "19814:128:16",
													"statements": [
														{
															"nativeSrc": "19824:33:16",
															"nodeType": "YulAssignment",
															"src": "19824:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19851:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "19851:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19833:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "19833:17:16"
																},
																"nativeSrc": "19833:24:16",
																"nodeType": "YulFunctionCall",
																"src": "19833:24:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19824:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "19824:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19885:22:16",
																"nodeType": "YulBlock",
																"src": "19885:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19887:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "19887:16:16"
																			},
																			"nativeSrc": "19887:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19887:18:16"
																		},
																		"nativeSrc": "19887:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "19887:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19872:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "19872:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19879:4:16",
																		"nodeType": "YulLiteral",
																		"src": "19879:4:16",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19869:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19869:2:16"
																},
																"nativeSrc": "19869:15:16",
																"nodeType": "YulFunctionCall",
																"src": "19869:15:16"
															},
															"nativeSrc": "19866:41:16",
															"nodeType": "YulIf",
															"src": "19866:41:16"
														},
														{
															"nativeSrc": "19916:20:16",
															"nodeType": "YulAssignment",
															"src": "19916:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19927:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "19927:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19934:1:16",
																		"nodeType": "YulLiteral",
																		"src": "19934:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "19923:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19923:3:16"
																},
																"nativeSrc": "19923:13:16",
																"nodeType": "YulFunctionCall",
																"src": "19923:13:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19916:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "19916:3:16"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "19771:171:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19800:5:16",
														"nodeType": "YulTypedName",
														"src": "19800:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19810:3:16",
														"nodeType": "YulTypedName",
														"src": "19810:3:16",
														"type": ""
													}
												],
												"src": "19771:171:16"
											},
											{
												"body": {
													"nativeSrc": "20054:76:16",
													"nodeType": "YulBlock",
													"src": "20054:76:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20076:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "20076:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20084:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20084:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20072:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20072:3:16"
																		},
																		"nativeSrc": "20072:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20072:14:16"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "20088:34:16",
																		"nodeType": "YulLiteral",
																		"src": "20088:34:16",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20065:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20065:6:16"
																},
																"nativeSrc": "20065:58:16",
																"nodeType": "YulFunctionCall",
																"src": "20065:58:16"
															},
															"nativeSrc": "20065:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "20065:58:16"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nativeSrc": "19948:182:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20046:6:16",
														"nodeType": "YulTypedName",
														"src": "20046:6:16",
														"type": ""
													}
												],
												"src": "19948:182:16"
											},
											{
												"body": {
													"nativeSrc": "20282:220:16",
													"nodeType": "YulBlock",
													"src": "20282:220:16",
													"statements": [
														{
															"nativeSrc": "20292:74:16",
															"nodeType": "YulAssignment",
															"src": "20292:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20358:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20358:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20363:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20363:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20299:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "20299:58:16"
																},
																"nativeSrc": "20299:67:16",
																"nodeType": "YulFunctionCall",
																"src": "20299:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20292:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20292:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20464:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20464:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nativeSrc": "20375:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "20375:88:16"
																},
																"nativeSrc": "20375:93:16",
																"nodeType": "YulFunctionCall",
																"src": "20375:93:16"
															},
															"nativeSrc": "20375:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "20375:93:16"
														},
														{
															"nativeSrc": "20477:19:16",
															"nodeType": "YulAssignment",
															"src": "20477:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20488:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20488:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20493:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20493:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20484:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20484:3:16"
																},
																"nativeSrc": "20484:12:16",
																"nodeType": "YulFunctionCall",
																"src": "20484:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20477:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20477:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20136:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20270:3:16",
														"nodeType": "YulTypedName",
														"src": "20270:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20278:3:16",
														"nodeType": "YulTypedName",
														"src": "20278:3:16",
														"type": ""
													}
												],
												"src": "20136:366:16"
											},
											{
												"body": {
													"nativeSrc": "20679:248:16",
													"nodeType": "YulBlock",
													"src": "20679:248:16",
													"statements": [
														{
															"nativeSrc": "20689:26:16",
															"nodeType": "YulAssignment",
															"src": "20689:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20701:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "20701:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20712:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20712:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20697:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20697:3:16"
																},
																"nativeSrc": "20697:18:16",
																"nodeType": "YulFunctionCall",
																"src": "20697:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20689:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20689:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20736:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20736:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20747:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20747:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20732:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20732:3:16"
																		},
																		"nativeSrc": "20732:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20732:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20755:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "20755:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20761:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20761:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20751:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20751:3:16"
																		},
																		"nativeSrc": "20751:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20751:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20725:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20725:6:16"
																},
																"nativeSrc": "20725:47:16",
																"nodeType": "YulFunctionCall",
																"src": "20725:47:16"
															},
															"nativeSrc": "20725:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "20725:47:16"
														},
														{
															"nativeSrc": "20781:139:16",
															"nodeType": "YulAssignment",
															"src": "20781:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20915:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "20915:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20789:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "20789:124:16"
																},
																"nativeSrc": "20789:131:16",
																"nodeType": "YulFunctionCall",
																"src": "20789:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20781:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20781:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20508:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20659:9:16",
														"nodeType": "YulTypedName",
														"src": "20659:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20674:4:16",
														"nodeType": "YulTypedName",
														"src": "20674:4:16",
														"type": ""
													}
												],
												"src": "20508:419:16"
											},
											{
												"body": {
													"nativeSrc": "20973:76:16",
													"nodeType": "YulBlock",
													"src": "20973:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "21027:16:16",
																"nodeType": "YulBlock",
																"src": "21027:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "21036:1:16",
																					"nodeType": "YulLiteral",
																					"src": "21036:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21039:1:16",
																					"nodeType": "YulLiteral",
																					"src": "21039:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "21029:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "21029:6:16"
																			},
																			"nativeSrc": "21029:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "21029:12:16"
																		},
																		"nativeSrc": "21029:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "21029:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20996:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "20996:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21018:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "21018:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "21003:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "21003:14:16"
																				},
																				"nativeSrc": "21003:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "21003:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20993:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "20993:2:16"
																		},
																		"nativeSrc": "20993:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20993:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20986:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20986:6:16"
																},
																"nativeSrc": "20986:40:16",
																"nodeType": "YulFunctionCall",
																"src": "20986:40:16"
															},
															"nativeSrc": "20983:60:16",
															"nodeType": "YulIf",
															"src": "20983:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "20933:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20966:5:16",
														"nodeType": "YulTypedName",
														"src": "20966:5:16",
														"type": ""
													}
												],
												"src": "20933:116:16"
											},
											{
												"body": {
													"nativeSrc": "21115:77:16",
													"nodeType": "YulBlock",
													"src": "21115:77:16",
													"statements": [
														{
															"nativeSrc": "21125:22:16",
															"nodeType": "YulAssignment",
															"src": "21125:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21140:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21140:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21134:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "21134:5:16"
																},
																"nativeSrc": "21134:13:16",
																"nodeType": "YulFunctionCall",
																"src": "21134:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21125:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "21125:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21180:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "21180:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "21156:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "21156:23:16"
																},
																"nativeSrc": "21156:30:16",
																"nodeType": "YulFunctionCall",
																"src": "21156:30:16"
															},
															"nativeSrc": "21156:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "21156:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "21055:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21093:6:16",
														"nodeType": "YulTypedName",
														"src": "21093:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21101:3:16",
														"nodeType": "YulTypedName",
														"src": "21101:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21109:5:16",
														"nodeType": "YulTypedName",
														"src": "21109:5:16",
														"type": ""
													}
												],
												"src": "21055:137:16"
											},
											{
												"body": {
													"nativeSrc": "21272:271:16",
													"nodeType": "YulBlock",
													"src": "21272:271:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "21318:83:16",
																"nodeType": "YulBlock",
																"src": "21318:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21320:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "21320:77:16"
																			},
																			"nativeSrc": "21320:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "21320:79:16"
																		},
																		"nativeSrc": "21320:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "21320:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21293:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "21293:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21302:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21302:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21289:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21289:3:16"
																		},
																		"nativeSrc": "21289:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21289:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21314:2:16",
																		"nodeType": "YulLiteral",
																		"src": "21314:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21285:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21285:3:16"
																},
																"nativeSrc": "21285:32:16",
																"nodeType": "YulFunctionCall",
																"src": "21285:32:16"
															},
															"nativeSrc": "21282:119:16",
															"nodeType": "YulIf",
															"src": "21282:119:16"
														},
														{
															"nativeSrc": "21411:125:16",
															"nodeType": "YulBlock",
															"src": "21411:125:16",
															"statements": [
																{
																	"nativeSrc": "21426:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21426:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21440:1:16",
																		"nodeType": "YulLiteral",
																		"src": "21440:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21430:6:16",
																			"nodeType": "YulTypedName",
																			"src": "21430:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21455:71:16",
																	"nodeType": "YulAssignment",
																	"src": "21455:71:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21498:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "21498:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21509:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "21509:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21494:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "21494:3:16"
																				},
																				"nativeSrc": "21494:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "21494:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21518:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "21518:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "21465:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "21465:28:16"
																		},
																		"nativeSrc": "21465:61:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21465:61:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21455:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "21455:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "21198:345:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21242:9:16",
														"nodeType": "YulTypedName",
														"src": "21242:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21253:7:16",
														"nodeType": "YulTypedName",
														"src": "21253:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21265:6:16",
														"nodeType": "YulTypedName",
														"src": "21265:6:16",
														"type": ""
													}
												],
												"src": "21198:345:16"
											},
											{
												"body": {
													"nativeSrc": "21655:123:16",
													"nodeType": "YulBlock",
													"src": "21655:123:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21677:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "21677:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21685:1:16",
																				"nodeType": "YulLiteral",
																				"src": "21685:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21673:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21673:3:16"
																		},
																		"nativeSrc": "21673:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21673:14:16"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nativeSrc": "21689:34:16",
																		"nodeType": "YulLiteral",
																		"src": "21689:34:16",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21666:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21666:6:16"
																},
																"nativeSrc": "21666:58:16",
																"nodeType": "YulFunctionCall",
																"src": "21666:58:16"
															},
															"nativeSrc": "21666:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "21666:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21745:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "21745:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21753:2:16",
																				"nodeType": "YulLiteral",
																				"src": "21753:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21741:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21741:3:16"
																		},
																		"nativeSrc": "21741:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21741:15:16"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nativeSrc": "21758:12:16",
																		"nodeType": "YulLiteral",
																		"src": "21758:12:16",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21734:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21734:6:16"
																},
																"nativeSrc": "21734:37:16",
																"nodeType": "YulFunctionCall",
																"src": "21734:37:16"
															},
															"nativeSrc": "21734:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "21734:37:16"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nativeSrc": "21549:229:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21647:6:16",
														"nodeType": "YulTypedName",
														"src": "21647:6:16",
														"type": ""
													}
												],
												"src": "21549:229:16"
											},
											{
												"body": {
													"nativeSrc": "21930:220:16",
													"nodeType": "YulBlock",
													"src": "21930:220:16",
													"statements": [
														{
															"nativeSrc": "21940:74:16",
															"nodeType": "YulAssignment",
															"src": "21940:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22006:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22006:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22011:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22011:2:16",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21947:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "21947:58:16"
																},
																"nativeSrc": "21947:67:16",
																"nodeType": "YulFunctionCall",
																"src": "21947:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21940:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21940:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22112:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22112:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nativeSrc": "22023:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "22023:88:16"
																},
																"nativeSrc": "22023:93:16",
																"nodeType": "YulFunctionCall",
																"src": "22023:93:16"
															},
															"nativeSrc": "22023:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "22023:93:16"
														},
														{
															"nativeSrc": "22125:19:16",
															"nodeType": "YulAssignment",
															"src": "22125:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22136:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22136:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22141:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22141:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22132:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22132:3:16"
																},
																"nativeSrc": "22132:12:16",
																"nodeType": "YulFunctionCall",
																"src": "22132:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22125:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22125:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21784:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21918:3:16",
														"nodeType": "YulTypedName",
														"src": "21918:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21926:3:16",
														"nodeType": "YulTypedName",
														"src": "21926:3:16",
														"type": ""
													}
												],
												"src": "21784:366:16"
											},
											{
												"body": {
													"nativeSrc": "22327:248:16",
													"nodeType": "YulBlock",
													"src": "22327:248:16",
													"statements": [
														{
															"nativeSrc": "22337:26:16",
															"nodeType": "YulAssignment",
															"src": "22337:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22349:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "22349:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22360:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22360:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22345:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22345:3:16"
																},
																"nativeSrc": "22345:18:16",
																"nodeType": "YulFunctionCall",
																"src": "22345:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22337:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "22337:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22384:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "22384:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22395:1:16",
																				"nodeType": "YulLiteral",
																				"src": "22395:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22380:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22380:3:16"
																		},
																		"nativeSrc": "22380:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22380:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22403:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "22403:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22409:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "22409:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22399:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22399:3:16"
																		},
																		"nativeSrc": "22399:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22399:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22373:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "22373:6:16"
																},
																"nativeSrc": "22373:47:16",
																"nodeType": "YulFunctionCall",
																"src": "22373:47:16"
															},
															"nativeSrc": "22373:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "22373:47:16"
														},
														{
															"nativeSrc": "22429:139:16",
															"nodeType": "YulAssignment",
															"src": "22429:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22563:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "22563:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22437:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "22437:124:16"
																},
																"nativeSrc": "22437:131:16",
																"nodeType": "YulFunctionCall",
																"src": "22437:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22429:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "22429:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22156:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22307:9:16",
														"nodeType": "YulTypedName",
														"src": "22307:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22322:4:16",
														"nodeType": "YulTypedName",
														"src": "22322:4:16",
														"type": ""
													}
												],
												"src": "22156:419:16"
											},
											{
												"body": {
													"nativeSrc": "22687:119:16",
													"nodeType": "YulBlock",
													"src": "22687:119:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22709:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "22709:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22717:1:16",
																				"nodeType": "YulLiteral",
																				"src": "22717:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22705:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22705:3:16"
																		},
																		"nativeSrc": "22705:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22705:14:16"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nativeSrc": "22721:34:16",
																		"nodeType": "YulLiteral",
																		"src": "22721:34:16",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22698:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "22698:6:16"
																},
																"nativeSrc": "22698:58:16",
																"nodeType": "YulFunctionCall",
																"src": "22698:58:16"
															},
															"nativeSrc": "22698:58:16",
															"nodeType": "YulExpressionStatement",
															"src": "22698:58:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22777:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "22777:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22785:2:16",
																				"nodeType": "YulLiteral",
																				"src": "22785:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22773:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22773:3:16"
																		},
																		"nativeSrc": "22773:15:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22773:15:16"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nativeSrc": "22790:8:16",
																		"nodeType": "YulLiteral",
																		"src": "22790:8:16",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22766:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "22766:6:16"
																},
																"nativeSrc": "22766:33:16",
																"nodeType": "YulFunctionCall",
																"src": "22766:33:16"
															},
															"nativeSrc": "22766:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "22766:33:16"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nativeSrc": "22581:225:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22679:6:16",
														"nodeType": "YulTypedName",
														"src": "22679:6:16",
														"type": ""
													}
												],
												"src": "22581:225:16"
											},
											{
												"body": {
													"nativeSrc": "22958:220:16",
													"nodeType": "YulBlock",
													"src": "22958:220:16",
													"statements": [
														{
															"nativeSrc": "22968:74:16",
															"nodeType": "YulAssignment",
															"src": "22968:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23034:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "23034:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23039:2:16",
																		"nodeType": "YulLiteral",
																		"src": "23039:2:16",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22975:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "22975:58:16"
																},
																"nativeSrc": "22975:67:16",
																"nodeType": "YulFunctionCall",
																"src": "22975:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22968:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22968:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23140:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "23140:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nativeSrc": "23051:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "23051:88:16"
																},
																"nativeSrc": "23051:93:16",
																"nodeType": "YulFunctionCall",
																"src": "23051:93:16"
															},
															"nativeSrc": "23051:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "23051:93:16"
														},
														{
															"nativeSrc": "23153:19:16",
															"nodeType": "YulAssignment",
															"src": "23153:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23164:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "23164:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23169:2:16",
																		"nodeType": "YulLiteral",
																		"src": "23169:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23160:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "23160:3:16"
																},
																"nativeSrc": "23160:12:16",
																"nodeType": "YulFunctionCall",
																"src": "23160:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23153:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "23153:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22812:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22946:3:16",
														"nodeType": "YulTypedName",
														"src": "22946:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22954:3:16",
														"nodeType": "YulTypedName",
														"src": "22954:3:16",
														"type": ""
													}
												],
												"src": "22812:366:16"
											},
											{
												"body": {
													"nativeSrc": "23355:248:16",
													"nodeType": "YulBlock",
													"src": "23355:248:16",
													"statements": [
														{
															"nativeSrc": "23365:26:16",
															"nodeType": "YulAssignment",
															"src": "23365:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23377:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "23377:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23388:2:16",
																		"nodeType": "YulLiteral",
																		"src": "23388:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23373:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "23373:3:16"
																},
																"nativeSrc": "23373:18:16",
																"nodeType": "YulFunctionCall",
																"src": "23373:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23365:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "23365:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23412:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "23412:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23423:1:16",
																				"nodeType": "YulLiteral",
																				"src": "23423:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23408:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "23408:3:16"
																		},
																		"nativeSrc": "23408:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "23408:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23431:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "23431:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23437:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "23437:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23427:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "23427:3:16"
																		},
																		"nativeSrc": "23427:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "23427:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23401:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "23401:6:16"
																},
																"nativeSrc": "23401:47:16",
																"nodeType": "YulFunctionCall",
																"src": "23401:47:16"
															},
															"nativeSrc": "23401:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "23401:47:16"
														},
														{
															"nativeSrc": "23457:139:16",
															"nodeType": "YulAssignment",
															"src": "23457:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23591:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "23591:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23465:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "23465:124:16"
																},
																"nativeSrc": "23465:131:16",
																"nodeType": "YulFunctionCall",
																"src": "23465:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23457:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "23457:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23184:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23335:9:16",
														"nodeType": "YulTypedName",
														"src": "23335:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23350:4:16",
														"nodeType": "YulTypedName",
														"src": "23350:4:16",
														"type": ""
													}
												],
												"src": "23184:419:16"
											},
											{
												"body": {
													"nativeSrc": "23667:40:16",
													"nodeType": "YulBlock",
													"src": "23667:40:16",
													"statements": [
														{
															"nativeSrc": "23678:22:16",
															"nodeType": "YulAssignment",
															"src": "23678:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23694:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "23694:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23688:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "23688:5:16"
																},
																"nativeSrc": "23688:12:16",
																"nodeType": "YulFunctionCall",
																"src": "23688:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "23678:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "23678:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "23609:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23650:5:16",
														"nodeType": "YulTypedName",
														"src": "23650:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "23660:6:16",
														"nodeType": "YulTypedName",
														"src": "23660:6:16",
														"type": ""
													}
												],
												"src": "23609:98:16"
											},
											{
												"body": {
													"nativeSrc": "23826:34:16",
													"nodeType": "YulBlock",
													"src": "23826:34:16",
													"statements": [
														{
															"nativeSrc": "23836:18:16",
															"nodeType": "YulAssignment",
															"src": "23836:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "23851:3:16",
																"nodeType": "YulIdentifier",
																"src": "23851:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "23836:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "23836:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23713:147:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23798:3:16",
														"nodeType": "YulTypedName",
														"src": "23798:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "23803:6:16",
														"nodeType": "YulTypedName",
														"src": "23803:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "23814:11:16",
														"nodeType": "YulTypedName",
														"src": "23814:11:16",
														"type": ""
													}
												],
												"src": "23713:147:16"
											},
											{
												"body": {
													"nativeSrc": "23974:278:16",
													"nodeType": "YulBlock",
													"src": "23974:278:16",
													"statements": [
														{
															"nativeSrc": "23984:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "23984:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24030:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "24030:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "23998:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "23998:31:16"
																},
																"nativeSrc": "23998:38:16",
																"nodeType": "YulFunctionCall",
																"src": "23998:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "23988:6:16",
																	"nodeType": "YulTypedName",
																	"src": "23988:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24045:95:16",
															"nodeType": "YulAssignment",
															"src": "24045:95:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24128:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "24128:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24133:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "24133:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24052:75:16",
																	"nodeType": "YulIdentifier",
																	"src": "24052:75:16"
																},
																"nativeSrc": "24052:88:16",
																"nodeType": "YulFunctionCall",
																"src": "24052:88:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24045:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "24045:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24188:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "24188:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24195:4:16",
																				"nodeType": "YulLiteral",
																				"src": "24195:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24184:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "24184:3:16"
																		},
																		"nativeSrc": "24184:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "24184:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24202:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "24202:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24207:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "24207:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "24149:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "24149:34:16"
																},
																"nativeSrc": "24149:65:16",
																"nodeType": "YulFunctionCall",
																"src": "24149:65:16"
															},
															"nativeSrc": "24149:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "24149:65:16"
														},
														{
															"nativeSrc": "24223:23:16",
															"nodeType": "YulAssignment",
															"src": "24223:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24234:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "24234:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "24239:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "24239:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24230:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "24230:3:16"
																},
																"nativeSrc": "24230:16:16",
																"nodeType": "YulFunctionCall",
																"src": "24230:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24223:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "24223:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "23866:386:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23955:5:16",
														"nodeType": "YulTypedName",
														"src": "23955:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "23962:3:16",
														"nodeType": "YulTypedName",
														"src": "23962:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23970:3:16",
														"nodeType": "YulTypedName",
														"src": "23970:3:16",
														"type": ""
													}
												],
												"src": "23866:386:16"
											},
											{
												"body": {
													"nativeSrc": "24392:137:16",
													"nodeType": "YulBlock",
													"src": "24392:137:16",
													"statements": [
														{
															"nativeSrc": "24403:100:16",
															"nodeType": "YulAssignment",
															"src": "24403:100:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24490:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "24490:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "24499:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "24499:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "24410:79:16",
																	"nodeType": "YulIdentifier",
																	"src": "24410:79:16"
																},
																"nativeSrc": "24410:93:16",
																"nodeType": "YulFunctionCall",
																"src": "24410:93:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24403:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "24403:3:16"
																}
															]
														},
														{
															"nativeSrc": "24513:10:16",
															"nodeType": "YulAssignment",
															"src": "24513:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "24520:3:16",
																"nodeType": "YulIdentifier",
																"src": "24520:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24513:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "24513:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "24258:271:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24371:3:16",
														"nodeType": "YulTypedName",
														"src": "24371:3:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24377:6:16",
														"nodeType": "YulTypedName",
														"src": "24377:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24388:3:16",
														"nodeType": "YulTypedName",
														"src": "24388:3:16",
														"type": ""
													}
												],
												"src": "24258:271:16"
											},
											{
												"body": {
													"nativeSrc": "24641:73:16",
													"nodeType": "YulBlock",
													"src": "24641:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24663:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "24663:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24671:1:16",
																				"nodeType": "YulLiteral",
																				"src": "24671:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24659:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "24659:3:16"
																		},
																		"nativeSrc": "24659:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "24659:14:16"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "24675:31:16",
																		"nodeType": "YulLiteral",
																		"src": "24675:31:16",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24652:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "24652:6:16"
																},
																"nativeSrc": "24652:55:16",
																"nodeType": "YulFunctionCall",
																"src": "24652:55:16"
															},
															"nativeSrc": "24652:55:16",
															"nodeType": "YulExpressionStatement",
															"src": "24652:55:16"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nativeSrc": "24535:179:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24633:6:16",
														"nodeType": "YulTypedName",
														"src": "24633:6:16",
														"type": ""
													}
												],
												"src": "24535:179:16"
											},
											{
												"body": {
													"nativeSrc": "24866:220:16",
													"nodeType": "YulBlock",
													"src": "24866:220:16",
													"statements": [
														{
															"nativeSrc": "24876:74:16",
															"nodeType": "YulAssignment",
															"src": "24876:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24942:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "24942:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24947:2:16",
																		"nodeType": "YulLiteral",
																		"src": "24947:2:16",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24883:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "24883:58:16"
																},
																"nativeSrc": "24883:67:16",
																"nodeType": "YulFunctionCall",
																"src": "24883:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24876:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "24876:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25048:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "25048:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nativeSrc": "24959:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "24959:88:16"
																},
																"nativeSrc": "24959:93:16",
																"nodeType": "YulFunctionCall",
																"src": "24959:93:16"
															},
															"nativeSrc": "24959:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "24959:93:16"
														},
														{
															"nativeSrc": "25061:19:16",
															"nodeType": "YulAssignment",
															"src": "25061:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25072:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "25072:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25077:2:16",
																		"nodeType": "YulLiteral",
																		"src": "25077:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25068:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "25068:3:16"
																},
																"nativeSrc": "25068:12:16",
																"nodeType": "YulFunctionCall",
																"src": "25068:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25061:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "25061:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24720:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24854:3:16",
														"nodeType": "YulTypedName",
														"src": "24854:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24862:3:16",
														"nodeType": "YulTypedName",
														"src": "24862:3:16",
														"type": ""
													}
												],
												"src": "24720:366:16"
											},
											{
												"body": {
													"nativeSrc": "25263:248:16",
													"nodeType": "YulBlock",
													"src": "25263:248:16",
													"statements": [
														{
															"nativeSrc": "25273:26:16",
															"nodeType": "YulAssignment",
															"src": "25273:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25285:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "25285:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25296:2:16",
																		"nodeType": "YulLiteral",
																		"src": "25296:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25281:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "25281:3:16"
																},
																"nativeSrc": "25281:18:16",
																"nodeType": "YulFunctionCall",
																"src": "25281:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25273:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "25273:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25320:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "25320:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25331:1:16",
																				"nodeType": "YulLiteral",
																				"src": "25331:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25316:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "25316:3:16"
																		},
																		"nativeSrc": "25316:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "25316:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25339:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "25339:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25345:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "25345:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25335:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "25335:3:16"
																		},
																		"nativeSrc": "25335:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "25335:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25309:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "25309:6:16"
																},
																"nativeSrc": "25309:47:16",
																"nodeType": "YulFunctionCall",
																"src": "25309:47:16"
															},
															"nativeSrc": "25309:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "25309:47:16"
														},
														{
															"nativeSrc": "25365:139:16",
															"nodeType": "YulAssignment",
															"src": "25365:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25499:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "25499:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25373:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "25373:124:16"
																},
																"nativeSrc": "25373:131:16",
																"nodeType": "YulFunctionCall",
																"src": "25373:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25365:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "25365:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25092:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25243:9:16",
														"nodeType": "YulTypedName",
														"src": "25243:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25258:4:16",
														"nodeType": "YulTypedName",
														"src": "25258:4:16",
														"type": ""
													}
												],
												"src": "25092:419:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$531_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$531_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$531__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$531_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548(memPtr) {\n\n        mstore(add(memPtr, 0), \"WhitelistCrowdsale: beneficiary \")\n\n        mstore(add(memPtr, 32), \"doesn't have the Whitelisted rol\")\n\n        mstore(add(memPtr, 64), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 65)\n        store_literal_in_memory_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061010c575f3560e01c80637a3226ec11610094578063a217fddf11610063578063a217fddf14610383578063d547741f146103ad578063e43252d7146103d5578063ec8ac4d8146103fd578063fc0c546a1461041957610123565b80637a3226ec146102cd5780637f649783146102f75780638ab1d6811461031f57806391d148541461034757610123565b806336568abe116100db57806336568abe146101ff5780634042b66f14610227578063521eb2731461025157806354202c4e1461027b578063548db174146102a557610123565b806301ffc9a714610135578063248a9ca3146101715780632c4e722e146101ad5780632f2ff15d146101d757610123565b366101235761012161011c610443565b61044a565b005b61013361012e610443565b61044a565b005b348015610140575f80fd5b5061015b6004803603810190610156919061148e565b610528565b60405161016891906114d3565b60405180910390f35b34801561017c575f80fd5b506101976004803603810190610192919061151f565b6105a1565b6040516101a49190611559565b60405180910390f35b3480156101b8575f80fd5b506101c16105be565b6040516101ce919061158a565b60405180910390f35b3480156101e2575f80fd5b506101fd60048036038101906101f891906115fd565b6105c7565b005b34801561020a575f80fd5b50610225600480360381019061022091906115fd565b6105e8565b005b348015610232575f80fd5b5061023b61066b565b604051610248919061158a565b60405180910390f35b34801561025c575f80fd5b50610265610674565b604051610272919061165b565b60405180910390f35b348015610286575f80fd5b5061028f61069c565b60405161029c9190611559565b60405180910390f35b3480156102b0575f80fd5b506102cb60048036038101906102c691906117c4565b6106c0565b005b3480156102d8575f80fd5b506102e1610751565b6040516102ee9190611559565b60405180910390f35b348015610302575f80fd5b5061031d600480360381019061031891906117c4565b610775565b005b34801561032a575f80fd5b506103456004803603810190610340919061180b565b610806565b005b348015610352575f80fd5b5061036d600480360381019061036891906115fd565b61085e565b60405161037a91906114d3565b60405180910390f35b34801561038e575f80fd5b506103976108c2565b6040516103a49190611559565b60405180910390f35b3480156103b8575f80fd5b506103d360048036038101906103ce91906115fd565b6108c8565b005b3480156103e0575f80fd5b506103fb60048036038101906103f6919061180b565b6108e9565b005b6104176004803603810190610412919061180b565b61044a565b005b348015610424575f80fd5b5061042d610941565b60405161043a9190611891565b60405180910390f35b5f33905090565b610452610969565b5f34905061046082826109b6565b5f61046a82610a2d565b905061048182600454610a4a90919063ffffffff16565b6004819055506104918382610a5f565b8273ffffffffffffffffffffffffffffffffffffffff166104b0610443565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b84846040516104f79291906118aa565b60405180910390a36105098383610a6d565b610511610a71565b61051b8383610ad8565b5050610525610adc565b50565b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061059a575061059982610ae5565b5b9050919050565b5f60055f8381526020019081526020015f20600101549050919050565b5f600354905090565b6105d0826105a1565b6105d981610b4e565b6105e38383610b62565b505050565b6105f0610443565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490611951565b60405180910390fd5b6106678282610c3d565b5050565b5f600454905090565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e281565b7f28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e26106ea81610b4e565b5f5b825181101561074c576107397f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b4984838151811061072c5761072b61196f565b5b6020026020010151610c3d565b8080610744906119c9565b9150506106ec565b505050565b7f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b4981565b7f28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e261079f81610b4e565b5f5b8251811015610801576107ee7f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b498483815181106107e1576107e061196f565b5b6020026020010151610b62565b80806107f9906119c9565b9150506107a1565b505050565b7f28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e261083081610b4e565b61085a7f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b4983610c3d565b5050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b6108d1826105a1565b6108da81610b4e565b6108e48383610c3d565b505050565b7f28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e261091381610b4e565b61093d7f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b4983610b62565b5050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f54036109ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a490611a5a565b60405180910390fd5b60025f81905550565b6109e07f8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b498361085e565b610a1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1690611b0e565b60405180910390fd5b610a298282610d18565b5050565b5f610a4360035483610dcc90919063ffffffff16565b9050919050565b5f8183610a579190611b2c565b905092915050565b610a698282610de1565b5050565b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f19350505050158015610ad5573d5f803e3d5ffd5b50565b5050565b60015f81905550565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b5f81610b5a610443565b610e31565b50565b610b6c828261085e565b610c3957600160055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bde610443565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610c47828261085e565b15610d14575f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610cb9610443565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7d90611bcf565b60405180910390fd5b5f8103610dc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbf90611c37565b60405180910390fd5b5050565b5f8183610dd99190611c55565b905092915050565b610e2d828260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610eb59092919063ffffffff16565b5050565b610e3b828261085e565b610eb157610e4881610f3b565b610e55835f1c6020610f68565b604051602001610e66929190611d96565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea89190611e07565b60405180910390fd5b5050565b610f368363a9059cbb60e01b8484604051602401610ed4929190611e36565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061119d565b505050565b6060610f618273ffffffffffffffffffffffffffffffffffffffff16601460ff16610f68565b9050919050565b60605f6002836002610f7a9190611c55565b610f849190611b2c565b67ffffffffffffffff811115610f9d57610f9c611688565b5b6040519080825280601f01601f191660200182016040528015610fcf5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f815181106110065761100561196f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106110695761106861196f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f60018460026110a79190611c55565b6110b19190611b2c565b90505b6001811115611150577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106110f3576110f261196f565b5b1a60f81b82828151811061110a5761110961196f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c94508061114990611e5d565b90506110b4565b505f8414611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a90611ece565b60405180910390fd5b8091505092915050565b5f6111fe826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112639092919063ffffffff16565b90505f8151148061121f57508080602001905181019061121e9190611f16565b5b61125e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125590611fb1565b60405180910390fd5b505050565b606061127184845f8561127a565b90509392505050565b6060824710156112bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b69061203f565b60405180910390fd5b5f808673ffffffffffffffffffffffffffffffffffffffff1685876040516112e791906120a1565b5f6040518083038185875af1925050503d805f8114611321576040519150601f19603f3d011682016040523d82523d5f602084013e611326565b606091505b509150915061133787838387611343565b92505050949350505050565b606083156113a4575f83510361139c5761135c856113b7565b61139b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139290612101565b60405180910390fd5b5b8290506113af565b6113ae83836113d9565b5b949350505050565b5f808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b5f825111156113eb5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141f9190611e07565b60405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61146d81611439565b8114611477575f80fd5b50565b5f8135905061148881611464565b92915050565b5f602082840312156114a3576114a2611431565b5b5f6114b08482850161147a565b91505092915050565b5f8115159050919050565b6114cd816114b9565b82525050565b5f6020820190506114e65f8301846114c4565b92915050565b5f819050919050565b6114fe816114ec565b8114611508575f80fd5b50565b5f81359050611519816114f5565b92915050565b5f6020828403121561153457611533611431565b5b5f6115418482850161150b565b91505092915050565b611553816114ec565b82525050565b5f60208201905061156c5f83018461154a565b92915050565b5f819050919050565b61158481611572565b82525050565b5f60208201905061159d5f83018461157b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115cc826115a3565b9050919050565b6115dc816115c2565b81146115e6575f80fd5b50565b5f813590506115f7816115d3565b92915050565b5f806040838503121561161357611612611431565b5b5f6116208582860161150b565b9250506020611631858286016115e9565b9150509250929050565b5f611645826115a3565b9050919050565b6116558161163b565b82525050565b5f60208201905061166e5f83018461164c565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6116be82611678565b810181811067ffffffffffffffff821117156116dd576116dc611688565b5b80604052505050565b5f6116ef611428565b90506116fb82826116b5565b919050565b5f67ffffffffffffffff82111561171a57611719611688565b5b602082029050602081019050919050565b5f80fd5b5f61174161173c84611700565b6116e6565b905080838252602082019050602084028301858111156117645761176361172b565b5b835b8181101561178d578061177988826115e9565b845260208401935050602081019050611766565b5050509392505050565b5f82601f8301126117ab576117aa611674565b5b81356117bb84826020860161172f565b91505092915050565b5f602082840312156117d9576117d8611431565b5b5f82013567ffffffffffffffff8111156117f6576117f5611435565b5b61180284828501611797565b91505092915050565b5f602082840312156118205761181f611431565b5b5f61182d848285016115e9565b91505092915050565b5f819050919050565b5f61185961185461184f846115a3565b611836565b6115a3565b9050919050565b5f61186a8261183f565b9050919050565b5f61187b82611860565b9050919050565b61188b81611871565b82525050565b5f6020820190506118a45f830184611882565b92915050565b5f6040820190506118bd5f83018561157b565b6118ca602083018461157b565b9392505050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f61193b602f836118d1565b9150611946826118e1565b604082019050919050565b5f6020820190508181035f8301526119688161192f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119d382611572565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a0557611a0461199c565b5b600182019050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611a44601f836118d1565b9150611a4f82611a10565b602082019050919050565b5f6020820190508181035f830152611a7181611a38565b9050919050565b7f57686974656c69737443726f776473616c653a2062656e6566696369617279205f8201527f646f65736e27742068617665207468652057686974656c697374656420726f6c60208201527f6500000000000000000000000000000000000000000000000000000000000000604082015250565b5f611af86041836118d1565b9150611b0382611a78565b606082019050919050565b5f6020820190508181035f830152611b2581611aec565b9050919050565b5f611b3682611572565b9150611b4183611572565b9250828201905080821115611b5957611b5861199c565b5b92915050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f611bb9602a836118d1565b9150611bc482611b5f565b604082019050919050565b5f6020820190508181035f830152611be681611bad565b9050919050565b7f43726f776473616c653a20776569416d6f756e742069732030000000000000005f82015250565b5f611c216019836118d1565b9150611c2c82611bed565b602082019050919050565b5f6020820190508181035f830152611c4e81611c15565b9050919050565b5f611c5f82611572565b9150611c6a83611572565b9250828202611c7881611572565b91508282048414831517611c8f57611c8e61199c565b5b5092915050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f611cd4601783611c96565b9150611cdf82611ca0565b601782019050919050565b5f81519050919050565b5f5b83811015611d11578082015181840152602081019050611cf6565b5f8484015250505050565b5f611d2682611cea565b611d308185611c96565b9350611d40818560208601611cf4565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f611d80601183611c96565b9150611d8b82611d4c565b601182019050919050565b5f611da082611cc8565b9150611dac8285611d1c565b9150611db782611d74565b9150611dc38284611d1c565b91508190509392505050565b5f611dd982611cea565b611de381856118d1565b9350611df3818560208601611cf4565b611dfc81611678565b840191505092915050565b5f6020820190508181035f830152611e1f8184611dcf565b905092915050565b611e30816115c2565b82525050565b5f604082019050611e495f830185611e27565b611e56602083018461157b565b9392505050565b5f611e6782611572565b91505f8203611e7957611e7861199c565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f611eb86020836118d1565b9150611ec382611e84565b602082019050919050565b5f6020820190508181035f830152611ee581611eac565b9050919050565b611ef5816114b9565b8114611eff575f80fd5b50565b5f81519050611f1081611eec565b92915050565b5f60208284031215611f2b57611f2a611431565b5b5f611f3884828501611f02565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e5f8201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b5f611f9b602a836118d1565b9150611fa682611f41565b604082019050919050565b5f6020820190508181035f830152611fc881611f8f565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f5f8201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b5f6120296026836118d1565b915061203482611fcf565b604082019050919050565b5f6020820190508181035f8301526120568161201d565b9050919050565b5f81519050919050565b5f81905092915050565b5f61207b8261205d565b6120858185612067565b9350612095818560208601611cf4565b80840191505092915050565b5f6120ac8284612071565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000005f82015250565b5f6120eb601d836118d1565b91506120f6826120b7565b602082019050919050565b5f6020820190508181035f830152612118816120df565b905091905056fea2646970667358221220dd6984b3055296cee63dd0000b353c663d64c1e6bb869555be435a9371d5634d64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A3226EC GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x419 JUMPI PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH4 0x7A3226EC EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x7F649783 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x347 JUMPI PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x54202C4E EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x548DB174 EQ PUSH2 0x2A5 JUMPI PUSH2 0x123 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1D7 JUMPI PUSH2 0x123 JUMP JUMPDEST CALLDATASIZE PUSH2 0x123 JUMPI PUSH2 0x121 PUSH2 0x11C PUSH2 0x443 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x12E PUSH2 0x443 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x148E JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x5C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x165B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x775 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x1559 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x8C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x8E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x180B JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x42D PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x452 PUSH2 0x969 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH2 0x460 DUP3 DUP3 PUSH2 0x9B6 JUMP JUMPDEST PUSH0 PUSH2 0x46A DUP3 PUSH2 0xA2D JUMP JUMPDEST SWAP1 POP PUSH2 0x481 DUP3 PUSH1 0x4 SLOAD PUSH2 0xA4A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x491 DUP4 DUP3 PUSH2 0xA5F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4B0 PUSH2 0x443 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4F7 SWAP3 SWAP2 SWAP1 PUSH2 0x18AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x509 DUP4 DUP4 PUSH2 0xA6D JUMP JUMPDEST PUSH2 0x511 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0x51B DUP4 DUP4 PUSH2 0xAD8 JUMP JUMPDEST POP POP PUSH2 0x525 PUSH2 0xADC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x59A JUMPI POP PUSH2 0x599 DUP3 PUSH2 0xAE5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D0 DUP3 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x5D9 DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x5E3 DUP4 DUP4 PUSH2 0xB62 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5F0 PUSH2 0x443 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x654 SWAP1 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x667 DUP3 DUP3 PUSH2 0xC3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 DUP2 JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 PUSH2 0x6EA DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x74C JUMPI PUSH2 0x739 PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x72C JUMPI PUSH2 0x72B PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xC3D JUMP JUMPDEST DUP1 DUP1 PUSH2 0x744 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP2 JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 PUSH2 0x79F DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x801 JUMPI PUSH2 0x7EE PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7E1 JUMPI PUSH2 0x7E0 PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xB62 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x7F9 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7A1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 PUSH2 0x830 DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x85A PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP4 PUSH2 0xC3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x8D1 DUP3 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x8DA DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x8E4 DUP4 DUP4 PUSH2 0xC3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2 PUSH2 0x913 DUP2 PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x93D PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP4 PUSH2 0xB62 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x9AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x9E0 PUSH32 0x8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49 DUP4 PUSH2 0x85E JUMP JUMPDEST PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA16 SWAP1 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA29 DUP3 DUP3 PUSH2 0xD18 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA43 PUSH1 0x3 SLOAD DUP4 PUSH2 0xDCC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA69 DUP3 DUP3 PUSH2 0xDE1 JUMP JUMPDEST POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAD5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB5F DUP2 PUSH2 0xB5A PUSH2 0x443 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB6C DUP3 DUP3 PUSH2 0x85E JUMP JUMPDEST PUSH2 0xC39 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBDE PUSH2 0x443 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC47 DUP3 DUP3 PUSH2 0x85E JUMP JUMPDEST ISZERO PUSH2 0xD14 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCB9 PUSH2 0x443 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP1 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0xDC8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBF SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE2D DUP3 DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEB5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE3B DUP3 DUP3 PUSH2 0x85E JUMP JUMPDEST PUSH2 0xEB1 JUMPI PUSH2 0xE48 DUP2 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0xE55 DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE66 SWAP3 SWAP2 SWAP1 PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA8 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF36 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xED4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x119D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xF68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0xF84 SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF9D JUMPI PUSH2 0xF9C PUSH2 0x1688 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFCF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1006 JUMPI PUSH2 0x1005 PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1069 JUMPI PUSH2 0x1068 PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x10A7 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x1B2C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1150 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0x196F JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x110A JUMPI PUSH2 0x1109 PUSH2 0x196F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x1149 SWAP1 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP PUSH2 0x10B4 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x1193 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118A SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11FE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1263 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x121F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x121E SWAP2 SWAP1 PUSH2 0x1F16 JUMP JUMPDEST JUMPDEST PUSH2 0x125E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1255 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1271 DUP5 DUP5 PUSH0 DUP6 PUSH2 0x127A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x12BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B6 SWAP1 PUSH2 0x203F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x12E7 SWAP2 SWAP1 PUSH2 0x20A1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1337 DUP8 DUP4 DUP4 DUP8 PUSH2 0x1343 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13A4 JUMPI PUSH0 DUP4 MLOAD SUB PUSH2 0x139C JUMPI PUSH2 0x135C DUP6 PUSH2 0x13B7 JUMP JUMPDEST PUSH2 0x139B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1392 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x13AF JUMP JUMPDEST PUSH2 0x13AE DUP4 DUP4 PUSH2 0x13D9 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x13EB JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141F SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146D DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP2 EQ PUSH2 0x1477 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1488 DUP2 PUSH2 0x1464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A2 PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B0 DUP5 DUP3 DUP6 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14CD DUP2 PUSH2 0x14B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x14C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FE DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP2 EQ PUSH2 0x1508 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1519 DUP2 PUSH2 0x14F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1534 JUMPI PUSH2 0x1533 PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1541 DUP5 DUP3 DUP6 ADD PUSH2 0x150B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1553 DUP2 PUSH2 0x14EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156C PUSH0 DUP4 ADD DUP5 PUSH2 0x154A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1584 DUP2 PUSH2 0x1572 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x159D PUSH0 DUP4 ADD DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15CC DUP3 PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x15C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F7 DUP2 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1620 DUP6 DUP3 DUP7 ADD PUSH2 0x150B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1631 DUP6 DUP3 DUP7 ADD PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1645 DUP3 PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1655 DUP2 PUSH2 0x163B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166E PUSH0 DUP4 ADD DUP5 PUSH2 0x164C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x16BE DUP3 PUSH2 0x1678 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x1688 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16EF PUSH2 0x1428 JUMP JUMPDEST SWAP1 POP PUSH2 0x16FB DUP3 DUP3 PUSH2 0x16B5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x171A JUMPI PUSH2 0x1719 PUSH2 0x1688 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1741 PUSH2 0x173C DUP5 PUSH2 0x1700 JUMP JUMPDEST PUSH2 0x16E6 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x172B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x178D JUMPI DUP1 PUSH2 0x1779 DUP9 DUP3 PUSH2 0x15E9 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1766 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17AB JUMPI PUSH2 0x17AA PUSH2 0x1674 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17BB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x172F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17D9 JUMPI PUSH2 0x17D8 PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17F6 JUMPI PUSH2 0x17F5 PUSH2 0x1435 JUMP JUMPDEST JUMPDEST PUSH2 0x1802 DUP5 DUP3 DUP6 ADD PUSH2 0x1797 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x182D DUP5 DUP3 DUP6 ADD PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1859 PUSH2 0x1854 PUSH2 0x184F DUP5 PUSH2 0x15A3 JUMP JUMPDEST PUSH2 0x1836 JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x186A DUP3 PUSH2 0x183F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x187B DUP3 PUSH2 0x1860 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188B DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1882 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x18BD PUSH0 DUP4 ADD DUP6 PUSH2 0x157B JUMP JUMPDEST PUSH2 0x18CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x193B PUSH1 0x2F DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1946 DUP3 PUSH2 0x18E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1968 DUP2 PUSH2 0x192F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19D3 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A05 JUMPI PUSH2 0x1A04 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A44 PUSH1 0x1F DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4F DUP3 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A71 DUP2 PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x57686974656C69737443726F776473616C653A2062656E656669636961727920 PUSH0 DUP3 ADD MSTORE PUSH32 0x646F65736E27742068617665207468652057686974656C697374656420726F6C PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AF8 PUSH1 0x41 DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B03 DUP3 PUSH2 0x1A78 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B25 DUP2 PUSH2 0x1AEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B36 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B41 DUP4 PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B59 JUMPI PUSH2 0x1B58 PUSH2 0x199C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BB9 PUSH1 0x2A DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC4 DUP3 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE6 DUP2 PUSH2 0x1BAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C21 PUSH1 0x19 DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2C DUP3 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C4E DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5F DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6A DUP4 PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C78 DUP2 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C8F JUMPI PUSH2 0x1C8E PUSH2 0x199C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD4 PUSH1 0x17 DUP4 PUSH2 0x1C96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDF DUP3 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D11 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CF6 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D26 DUP3 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x1D30 DUP2 DUP6 PUSH2 0x1C96 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D40 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D80 PUSH1 0x11 DUP4 PUSH2 0x1C96 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D8B DUP3 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA0 DUP3 PUSH2 0x1CC8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAC DUP3 DUP6 PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB7 DUP3 PUSH2 0x1D74 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC3 DUP3 DUP5 PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD9 DUP3 PUSH2 0x1CEA JUMP JUMPDEST PUSH2 0x1DE3 DUP2 DUP6 PUSH2 0x18D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1678 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E1F DUP2 DUP5 PUSH2 0x1DCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E30 DUP2 PUSH2 0x15C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E49 PUSH0 DUP4 ADD DUP6 PUSH2 0x1E27 JUMP JUMPDEST PUSH2 0x1E56 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E67 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1E79 JUMPI PUSH2 0x1E78 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EB8 PUSH1 0x20 DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EC3 DUP3 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EE5 DUP2 PUSH2 0x1EAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF5 DUP2 PUSH2 0x14B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F10 DUP2 PUSH2 0x1EEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1431 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F38 DUP5 DUP3 DUP6 ADD PUSH2 0x1F02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9B PUSH1 0x2A DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA6 DUP3 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FC8 DUP2 PUSH2 0x1F8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2029 PUSH1 0x26 DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2034 DUP3 PUSH2 0x1FCF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2056 DUP2 PUSH2 0x201D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x207B DUP3 PUSH2 0x205D JUMP JUMPDEST PUSH2 0x2085 DUP2 DUP6 PUSH2 0x2067 JUMP JUMPDEST SWAP4 POP PUSH2 0x2095 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20AC DUP3 DUP5 PUSH2 0x2071 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20EB PUSH1 0x1D DUP4 PUSH2 0x18D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2118 DUP2 PUSH2 0x20DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD PUSH10 0x84B3055296CEE63DD000 SIGNEXTEND CALLDATALOAD EXTCODECOPY PUSH7 0x3D64C1E6BB8695 SSTORE 0xBE NUMBER GAS SWAP4 PUSH18 0xD5634D64736F6C6343000815003300000000 ",
							"sourceMap": "266:1912:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:23:14;3361:12;:10;:12::i;:::-;3351:9;:23::i;:::-;266:1912:15;;3270:23:14;3280:12;:10;:12::i;:::-;3270:9;:23::i;:::-;266:1912:15;2732:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:129;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3784:85:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4929:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6038:214;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3937:87:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3605:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;408:80:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1301:295;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;329:72;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;842:289;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1139:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3021:145:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;690:144:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4289:622:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3446:78;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;656:96:7;709:7;735:10;728:17;;656:96;:::o;4289:622:14:-;2261:21:2;:19;:21::i;:::-;4368:17:14::1;4388:9;4368:29;;4408:44;4429:11;4442:9;4408:20;:44::i;:::-;4514:14;4531:26;4547:9;4531:15;:26::i;:::-;4514:43;;4608:25;4623:9;4608:10;;:14;;:25;;;;:::i;:::-;4595:10;:38;;;;4646:37;4663:11;4676:6;4646:16;:37::i;:::-;4729:11;4699:61;;4715:12;:10;:12::i;:::-;4699:61;;;4742:9;4753:6;4699:61;;;;;;;:::i;:::-;;;;;;;;4773:46;4796:11;4809:9;4773:22;:46::i;:::-;4832:15;:13;:15::i;:::-;4858:45;4880:11;4893:9;4858:21;:45::i;:::-;4357:554;;2303:20:2::0;:18;:20::i;:::-;4289:622:14;:::o;2732:202:0:-;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;4504:129::-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;3784:85:14:-;3829:7;3856:5;;3849:12;;3784:85;:::o;4929:145:0:-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;3937:87:14:-;3979:7;4006:10;;3999:17;;3937:87;:::o;3605:89::-;3644:15;3679:7;;;;;;;;;;;3672:14;;3605:89;:::o;408:80:15:-;455:33;408:80;:::o;1301:295::-;455:33;2631:16:0;2642:4;2631:10;:16::i;:::-;1412:6:15::1;1407:182;1428:9;:16;1424:1;:20;1407:182;;;1534:43;372:29;1564:9;1574:1;1564:12;;;;;;;;:::i;:::-;;;;;;;;1534:11;:43::i;:::-;1446:3;;;;;:::i;:::-;;;;1407:182;;;;1301:295:::0;;:::o;329:72::-;372:29;329:72;:::o;842:289::-;455:33;2631:16:0;2642:4;2631:10;:16::i;:::-;948:6:15::1;943:181;964:9;:16;960:1;:20;943:181;;;1070:42;372:29;1099:9;1109:1;1099:12;;;;;;;;:::i;:::-;;;;;;;;1070:10;:42::i;:::-;982:3;;;;;:::i;:::-;;;;943:181;;;;842:289:::0;;:::o;1139:150::-;455:33;2631:16:0;2642:4;2631:10;:16::i;:::-;1241:40:15::1;372:29;1271:9;1241:11;:40::i;:::-;1139:150:::0;;:::o;3021:145:0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2153:49::-;2198:4;2153:49;;;:::o;5354:147::-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;690:144:15:-;455:33;2631:16:0;2642:4;2631:10;:16::i;:::-;787:39:15::1;372:29;816:9;787:10;:39::i;:::-;690:144:::0;;:::o;3446:78:14:-;3484:6;3510;;;;;;;;;;;3503:13;;3446:78;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1881:294:15:-;1995:39;372:29;2021:12;1995:7;:39::i;:::-;1987:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;2115:52;2142:12;2156:10;2115:26;:52::i;:::-;1881:294;;:::o;7856:130:14:-;7931:7;7958:20;7972:5;;7958:9;:13;;:20;;;;:::i;:::-;7951:27;;7856:130;;;:::o;2755:96:12:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7023:144:14:-;7119:40;7134:11;7147;7119:14;:40::i;:::-;7023:144;;:::o;7445:155::-;;;:::o;8078:88::-;8131:7;;;;;;;;;;;:16;;:27;8148:9;8131:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8078:88::o;6155:159::-;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;829:155:9:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;5464:388:14:-;5598:1;5575:25;;:11;:25;;;5567:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5679:1;5666:9;:14;5658:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5464:388;;:::o;3465:96:12:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;6602:147:14:-;6696:45;6716:11;6729;6696:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6602:147;;:::o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;941:175:5:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;2407:149:8:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;5196:642:5:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;5641:27;;;;:69;;;;;:::i;:::-;5615:95;;5749:1;5728:10;:17;:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5728:56;5720:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5266:572;5196:642;;:::o;4108:223:6:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:75:16;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:77::-;2598:7;2627:5;2616:16;;2561:77;;;:::o;2644:118::-;2731:24;2749:5;2731:24;:::i;:::-;2726:3;2719:37;2644:118;;:::o;2768:222::-;2861:4;2899:2;2888:9;2884:18;2876:26;;2912:71;2980:1;2969:9;2965:17;2956:6;2912:71;:::i;:::-;2768:222;;;;:::o;2996:126::-;3033:7;3073:42;3066:5;3062:54;3051:65;;2996:126;;;:::o;3128:96::-;3165:7;3194:24;3212:5;3194:24;:::i;:::-;3183:35;;3128:96;;;:::o;3230:122::-;3303:24;3321:5;3303:24;:::i;:::-;3296:5;3293:35;3283:63;;3342:1;3339;3332:12;3283:63;3230:122;:::o;3358:139::-;3404:5;3442:6;3429:20;3420:29;;3458:33;3485:5;3458:33;:::i;:::-;3358:139;;;;:::o;3503:474::-;3571:6;3579;3628:2;3616:9;3607:7;3603:23;3599:32;3596:119;;;3634:79;;:::i;:::-;3596:119;3754:1;3779:53;3824:7;3815:6;3804:9;3800:22;3779:53;:::i;:::-;3769:63;;3725:117;3881:2;3907:53;3952:7;3943:6;3932:9;3928:22;3907:53;:::i;:::-;3897:63;;3852:118;3503:474;;;;;:::o;3983:104::-;4028:7;4057:24;4075:5;4057:24;:::i;:::-;4046:35;;3983:104;;;:::o;4093:142::-;4196:32;4222:5;4196:32;:::i;:::-;4191:3;4184:45;4093:142;;:::o;4241:254::-;4350:4;4388:2;4377:9;4373:18;4365:26;;4401:87;4485:1;4474:9;4470:17;4461:6;4401:87;:::i;:::-;4241:254;;;;:::o;4501:117::-;4610:1;4607;4600:12;4624:102;4665:6;4716:2;4712:7;4707:2;4700:5;4696:14;4692:28;4682:38;;4624:102;;;:::o;4732:180::-;4780:77;4777:1;4770:88;4877:4;4874:1;4867:15;4901:4;4898:1;4891:15;4918:281;5001:27;5023:4;5001:27;:::i;:::-;4993:6;4989:40;5131:6;5119:10;5116:22;5095:18;5083:10;5080:34;5077:62;5074:88;;;5142:18;;:::i;:::-;5074:88;5182:10;5178:2;5171:22;4961:238;4918:281;;:::o;5205:129::-;5239:6;5266:20;;:::i;:::-;5256:30;;5295:33;5323:4;5315:6;5295:33;:::i;:::-;5205:129;;;:::o;5340:311::-;5417:4;5507:18;5499:6;5496:30;5493:56;;;5529:18;;:::i;:::-;5493:56;5579:4;5571:6;5567:17;5559:25;;5639:4;5633;5629:15;5621:23;;5340:311;;;:::o;5657:117::-;5766:1;5763;5756:12;5797:710;5893:5;5918:81;5934:64;5991:6;5934:64;:::i;:::-;5918:81;:::i;:::-;5909:90;;6019:5;6048:6;6041:5;6034:21;6082:4;6075:5;6071:16;6064:23;;6135:4;6127:6;6123:17;6115:6;6111:30;6164:3;6156:6;6153:15;6150:122;;;6183:79;;:::i;:::-;6150:122;6298:6;6281:220;6315:6;6310:3;6307:15;6281:220;;;6390:3;6419:37;6452:3;6440:10;6419:37;:::i;:::-;6414:3;6407:50;6486:4;6481:3;6477:14;6470:21;;6357:144;6341:4;6336:3;6332:14;6325:21;;6281:220;;;6285:21;5899:608;;5797:710;;;;;:::o;6530:370::-;6601:5;6650:3;6643:4;6635:6;6631:17;6627:27;6617:122;;6658:79;;:::i;:::-;6617:122;6775:6;6762:20;6800:94;6890:3;6882:6;6875:4;6867:6;6863:17;6800:94;:::i;:::-;6791:103;;6607:293;6530:370;;;;:::o;6906:539::-;6990:6;7039:2;7027:9;7018:7;7014:23;7010:32;7007:119;;;7045:79;;:::i;:::-;7007:119;7193:1;7182:9;7178:17;7165:31;7223:18;7215:6;7212:30;7209:117;;;7245:79;;:::i;:::-;7209:117;7350:78;7420:7;7411:6;7400:9;7396:22;7350:78;:::i;:::-;7340:88;;7136:302;6906:539;;;;:::o;7451:329::-;7510:6;7559:2;7547:9;7538:7;7534:23;7530:32;7527:119;;;7565:79;;:::i;:::-;7527:119;7685:1;7710:53;7755:7;7746:6;7735:9;7731:22;7710:53;:::i;:::-;7700:63;;7656:117;7451:329;;;;:::o;7786:60::-;7814:3;7835:5;7828:12;;7786:60;;;:::o;7852:142::-;7902:9;7935:53;7953:34;7962:24;7980:5;7962:24;:::i;:::-;7953:34;:::i;:::-;7935:53;:::i;:::-;7922:66;;7852:142;;;:::o;8000:126::-;8050:9;8083:37;8114:5;8083:37;:::i;:::-;8070:50;;8000:126;;;:::o;8132:140::-;8196:9;8229:37;8260:5;8229:37;:::i;:::-;8216:50;;8132:140;;;:::o;8278:159::-;8379:51;8424:5;8379:51;:::i;:::-;8374:3;8367:64;8278:159;;:::o;8443:250::-;8550:4;8588:2;8577:9;8573:18;8565:26;;8601:85;8683:1;8672:9;8668:17;8659:6;8601:85;:::i;:::-;8443:250;;;;:::o;8699:332::-;8820:4;8858:2;8847:9;8843:18;8835:26;;8871:71;8939:1;8928:9;8924:17;8915:6;8871:71;:::i;:::-;8952:72;9020:2;9009:9;9005:18;8996:6;8952:72;:::i;:::-;8699:332;;;;;:::o;9037:169::-;9121:11;9155:6;9150:3;9143:19;9195:4;9190:3;9186:14;9171:29;;9037:169;;;;:::o;9212:234::-;9352:34;9348:1;9340:6;9336:14;9329:58;9421:17;9416:2;9408:6;9404:15;9397:42;9212:234;:::o;9452:366::-;9594:3;9615:67;9679:2;9674:3;9615:67;:::i;:::-;9608:74;;9691:93;9780:3;9691:93;:::i;:::-;9809:2;9804:3;9800:12;9793:19;;9452:366;;;:::o;9824:419::-;9990:4;10028:2;10017:9;10013:18;10005:26;;10077:9;10071:4;10067:20;10063:1;10052:9;10048:17;10041:47;10105:131;10231:4;10105:131;:::i;:::-;10097:139;;9824:419;;;:::o;10249:180::-;10297:77;10294:1;10287:88;10394:4;10391:1;10384:15;10418:4;10415:1;10408:15;10435:180;10483:77;10480:1;10473:88;10580:4;10577:1;10570:15;10604:4;10601:1;10594:15;10621:233;10660:3;10683:24;10701:5;10683:24;:::i;:::-;10674:33;;10729:66;10722:5;10719:77;10716:103;;10799:18;;:::i;:::-;10716:103;10846:1;10839:5;10835:13;10828:20;;10621:233;;;:::o;10860:181::-;11000:33;10996:1;10988:6;10984:14;10977:57;10860:181;:::o;11047:366::-;11189:3;11210:67;11274:2;11269:3;11210:67;:::i;:::-;11203:74;;11286:93;11375:3;11286:93;:::i;:::-;11404:2;11399:3;11395:12;11388:19;;11047:366;;;:::o;11419:419::-;11585:4;11623:2;11612:9;11608:18;11600:26;;11672:9;11666:4;11662:20;11658:1;11647:9;11643:17;11636:47;11700:131;11826:4;11700:131;:::i;:::-;11692:139;;11419:419;;;:::o;11844:289::-;11984:34;11980:1;11972:6;11968:14;11961:58;12053:34;12048:2;12040:6;12036:15;12029:59;12122:3;12117:2;12109:6;12105:15;12098:28;11844:289;:::o;12139:366::-;12281:3;12302:67;12366:2;12361:3;12302:67;:::i;:::-;12295:74;;12378:93;12467:3;12378:93;:::i;:::-;12496:2;12491:3;12487:12;12480:19;;12139:366;;;:::o;12511:419::-;12677:4;12715:2;12704:9;12700:18;12692:26;;12764:9;12758:4;12754:20;12750:1;12739:9;12735:17;12728:47;12792:131;12918:4;12792:131;:::i;:::-;12784:139;;12511:419;;;:::o;12936:191::-;12976:3;12995:20;13013:1;12995:20;:::i;:::-;12990:25;;13029:20;13047:1;13029:20;:::i;:::-;13024:25;;13072:1;13069;13065:9;13058:16;;13093:3;13090:1;13087:10;13084:36;;;13100:18;;:::i;:::-;13084:36;12936:191;;;;:::o;13133:229::-;13273:34;13269:1;13261:6;13257:14;13250:58;13342:12;13337:2;13329:6;13325:15;13318:37;13133:229;:::o;13368:366::-;13510:3;13531:67;13595:2;13590:3;13531:67;:::i;:::-;13524:74;;13607:93;13696:3;13607:93;:::i;:::-;13725:2;13720:3;13716:12;13709:19;;13368:366;;;:::o;13740:419::-;13906:4;13944:2;13933:9;13929:18;13921:26;;13993:9;13987:4;13983:20;13979:1;13968:9;13964:17;13957:47;14021:131;14147:4;14021:131;:::i;:::-;14013:139;;13740:419;;;:::o;14165:175::-;14305:27;14301:1;14293:6;14289:14;14282:51;14165:175;:::o;14346:366::-;14488:3;14509:67;14573:2;14568:3;14509:67;:::i;:::-;14502:74;;14585:93;14674:3;14585:93;:::i;:::-;14703:2;14698:3;14694:12;14687:19;;14346:366;;;:::o;14718:419::-;14884:4;14922:2;14911:9;14907:18;14899:26;;14971:9;14965:4;14961:20;14957:1;14946:9;14942:17;14935:47;14999:131;15125:4;14999:131;:::i;:::-;14991:139;;14718:419;;;:::o;15143:410::-;15183:7;15206:20;15224:1;15206:20;:::i;:::-;15201:25;;15240:20;15258:1;15240:20;:::i;:::-;15235:25;;15295:1;15292;15288:9;15317:30;15335:11;15317:30;:::i;:::-;15306:41;;15496:1;15487:7;15483:15;15480:1;15477:22;15457:1;15450:9;15430:83;15407:139;;15526:18;;:::i;:::-;15407:139;15191:362;15143:410;;;;:::o;15559:148::-;15661:11;15698:3;15683:18;;15559:148;;;;:::o;15713:173::-;15853:25;15849:1;15841:6;15837:14;15830:49;15713:173;:::o;15892:402::-;16052:3;16073:85;16155:2;16150:3;16073:85;:::i;:::-;16066:92;;16167:93;16256:3;16167:93;:::i;:::-;16285:2;16280:3;16276:12;16269:19;;15892:402;;;:::o;16300:99::-;16352:6;16386:5;16380:12;16370:22;;16300:99;;;:::o;16405:246::-;16486:1;16496:113;16510:6;16507:1;16504:13;16496:113;;;16595:1;16590:3;16586:11;16580:18;16576:1;16571:3;16567:11;16560:39;16532:2;16529:1;16525:10;16520:15;;16496:113;;;16643:1;16634:6;16629:3;16625:16;16618:27;16467:184;16405:246;;;:::o;16657:390::-;16763:3;16791:39;16824:5;16791:39;:::i;:::-;16846:89;16928:6;16923:3;16846:89;:::i;:::-;16839:96;;16944:65;17002:6;16997:3;16990:4;16983:5;16979:16;16944:65;:::i;:::-;17034:6;17029:3;17025:16;17018:23;;16767:280;16657:390;;;;:::o;17053:167::-;17193:19;17189:1;17181:6;17177:14;17170:43;17053:167;:::o;17226:402::-;17386:3;17407:85;17489:2;17484:3;17407:85;:::i;:::-;17400:92;;17501:93;17590:3;17501:93;:::i;:::-;17619:2;17614:3;17610:12;17603:19;;17226:402;;;:::o;17634:967::-;18016:3;18038:148;18182:3;18038:148;:::i;:::-;18031:155;;18203:95;18294:3;18285:6;18203:95;:::i;:::-;18196:102;;18315:148;18459:3;18315:148;:::i;:::-;18308:155;;18480:95;18571:3;18562:6;18480:95;:::i;:::-;18473:102;;18592:3;18585:10;;17634:967;;;;;:::o;18607:377::-;18695:3;18723:39;18756:5;18723:39;:::i;:::-;18778:71;18842:6;18837:3;18778:71;:::i;:::-;18771:78;;18858:65;18916:6;18911:3;18904:4;18897:5;18893:16;18858:65;:::i;:::-;18948:29;18970:6;18948:29;:::i;:::-;18943:3;18939:39;18932:46;;18699:285;18607:377;;;;:::o;18990:313::-;19103:4;19141:2;19130:9;19126:18;19118:26;;19190:9;19184:4;19180:20;19176:1;19165:9;19161:17;19154:47;19218:78;19291:4;19282:6;19218:78;:::i;:::-;19210:86;;18990:313;;;;:::o;19309:118::-;19396:24;19414:5;19396:24;:::i;:::-;19391:3;19384:37;19309:118;;:::o;19433:332::-;19554:4;19592:2;19581:9;19577:18;19569:26;;19605:71;19673:1;19662:9;19658:17;19649:6;19605:71;:::i;:::-;19686:72;19754:2;19743:9;19739:18;19730:6;19686:72;:::i;:::-;19433:332;;;;;:::o;19771:171::-;19810:3;19833:24;19851:5;19833:24;:::i;:::-;19824:33;;19879:4;19872:5;19869:15;19866:41;;19887:18;;:::i;:::-;19866:41;19934:1;19927:5;19923:13;19916:20;;19771:171;;;:::o;19948:182::-;20088:34;20084:1;20076:6;20072:14;20065:58;19948:182;:::o;20136:366::-;20278:3;20299:67;20363:2;20358:3;20299:67;:::i;:::-;20292:74;;20375:93;20464:3;20375:93;:::i;:::-;20493:2;20488:3;20484:12;20477:19;;20136:366;;;:::o;20508:419::-;20674:4;20712:2;20701:9;20697:18;20689:26;;20761:9;20755:4;20751:20;20747:1;20736:9;20732:17;20725:47;20789:131;20915:4;20789:131;:::i;:::-;20781:139;;20508:419;;;:::o;20933:116::-;21003:21;21018:5;21003:21;:::i;:::-;20996:5;20993:32;20983:60;;21039:1;21036;21029:12;20983:60;20933:116;:::o;21055:137::-;21109:5;21140:6;21134:13;21125:22;;21156:30;21180:5;21156:30;:::i;:::-;21055:137;;;;:::o;21198:345::-;21265:6;21314:2;21302:9;21293:7;21289:23;21285:32;21282:119;;;21320:79;;:::i;:::-;21282:119;21440:1;21465:61;21518:7;21509:6;21498:9;21494:22;21465:61;:::i;:::-;21455:71;;21411:125;21198:345;;;;:::o;21549:229::-;21689:34;21685:1;21677:6;21673:14;21666:58;21758:12;21753:2;21745:6;21741:15;21734:37;21549:229;:::o;21784:366::-;21926:3;21947:67;22011:2;22006:3;21947:67;:::i;:::-;21940:74;;22023:93;22112:3;22023:93;:::i;:::-;22141:2;22136:3;22132:12;22125:19;;21784:366;;;:::o;22156:419::-;22322:4;22360:2;22349:9;22345:18;22337:26;;22409:9;22403:4;22399:20;22395:1;22384:9;22380:17;22373:47;22437:131;22563:4;22437:131;:::i;:::-;22429:139;;22156:419;;;:::o;22581:225::-;22721:34;22717:1;22709:6;22705:14;22698:58;22790:8;22785:2;22777:6;22773:15;22766:33;22581:225;:::o;22812:366::-;22954:3;22975:67;23039:2;23034:3;22975:67;:::i;:::-;22968:74;;23051:93;23140:3;23051:93;:::i;:::-;23169:2;23164:3;23160:12;23153:19;;22812:366;;;:::o;23184:419::-;23350:4;23388:2;23377:9;23373:18;23365:26;;23437:9;23431:4;23427:20;23423:1;23412:9;23408:17;23401:47;23465:131;23591:4;23465:131;:::i;:::-;23457:139;;23184:419;;;:::o;23609:98::-;23660:6;23694:5;23688:12;23678:22;;23609:98;;;:::o;23713:147::-;23814:11;23851:3;23836:18;;23713:147;;;;:::o;23866:386::-;23970:3;23998:38;24030:5;23998:38;:::i;:::-;24052:88;24133:6;24128:3;24052:88;:::i;:::-;24045:95;;24149:65;24207:6;24202:3;24195:4;24188:5;24184:16;24149:65;:::i;:::-;24239:6;24234:3;24230:16;24223:23;;23974:278;23866:386;;;;:::o;24258:271::-;24388:3;24410:93;24499:3;24490:6;24410:93;:::i;:::-;24403:100;;24520:3;24513:10;;24258:271;;;;:::o;24535:179::-;24675:31;24671:1;24663:6;24659:14;24652:55;24535:179;:::o;24720:366::-;24862:3;24883:67;24947:2;24942:3;24883:67;:::i;:::-;24876:74;;24959:93;25048:3;24959:93;:::i;:::-;25077:2;25072:3;25068:12;25061:19;;24720:366;;;:::o;25092:419::-;25258:4;25296:2;25285:9;25281:18;25273:26;;25345:9;25339:4;25335:20;25331:1;25320:9;25316:17;25309:47;25373:131;25499:4;25373:131;:::i;:::-;25365:139;;25092:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1706600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"DEFAULT_ADMIN_ROLE()": "352",
								"WHITELISTED_ROLE()": "348",
								"WHITELIST_ADMIN_ROLE()": "414",
								"addToWhitelist(address)": "infinite",
								"addToWhitelist(address[])": "infinite",
								"buyTokens(address)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3211",
								"rate()": "2500",
								"removeFromWhitelist(address)": "infinite",
								"removeFromWhitelist(address[])": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"token()": "infinite",
								"wallet()": "2582",
								"weiRaised()": "2477"
							},
							"internal": {
								"_preValidatePurchase(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 266,
									"end": 2178,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 678,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 497,
									"end": 678,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 497,
									"end": 678,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 497,
									"end": 678,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 497,
									"end": 678,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 497,
									"end": 678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 497,
									"end": 678,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 587,
									"end": 593,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 595,
									"end": 603,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 605,
									"end": 612,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2644,
									"end": 2645,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2635,
									"end": 2641,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2635,
									"end": 2645,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 14,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 2627,
									"end": 2670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 2627,
									"end": 2670,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2689,
									"end": 2697,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2689,
									"end": 2711,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 14,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 2681,
									"end": 2753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 2681,
									"end": 2753,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2800,
									"end": 2801,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2780,
									"end": 2787,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2772,
									"end": 2802,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 14,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 2764,
									"end": 2843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 2764,
									"end": 2843,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2864,
									"end": 2870,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2856,
									"end": 2861,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2856,
									"end": 2870,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 2881,
									"end": 2888,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2881,
									"end": 2899,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2919,
									"end": 2926,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2910,
									"end": 2916,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 14,
									"value": "100"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "EXP",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2910,
									"end": 2926,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2545,
									"end": 2934,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 630,
									"end": 670,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 2198,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 641,
									"end": 659,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 641,
									"end": 659,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 661,
									"end": 669,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 630,
									"end": 640,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 630,
									"end": 640,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 630,
									"end": 640,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 630,
									"end": 670,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 630,
									"end": 670,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 630,
									"end": 670,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 630,
									"end": 670,
									"modifierDepth": 1,
									"name": "tag",
									"source": 15,
									"value": "19"
								},
								{
									"begin": 630,
									"end": 670,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 497,
									"end": 678,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 7678,
									"end": 7682,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7684,
									"end": 7691,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7740,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 7714,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7715,
									"end": 7719,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7728,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7728,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7729,
									"end": 7736,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7781,
									"end": 7788,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7775,
									"end": 7779,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3107,
									"end": 3111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3136,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3137,
									"end": 3141,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3150,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3158,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3123,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3123,
									"end": 3159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 826,
									"end": 930,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 871,
									"end": 878,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 900,
									"end": 924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 900,
									"end": 924,
									"name": "tag",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 889,
									"end": 924,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 889,
									"end": 924,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 826,
									"end": 930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 1043,
									"end": 1048,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 1017,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "tag",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1010,
									"end": 1015,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 1050,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1062,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1054,
									"end": 1066,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 936,
									"end": 1074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1145,
									"end": 1150,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1170,
									"end": 1183,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 1192,
									"end": 1233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "tag",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1080,
									"end": 1239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1282,
									"end": 1289,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 1329,
									"end": 1334,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 1311,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "tag",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1398,
									"end": 1405,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 1445,
									"end": 1450,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "tag",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1347,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "74"
								},
								{
									"begin": 1582,
									"end": 1587,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 1550,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "tag",
									"source": 16,
									"value": "74"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1543,
									"end": 1548,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1540,
									"end": 1589,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "tag",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1463,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1690,
									"end": 1695,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1727,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1715,
									"end": 1728,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 1737,
									"end": 1784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "tag",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1619,
									"end": 1790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1906,
									"end": 1912,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1971,
									"end": 1973,
									"name": "PUSH",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1959,
									"end": 1968,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1950,
									"end": 1957,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 1969,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1942,
									"end": 1974,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 1977,
									"end": 2056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "tag",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 2178,
									"end": 2185,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2158,
									"end": 2167,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2154,
									"end": 2176,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 2122,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2068,
									"end": 2196,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2235,
									"end": 2237,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 2325,
									"end": 2332,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2322,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2305,
									"end": 2314,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2301,
									"end": 2323,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 2261,
									"end": 2333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "tag",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2206,
									"end": 2343,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2382,
									"end": 2384,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 2478,
									"end": 2485,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2458,
									"end": 2467,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 2454,
									"end": 2476,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 2408,
									"end": 2486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "tag",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2353,
									"end": 2496,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1796,
									"end": 2503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "tag",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2593,
									"end": 2604,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2633,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2622,
									"end": 2625,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2615,
									"end": 2634,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2667,
									"end": 2671,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2662,
									"end": 2665,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2509,
									"end": 2678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "tag",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2824,
									"end": 2846,
									"name": "PUSH",
									"source": 16,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 2820,
									"end": 2821,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2812,
									"end": 2818,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2808,
									"end": 2822,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2801,
									"end": 2847,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2684,
									"end": 2854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "tag",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3002,
									"end": 3005,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3087,
									"end": 3089,
									"name": "PUSH",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 3082,
									"end": 3085,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 3023,
									"end": 3090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "tag",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 3188,
									"end": 3191,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "45"
								},
								{
									"begin": 3099,
									"end": 3192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "tag",
									"source": 16,
									"value": "88"
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3212,
									"end": 3215,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3208,
									"end": 3220,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2860,
									"end": 3226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3398,
									"end": 3402,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3438,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3425,
									"end": 3434,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3421,
									"end": 3439,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3475,
									"end": 3495,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 3471,
									"end": 3472,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3460,
									"end": 3469,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3473,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3449,
									"end": 3496,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 3639,
									"end": 3643,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "46"
								},
								{
									"begin": 3513,
									"end": 3644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "tag",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3232,
									"end": 3651,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3797,
									"end": 3831,
									"name": "PUSH",
									"source": 16,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 3793,
									"end": 3794,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3791,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3781,
									"end": 3795,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3774,
									"end": 3832,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3866,
									"end": 3873,
									"name": "PUSH",
									"source": 16,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3861,
									"end": 3863,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3853,
									"end": 3859,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3849,
									"end": 3864,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3842,
									"end": 3874,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3657,
									"end": 3881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "tag",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4029,
									"end": 4032,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "93"
								},
								{
									"begin": 4114,
									"end": 4116,
									"name": "PUSH",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 4109,
									"end": 4112,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 4050,
									"end": 4117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "tag",
									"source": 16,
									"value": "93"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 4215,
									"end": 4218,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 4126,
									"end": 4219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "tag",
									"source": 16,
									"value": "94"
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4244,
									"end": 4246,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 4239,
									"end": 4242,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4235,
									"end": 4247,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3887,
									"end": 4253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4425,
									"end": 4429,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4463,
									"end": 4465,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4452,
									"end": 4461,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4521,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4506,
									"end": 4510,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4502,
									"end": 4522,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 4498,
									"end": 4499,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4487,
									"end": 4496,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4483,
									"end": 4500,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4476,
									"end": 4523,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "96"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 4540,
									"end": 4671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "tag",
									"source": 16,
									"value": "96"
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4259,
									"end": 4678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "tag",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4824,
									"end": 4858,
									"name": "PUSH",
									"source": 16,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4812,
									"end": 4818,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4808,
									"end": 4822,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4801,
									"end": 4859,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4893,
									"end": 4899,
									"name": "PUSH",
									"source": 16,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4888,
									"end": 4890,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4880,
									"end": 4886,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4876,
									"end": 4891,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4869,
									"end": 4900,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4684,
									"end": 4907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "tag",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5055,
									"end": 5058,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "99"
								},
								{
									"begin": 5140,
									"end": 5142,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 5135,
									"end": 5138,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "44"
								},
								{
									"begin": 5076,
									"end": 5143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "tag",
									"source": 16,
									"value": "99"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 5241,
									"end": 5244,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 5152,
									"end": 5245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "tag",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5270,
									"end": 5272,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 5265,
									"end": 5268,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5261,
									"end": 5273,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4913,
									"end": 5279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "tag",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5451,
									"end": 5455,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5489,
									"end": 5491,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 5478,
									"end": 5487,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5474,
									"end": 5492,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5538,
									"end": 5547,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5532,
									"end": 5536,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5528,
									"end": 5548,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 5524,
									"end": 5525,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5513,
									"end": 5522,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5509,
									"end": 5526,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5502,
									"end": 5549,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 5692,
									"end": 5696,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "50"
								},
								{
									"begin": 5566,
									"end": 5697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "tag",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5285,
									"end": 5704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "tag",
									"source": 15,
									"value": "21"
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 2178,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dd6984b3055296cee63dd0000b353c663d64c1e6bb869555be435a9371d5634d64736f6c63430008150033",
									".code": [
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "7A3226EC"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "A217FDDF"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "A217FDDF"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "D547741F"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "E43252D7"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "EC8AC4D8"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "FC0C546A"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "7A3226EC"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "7F649783"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "8AB1D681"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "91D14854"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "36568ABE"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "36568ABE"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "4042B66F"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "521EB273"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "54202C4E"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "548DB174"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "248A9CA3"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "2C4E722E"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH",
											"source": 15,
											"value": "2F2FF15D"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 3361,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 3361,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 3361,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 3351,
											"end": 3374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 3351,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 3280,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 3270,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 266,
											"end": 2178,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 408,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 408,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 408,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 1301,
											"end": 1596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 1301,
											"end": 1596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "tag",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 329,
											"end": 401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "tag",
											"source": 15,
											"value": "81"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 329,
											"end": 401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "tag",
											"source": 15,
											"value": "83"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 842,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 842,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 1139,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 1139,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 834,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 690,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 690,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "111"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4397,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4368,
											"end": 4397,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 4429,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 4451,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4408,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 4408,
											"end": 4452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 4408,
											"end": 4452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 4547,
											"end": 4556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4531,
											"end": 4546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 4531,
											"end": 4557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 4531,
											"end": 4557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4557,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 4623,
											"end": 4632,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4608,
											"end": 4618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 4608,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 4608,
											"end": 4633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4595,
											"end": 4605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4595,
											"end": 4633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 4663,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4676,
											"end": 4682,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 4646,
											"end": 4683,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 4646,
											"end": 4683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4729,
											"end": 4740,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 4715,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 4715,
											"end": 4727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 4715,
											"end": 4727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 4742,
											"end": 4751,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4753,
											"end": 4759,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 4699,
											"end": 4760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4760,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 4796,
											"end": 4807,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4809,
											"end": 4818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 4773,
											"end": 4819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 4773,
											"end": 4819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 4832,
											"end": 4845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 4832,
											"end": 4847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 4832,
											"end": 4847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 4880,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4893,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 4858,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 4858,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4289,
											"end": 4911,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2915,
											"end": 2926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2891,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5012,
											"end": 5030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5053,
											"end": 5057,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5059,
											"end": 5066,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5042,
											"end": 5067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6144,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6144,
											"end": 6156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 6125,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6237,
											"end": 6244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6219,
											"end": 6245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3979,
											"end": 3986,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4006,
											"end": 4016,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3937,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3672,
											"end": 3686,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 408,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 455,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2"
										},
										{
											"begin": 408,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 408,
											"end": 488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "tag",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 455,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1428,
											"end": 1437,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1428,
											"end": 1444,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1424,
											"end": 1425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1424,
											"end": 1444,
											"modifierDepth": 1,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1534,
											"end": 1577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 372,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49"
										},
										{
											"begin": 1564,
											"end": 1573,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1574,
											"end": 1575,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1564,
											"end": 1576,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "171"
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "170"
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1564,
											"end": 1576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1534,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 1534,
											"end": 1577,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1534,
											"end": 1577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "169"
										},
										{
											"begin": 1534,
											"end": 1577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 1446,
											"end": 1449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "173"
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1446,
											"end": 1449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "166"
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "167"
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1407,
											"end": 1589,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 372,
											"end": 401,
											"name": "PUSH",
											"source": 15,
											"value": "8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49"
										},
										{
											"begin": 329,
											"end": 401,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 329,
											"end": 401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 455,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 964,
											"end": 973,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 964,
											"end": 980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 960,
											"end": 961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 960,
											"end": 980,
											"modifierDepth": 1,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 372,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49"
										},
										{
											"begin": 1099,
											"end": 1108,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1109,
											"end": 1110,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 1099,
											"end": 1111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "183"
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1099,
											"end": 1111,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 1070,
											"end": 1112,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1070,
											"end": 1112,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "181"
										},
										{
											"begin": 1070,
											"end": 1112,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "174"
										},
										{
											"begin": 982,
											"end": 985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "184"
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 982,
											"end": 985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "179"
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 943,
											"end": 1124,
											"modifierDepth": 1,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 842,
											"end": 1131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "tag",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 455,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 372,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49"
										},
										{
											"begin": 1271,
											"end": 1280,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 1241,
											"end": 1281,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1241,
											"end": 1281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 1241,
											"end": 1281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1139,
											"end": 1289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5451,
											"end": 5455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5438,
											"end": 5456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5480,
											"end": 5484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5493,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5468,
											"end": 5494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 690,
											"end": 834,
											"name": "tag",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 690,
											"end": 834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 455,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "28F5A99355973CC89255B8C4AC88405F27C78DED7608B040EE77A8BDF44D15E2"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 372,
											"end": 401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49"
										},
										{
											"begin": 816,
											"end": 825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 787,
											"end": 797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "153"
										},
										{
											"begin": 787,
											"end": 826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 787,
											"end": 826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 787,
											"end": 826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 690,
											"end": 834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3516,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3503,
											"end": 3516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3446,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 2175,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 1881,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1995,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 372,
											"end": 401,
											"name": "PUSH",
											"source": 15,
											"value": "8429D542926E6695B59AC6FBDCD9B37E8B1AEB757AFAB06AB60B1BB5878C3B49"
										},
										{
											"begin": 2021,
											"end": 2033,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1995,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 1995,
											"end": 2034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1995,
											"end": 2034,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 1995,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 1987,
											"end": 2104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 1987,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2115,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 2142,
											"end": 2154,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2156,
											"end": 2166,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2115,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 2115,
											"end": 2167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2115,
											"end": 2167,
											"name": "tag",
											"source": 15,
											"value": "209"
										},
										{
											"begin": 2115,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1881,
											"end": 2175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1881,
											"end": 2175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1881,
											"end": 2175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7931,
											"end": 7938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7972,
											"end": 7977,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 7958,
											"end": 7971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "tag",
											"source": 14,
											"value": "212"
										},
										{
											"begin": 7958,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 7986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 7986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 7134,
											"end": 7145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7147,
											"end": 7158,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7119,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 7119,
											"end": 7159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "tag",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 7119,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7023,
											"end": 7167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7023,
											"end": 7167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7600,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "tag",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 8078,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8138,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8147,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "8FC"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "CALL",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8131,
											"end": 8158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8078,
											"end": 8166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3537,
											"end": 3541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3543,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3526,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 7670,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7790,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7781,
											"end": 7788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8088,
											"end": 8095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 8074,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8144,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8195,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8195,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8186,
											"end": 8193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "tag",
											"source": 14,
											"value": "210"
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5598,
											"end": 5599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5575,
											"end": 5586,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5575,
											"end": 5600,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 5567,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 5567,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5675,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5666,
											"end": 5680,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 5658,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 5658,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5464,
											"end": 5852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 6716,
											"end": 6727,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6729,
											"end": 6740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 6696,
											"end": 6715,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "tag",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 6696,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6602,
											"end": 6749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6602,
											"end": 6749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3932,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4115,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 4214,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 4022,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3970,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2497,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 8,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2104,
											"name": "PUSH",
											"source": 8,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 8,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 8
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 2162,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 5669,
											"end": 5673,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5649,
											"end": 5654,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 5641,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5738,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5750,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5775,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 5754,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 5754,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 5728,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 5720,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 5720,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5266,
											"end": 5838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2561,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 2749,
											"end": 2754,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 2731,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 2731,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2726,
											"end": 2729,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2719,
											"end": 2756,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2644,
											"end": 2762,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2644,
											"end": 2762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2861,
											"end": 2865,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2901,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2876,
											"end": 2902,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2978,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 2912,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "tag",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 2912,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2990,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2768,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3033,
											"end": 3040,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3115,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3071,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3062,
											"end": 3116,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3116,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3051,
											"end": 3116,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3122,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 3212,
											"end": 3217,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 3194,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "tag",
											"source": 16,
											"value": "442"
										},
										{
											"begin": 3194,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3183,
											"end": 3218,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3183,
											"end": 3218,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3128,
											"end": 3224,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3128,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 3321,
											"end": 3326,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 3303,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "tag",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3296,
											"end": 3301,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3293,
											"end": 3328,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 3283,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3230,
											"end": 3352,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3230,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3404,
											"end": 3409,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3448,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3429,
											"end": 3449,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 3485,
											"end": 3490,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 3458,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "tag",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 3458,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3497,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3358,
											"end": 3497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3571,
											"end": 3577,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3614,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3603,
											"end": 3626,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3599,
											"end": 3631,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 3634,
											"end": 3713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 3634,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 3596,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3754,
											"end": 3755,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 3824,
											"end": 3831,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3815,
											"end": 3821,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3804,
											"end": 3813,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3800,
											"end": 3822,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 3779,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 3779,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3769,
											"end": 3832,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3769,
											"end": 3832,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3725,
											"end": 3842,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3881,
											"end": 3883,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 3952,
											"end": 3959,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3932,
											"end": 3941,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3928,
											"end": 3950,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 3907,
											"end": 3960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 3907,
											"end": 3960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3897,
											"end": 3960,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3897,
											"end": 3960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 3970,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3977,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3503,
											"end": 3977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4028,
											"end": 4035,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 4075,
											"end": 4080,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4057,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 4057,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4057,
											"end": 4081,
											"name": "tag",
											"source": 16,
											"value": "454"
										},
										{
											"begin": 4057,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4046,
											"end": 4081,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4046,
											"end": 4081,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4087,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3983,
											"end": 4087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4093,
											"end": 4235,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 4093,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 4222,
											"end": 4227,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 4196,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 4196,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4191,
											"end": 4194,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4184,
											"end": 4229,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4093,
											"end": 4235,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4093,
											"end": 4235,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4093,
											"end": 4235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "tag",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4350,
											"end": 4354,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4390,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4386,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4391,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4401,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 4485,
											"end": 4486,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4474,
											"end": 4483,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4470,
											"end": 4487,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4461,
											"end": 4467,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4401,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 4401,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4401,
											"end": 4488,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 4401,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4241,
											"end": 4495,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4241,
											"end": 4495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4501,
											"end": 4618,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 4501,
											"end": 4618,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4608,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4600,
											"end": 4612,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4624,
											"end": 4726,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 4624,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4718,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 4707,
											"end": 4709,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4700,
											"end": 4705,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4696,
											"end": 4710,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4692,
											"end": 4720,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4682,
											"end": 4720,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4682,
											"end": 4720,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4624,
											"end": 4726,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4624,
											"end": 4726,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4624,
											"end": 4726,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4624,
											"end": 4726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4732,
											"end": 4912,
											"name": "tag",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 4732,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4780,
											"end": 4857,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4777,
											"end": 4778,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4858,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4877,
											"end": 4881,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 4874,
											"end": 4875,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4867,
											"end": 4882,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4901,
											"end": 4905,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 4898,
											"end": 4899,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4906,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4918,
											"end": 5199,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 4918,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5001,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5001,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 5001,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5001,
											"end": 5028,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 5001,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4993,
											"end": 4999,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4989,
											"end": 5029,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5131,
											"end": 5137,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5119,
											"end": 5129,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5095,
											"end": 5113,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5083,
											"end": 5093,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5080,
											"end": 5114,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5077,
											"end": 5139,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 5074,
											"end": 5162,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5074,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 5074,
											"end": 5162,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 5142,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "tag",
											"source": 16,
											"value": "465"
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5074,
											"end": 5162,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 5074,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5182,
											"end": 5192,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5171,
											"end": 5193,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4961,
											"end": 5199,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4918,
											"end": 5199,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4918,
											"end": 5199,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4918,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5205,
											"end": 5334,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 5205,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5239,
											"end": 5245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 5266,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 5266,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5266,
											"end": 5286,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 5266,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5256,
											"end": 5286,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5256,
											"end": 5286,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5295,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 5323,
											"end": 5327,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5315,
											"end": 5321,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5295,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 5295,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5295,
											"end": 5328,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 5295,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5205,
											"end": 5334,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5205,
											"end": 5334,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5205,
											"end": 5334,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5205,
											"end": 5334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5340,
											"end": 5651,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 5340,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5417,
											"end": 5421,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5525,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5496,
											"end": 5526,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5493,
											"end": 5549,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5493,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 5493,
											"end": 5549,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5529,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 5529,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 5529,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5529,
											"end": 5547,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 5529,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5493,
											"end": 5549,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 5493,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5579,
											"end": 5583,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5567,
											"end": 5584,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 5559,
											"end": 5584,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5559,
											"end": 5584,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5639,
											"end": 5643,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5629,
											"end": 5644,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5621,
											"end": 5644,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5621,
											"end": 5644,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5340,
											"end": 5651,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5340,
											"end": 5651,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5340,
											"end": 5651,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5340,
											"end": 5651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5657,
											"end": 5774,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 5657,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5766,
											"end": 5767,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5756,
											"end": 5768,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5797,
											"end": 6507,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 5797,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5893,
											"end": 5898,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 5934,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 5991,
											"end": 5997,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5934,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 5934,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5934,
											"end": 5998,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 5934,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5918,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 5918,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5918,
											"end": 5999,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 5918,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5909,
											"end": 5999,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5909,
											"end": 5999,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6019,
											"end": 6024,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6048,
											"end": 6054,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6041,
											"end": 6046,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6034,
											"end": 6055,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6080,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6087,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6064,
											"end": 6087,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6064,
											"end": 6087,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6135,
											"end": 6139,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6127,
											"end": 6133,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6123,
											"end": 6140,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6115,
											"end": 6121,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6111,
											"end": 6141,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6156,
											"end": 6162,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6153,
											"end": 6168,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6150,
											"end": 6272,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6150,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 6150,
											"end": 6272,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6183,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 6183,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 6183,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6183,
											"end": 6262,
											"name": "tag",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 6183,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6150,
											"end": 6272,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 6150,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6281,
											"end": 6501,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 6281,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6310,
											"end": 6313,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6281,
											"end": 6501,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6281,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 6281,
											"end": 6501,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6390,
											"end": 6393,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6419,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 6452,
											"end": 6455,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6440,
											"end": 6450,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6419,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 6419,
											"end": 6456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6419,
											"end": 6456,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 6419,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6414,
											"end": 6417,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6407,
											"end": 6457,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6486,
											"end": 6490,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6481,
											"end": 6484,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6477,
											"end": 6491,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6470,
											"end": 6491,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6470,
											"end": 6491,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6357,
											"end": 6501,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6336,
											"end": 6339,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6325,
											"end": 6346,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6325,
											"end": 6346,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6281,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 6281,
											"end": 6501,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6281,
											"end": 6501,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 6281,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6285,
											"end": 6306,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5899,
											"end": 6507,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5899,
											"end": 6507,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5797,
											"end": 6507,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5797,
											"end": 6507,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5797,
											"end": 6507,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5797,
											"end": 6507,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5797,
											"end": 6507,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5797,
											"end": 6507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6530,
											"end": 6900,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 6530,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6601,
											"end": 6606,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6650,
											"end": 6653,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6635,
											"end": 6641,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6631,
											"end": 6648,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6627,
											"end": 6654,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6617,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 6617,
											"end": 6739,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6658,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 6658,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 6658,
											"end": 6737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6658,
											"end": 6737,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 6658,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6617,
											"end": 6739,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 6617,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6775,
											"end": 6781,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6762,
											"end": 6782,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6800,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 6890,
											"end": 6893,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6882,
											"end": 6888,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6875,
											"end": 6879,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6867,
											"end": 6873,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6863,
											"end": 6880,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6800,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 6800,
											"end": 6894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6800,
											"end": 6894,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 6800,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6791,
											"end": 6894,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6791,
											"end": 6894,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6607,
											"end": 6900,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6530,
											"end": 6900,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6530,
											"end": 6900,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6530,
											"end": 6900,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6530,
											"end": 6900,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6530,
											"end": 6900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6906,
											"end": 7445,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 6906,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7041,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7027,
											"end": 7036,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7018,
											"end": 7025,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7014,
											"end": 7037,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7010,
											"end": 7042,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7007,
											"end": 7126,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7007,
											"end": 7126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 7007,
											"end": 7126,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7045,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 7045,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 7045,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7045,
											"end": 7124,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 7045,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7007,
											"end": 7126,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 7007,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7191,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7178,
											"end": 7195,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7165,
											"end": 7196,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7215,
											"end": 7221,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7212,
											"end": 7242,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7209,
											"end": 7326,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7209,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 7209,
											"end": 7326,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7245,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 7245,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 7245,
											"end": 7324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7245,
											"end": 7324,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 7245,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7209,
											"end": 7326,
											"name": "tag",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 7209,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7350,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 7420,
											"end": 7427,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7411,
											"end": 7417,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7400,
											"end": 7409,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7396,
											"end": 7418,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7350,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 7350,
											"end": 7428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7350,
											"end": 7428,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 7350,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7340,
											"end": 7428,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7340,
											"end": 7428,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7136,
											"end": 7438,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6906,
											"end": 7445,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6906,
											"end": 7445,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6906,
											"end": 7445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6906,
											"end": 7445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6906,
											"end": 7445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7451,
											"end": 7780,
											"name": "tag",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 7451,
											"end": 7780,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7510,
											"end": 7516,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7559,
											"end": 7561,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7547,
											"end": 7556,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7538,
											"end": 7545,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7534,
											"end": 7557,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7530,
											"end": 7562,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7527,
											"end": 7646,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7527,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 7527,
											"end": 7646,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7565,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 7565,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 7565,
											"end": 7644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7565,
											"end": 7644,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 7565,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7527,
											"end": 7646,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 7527,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7685,
											"end": 7686,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7710,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 7755,
											"end": 7762,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7752,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7735,
											"end": 7744,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7731,
											"end": 7753,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 7710,
											"end": 7763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7710,
											"end": 7763,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 7710,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7700,
											"end": 7763,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7700,
											"end": 7763,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7773,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7451,
											"end": 7780,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7451,
											"end": 7780,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7451,
											"end": 7780,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7451,
											"end": 7780,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7451,
											"end": 7780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7786,
											"end": 7846,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 7786,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7814,
											"end": 7817,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7840,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7828,
											"end": 7840,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7828,
											"end": 7840,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7786,
											"end": 7846,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7786,
											"end": 7846,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7786,
											"end": 7846,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7786,
											"end": 7846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7852,
											"end": 7994,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 7852,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7935,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 7962,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 7980,
											"end": 7985,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7962,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 7962,
											"end": 7986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7962,
											"end": 7986,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 7962,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 7953,
											"end": 7987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 7953,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7935,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 7935,
											"end": 7988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7935,
											"end": 7988,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 7935,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7922,
											"end": 7988,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7922,
											"end": 7988,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7852,
											"end": 7994,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7852,
											"end": 7994,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7852,
											"end": 7994,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7852,
											"end": 7994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8000,
											"end": 8126,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 8000,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8050,
											"end": 8059,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8083,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 8114,
											"end": 8119,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8083,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 8083,
											"end": 8120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8083,
											"end": 8120,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 8083,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8070,
											"end": 8120,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8070,
											"end": 8120,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8000,
											"end": 8126,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8000,
											"end": 8126,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8000,
											"end": 8126,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8000,
											"end": 8126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8132,
											"end": 8272,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 8132,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8196,
											"end": 8205,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 8260,
											"end": 8265,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 8229,
											"end": 8266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 8229,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8216,
											"end": 8266,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8216,
											"end": 8266,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8132,
											"end": 8272,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8132,
											"end": 8272,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8132,
											"end": 8272,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8132,
											"end": 8272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8278,
											"end": 8437,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 8278,
											"end": 8437,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8379,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 8424,
											"end": 8429,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8379,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 8379,
											"end": 8430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8379,
											"end": 8430,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 8379,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8374,
											"end": 8377,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8367,
											"end": 8431,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8278,
											"end": 8437,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8278,
											"end": 8437,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8278,
											"end": 8437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8443,
											"end": 8693,
											"name": "tag",
											"source": 16,
											"value": "116"
										},
										{
											"begin": 8443,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8550,
											"end": 8554,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8590,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8577,
											"end": 8586,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8573,
											"end": 8591,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8565,
											"end": 8591,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8565,
											"end": 8591,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8601,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8681,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8668,
											"end": 8685,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8659,
											"end": 8665,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8601,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 8601,
											"end": 8686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8601,
											"end": 8686,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 8601,
											"end": 8686,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8443,
											"end": 8693,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8443,
											"end": 8693,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8443,
											"end": 8693,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8443,
											"end": 8693,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8443,
											"end": 8693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8699,
											"end": 9031,
											"name": "tag",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 8699,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8820,
											"end": 8824,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8858,
											"end": 8860,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8843,
											"end": 8861,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8835,
											"end": 8861,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8835,
											"end": 8861,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8871,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 8939,
											"end": 8940,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8928,
											"end": 8937,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8924,
											"end": 8941,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8915,
											"end": 8921,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8871,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 8871,
											"end": 8942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8871,
											"end": 8942,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 8871,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 9020,
											"end": 9022,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9009,
											"end": 9018,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9005,
											"end": 9023,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8996,
											"end": 9002,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 8952,
											"end": 9024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9024,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 8952,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8699,
											"end": 9031,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 8699,
											"end": 9031,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8699,
											"end": 9031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8699,
											"end": 9031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8699,
											"end": 9031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8699,
											"end": 9031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9037,
											"end": 9206,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 9037,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9121,
											"end": 9132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9150,
											"end": 9153,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9143,
											"end": 9162,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9195,
											"end": 9199,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9190,
											"end": 9193,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9186,
											"end": 9200,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9171,
											"end": 9200,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9171,
											"end": 9200,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9037,
											"end": 9206,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9037,
											"end": 9206,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9037,
											"end": 9206,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9037,
											"end": 9206,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9037,
											"end": 9206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9212,
											"end": 9446,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 9212,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9352,
											"end": 9386,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 9348,
											"end": 9349,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9340,
											"end": 9346,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9336,
											"end": 9350,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9329,
											"end": 9387,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9421,
											"end": 9438,
											"name": "PUSH",
											"source": 16,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 9416,
											"end": 9418,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9408,
											"end": 9414,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9404,
											"end": 9419,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9397,
											"end": 9439,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9212,
											"end": 9446,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9212,
											"end": 9446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9452,
											"end": 9818,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 9452,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9594,
											"end": 9597,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 9679,
											"end": 9681,
											"name": "PUSH",
											"source": 16,
											"value": "2F"
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9615,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 9615,
											"end": 9682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9615,
											"end": 9682,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 9615,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9608,
											"end": 9682,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9608,
											"end": 9682,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9691,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 9780,
											"end": 9783,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9691,
											"end": 9784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 9691,
											"end": 9784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9691,
											"end": 9784,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 9691,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9809,
											"end": 9811,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9804,
											"end": 9807,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9800,
											"end": 9812,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9793,
											"end": 9812,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9793,
											"end": 9812,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9452,
											"end": 9818,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9452,
											"end": 9818,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9452,
											"end": 9818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9452,
											"end": 9818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9824,
											"end": 10243,
											"name": "tag",
											"source": 16,
											"value": "158"
										},
										{
											"begin": 9824,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9990,
											"end": 9994,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10030,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10017,
											"end": 10026,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10013,
											"end": 10031,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10005,
											"end": 10031,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10005,
											"end": 10031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10077,
											"end": 10086,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10071,
											"end": 10075,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10067,
											"end": 10087,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10063,
											"end": 10064,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10048,
											"end": 10065,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10041,
											"end": 10088,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10105,
											"end": 10236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 10231,
											"end": 10235,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10105,
											"end": 10236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 10105,
											"end": 10236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10105,
											"end": 10236,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 10105,
											"end": 10236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10097,
											"end": 10236,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10097,
											"end": 10236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9824,
											"end": 10243,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9824,
											"end": 10243,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9824,
											"end": 10243,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9824,
											"end": 10243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10249,
											"end": 10429,
											"name": "tag",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 10249,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10297,
											"end": 10374,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10294,
											"end": 10295,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10287,
											"end": 10375,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10394,
											"end": 10398,
											"name": "PUSH",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 10391,
											"end": 10392,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10384,
											"end": 10399,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10418,
											"end": 10422,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10415,
											"end": 10416,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10423,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10435,
											"end": 10615,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 10435,
											"end": 10615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10483,
											"end": 10560,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10480,
											"end": 10481,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10473,
											"end": 10561,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10580,
											"end": 10584,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 10577,
											"end": 10578,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 10570,
											"end": 10585,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10604,
											"end": 10608,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 10601,
											"end": 10602,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10594,
											"end": 10609,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10621,
											"end": 10854,
											"name": "tag",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 10621,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10660,
											"end": 10663,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 10701,
											"end": 10706,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10683,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 10683,
											"end": 10707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10683,
											"end": 10707,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 10683,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10674,
											"end": 10707,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10674,
											"end": 10707,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10729,
											"end": 10795,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10719,
											"end": 10796,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10716,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 10716,
											"end": 10819,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 10799,
											"end": 10817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 10799,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10716,
											"end": 10819,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 10716,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10846,
											"end": 10847,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 10839,
											"end": 10844,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10835,
											"end": 10848,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10828,
											"end": 10848,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10828,
											"end": 10848,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10621,
											"end": 10854,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10621,
											"end": 10854,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10621,
											"end": 10854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10621,
											"end": 10854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10860,
											"end": 11041,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 10860,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11000,
											"end": 11033,
											"name": "PUSH",
											"source": 16,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10996,
											"end": 10997,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10988,
											"end": 10994,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10984,
											"end": 10998,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10977,
											"end": 11034,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10860,
											"end": 11041,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10860,
											"end": 11041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11189,
											"end": 11192,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 11274,
											"end": 11276,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 11269,
											"end": 11272,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11210,
											"end": 11277,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 11210,
											"end": 11277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11210,
											"end": 11277,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 11210,
											"end": 11277,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11203,
											"end": 11277,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11203,
											"end": 11277,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11286,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 11375,
											"end": 11378,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11286,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 11286,
											"end": 11379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11286,
											"end": 11379,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 11286,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11404,
											"end": 11406,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11399,
											"end": 11402,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11395,
											"end": 11407,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11388,
											"end": 11407,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11388,
											"end": 11407,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11047,
											"end": 11413,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11047,
											"end": 11413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "tag",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11585,
											"end": 11589,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11623,
											"end": 11625,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11612,
											"end": 11621,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11608,
											"end": 11626,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11600,
											"end": 11626,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11600,
											"end": 11626,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11672,
											"end": 11681,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11666,
											"end": 11670,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11662,
											"end": 11682,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11658,
											"end": 11659,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11647,
											"end": 11656,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11643,
											"end": 11660,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11700,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 11826,
											"end": 11830,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11700,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 11700,
											"end": 11831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11700,
											"end": 11831,
											"name": "tag",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 11700,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11692,
											"end": 11831,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11692,
											"end": 11831,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11419,
											"end": 11838,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11419,
											"end": 11838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11844,
											"end": 12133,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 11844,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11984,
											"end": 12018,
											"name": "PUSH",
											"source": 16,
											"value": "57686974656C69737443726F776473616C653A2062656E656669636961727920"
										},
										{
											"begin": 11980,
											"end": 11981,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11972,
											"end": 11978,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11968,
											"end": 11982,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11961,
											"end": 12019,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12053,
											"end": 12087,
											"name": "PUSH",
											"source": 16,
											"value": "646F65736E27742068617665207468652057686974656C697374656420726F6C"
										},
										{
											"begin": 12048,
											"end": 12050,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12040,
											"end": 12046,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12036,
											"end": 12051,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12029,
											"end": 12088,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12122,
											"end": 12125,
											"name": "PUSH",
											"source": 16,
											"value": "6500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12117,
											"end": 12119,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12105,
											"end": 12120,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12098,
											"end": 12126,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11844,
											"end": 12133,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11844,
											"end": 12133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12139,
											"end": 12505,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 12139,
											"end": 12505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12281,
											"end": 12284,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12302,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 12366,
											"end": 12368,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 12361,
											"end": 12364,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12302,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 12302,
											"end": 12369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12302,
											"end": 12369,
											"name": "tag",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 12302,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12295,
											"end": 12369,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12295,
											"end": 12369,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12378,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 12467,
											"end": 12470,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12378,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 12378,
											"end": 12471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12378,
											"end": 12471,
											"name": "tag",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 12378,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12496,
											"end": 12498,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12491,
											"end": 12494,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12487,
											"end": 12499,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12480,
											"end": 12499,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12480,
											"end": 12499,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12139,
											"end": 12505,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12139,
											"end": 12505,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12139,
											"end": 12505,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12139,
											"end": 12505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12511,
											"end": 12930,
											"name": "tag",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 12511,
											"end": 12930,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12677,
											"end": 12681,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12715,
											"end": 12717,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12704,
											"end": 12713,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12700,
											"end": 12718,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12718,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12692,
											"end": 12718,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12764,
											"end": 12773,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12758,
											"end": 12762,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12754,
											"end": 12774,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12750,
											"end": 12751,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12739,
											"end": 12748,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12728,
											"end": 12775,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12792,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 12918,
											"end": 12922,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12792,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 12792,
											"end": 12923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12792,
											"end": 12923,
											"name": "tag",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 12792,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12784,
											"end": 12923,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12784,
											"end": 12923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12511,
											"end": 12930,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12511,
											"end": 12930,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12511,
											"end": 12930,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12511,
											"end": 12930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 13127,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 12936,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12976,
											"end": 12979,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12995,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 13013,
											"end": 13014,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12995,
											"end": 13015,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 12995,
											"end": 13015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12995,
											"end": 13015,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 12995,
											"end": 13015,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12990,
											"end": 13015,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12990,
											"end": 13015,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 13047,
											"end": 13048,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 13029,
											"end": 13049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 13029,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13024,
											"end": 13049,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13024,
											"end": 13049,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13072,
											"end": 13073,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13069,
											"end": 13070,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13065,
											"end": 13074,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13058,
											"end": 13074,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13058,
											"end": 13074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13093,
											"end": 13096,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13090,
											"end": 13091,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13087,
											"end": 13097,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13084,
											"end": 13120,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13084,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 13084,
											"end": 13120,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 13100,
											"end": 13118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 13100,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13084,
											"end": 13120,
											"name": "tag",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 13084,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 13127,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 13127,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 13127,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 13127,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12936,
											"end": 13127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13133,
											"end": 13362,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 13133,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13273,
											"end": 13307,
											"name": "PUSH",
											"source": 16,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 13269,
											"end": 13270,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13261,
											"end": 13267,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13257,
											"end": 13271,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13250,
											"end": 13308,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13342,
											"end": 13354,
											"name": "PUSH",
											"source": 16,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 13337,
											"end": 13339,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13329,
											"end": 13335,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13325,
											"end": 13340,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13318,
											"end": 13355,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13133,
											"end": 13362,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13133,
											"end": 13362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13734,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 13368,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13510,
											"end": 13513,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13531,
											"end": 13598,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 13595,
											"end": 13597,
											"name": "PUSH",
											"source": 16,
											"value": "2A"
										},
										{
											"begin": 13590,
											"end": 13593,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13531,
											"end": 13598,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 13531,
											"end": 13598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13531,
											"end": 13598,
											"name": "tag",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 13531,
											"end": 13598,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13524,
											"end": 13598,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13524,
											"end": 13598,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13607,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 13696,
											"end": 13699,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13607,
											"end": 13700,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 13607,
											"end": 13700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13607,
											"end": 13700,
											"name": "tag",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 13607,
											"end": 13700,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13725,
											"end": 13727,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13720,
											"end": 13723,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13716,
											"end": 13728,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13709,
											"end": 13728,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13709,
											"end": 13728,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13734,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13734,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13734,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13740,
											"end": 14159,
											"name": "tag",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 13740,
											"end": 14159,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13906,
											"end": 13910,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13944,
											"end": 13946,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13933,
											"end": 13942,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13929,
											"end": 13947,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13921,
											"end": 13947,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13921,
											"end": 13947,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13993,
											"end": 14002,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13987,
											"end": 13991,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13983,
											"end": 14003,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13979,
											"end": 13980,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13968,
											"end": 13977,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13964,
											"end": 13981,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13957,
											"end": 14004,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14021,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14021,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 14021,
											"end": 14152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14021,
											"end": 14152,
											"name": "tag",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 14021,
											"end": 14152,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14013,
											"end": 14152,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14013,
											"end": 14152,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13740,
											"end": 14159,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13740,
											"end": 14159,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13740,
											"end": 14159,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13740,
											"end": 14159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14165,
											"end": 14340,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 14165,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14305,
											"end": 14332,
											"name": "PUSH",
											"source": 16,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 14301,
											"end": 14302,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14293,
											"end": 14299,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14289,
											"end": 14303,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14282,
											"end": 14333,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14165,
											"end": 14340,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14165,
											"end": 14340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14488,
											"end": 14491,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14509,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 14573,
											"end": 14575,
											"name": "PUSH",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 14568,
											"end": 14571,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14509,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 14509,
											"end": 14576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14509,
											"end": 14576,
											"name": "tag",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 14509,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14502,
											"end": 14576,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14502,
											"end": 14576,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14585,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 14674,
											"end": 14677,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14585,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 14585,
											"end": 14678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14585,
											"end": 14678,
											"name": "tag",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 14585,
											"end": 14678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14703,
											"end": 14705,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14698,
											"end": 14701,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14694,
											"end": 14706,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14687,
											"end": 14706,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14687,
											"end": 14706,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "tag",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14884,
											"end": 14888,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14922,
											"end": 14924,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14911,
											"end": 14920,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14907,
											"end": 14925,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14899,
											"end": 14925,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14899,
											"end": 14925,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14971,
											"end": 14980,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14965,
											"end": 14969,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14961,
											"end": 14981,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14957,
											"end": 14958,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14946,
											"end": 14955,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14942,
											"end": 14959,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14935,
											"end": 14982,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14999,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 15125,
											"end": 15129,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14999,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 14999,
											"end": 15130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14999,
											"end": 15130,
											"name": "tag",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 14999,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14991,
											"end": 15130,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14991,
											"end": 15130,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14718,
											"end": 15137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15143,
											"end": 15553,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 15143,
											"end": 15553,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15183,
											"end": 15190,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15206,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 15224,
											"end": 15225,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15206,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 15206,
											"end": 15226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15206,
											"end": 15226,
											"name": "tag",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 15206,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15201,
											"end": 15226,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15201,
											"end": 15226,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15240,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 15258,
											"end": 15259,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15240,
											"end": 15260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 15240,
											"end": 15260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15240,
											"end": 15260,
											"name": "tag",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 15240,
											"end": 15260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15295,
											"end": 15296,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15292,
											"end": 15293,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15288,
											"end": 15297,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 15317,
											"end": 15347,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 15335,
											"end": 15346,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15317,
											"end": 15347,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 15317,
											"end": 15347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15317,
											"end": 15347,
											"name": "tag",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 15317,
											"end": 15347,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15306,
											"end": 15347,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15306,
											"end": 15347,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15496,
											"end": 15497,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15487,
											"end": 15494,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15483,
											"end": 15498,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 15480,
											"end": 15481,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15477,
											"end": 15499,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 15457,
											"end": 15458,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15450,
											"end": 15459,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15430,
											"end": 15513,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 15407,
											"end": 15546,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 15407,
											"end": 15546,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15526,
											"end": 15544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 15526,
											"end": 15544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 15526,
											"end": 15544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15526,
											"end": 15544,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 15526,
											"end": 15544,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15407,
											"end": 15546,
											"name": "tag",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 15407,
											"end": 15546,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15191,
											"end": 15553,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15143,
											"end": 15553,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15143,
											"end": 15553,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15143,
											"end": 15553,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15143,
											"end": 15553,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15143,
											"end": 15553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15559,
											"end": 15707,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 15559,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15661,
											"end": 15672,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15701,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15683,
											"end": 15701,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15683,
											"end": 15701,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15559,
											"end": 15707,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15559,
											"end": 15707,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15559,
											"end": 15707,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15559,
											"end": 15707,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15559,
											"end": 15707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15713,
											"end": 15886,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 15713,
											"end": 15886,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15853,
											"end": 15878,
											"name": "PUSH",
											"source": 16,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 15849,
											"end": 15850,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15841,
											"end": 15847,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15830,
											"end": 15879,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15713,
											"end": 15886,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15713,
											"end": 15886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15892,
											"end": 16294,
											"name": "tag",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 15892,
											"end": 16294,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16052,
											"end": 16055,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16073,
											"end": 16158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 16155,
											"end": 16157,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 16150,
											"end": 16153,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16073,
											"end": 16158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 16073,
											"end": 16158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16073,
											"end": 16158,
											"name": "tag",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 16073,
											"end": 16158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16066,
											"end": 16158,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16066,
											"end": 16158,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16167,
											"end": 16260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 16256,
											"end": 16259,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16167,
											"end": 16260,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 16167,
											"end": 16260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16167,
											"end": 16260,
											"name": "tag",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 16167,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16285,
											"end": 16287,
											"name": "PUSH",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 16280,
											"end": 16283,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16276,
											"end": 16288,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16269,
											"end": 16288,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16269,
											"end": 16288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15892,
											"end": 16294,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15892,
											"end": 16294,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15892,
											"end": 16294,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15892,
											"end": 16294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16300,
											"end": 16399,
											"name": "tag",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 16300,
											"end": 16399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16352,
											"end": 16358,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16386,
											"end": 16391,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16380,
											"end": 16392,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 16370,
											"end": 16392,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16370,
											"end": 16392,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16300,
											"end": 16399,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16300,
											"end": 16399,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16300,
											"end": 16399,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16300,
											"end": 16399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16405,
											"end": 16651,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 16405,
											"end": 16651,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16486,
											"end": 16487,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16496,
											"end": 16609,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 16496,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16510,
											"end": 16516,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16507,
											"end": 16508,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16504,
											"end": 16517,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 16496,
											"end": 16609,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 16496,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 16496,
											"end": 16609,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16595,
											"end": 16596,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16590,
											"end": 16593,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16586,
											"end": 16597,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16580,
											"end": 16598,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 16576,
											"end": 16577,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16571,
											"end": 16574,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16567,
											"end": 16578,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16560,
											"end": 16599,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16532,
											"end": 16534,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16529,
											"end": 16530,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16525,
											"end": 16535,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16520,
											"end": 16535,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16520,
											"end": 16535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16496,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 16496,
											"end": 16609,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16496,
											"end": 16609,
											"name": "tag",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 16496,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16643,
											"end": 16644,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16634,
											"end": 16640,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16629,
											"end": 16632,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16625,
											"end": 16641,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16618,
											"end": 16645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16467,
											"end": 16651,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16405,
											"end": 16651,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16405,
											"end": 16651,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16405,
											"end": 16651,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16405,
											"end": 16651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16657,
											"end": 17047,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 16657,
											"end": 17047,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16763,
											"end": 16766,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16791,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 16824,
											"end": 16829,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16791,
											"end": 16830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 16791,
											"end": 16830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16791,
											"end": 16830,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 16791,
											"end": 16830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16846,
											"end": 16935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 16928,
											"end": 16934,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16923,
											"end": 16926,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16846,
											"end": 16935,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 16846,
											"end": 16935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16846,
											"end": 16935,
											"name": "tag",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 16846,
											"end": 16935,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16839,
											"end": 16935,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16839,
											"end": 16935,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16944,
											"end": 17009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 17002,
											"end": 17008,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16997,
											"end": 17000,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16990,
											"end": 16994,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16983,
											"end": 16988,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16979,
											"end": 16995,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16944,
											"end": 17009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 16944,
											"end": 17009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16944,
											"end": 17009,
											"name": "tag",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 16944,
											"end": 17009,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17034,
											"end": 17040,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 17029,
											"end": 17032,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17025,
											"end": 17041,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17018,
											"end": 17041,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17018,
											"end": 17041,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16767,
											"end": 17047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16657,
											"end": 17047,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16657,
											"end": 17047,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16657,
											"end": 17047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16657,
											"end": 17047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16657,
											"end": 17047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17053,
											"end": 17220,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 17053,
											"end": 17220,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17193,
											"end": 17212,
											"name": "PUSH",
											"source": 16,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 17189,
											"end": 17190,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17181,
											"end": 17187,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17177,
											"end": 17191,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17170,
											"end": 17213,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 17053,
											"end": 17220,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17053,
											"end": 17220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17226,
											"end": 17628,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 17226,
											"end": 17628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17386,
											"end": 17389,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17407,
											"end": 17492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 17489,
											"end": 17491,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 17484,
											"end": 17487,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17407,
											"end": 17492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 17407,
											"end": 17492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17407,
											"end": 17492,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 17407,
											"end": 17492,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17400,
											"end": 17492,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17400,
											"end": 17492,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 17590,
											"end": 17593,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 17501,
											"end": 17594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 17501,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17619,
											"end": 17621,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 17614,
											"end": 17617,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17610,
											"end": 17622,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17603,
											"end": 17622,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17603,
											"end": 17622,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17226,
											"end": 17628,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17226,
											"end": 17628,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17226,
											"end": 17628,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17226,
											"end": 17628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17634,
											"end": 18601,
											"name": "tag",
											"source": 16,
											"value": "260"
										},
										{
											"begin": 17634,
											"end": 18601,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18016,
											"end": 18019,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18038,
											"end": 18186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 18182,
											"end": 18185,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18038,
											"end": 18186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 18038,
											"end": 18186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18038,
											"end": 18186,
											"name": "tag",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 18038,
											"end": 18186,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18031,
											"end": 18186,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18031,
											"end": 18186,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18203,
											"end": 18298,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 18294,
											"end": 18297,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18285,
											"end": 18291,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18203,
											"end": 18298,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 18203,
											"end": 18298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18203,
											"end": 18298,
											"name": "tag",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 18203,
											"end": 18298,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18196,
											"end": 18298,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18196,
											"end": 18298,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18315,
											"end": 18463,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 18459,
											"end": 18462,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18315,
											"end": 18463,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 18315,
											"end": 18463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18315,
											"end": 18463,
											"name": "tag",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 18315,
											"end": 18463,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18308,
											"end": 18463,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18308,
											"end": 18463,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18480,
											"end": 18575,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 18571,
											"end": 18574,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18562,
											"end": 18568,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18480,
											"end": 18575,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 18480,
											"end": 18575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18480,
											"end": 18575,
											"name": "tag",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 18480,
											"end": 18575,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18473,
											"end": 18575,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18473,
											"end": 18575,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18592,
											"end": 18595,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18585,
											"end": 18595,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18585,
											"end": 18595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17634,
											"end": 18601,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 17634,
											"end": 18601,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17634,
											"end": 18601,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17634,
											"end": 18601,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17634,
											"end": 18601,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17634,
											"end": 18601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18607,
											"end": 18984,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 18607,
											"end": 18984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18695,
											"end": 18698,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18723,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 18756,
											"end": 18761,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18723,
											"end": 18762,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 18723,
											"end": 18762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18723,
											"end": 18762,
											"name": "tag",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 18723,
											"end": 18762,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18778,
											"end": 18849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 18842,
											"end": 18848,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18837,
											"end": 18840,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18778,
											"end": 18849,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 18778,
											"end": 18849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18778,
											"end": 18849,
											"name": "tag",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 18778,
											"end": 18849,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18771,
											"end": 18849,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 18771,
											"end": 18849,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18858,
											"end": 18923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 18916,
											"end": 18922,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18911,
											"end": 18914,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18904,
											"end": 18908,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18897,
											"end": 18902,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 18893,
											"end": 18909,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18858,
											"end": 18923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 18858,
											"end": 18923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18858,
											"end": 18923,
											"name": "tag",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 18858,
											"end": 18923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18948,
											"end": 18977,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 18970,
											"end": 18976,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18948,
											"end": 18977,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 18948,
											"end": 18977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18948,
											"end": 18977,
											"name": "tag",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 18948,
											"end": 18977,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18943,
											"end": 18946,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18939,
											"end": 18978,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18932,
											"end": 18978,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18932,
											"end": 18978,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18699,
											"end": 18984,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18607,
											"end": 18984,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18607,
											"end": 18984,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18607,
											"end": 18984,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18607,
											"end": 18984,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18607,
											"end": 18984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18990,
											"end": 19303,
											"name": "tag",
											"source": 16,
											"value": "262"
										},
										{
											"begin": 18990,
											"end": 19303,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19103,
											"end": 19107,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19141,
											"end": 19143,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19130,
											"end": 19139,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19126,
											"end": 19144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19118,
											"end": 19144,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19118,
											"end": 19144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19190,
											"end": 19199,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19184,
											"end": 19188,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19180,
											"end": 19200,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 19176,
											"end": 19177,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19165,
											"end": 19174,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19161,
											"end": 19178,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19154,
											"end": 19201,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19218,
											"end": 19296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 19291,
											"end": 19295,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19282,
											"end": 19288,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19218,
											"end": 19296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 19218,
											"end": 19296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19218,
											"end": 19296,
											"name": "tag",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 19218,
											"end": 19296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19210,
											"end": 19296,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19210,
											"end": 19296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18990,
											"end": 19303,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18990,
											"end": 19303,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18990,
											"end": 19303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18990,
											"end": 19303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18990,
											"end": 19303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19309,
											"end": 19427,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 19309,
											"end": 19427,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19396,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "591"
										},
										{
											"begin": 19414,
											"end": 19419,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19396,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 19396,
											"end": 19420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19396,
											"end": 19420,
											"name": "tag",
											"source": 16,
											"value": "591"
										},
										{
											"begin": 19396,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19391,
											"end": 19394,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19384,
											"end": 19421,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19309,
											"end": 19427,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19309,
											"end": 19427,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19309,
											"end": 19427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19433,
											"end": 19765,
											"name": "tag",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 19433,
											"end": 19765,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19554,
											"end": 19558,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19592,
											"end": 19594,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 19581,
											"end": 19590,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19577,
											"end": 19595,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19569,
											"end": 19595,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19569,
											"end": 19595,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19605,
											"end": 19676,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 19673,
											"end": 19674,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19662,
											"end": 19671,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19658,
											"end": 19675,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19649,
											"end": 19655,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19605,
											"end": 19676,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 19605,
											"end": 19676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19605,
											"end": 19676,
											"name": "tag",
											"source": 16,
											"value": "593"
										},
										{
											"begin": 19605,
											"end": 19676,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 19754,
											"end": 19756,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19743,
											"end": 19752,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19739,
											"end": 19757,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19730,
											"end": 19736,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19758,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 19686,
											"end": 19758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19686,
											"end": 19758,
											"name": "tag",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 19686,
											"end": 19758,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19433,
											"end": 19765,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 19433,
											"end": 19765,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 19433,
											"end": 19765,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19433,
											"end": 19765,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19433,
											"end": 19765,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19433,
											"end": 19765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19771,
											"end": 19942,
											"name": "tag",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 19771,
											"end": 19942,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19810,
											"end": 19813,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19833,
											"end": 19857,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 19851,
											"end": 19856,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19833,
											"end": 19857,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 19833,
											"end": 19857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19833,
											"end": 19857,
											"name": "tag",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 19833,
											"end": 19857,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19824,
											"end": 19857,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19824,
											"end": 19857,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19879,
											"end": 19883,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19872,
											"end": 19877,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19869,
											"end": 19884,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 19866,
											"end": 19907,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "597"
										},
										{
											"begin": 19866,
											"end": 19907,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19887,
											"end": 19905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "598"
										},
										{
											"begin": 19887,
											"end": 19905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 19887,
											"end": 19905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19887,
											"end": 19905,
											"name": "tag",
											"source": 16,
											"value": "598"
										},
										{
											"begin": 19887,
											"end": 19905,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19866,
											"end": 19907,
											"name": "tag",
											"source": 16,
											"value": "597"
										},
										{
											"begin": 19866,
											"end": 19907,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19934,
											"end": 19935,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 19927,
											"end": 19932,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19923,
											"end": 19936,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 19916,
											"end": 19936,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19916,
											"end": 19936,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19771,
											"end": 19942,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19771,
											"end": 19942,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19771,
											"end": 19942,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19771,
											"end": 19942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19948,
											"end": 20130,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 19948,
											"end": 20130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20088,
											"end": 20122,
											"name": "PUSH",
											"source": 16,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 20084,
											"end": 20085,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20076,
											"end": 20082,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20072,
											"end": 20086,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20065,
											"end": 20123,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 19948,
											"end": 20130,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19948,
											"end": 20130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20136,
											"end": 20502,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 20136,
											"end": 20502,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20278,
											"end": 20281,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20299,
											"end": 20366,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "601"
										},
										{
											"begin": 20363,
											"end": 20365,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20358,
											"end": 20361,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20299,
											"end": 20366,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 20299,
											"end": 20366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20299,
											"end": 20366,
											"name": "tag",
											"source": 16,
											"value": "601"
										},
										{
											"begin": 20299,
											"end": 20366,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20292,
											"end": 20366,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20292,
											"end": 20366,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20375,
											"end": 20468,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "602"
										},
										{
											"begin": 20464,
											"end": 20467,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20375,
											"end": 20468,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 20375,
											"end": 20468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20375,
											"end": 20468,
											"name": "tag",
											"source": 16,
											"value": "602"
										},
										{
											"begin": 20375,
											"end": 20468,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20493,
											"end": 20495,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20488,
											"end": 20491,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20484,
											"end": 20496,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20477,
											"end": 20496,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20477,
											"end": 20496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20136,
											"end": 20502,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20136,
											"end": 20502,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20136,
											"end": 20502,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20136,
											"end": 20502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20508,
											"end": 20927,
											"name": "tag",
											"source": 16,
											"value": "294"
										},
										{
											"begin": 20508,
											"end": 20927,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20674,
											"end": 20678,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20712,
											"end": 20714,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20710,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20697,
											"end": 20715,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20689,
											"end": 20715,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20689,
											"end": 20715,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20761,
											"end": 20770,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20755,
											"end": 20759,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20751,
											"end": 20771,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 20747,
											"end": 20748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20736,
											"end": 20745,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20732,
											"end": 20749,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20725,
											"end": 20772,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20789,
											"end": 20920,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 20915,
											"end": 20919,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20789,
											"end": 20920,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 20789,
											"end": 20920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20789,
											"end": 20920,
											"name": "tag",
											"source": 16,
											"value": "604"
										},
										{
											"begin": 20789,
											"end": 20920,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20781,
											"end": 20920,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20781,
											"end": 20920,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20508,
											"end": 20927,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20508,
											"end": 20927,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20508,
											"end": 20927,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20508,
											"end": 20927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20933,
											"end": 21049,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 20933,
											"end": 21049,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21003,
											"end": 21024,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "606"
										},
										{
											"begin": 21018,
											"end": 21023,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21003,
											"end": 21024,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 21003,
											"end": 21024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21003,
											"end": 21024,
											"name": "tag",
											"source": 16,
											"value": "606"
										},
										{
											"begin": 21003,
											"end": 21024,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20996,
											"end": 21001,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20993,
											"end": 21025,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 20983,
											"end": 21043,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "607"
										},
										{
											"begin": 20983,
											"end": 21043,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 21039,
											"end": 21040,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21036,
											"end": 21037,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 21029,
											"end": 21041,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 20983,
											"end": 21043,
											"name": "tag",
											"source": 16,
											"value": "607"
										},
										{
											"begin": 20983,
											"end": 21043,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20933,
											"end": 21049,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20933,
											"end": 21049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21192,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 21055,
											"end": 21192,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21109,
											"end": 21114,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21146,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21134,
											"end": 21147,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 21125,
											"end": 21147,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21125,
											"end": 21147,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21156,
											"end": 21186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "609"
										},
										{
											"begin": 21180,
											"end": 21185,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21156,
											"end": 21186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 21156,
											"end": 21186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21156,
											"end": 21186,
											"name": "tag",
											"source": 16,
											"value": "609"
										},
										{
											"begin": 21156,
											"end": 21186,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21192,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21192,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21192,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21192,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21198,
											"end": 21543,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 21198,
											"end": 21543,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21265,
											"end": 21271,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21314,
											"end": 21316,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21302,
											"end": 21311,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21293,
											"end": 21300,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21289,
											"end": 21312,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 21285,
											"end": 21317,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 21282,
											"end": 21401,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 21282,
											"end": 21401,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 21282,
											"end": 21401,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 21320,
											"end": 21399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 21320,
											"end": 21399,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 21320,
											"end": 21399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21320,
											"end": 21399,
											"name": "tag",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 21320,
											"end": 21399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21282,
											"end": 21401,
											"name": "tag",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 21282,
											"end": 21401,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21440,
											"end": 21441,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21465,
											"end": 21526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "613"
										},
										{
											"begin": 21518,
											"end": 21525,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21509,
											"end": 21515,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21498,
											"end": 21507,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21494,
											"end": 21516,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21465,
											"end": 21526,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 21465,
											"end": 21526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21465,
											"end": 21526,
											"name": "tag",
											"source": 16,
											"value": "613"
										},
										{
											"begin": 21465,
											"end": 21526,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21455,
											"end": 21526,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21455,
											"end": 21526,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21411,
											"end": 21536,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21198,
											"end": 21543,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21198,
											"end": 21543,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21198,
											"end": 21543,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21198,
											"end": 21543,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21198,
											"end": 21543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21549,
											"end": 21778,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 21549,
											"end": 21778,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21689,
											"end": 21723,
											"name": "PUSH",
											"source": 16,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 21685,
											"end": 21686,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21677,
											"end": 21683,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21673,
											"end": 21687,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21666,
											"end": 21724,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21758,
											"end": 21770,
											"name": "PUSH",
											"source": 16,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 21753,
											"end": 21755,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21745,
											"end": 21751,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21741,
											"end": 21756,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21734,
											"end": 21771,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21549,
											"end": 21778,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21549,
											"end": 21778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21784,
											"end": 22150,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 21784,
											"end": 22150,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21926,
											"end": 21929,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21947,
											"end": 22014,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "616"
										},
										{
											"begin": 22011,
											"end": 22013,
											"name": "PUSH",
											"source": 16,
											"value": "2A"
										},
										{
											"begin": 22006,
											"end": 22009,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21947,
											"end": 22014,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 21947,
											"end": 22014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21947,
											"end": 22014,
											"name": "tag",
											"source": 16,
											"value": "616"
										},
										{
											"begin": 21947,
											"end": 22014,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21940,
											"end": 22014,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21940,
											"end": 22014,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "617"
										},
										{
											"begin": 22112,
											"end": 22115,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 22023,
											"end": 22116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22023,
											"end": 22116,
											"name": "tag",
											"source": 16,
											"value": "617"
										},
										{
											"begin": 22023,
											"end": 22116,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22141,
											"end": 22143,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 22136,
											"end": 22139,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22132,
											"end": 22144,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22125,
											"end": 22144,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22125,
											"end": 22144,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21784,
											"end": 22150,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21784,
											"end": 22150,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21784,
											"end": 22150,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21784,
											"end": 22150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22156,
											"end": 22575,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 22156,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22322,
											"end": 22326,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22360,
											"end": 22362,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22349,
											"end": 22358,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22345,
											"end": 22363,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22337,
											"end": 22363,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22337,
											"end": 22363,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22409,
											"end": 22418,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22403,
											"end": 22407,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22399,
											"end": 22419,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 22395,
											"end": 22396,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22384,
											"end": 22393,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22380,
											"end": 22397,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22373,
											"end": 22420,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22437,
											"end": 22568,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "619"
										},
										{
											"begin": 22563,
											"end": 22567,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22437,
											"end": 22568,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 22437,
											"end": 22568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22437,
											"end": 22568,
											"name": "tag",
											"source": 16,
											"value": "619"
										},
										{
											"begin": 22437,
											"end": 22568,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22429,
											"end": 22568,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22429,
											"end": 22568,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22156,
											"end": 22575,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22156,
											"end": 22575,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22156,
											"end": 22575,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22156,
											"end": 22575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22581,
											"end": 22806,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 22581,
											"end": 22806,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22721,
											"end": 22755,
											"name": "PUSH",
											"source": 16,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 22717,
											"end": 22718,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22709,
											"end": 22715,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22705,
											"end": 22719,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22698,
											"end": 22756,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22790,
											"end": 22798,
											"name": "PUSH",
											"source": 16,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22785,
											"end": 22787,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22777,
											"end": 22783,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22773,
											"end": 22788,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22766,
											"end": 22799,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 22581,
											"end": 22806,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22581,
											"end": 22806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22954,
											"end": 22957,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22975,
											"end": 23042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "622"
										},
										{
											"begin": 23039,
											"end": 23041,
											"name": "PUSH",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 23034,
											"end": 23037,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22975,
											"end": 23042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 22975,
											"end": 23042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22975,
											"end": 23042,
											"name": "tag",
											"source": 16,
											"value": "622"
										},
										{
											"begin": 22975,
											"end": 23042,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22968,
											"end": 23042,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22968,
											"end": 23042,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23051,
											"end": 23144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "623"
										},
										{
											"begin": 23140,
											"end": 23143,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23051,
											"end": 23144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 23051,
											"end": 23144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23051,
											"end": 23144,
											"name": "tag",
											"source": 16,
											"value": "623"
										},
										{
											"begin": 23051,
											"end": 23144,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23169,
											"end": 23171,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 23164,
											"end": 23167,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23160,
											"end": 23172,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23153,
											"end": 23172,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23153,
											"end": 23172,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22812,
											"end": 23178,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22812,
											"end": 23178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23350,
											"end": 23354,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23388,
											"end": 23390,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 23377,
											"end": 23386,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23373,
											"end": 23391,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23365,
											"end": 23391,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23365,
											"end": 23391,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23437,
											"end": 23446,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23431,
											"end": 23435,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23427,
											"end": 23447,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 23423,
											"end": 23424,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23412,
											"end": 23421,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23408,
											"end": 23425,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23401,
											"end": 23448,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 23465,
											"end": 23596,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "625"
										},
										{
											"begin": 23591,
											"end": 23595,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23465,
											"end": 23596,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 23465,
											"end": 23596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23465,
											"end": 23596,
											"name": "tag",
											"source": 16,
											"value": "625"
										},
										{
											"begin": 23465,
											"end": 23596,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23457,
											"end": 23596,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23457,
											"end": 23596,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23184,
											"end": 23603,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23184,
											"end": 23603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23609,
											"end": 23707,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 23609,
											"end": 23707,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23660,
											"end": 23666,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23694,
											"end": 23699,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23688,
											"end": 23700,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 23678,
											"end": 23700,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23678,
											"end": 23700,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23609,
											"end": 23707,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23609,
											"end": 23707,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23609,
											"end": 23707,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23609,
											"end": 23707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23713,
											"end": 23860,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 23713,
											"end": 23860,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23814,
											"end": 23825,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23851,
											"end": 23854,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23836,
											"end": 23854,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23836,
											"end": 23854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23713,
											"end": 23860,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 23713,
											"end": 23860,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23713,
											"end": 23860,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23713,
											"end": 23860,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23713,
											"end": 23860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23866,
											"end": 24252,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 23866,
											"end": 24252,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23970,
											"end": 23973,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23998,
											"end": 24036,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "629"
										},
										{
											"begin": 24030,
											"end": 24035,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23998,
											"end": 24036,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 23998,
											"end": 24036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23998,
											"end": 24036,
											"name": "tag",
											"source": 16,
											"value": "629"
										},
										{
											"begin": 23998,
											"end": 24036,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24052,
											"end": 24140,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "630"
										},
										{
											"begin": 24133,
											"end": 24139,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 24128,
											"end": 24131,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 24052,
											"end": 24140,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 24052,
											"end": 24140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24052,
											"end": 24140,
											"name": "tag",
											"source": 16,
											"value": "630"
										},
										{
											"begin": 24052,
											"end": 24140,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24045,
											"end": 24140,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 24045,
											"end": 24140,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24149,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "631"
										},
										{
											"begin": 24207,
											"end": 24213,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 24202,
											"end": 24205,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 24195,
											"end": 24199,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 24188,
											"end": 24193,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 24184,
											"end": 24200,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24149,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 24149,
											"end": 24214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24149,
											"end": 24214,
											"name": "tag",
											"source": 16,
											"value": "631"
										},
										{
											"begin": 24149,
											"end": 24214,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24239,
											"end": 24245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 24234,
											"end": 24237,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 24230,
											"end": 24246,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24223,
											"end": 24246,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 24223,
											"end": 24246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23974,
											"end": 24252,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23866,
											"end": 24252,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 23866,
											"end": 24252,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23866,
											"end": 24252,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23866,
											"end": 24252,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23866,
											"end": 24252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24258,
											"end": 24529,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 24258,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24388,
											"end": 24391,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 24410,
											"end": 24503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "633"
										},
										{
											"begin": 24499,
											"end": 24502,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24490,
											"end": 24496,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 24410,
											"end": 24503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 24410,
											"end": 24503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24410,
											"end": 24503,
											"name": "tag",
											"source": 16,
											"value": "633"
										},
										{
											"begin": 24410,
											"end": 24503,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24403,
											"end": 24503,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 24403,
											"end": 24503,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24520,
											"end": 24523,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 24513,
											"end": 24523,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24513,
											"end": 24523,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24258,
											"end": 24529,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 24258,
											"end": 24529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 24258,
											"end": 24529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24258,
											"end": 24529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24258,
											"end": 24529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24535,
											"end": 24714,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 24535,
											"end": 24714,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24675,
											"end": 24706,
											"name": "PUSH",
											"source": 16,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 24671,
											"end": 24672,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 24663,
											"end": 24669,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24659,
											"end": 24673,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24652,
											"end": 24707,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 24535,
											"end": 24714,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24535,
											"end": 24714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24720,
											"end": 25086,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 24720,
											"end": 25086,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24862,
											"end": 24865,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 24883,
											"end": 24950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "636"
										},
										{
											"begin": 24947,
											"end": 24949,
											"name": "PUSH",
											"source": 16,
											"value": "1D"
										},
										{
											"begin": 24942,
											"end": 24945,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 24883,
											"end": 24950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 24883,
											"end": 24950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24883,
											"end": 24950,
											"name": "tag",
											"source": 16,
											"value": "636"
										},
										{
											"begin": 24883,
											"end": 24950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 24876,
											"end": 24950,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 24876,
											"end": 24950,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24959,
											"end": 25052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 25048,
											"end": 25051,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 24959,
											"end": 25052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 24959,
											"end": 25052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 24959,
											"end": 25052,
											"name": "tag",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 24959,
											"end": 25052,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25077,
											"end": 25079,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 25072,
											"end": 25075,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 25068,
											"end": 25080,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 25061,
											"end": 25080,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 25061,
											"end": 25080,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24720,
											"end": 25086,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 24720,
											"end": 25086,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 24720,
											"end": 25086,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 24720,
											"end": 25086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25092,
											"end": 25511,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 25092,
											"end": 25511,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25258,
											"end": 25262,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 25296,
											"end": 25298,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 25285,
											"end": 25294,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 25281,
											"end": 25299,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 25273,
											"end": 25299,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 25273,
											"end": 25299,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25345,
											"end": 25354,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 25339,
											"end": 25343,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 25335,
											"end": 25355,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 25331,
											"end": 25332,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25329,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 25316,
											"end": 25333,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 25309,
											"end": 25356,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 25373,
											"end": 25504,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 25499,
											"end": 25503,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 25373,
											"end": 25504,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 25373,
											"end": 25504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 25373,
											"end": 25504,
											"name": "tag",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 25373,
											"end": 25504,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 25365,
											"end": 25504,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 25365,
											"end": 25504,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25092,
											"end": 25511,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 25092,
											"end": 25511,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 25092,
											"end": 25511,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 25092,
											"end": 25511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"crowdsale/crowdsale.sol",
								"crowdsale/validation/whitelistCrowdsale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"WHITELISTED_ROLE()": "7a3226ec",
							"WHITELIST_ADMIN_ROLE()": "54202c4e",
							"addToWhitelist(address)": "e43252d7",
							"addToWhitelist(address[])": "7f649783",
							"buyTokens(address)": "ec8ac4d8",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"rate()": "2c4e722e",
							"removeFromWhitelist(address)": "8ab1d681",
							"removeFromWhitelist(address[])": "548db174",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inRate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"inWallet\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"inToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELISTED_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WHITELIST_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale in which only whitelisted users can contribute.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"WhitelistCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"crowdsale/validation/whitelistCrowdsale.sol\":\"WhitelistCrowdsale\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"crowdsale/crowdsale.sol\":{\"keccak256\":\"0xee463c77b303be60fe3509ff7b9aa23f2674f07b68622278a611ab7908591689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cb0baa0aace90973f81b63d0d3769d000b113f68fd089e0988f0c3468f5a1d9\",\"dweb:/ipfs/QmTi1mH6UupQvzs1AW1kr1sgMWW4wtjKWxngYd6dQ6Pdgj\"]},\"crowdsale/validation/whitelistCrowdsale.sol\":{\"keccak256\":\"0x0d1fa750647274af4f8cefa4ebf3ecf9de4cc26bc4785f9db151226340328f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6261d5cf6894d657cde028bdcafe97bacae96b492e8a96990ed92c1d83b4670\",\"dweb:/ipfs/QmeGwaDHqQi2w89EHKUm973y9bkJ71hgDoNDpBHMy7iTBv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 399,
								"contract": "crowdsale/validation/whitelistCrowdsale.sol:WhitelistCrowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2865,
								"contract": "crowdsale/validation/whitelistCrowdsale.sol:WhitelistCrowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)531"
							},
							{
								"astId": 2867,
								"contract": "crowdsale/validation/whitelistCrowdsale.sol:WhitelistCrowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 2869,
								"contract": "crowdsale/validation/whitelistCrowdsale.sol:WhitelistCrowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2871,
								"contract": "crowdsale/validation/whitelistCrowdsale.sol:WhitelistCrowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 24,
								"contract": "crowdsale/validation/whitelistCrowdsale.sol:WhitelistCrowdsale",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)531": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "crowdsale/validation/whitelistCrowdsale.sol:WhitelistCrowdsale",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "crowdsale/validation/whitelistCrowdsale.sol:WhitelistCrowdsale",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							1295
						],
						"ERC165": [
							1548
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1560
						],
						"Math": [
							2426
						],
						"SignedMath": [
							2843
						],
						"Strings": [
							1524
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1296,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1525,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 1549,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1967:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1295,
										"src": "1967:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1967:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": [
											"1976:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1976:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1976:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"1992:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1548,
										"src": "1992:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1992:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								1548,
								1560,
								388,
								1295
							],
							"name": "AccessControl",
							"nameLocation": "1950:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2056:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2031:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2031:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2050:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2081:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2073:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2073:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2012:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "2005:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2140:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2103:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2103:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": [
													"2122:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "2122:8:0"
											},
											"referencedDeclaration": 19,
											"src": "2122:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2177:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2153:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2153:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2198:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2621:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2642:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 92,
														"src": "2631:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2631:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2657:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2209:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2598:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:14:0"
									},
									"src": "2589:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1547
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2823:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2840:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2860:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2855:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2855:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2876:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2855:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2840:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2915:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2891:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2897:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1547,
															"src": "2891:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2891:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2840:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2833:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2671:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2741:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2799:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2766:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2759:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2759:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2817:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2817:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:6:0"
									},
									"scope": 315,
									"src": "2732:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										355
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "3113:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3137:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3130:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3143:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3130:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3130:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "3123:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2940:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3030:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3089:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3038:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:6:0"
									},
									"scope": 315,
									"src": "3021:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3516:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "3543:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3543:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 131,
														"src": "3526:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3526:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3526:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3172:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3469:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3488:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3480:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3516:0:0"
									},
									"scope": 315,
									"src": "3460:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3917:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3931:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3940:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3946:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3932:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3927:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3956:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4064:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4135:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1524,
																								"src": "4115:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1524_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4123:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1498,
																							"src": "4115:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4115:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4169:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4242:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4234:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4234:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4234:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4249:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1524,
																								"src": "4214:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$1524_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4222:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1478,
																							"src": "4214:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4214:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4022:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4026:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4022:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4022:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3994:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3994:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3994:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3970:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3970:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3970:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3569:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3853:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3872:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3864:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:0:0"
									},
									"scope": 315,
									"src": "3844:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4587:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4611:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4604:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4617:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4604:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4597:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4329:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4513:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4560:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:9:0"
									},
									"scope": 315,
									"src": "4504:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5032:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5053:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "5042:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "5042:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4639:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5012:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5012:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"5003:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5003:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5003:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4938:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4994:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4956:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4948:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4947:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5032:0:0"
									},
									"scope": 315,
									"src": "4929:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5458:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5468:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5468:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5468:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5080:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5451:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5438:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5438:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": [
													"5429:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5429:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5429:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5363:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5420:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5382:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5374:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:0:0"
									},
									"scope": 315,
									"src": "5354:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6115:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "6144:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6144:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6133:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6158:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "6125:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6219:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6219:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5507:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6047:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6106:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6068:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6060:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6082:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6074:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6115:0:0"
									},
									"scope": 315,
									"src": "6038:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "7005:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "7026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "7032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "7015:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7015:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "7015:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6258:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6946:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6965:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6957:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6956:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7005:0:0"
									},
									"scope": 315,
									"src": "6937:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7245:174:0",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7263:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7255:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7283:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7255:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7311:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7318:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7311:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7324:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7311:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7336:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7311:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7311:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7383:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7402:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7360:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7355:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "7053:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7181:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7217:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7209:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7194:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7245:0:0"
									},
									"scope": 315,
									"src": "7172:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7655:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7669:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7678:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7670:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7665:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7694:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7708:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7715:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7708:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7721:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7708:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7729:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7708:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7740:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7708:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7708:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7775:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7781:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "7790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7763:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7758:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7425:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7596:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7606:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:0"
									},
									"scope": 315,
									"src": "7587:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "8060:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "8082:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "8088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "8074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8074:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "8070:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "8098:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "8112:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "8119:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8112:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8125:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "8112:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8112:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8112:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "8112:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8180:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8186:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "8195:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8195:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8168:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8168:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8163:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7826:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8000:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8020:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8012:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8011:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:0"
									},
									"scope": 315,
									"src": "7991:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1932:6295:0",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "108:8120:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							453
						]
					},
					"id": 454,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 394,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 453,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 392,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 393,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 397,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 453,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 395,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 399,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 453,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 402,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 403,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 407,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 453,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 413,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 418,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 422,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 423,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 428,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 429,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 453,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 436,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 437,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 453,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 448,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 446,
												"id": 450,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 453,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 454,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							531
						]
					},
					"id": 532,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 455,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 456,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 531,
							"linearizedBaseContracts": [
								531
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 465,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 474,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 531,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 531,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 531,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 531,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 531,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 531,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 532,
							"src": "202:2534:3",
							"usedErrors": [],
							"usedEvents": [
								465,
								474
							]
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							567
						]
					},
					"id": 568,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 533,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 534,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 567,
							"linearizedBaseContracts": [
								567
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3022:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3093:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3119:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 544,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3136:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 546,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3155:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:4"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:4"
									},
									"scope": 567,
									"src": "2997:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3501:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:4"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "3539:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:4"
									},
									"scope": 567,
									"src": "3485:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:4"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "3791:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 563,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:4"
									},
									"scope": 567,
									"src": "3740:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 568,
							"src": "2113:1689:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1273
						],
						"IERC20": [
							531
						],
						"IERC20Permit": [
							567
						],
						"SafeERC20": [
							943
						]
					},
					"id": 944,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 569,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 570,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 532,
							"src": "140:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 571,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 568,
							"src": "164:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 944,
							"sourceUnit": 1274,
							"src": "205:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 573,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 943,
							"linearizedBaseContracts": [
								943
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 576,
									"libraryName": {
										"id": 574,
										"name": "Address",
										"nameLocations": [
											"731:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1273,
										"src": "731:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:5",
									"typeName": {
										"id": 575,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "1013:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "1043:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 591,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "1073:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$531",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 498,
																		"src": "1073:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 594,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "1098:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "1102:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 589,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 587,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1023:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:5"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "963:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 579,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 578,
														"name": "IERC20",
														"nameLocations": [
															"963:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "963:6:5"
													},
													"referencedDeclaration": 531,
													"src": "963:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "977:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:5"
									},
									"scope": 943,
									"src": "941:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "1445:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 614,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "1475:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 617,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 604,
																			"src": "1505:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$531",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 530,
																		"src": "1505:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 620,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "1534:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 621,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1540:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "1544:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 615,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 613,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1455:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:5"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1381:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "1381:6:5"
													},
													"referencedDeclaration": 531,
													"src": "1381:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1395:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1409:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "1421:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:5"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:5"
									},
									"scope": 943,
									"src": "1355:203:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "1894:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "2143:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 642,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 647,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$943",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$943",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 645,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 649,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 633,
																					"src": "2190:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 643,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "2159:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$531",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 508,
																				"src": "2159:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 653,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 657,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 659,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 662,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "2344:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$531",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 518,
																		"src": "2344:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 665,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "2368:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "2377:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 660,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 658,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "2294:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:5"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1839:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 629,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "1839:6:5"
													},
													"referencedDeclaration": 531,
													"src": "1839:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1870:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:5"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:5"
									},
									"scope": 943,
									"src": "1818:573:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "2668:194:5",
										"statements": [
											{
												"assignments": [
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "2678:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 692,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 688,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$943",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$943",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "2732:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 684,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "2701:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "2701:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 694,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "2770:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 697,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 675,
																			"src": "2800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$531",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 518,
																		"src": "2800:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 700,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "2824:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 701,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "2833:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 702,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "2848:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 695,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 693,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "2750:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:5"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2613:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "2613:6:5"
													},
													"referencedDeclaration": 531,
													"src": "2613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2627:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2644:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:5"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:5"
									},
									"scope": 943,
									"src": "2582:280:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "3139:321:5",
										"statements": [
											{
												"id": 751,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:5",
												"statements": [
													{
														"assignments": [
															720
														],
														"declarations": [
															{
																"constant": false,
																"id": 720,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 751,
																"src": "3173:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 719,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 729,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 725,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$943",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$943",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 723,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 727,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "3227:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 721,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "3196:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 508,
																"src": "3196:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 731,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 720,
																		"src": "3257:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 732,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 716,
																		"src": "3273:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 730,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 736,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 738,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "3358:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 741,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "3388:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$531",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 518,
																				"src": "3388:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 744,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 714,
																			"src": "3412:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 745,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 720,
																				"src": "3421:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 746,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 716,
																				"src": "3436:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 739,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 737,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "3338:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 750,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3084:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "3084:6:5"
													},
													"referencedDeclaration": 531,
													"src": "3084:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3098:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "3115:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:5"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:5"
									},
									"scope": 943,
									"src": "3053:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "3856:333:5",
										"statements": [
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3879:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 799,
														"src": "3866:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 764,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3866:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 774,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 768,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "3917:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3923:7:5",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 518,
																"src": "3917:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3931:8:5",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3917:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 771,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "3941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "3950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 766,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3894:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3898:18:5",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3894:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3894:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:90:5"
											},
											{
												"condition": {
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3971:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 776,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "3996:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$531",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 777,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "4003:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$531",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 775,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "3972:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3972:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 798,
												"nodeType": "IfStatement",
												"src": "3967:216:5",
												"trueBody": {
													"id": 797,
													"nodeType": "Block",
													"src": "4018:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 781,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "4052:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 784,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 757,
																						"src": "4082:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$531",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4088:7:5",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 518,
																					"src": "4082:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 786,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4096:8:5",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4082:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "4106:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4115:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 782,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4059:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4063:18:5",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4059:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4059:58:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 780,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "4032:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4032:86:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 791,
															"nodeType": "ExpressionStatement",
															"src": "4032:86:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 793,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "4152:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 794,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "4159:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 792,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "4132:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4132:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 796,
															"nodeType": "ExpressionStatement",
															"src": "4132:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "3466:308:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3788:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3808:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "3801:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 755,
														"name": "IERC20",
														"nameLocations": [
															"3801:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "3801:6:5"
													},
													"referencedDeclaration": 531,
													"src": "3801:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3823:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "3815:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3840:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "3832:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:46:5"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3856:0:5"
									},
									"scope": 943,
									"src": "3779:410:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "4556:257:5",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4574:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "4566:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 821,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4566:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 827,
												"initialValue": {
													"arguments": [
														{
															"id": 825,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4601:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 823,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4588:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$567",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4594:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "4588:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4566:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 831,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4630:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4637:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4646:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 834,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "4653:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 835,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "4663:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 836,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4666:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 837,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "4669:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 828,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4617:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$567",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 552,
														"src": "4617:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "4617:54:5"
											},
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4689:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "4681:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4681:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [
														{
															"id": 844,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4715:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 842,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4702:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$567",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4708:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "4702:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4702:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4681:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 848,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "4739:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 849,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "4753:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4767:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4753:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4739:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4731:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4731:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "4731:75:5"
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "4195:141:5",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4350:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4383:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4370:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$567",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 803,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 802,
														"name": "IERC20Permit",
														"nameLocations": [
															"4370:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 567,
														"src": "4370:12:5"
													},
													"referencedDeclaration": 567,
													"src": "4370:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$567",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4398:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4429:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4421:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4477:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4469:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4501:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4495:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 813,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4520:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4512:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4512:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4539:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4531:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:186:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4556:0:5"
									},
									"scope": 943,
									"src": "4341:472:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "5266:572:5",
										"statements": [
											{
												"assignments": [
													867
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5628:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "5615:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 866,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5615:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 876,
												"initialValue": {
													"arguments": [
														{
															"id": 873,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "5669:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 870,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "5649:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5641:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 868,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5641:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5641:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5656:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1033,
														"src": "5641:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5641:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5615:95:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 878,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "5728:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5739:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5728:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5749:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5728:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 884,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "5765:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5778:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 885,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5778:4:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 887,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5777:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 882,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5754:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5758:6:5",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5754:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5754:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5728:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5786:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5720:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "5720:111:5"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "4819:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5205:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5232:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5225:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 859,
														"name": "IERC20",
														"nameLocations": [
															"5225:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "5225:6:5"
													},
													"referencedDeclaration": 531,
													"src": "5225:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5252:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "5239:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 862,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5239:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:33:5"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5266:0:5"
									},
									"scope": 943,
									"src": "5196:642:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "6428:505:5",
										"statements": [
											{
												"assignments": [
													906,
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6729:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "6724:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 905,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6724:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6751:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "6738:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 907,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [
														{
															"id": 914,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "6785:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 911,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "6773:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$531",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6765:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 909,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6765:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6765:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6780:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6765:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6765:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6723:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 917,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "6819:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 918,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "6831:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6842:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6831:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6852:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6831:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 924,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "6868:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 926,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6881:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 925,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6881:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 927,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6880:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 922,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6857:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6861:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6857:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6857:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6831:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 930,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6830:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6819:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 936,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "6919:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6911:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 934,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6911:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6911:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 932,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "6892:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$1273_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6900:10:5",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 961,
															"src": "6892:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6892:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6819:107:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 904,
												"id": 940,
												"nodeType": "Return",
												"src": "6800:126:5"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "5844:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6348:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6379:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "6372:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 897,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 896,
														"name": "IERC20",
														"nameLocations": [
															"6372:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "6372:6:5"
													},
													"referencedDeclaration": 531,
													"src": "6372:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6399:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "6386:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6371:33:5"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "6422:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 902,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6422:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6421:6:5"
									},
									"scope": 943,
									"src": "6339:594:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 944,
							"src": "701:6234:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:6821:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1273
						]
					},
					"id": 1274,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 945,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 946,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1273,
							"linearizedBaseContracts": [
								1273
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "1478:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 954,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "1702:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 953,
												"id": 959,
												"nodeType": "Return",
												"src": "1695:30:6"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1432:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "1472:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:6"
									},
									"scope": 1273,
									"src": "1412:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "2718:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 972,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1273",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1273",
																				"typeString": "library Address"
																			}
																		],
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 970,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 975,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2761:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:6"
											},
											{
												"assignments": [
													981,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "2813:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 980,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 988,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 982,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "2831:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 984,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2853:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 990,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "2882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:6"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2666:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2693:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:6"
									},
									"scope": 1273,
									"src": "2647:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "3790:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1006,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "3829:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1007,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "3837:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1005,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1053,
															1097
														],
														"referencedDeclaration": 1097,
														"src": "3807:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1011,
												"nodeType": "Return",
												"src": "3800:79:6"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "3723:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "3739:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:6"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "3776:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:6"
									},
									"scope": 1273,
									"src": "3701:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "4255:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "4294:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "4302:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1029,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "4311:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1025,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1053,
															1097
														],
														"referencedDeclaration": 1097,
														"src": "4272:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1024,
												"id": 1031,
												"nodeType": "Return",
												"src": "4265:59:6"
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4163:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1017,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4190:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1019,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:6"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "4241:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:6"
									},
									"scope": 1273,
									"src": "4108:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "4806:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1046,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "4845:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "4853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1048,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1040,
															"src": "4859:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1045,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1053,
															1097
														],
														"referencedDeclaration": 1097,
														"src": "4823:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1044,
												"id": 1051,
												"nodeType": "Return",
												"src": "4816:94:6"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "4724:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "4740:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1037,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "4759:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:6"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "4792:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:6"
									},
									"scope": 1273,
									"src": "4693:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "5344:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1070,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1273",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1273",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1068,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1073,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "5387:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:6"
											},
											{
												"assignments": [
													1079,
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1079,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "5446:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1078,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1096,
														"src": "5460:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1080,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1086,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "5513:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1082,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "5487:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1084,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "5506:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "5562:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "5570:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1092,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "5579:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1093,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "5591:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1089,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "5535:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1095,
												"nodeType": "Return",
												"src": "5528:76:6"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5205:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5229:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1057,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5256:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5279:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "5330:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:6"
									},
									"scope": 1273,
									"src": "5165:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "5888:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1108,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "5924:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "5932:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1107,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1114,
															1143
														],
														"referencedDeclaration": 1143,
														"src": "5905:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1112,
												"nodeType": "Return",
												"src": "5898:80:6"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5816:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:6"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "5874:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:6"
									},
									"scope": 1273,
									"src": "5788:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "6327:168:6",
										"statements": [
											{
												"assignments": [
													1127,
													1129
												],
												"declarations": [
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "6338:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1126,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "6352:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1128,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1134,
												"initialValue": {
													"arguments": [
														{
															"id": 1132,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "6397:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1130,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "6379:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "6446:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "6454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1138,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "6463:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1139,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "6475:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1135,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "6419:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1125,
												"id": 1141,
												"nodeType": "Return",
												"src": "6412:76:6"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "6206:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "6230:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "6257:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:6"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "6313:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:6"
									},
									"scope": 1273,
									"src": "6169:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "6771:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1154,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "6809:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1155,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "6817:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1153,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1160,
															1189
														],
														"referencedDeclaration": 1189,
														"src": "6788:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1152,
												"id": 1158,
												"nodeType": "Return",
												"src": "6781:84:6"
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "6704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "6720:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:6"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "6757:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:6"
									},
									"scope": 1273,
									"src": "6674:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "7213:170:6",
										"statements": [
											{
												"assignments": [
													1173,
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "7224:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1172,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "7238:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1174,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1180,
												"initialValue": {
													"arguments": [
														{
															"id": 1178,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "7285:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1176,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "7265:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1182,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "7334:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "7342:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1184,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "7351:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "7363:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1181,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "7307:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1187,
												"nodeType": "Return",
												"src": "7300:76:6"
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "7097:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "7121:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "7148:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "7199:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:6"
									},
									"scope": 1273,
									"src": "7058:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "7865:434:6",
										"statements": [
											{
												"condition": {
													"id": 1203,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1194,
													"src": "7879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1225,
													"nodeType": "Block",
													"src": "8235:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1221,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "8257:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1222,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "8269:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1220,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "8249:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1224,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:6"
														}
													]
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "7875:418:6",
												"trueBody": {
													"id": 1219,
													"nodeType": "Block",
													"src": "7888:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1204,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "7906:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1216,
															"nodeType": "IfStatement",
															"src": "7902:286:6",
															"trueBody": {
																"id": 1215,
																"nodeType": "Block",
																"src": "7930:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1210,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1192,
																							"src": "8132:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1209,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 961,
																						"src": "8121:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1212,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1208,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1214,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1217,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "8208:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1202,
															"id": 1218,
															"nodeType": "Return",
															"src": "8201:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7716:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7740:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7762:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7795:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1197,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:6"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "7851:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:6"
									},
									"scope": 1273,
									"src": "7671:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "8680:135:6",
										"statements": [
											{
												"condition": {
													"id": 1240,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1231,
													"src": "8694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "8751:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1245,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "8773:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1246,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "8785:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1244,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "8765:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1248,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:6"
														}
													]
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "8690:119:6",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "8703:42:6",
													"statements": [
														{
															"expression": {
																"id": 1241,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "8724:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1239,
															"id": 1242,
															"nodeType": "Return",
															"src": "8717:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "8555:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "8577:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "8610:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:6"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "8666:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:6"
									},
									"scope": 1273,
									"src": "8520:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "8904:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "8980:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1269,
													"nodeType": "Block",
													"src": "9310:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1266,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "9331:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1265,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1268,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:6"
														}
													]
												},
												"id": 1270,
												"nodeType": "IfStatement",
												"src": "8976:379:6",
												"trueBody": {
													"id": 1264,
													"nodeType": "Block",
													"src": "9003:301:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9161:133:6",
																"nodeType": "YulBlock",
																"src": "9161:133:6",
																"statements": [
																	{
																		"nativeSrc": "9179:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9208:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9202:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:6"
																			},
																			"nativeSrc": "9202:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9183:15:6",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9247:2:6",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9251:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9243:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:6"
																					},
																					"nativeSrc": "9243:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9264:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9236:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:6"
																			},
																			"nativeSrc": "9236:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:6"
																		},
																		"nativeSrc": "9236:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1254,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1254,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:6",
																	"valueSize": 1
																}
															],
															"id": 1263,
															"nodeType": "InlineAssembly",
															"src": "9152:142:6"
														}
													]
												}
											}
										]
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "8838:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "8863:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1255,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:6"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:6"
									},
									"scope": 1273,
									"src": "8821:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1274,
							"src": "194:9169:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9263:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1295
						]
					},
					"id": 1296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1275,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1276,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1295,
							"linearizedBaseContracts": [
								1295
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1281,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1280,
												"id": 1283,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1295,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1290,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1292,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1295,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1296,
							"src": "624:235:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2426
						],
						"SignedMath": [
							2843
						],
						"Strings": [
							1524
						]
					},
					"id": 1525,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 2427,
							"src": "126:25:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1525,
							"sourceUnit": 2844,
							"src": "152:31:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1300,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:8",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1524,
							"linearizedBaseContracts": [
								1524
							],
							"name": "Strings",
							"nameLocation": "228:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1303,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "242:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1301,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1302,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:8",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1306,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1524,
									"src": "302:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1304,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1305,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "518:625:8",
										"statements": [
											{
												"id": 1352,
												"nodeType": "UncheckedBlock",
												"src": "528:609:8",
												"statements": [
													{
														"assignments": [
															1315
														],
														"declarations": [
															{
																"constant": false,
																"id": 1315,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1352,
																"src": "552:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1314,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1322,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1318,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1309,
																		"src": "580:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1316,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "569:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2426_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:8",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2263,
																	"src": "569:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:8"
													},
													{
														"assignments": [
															1324
														],
														"declarations": [
															{
																"constant": false,
																"id": 1324,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1352,
																"src": "604:20:8",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1323,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1329,
														"initialValue": {
															"arguments": [
																{
																	"id": 1327,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "638:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1325,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:8"
													},
													{
														"assignments": [
															1331
														],
														"declarations": [
															{
																"constant": false,
																"id": 1331,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1352,
																"src": "659:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1332,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:8"
													},
													{
														"AST": {
															"nativeSrc": "740:67:8",
															"nodeType": "YulBlock",
															"src": "740:67:8",
															"statements": [
																{
																	"nativeSrc": "758:35:8",
																	"nodeType": "YulAssignment",
																	"src": "758:35:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:8",
																						"nodeType": "YulLiteral",
																						"src": "781:2:8",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:8"
																				},
																				"nativeSrc": "777:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:8"
																		},
																		"nativeSrc": "765:28:8",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:8"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:8"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1324,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:8",
																"valueSize": 1
															},
															{
																"declaration": 1331,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:8",
																"valueSize": 1
															}
														],
														"id": 1333,
														"nodeType": "InlineAssembly",
														"src": "731:76:8"
													},
													{
														"body": {
															"id": 1348,
															"nodeType": "Block",
															"src": "833:267:8",
															"statements": [
																{
																	"expression": {
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:8",
																		"subExpression": {
																			"id": 1335,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "851:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1337,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:8"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:8",
																		"nodeType": "YulBlock",
																		"src": "934:84:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:8",
																											"nodeType": "YulLiteral",
																											"src": "985:2:8",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:8"
																									},
																									"nativeSrc": "974:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:8"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:8",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:8"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:8"
																							},
																							"nativeSrc": "969:30:8",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:8"
																					},
																					"nativeSrc": "956:44:8",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:8"
																				},
																				"nativeSrc": "956:44:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:8"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1303,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1331,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:8",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1309,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:8",
																			"valueSize": 1
																		}
																	],
																	"id": 1338,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:8"
																},
																{
																	"expression": {
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "1035:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1342,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:8"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1343,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "1068:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1347,
																	"nodeType": "IfStatement",
																	"src": "1064:21:8",
																	"trueBody": {
																		"id": 1346,
																		"nodeType": "Break",
																		"src": "1080:5:8"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1349,
														"nodeType": "WhileStatement",
														"src": "820:280:8"
													},
													{
														"expression": {
															"id": 1350,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "1120:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1313,
														"id": 1351,
														"nodeType": "Return",
														"src": "1113:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "465:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:8"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "503:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:8"
									},
									"scope": 1524,
									"src": "447:696:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "1313:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1366,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1357,
																			"src": "1354:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:8",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1375,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1357,
																					"src": "1400:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1373,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2843,
																					"src": "1385:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2843_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:8",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2842,
																				"src": "1385:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1372,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1354,
																			1382
																		],
																		"referencedDeclaration": 1354,
																		"src": "1376:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1364,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:8",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1362,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1361,
												"id": 1380,
												"nodeType": "Return",
												"src": "1323:86:8"
											}
										]
									},
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:8",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "1261:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1356,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:8"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "1298:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:8"
									},
									"scope": 1524,
									"src": "1243:173:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "1595:100:8",
										"statements": [
											{
												"id": 1400,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "1648:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1394,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "1667:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1392,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2426,
																				"src": "1655:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2426_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:8",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2386,
																			"src": "1655:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1390,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1402,
																	1478,
																	1498
																],
																"referencedDeclaration": 1478,
																"src": "1636:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1389,
														"id": 1399,
														"nodeType": "Return",
														"src": "1629:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1542:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:8"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "1580:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:8"
									},
									"scope": 1524,
									"src": "1521:174:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "1908:347:8",
										"statements": [
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "1918:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1412,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1417,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "1954:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1414,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:8"
											},
											{
												"expression": {
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1423,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "1975:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1425,
														"indexExpression": {
															"hexValue": "30",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:8"
											},
											{
												"expression": {
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1429,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2000:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1431,
														"indexExpression": {
															"hexValue": "31",
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:8"
											},
											{
												"body": {
													"id": 1463,
													"nodeType": "Block",
													"src": "2070:83:8",
													"statements": [
														{
															"expression": {
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1449,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "2084:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1451,
																	"indexExpression": {
																		"id": 1450,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "2091:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1452,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1303,
																		"src": "2096:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1456,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "2105:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1458,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:8"
														},
														{
															"expression": {
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1459,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "2131:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1462,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1443,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "2058:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1464,
												"initializationExpression": {
													"assignments": [
														1436
													],
													"declarations": [
														{
															"constant": false,
															"id": 1436,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1464,
															"src": "2030:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1435,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1442,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1438,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "2046:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:8",
														"subExpression": {
															"id": 1446,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "2067:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1466,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "2170:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1474,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "2241:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1472,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:8",
															"typeDescriptions": {}
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1476,
												"nodeType": "Return",
												"src": "2227:21:8"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:8",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1839:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1854:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:8"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1893:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:8"
									},
									"scope": 1524,
									"src": "1818:437:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "2480:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1491,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1481,
																			"src": "2525:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1489,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1487,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1494,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "2533:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1486,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1402,
															1478,
															1498
														],
														"referencedDeclaration": 1478,
														"src": "2497:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1485,
												"id": 1496,
												"nodeType": "Return",
												"src": "2490:59:8"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:8",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "2428:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:8"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "2465:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:8"
									},
									"scope": 1524,
									"src": "2407:149:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "2711:66:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1511,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "2744:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1509,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1508,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1517,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "2767:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1515,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1514,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1521,
												"nodeType": "Return",
												"src": "2721:49:8"
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:8",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2648:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2665:15:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1502,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:8"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "2705:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:8"
									},
									"scope": 1524,
									"src": "2633:144:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1525,
							"src": "220:2559:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1548
						],
						"IERC165": [
							1560
						]
					},
					"id": 1549,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1526,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1549,
							"sourceUnit": 1561,
							"src": "124:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1529,
										"name": "IERC165",
										"nameLocations": [
											"754:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1560,
										"src": "754:7:9"
									},
									"id": 1530,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1528,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1548,
							"linearizedBaseContracts": [
								1548,
								1560
							],
							"name": "ERC165",
							"nameLocation": "744:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1559
									],
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "920:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1539,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "937:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1541,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "957:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1560_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1560_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1540,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1560",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1545,
												"nodeType": "Return",
												"src": "930:47:9"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1535,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:9"
									},
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "856:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:9"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "914:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:9"
									},
									"scope": 1548,
									"src": "829:155:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1549,
							"src": "726:260:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1560
						]
					},
					"id": 1561,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1550,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1551,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1560,
							"linearizedBaseContracts": [
								1560
							],
							"name": "IERC165",
							"nameLocation": "415:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "801:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1553,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:10"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "844:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:10"
									},
									"scope": 1560,
									"src": "774:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1561,
							"src": "405:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2426
						]
					},
					"id": 2427,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1562,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1563,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:11",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2426,
							"linearizedBaseContracts": [
								2426
							],
							"name": "Math",
							"nameLocation": "210:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1567,
									"members": [
										{
											"id": 1564,
											"name": "Down",
											"nameLocation": "245:4:11",
											"nodeType": "EnumValue",
											"src": "245:4:11"
										},
										{
											"id": 1565,
											"name": "Up",
											"nameLocation": "287:2:11",
											"nodeType": "EnumValue",
											"src": "287:2:11"
										},
										{
											"id": 1566,
											"name": "Zero",
											"nameLocation": "318:4:11",
											"nodeType": "EnumValue",
											"src": "318:4:11"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:11",
									"nodeType": "EnumDefinition",
									"src": "221:122:11"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "480:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1577,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "497:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1578,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "501:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1581,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "509:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:11",
													"trueExpression": {
														"id": 1580,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "505:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1583,
												"nodeType": "Return",
												"src": "490:20:11"
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:11",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "426:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "437:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:11"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "471:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:11"
									},
									"scope": 2426,
									"src": "413:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "655:37:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1595,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "672:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1596,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "676:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1599,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "684:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:11",
													"trueExpression": {
														"id": 1598,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "680:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1594,
												"id": 1601,
												"nodeType": "Return",
												"src": "665:20:11"
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:11",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "601:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "612:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:11"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "646:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:11"
									},
									"scope": 2426,
									"src": "588:104:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "876:82:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1613,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "931:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1614,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "935:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1616,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1617,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1606,
																		"src": "941:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1618,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "945:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1620,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1612,
												"id": 1624,
												"nodeType": "Return",
												"src": "923:28:11"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:11",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "822:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "833:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:11"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "867:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:11"
									},
									"scope": 2426,
									"src": "805:153:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "1228:123:11",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1636,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "1316:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1640,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1629,
																			"src": "1330:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1644,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "1339:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1635,
												"id": 1649,
												"nodeType": "Return",
												"src": "1309:35:11"
											}
										]
									},
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:11",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1174:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1185:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:11"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "1219:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:11"
									},
									"scope": 2426,
									"src": "1157:194:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "1765:4115:11",
										"statements": [
											{
												"id": 1772,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:11",
												"statements": [
													{
														"assignments": [
															1664
														],
														"declarations": [
															{
																"constant": false,
																"id": 1664,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "2096:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1663,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1665,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:11"
													},
													{
														"assignments": [
															1667
														],
														"declarations": [
															{
																"constant": false,
																"id": 1667,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "2168:13:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1666,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1668,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:11"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:11",
															"nodeType": "YulBlock",
															"src": "2248:157:11",
															"statements": [
																{
																	"nativeSrc": "2266:30:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:11"
																				},
																				"nativeSrc": "2289:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:11"
																		},
																		"nativeSrc": "2276:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:11"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:11",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:11",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:11"
																		},
																		"nativeSrc": "2322:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:11",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:11"
																				},
																				"nativeSrc": "2361:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:11"
																				},
																				"nativeSrc": "2377:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:11"
																		},
																		"nativeSrc": "2357:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1654,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1654,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1656,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1656,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:11",
																"valueSize": 1
															}
														],
														"id": 1669,
														"nodeType": "InlineAssembly",
														"src": "2239:166:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1670,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "2486:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1678,
														"nodeType": "IfStatement",
														"src": "2482:368:11",
														"trueBody": {
															"id": 1677,
															"nodeType": "Block",
															"src": "2498:352:11",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1673,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1664,
																			"src": "2816:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1674,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "2824:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1662,
																	"id": 1676,
																	"nodeType": "Return",
																	"src": "2809:26:11"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1680,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "2960:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1681,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "2974:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1679,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1685,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:11"
													},
													{
														"assignments": [
															1687
														],
														"declarations": [
															{
																"constant": false,
																"id": 1687,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "3261:17:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1688,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:11"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:11",
															"nodeType": "YulBlock",
															"src": "3301:291:11",
															"statements": [
																{
																	"nativeSrc": "3370:38:11",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:11"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:11"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:11"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:11"
																		},
																		"nativeSrc": "3383:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:11"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:11",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:11"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:11",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:11"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:11"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:11"
																				},
																				"nativeSrc": "3510:20:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:11"
																		},
																		"nativeSrc": "3499:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:11",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:11"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:11"
																		},
																		"nativeSrc": "3557:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1658,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1667,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1687,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1687,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1687,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:11",
																"valueSize": 1
															},
															{
																"declaration": 1654,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:11",
																"valueSize": 1
															},
															{
																"declaration": 1656,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:11",
																"valueSize": 1
															}
														],
														"id": 1689,
														"nodeType": "InlineAssembly",
														"src": "3292:300:11"
													},
													{
														"assignments": [
															1691
														],
														"declarations": [
															{
																"constant": false,
																"id": 1691,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "3899:12:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1690,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1699,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1692,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "3914:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:11",
																			"subExpression": {
																				"id": 1693,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1658,
																				"src": "3930:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1697,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:11"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:11",
															"nodeType": "YulBlock",
															"src": "3969:362:11",
															"statements": [
																{
																	"nativeSrc": "4034:37:11",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:11",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:11"
																		},
																		"nativeSrc": "4049:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:11"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:11"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:11",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:11"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:11"
																		},
																		"nativeSrc": "4147:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:11"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:11"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:11",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:11",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:11",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:11"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:11"
																						},
																						"nativeSrc": "4294:12:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:11"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:11"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:11"
																				},
																				"nativeSrc": "4290:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:11"
																		},
																		"nativeSrc": "4286:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:11"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:11",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:11"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1658,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1658,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1664,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:11",
																"valueSize": 1
															},
															{
																"declaration": 1691,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:11",
																"valueSize": 1
															}
														],
														"id": 1700,
														"nodeType": "InlineAssembly",
														"src": "3960:371:11"
													},
													{
														"expression": {
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1701,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "4397:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1702,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "4406:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1703,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "4414:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1706,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:11"
													},
													{
														"assignments": [
															1708
														],
														"declarations": [
															{
																"constant": false,
																"id": 1708,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:11",
																"nodeType": "VariableDeclaration",
																"scope": 1772,
																"src": "4736:15:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1707,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1715,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1710,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1658,
																			"src": "4759:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1712,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:11"
													},
													{
														"expression": {
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1716,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "4992:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1718,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5007:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1719,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5021:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1723,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:11"
													},
													{
														"expression": {
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1724,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5061:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1726,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5076:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1727,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5090:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1731,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:11"
													},
													{
														"expression": {
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1732,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5131:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1734,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5146:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1735,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5160:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1739,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:11"
													},
													{
														"expression": {
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1740,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5201:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1742,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5216:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1743,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5230:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1747,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:11"
													},
													{
														"expression": {
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1748,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5271:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1750,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5286:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1751,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5300:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1755,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:11"
													},
													{
														"expression": {
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1756,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "5342:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1758,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "5357:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1759,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1708,
																		"src": "5371:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1763,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:11"
													},
													{
														"expression": {
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1764,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "5812:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1765,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "5821:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1766,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "5829:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1769,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:11"
													},
													{
														"expression": {
															"id": 1770,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "5857:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1662,
														"id": 1771,
														"nodeType": "Return",
														"src": "5850:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:11",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1683:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1694:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1705:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:11"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "1749:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:11"
									},
									"scope": 2426,
									"src": "1667:4213:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "6122:189:11",
										"statements": [
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "6132:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1796,
												"initialValue": {
													"arguments": [
														{
															"id": 1792,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "6156:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1793,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "6159:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1794,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "6162:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1791,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1774,
															1818
														],
														"referencedDeclaration": 1774,
														"src": "6149:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1567",
															"typeString": "enum Math.Rounding"
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1797,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "6188:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1567",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1798,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "6200:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:11",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1565,
															"src": "6200:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1567",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1802,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1777,
																	"src": "6222:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1803,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "6225:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1804,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1781,
																	"src": "6228:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1801,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1814,
												"nodeType": "IfStatement",
												"src": "6184:98:11",
												"trueBody": {
													"id": 1813,
													"nodeType": "Block",
													"src": "6246:36:11",
													"statements": [
														{
															"expression": {
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1809,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "6260:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1812,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1815,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1790,
													"src": "6298:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1816,
												"nodeType": "Return",
												"src": "6291:13:11"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:11",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6028:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6039:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6050:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6071:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1783,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1782,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "6071:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "6071:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:11"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6113:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:11"
									},
									"scope": 2426,
									"src": "6012:299:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "6587:1585:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1826,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "6601:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"nodeType": "IfStatement",
												"src": "6597:45:11",
												"trueBody": {
													"id": 1831,
													"nodeType": "Block",
													"src": "6609:33:11",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1825,
															"id": 1830,
															"nodeType": "Return",
															"src": "6623:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													1834
												],
												"declarations": [
													{
														"constant": false,
														"id": 1834,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1929,
														"src": "7321:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1833,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1843,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1837,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "7349:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1836,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2098,
																			2134
																		],
																		"referencedDeclaration": 2098,
																		"src": "7344:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1841,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:11"
											},
											{
												"id": 1928,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:11",
												"statements": [
													{
														"expression": {
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1844,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7782:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1845,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7792:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1846,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7801:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1847,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "7805:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1850,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1854,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:11"
													},
													{
														"expression": {
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1855,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7831:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1856,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7841:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1857,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7850:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1858,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "7854:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1861,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1865,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:11"
													},
													{
														"expression": {
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1866,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7880:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1867,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7890:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1868,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7899:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1869,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "7903:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1872,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1876,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:11"
													},
													{
														"expression": {
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1877,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7929:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1878,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7939:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1879,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7948:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1880,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "7952:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1883,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1887,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:11"
													},
													{
														"expression": {
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1888,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "7978:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1889,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "7988:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1890,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "7997:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1891,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "8001:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1894,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1898,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:11"
													},
													{
														"expression": {
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1899,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "8027:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1900,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "8037:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1903,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1901,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "8046:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1902,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "8050:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1905,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1909,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:11"
													},
													{
														"expression": {
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1910,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "8076:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1911,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1834,
																				"src": "8086:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1912,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "8095:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1913,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1834,
																					"src": "8099:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1916,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1920,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1922,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "8136:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1923,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1821,
																		"src": "8144:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1924,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "8148:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1921,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "8132:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1825,
														"id": 1927,
														"nodeType": "Return",
														"src": "8125:30:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:11",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "6544:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:11"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "6578:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:11"
									},
									"scope": 2426,
									"src": "6530:1642:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "8348:161:11",
										"statements": [
											{
												"id": 1964,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:11",
												"statements": [
													{
														"assignments": [
															1942
														],
														"declarations": [
															{
																"constant": false,
																"id": 1942,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1964,
																"src": "8382:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1941,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1946,
														"initialValue": {
															"arguments": [
																{
																	"id": 1944,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1933,
																	"src": "8404:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1943,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1930,
																	1966
																],
																"referencedDeclaration": 1930,
																"src": "8399:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1947,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "8427:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1567",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1948,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1936,
																					"src": "8437:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1949,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "8449:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1950,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1565,
																					"src": "8449:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1954,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1952,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1942,
																						"src": "8464:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1953,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1942,
																						"src": "8473:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1955,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1933,
																					"src": "8482:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1961,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1940,
														"id": 1963,
														"nodeType": "Return",
														"src": "8420:72:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:11",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "8286:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "8297:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1935,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1934,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "8297:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "8297:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:11"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "8339:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:11"
									},
									"scope": 2426,
									"src": "8272:237:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "8694:922:11",
										"statements": [
											{
												"assignments": [
													1975
												],
												"declarations": [
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2097,
														"src": "8704:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1977,
												"initialValue": {
													"hexValue": "30",
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:11"
											},
											{
												"id": 2094,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "8760:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1992,
														"nodeType": "IfStatement",
														"src": "8756:99:11",
														"trueBody": {
															"id": 1991,
															"nodeType": "Block",
															"src": "8778:77:11",
															"statements": [
																{
																	"expression": {
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1983,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "8796:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1986,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:11"
																},
																{
																	"expression": {
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1987,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "8827:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1990,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1993,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "8872:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2007,
														"nodeType": "IfStatement",
														"src": "8868:96:11",
														"trueBody": {
															"id": 2006,
															"nodeType": "Block",
															"src": "8889:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1998,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "8907:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2001,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:11"
																},
																{
																	"expression": {
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2002,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "8937:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2005,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "8981:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2022,
														"nodeType": "IfStatement",
														"src": "8977:96:11",
														"trueBody": {
															"id": 2021,
															"nodeType": "Block",
															"src": "8998:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2013,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9016:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2016,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:11"
																},
																{
																	"expression": {
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9046:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2020,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2023,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9090:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2037,
														"nodeType": "IfStatement",
														"src": "9086:96:11",
														"trueBody": {
															"id": 2036,
															"nodeType": "Block",
															"src": "9107:75:11",
															"statements": [
																{
																	"expression": {
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2028,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9125:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2031,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:11"
																},
																{
																	"expression": {
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2032,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9155:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2035,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9199:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2052,
														"nodeType": "IfStatement",
														"src": "9195:93:11",
														"trueBody": {
															"id": 2051,
															"nodeType": "Block",
															"src": "9215:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9233:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2046,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:11"
																},
																{
																	"expression": {
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2047,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9262:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2050,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9305:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2067,
														"nodeType": "IfStatement",
														"src": "9301:93:11",
														"trueBody": {
															"id": 2066,
															"nodeType": "Block",
															"src": "9321:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2058,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9339:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2061,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:11"
																},
																{
																	"expression": {
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2062,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9368:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2065,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2068,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9411:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2082,
														"nodeType": "IfStatement",
														"src": "9407:93:11",
														"trueBody": {
															"id": 2081,
															"nodeType": "Block",
															"src": "9427:73:11",
															"statements": [
																{
																	"expression": {
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2073,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "9445:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2076,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:11"
																},
																{
																	"expression": {
																		"id": 2079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2077,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9474:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2080,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2083,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1969,
																	"src": "9517:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2093,
														"nodeType": "IfStatement",
														"src": "9513:64:11",
														"trueBody": {
															"id": 2092,
															"nodeType": "Block",
															"src": "9533:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2088,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "9551:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2091,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2095,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1975,
													"src": "9603:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1973,
												"id": 2096,
												"nodeType": "Return",
												"src": "9596:13:11"
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:11",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "8647:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:11"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "8685:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:11"
									},
									"scope": 2426,
									"src": "8633:983:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2133,
										"nodeType": "Block",
										"src": "9849:165:11",
										"statements": [
											{
												"id": 2132,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:11",
												"statements": [
													{
														"assignments": [
															2110
														],
														"declarations": [
															{
																"constant": false,
																"id": 2110,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2132,
																"src": "9883:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2109,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2114,
														"initialValue": {
															"arguments": [
																{
																	"id": 2112,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2101,
																	"src": "9905:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2111,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2098,
																	2134
																],
																"referencedDeclaration": 2098,
																"src": "9900:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2115,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "9932:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1567",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2116,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2104,
																					"src": "9942:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2117,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "9954:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2118,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1565,
																					"src": "9954:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2122,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2120,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2121,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2110,
																						"src": "9974:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2123,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2101,
																					"src": "9983:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2108,
														"id": 2131,
														"nodeType": "Return",
														"src": "9925:72:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:11",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "9783:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "9798:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "9798:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "9798:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:11"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "9840:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:11"
									},
									"scope": 2426,
									"src": "9769:245:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "10201:854:11",
										"statements": [
											{
												"assignments": [
													2143
												],
												"declarations": [
													{
														"constant": false,
														"id": 2143,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "10211:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2142,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2145,
												"initialValue": {
													"hexValue": "30",
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:11"
											},
											{
												"id": 2259,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10267:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2162,
														"nodeType": "IfStatement",
														"src": "10263:103:11",
														"trueBody": {
															"id": 2161,
															"nodeType": "Block",
															"src": "10286:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2151,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10304:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2156,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:11"
																},
																{
																	"expression": {
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2157,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10339:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2160,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2163,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10383:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2179,
														"nodeType": "IfStatement",
														"src": "10379:103:11",
														"trueBody": {
															"id": 2178,
															"nodeType": "Block",
															"src": "10402:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2168,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10420:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2173,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:11"
																},
																{
																	"expression": {
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2174,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10455:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2177,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10499:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2196,
														"nodeType": "IfStatement",
														"src": "10495:103:11",
														"trueBody": {
															"id": 2195,
															"nodeType": "Block",
															"src": "10518:80:11",
															"statements": [
																{
																	"expression": {
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2185,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10536:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2190,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:11"
																},
																{
																	"expression": {
																		"id": 2193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2191,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10571:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2194,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2197,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10615:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2213,
														"nodeType": "IfStatement",
														"src": "10611:100:11",
														"trueBody": {
															"id": 2212,
															"nodeType": "Block",
															"src": "10633:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2202,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10651:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2203,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2207,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:11"
																},
																{
																	"expression": {
																		"id": 2210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2208,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10685:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2211,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2214,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10728:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2230,
														"nodeType": "IfStatement",
														"src": "10724:100:11",
														"trueBody": {
															"id": 2229,
															"nodeType": "Block",
															"src": "10746:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2219,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10764:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2224,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:11"
																},
																{
																	"expression": {
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2225,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10798:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2228,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2231,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10841:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "10837:100:11",
														"trueBody": {
															"id": 2246,
															"nodeType": "Block",
															"src": "10859:78:11",
															"statements": [
																{
																	"expression": {
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2236,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "10877:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2237,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2241,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:11"
																},
																{
																	"expression": {
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2242,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10911:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2245,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2248,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "10954:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2258,
														"nodeType": "IfStatement",
														"src": "10950:66:11",
														"trueBody": {
															"id": 2257,
															"nodeType": "Block",
															"src": "10972:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2253,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "10990:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2256,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2260,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2143,
													"src": "11042:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2261,
												"nodeType": "Return",
												"src": "11035:13:11"
											}
										]
									},
									"documentation": {
										"id": 2135,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:11",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "10154:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:11"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "10192:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:11"
									},
									"scope": 2426,
									"src": "10139:916:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "11290:167:11",
										"statements": [
											{
												"id": 2297,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:11",
												"statements": [
													{
														"assignments": [
															2275
														],
														"declarations": [
															{
																"constant": false,
																"id": 2275,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2297,
																"src": "11324:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2274,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2279,
														"initialValue": {
															"arguments": [
																{
																	"id": 2277,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "11347:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2276,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2263,
																	2299
																],
																"referencedDeclaration": 2263,
																"src": "11341:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2280,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "11374:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1567",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2281,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2269,
																					"src": "11384:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2282,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "11396:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1565,
																					"src": "11396:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2287,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2286,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2275,
																						"src": "11417:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2288,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "11426:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2294,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2273,
														"id": 2296,
														"nodeType": "Return",
														"src": "11367:73:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:11",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "11224:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "11239:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2267,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "11239:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "11239:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:11"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "11281:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:11"
									},
									"scope": 2426,
									"src": "11209:248:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "11771:600:11",
										"statements": [
											{
												"assignments": [
													2308
												],
												"declarations": [
													{
														"constant": false,
														"id": 2308,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2385,
														"src": "11781:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2307,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2310,
												"initialValue": {
													"hexValue": "30",
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:11"
											},
											{
												"id": 2382,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2311,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "11837:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2325,
														"nodeType": "IfStatement",
														"src": "11833:98:11",
														"trueBody": {
															"id": 2324,
															"nodeType": "Block",
															"src": "11855:76:11",
															"statements": [
																{
																	"expression": {
																		"id": 2318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2316,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "11873:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2319,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:11"
																},
																{
																	"expression": {
																		"id": 2322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2320,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "11904:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2323,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "11948:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2340,
														"nodeType": "IfStatement",
														"src": "11944:95:11",
														"trueBody": {
															"id": 2339,
															"nodeType": "Block",
															"src": "11965:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "11983:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2334,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:11"
																},
																{
																	"expression": {
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2335,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "12013:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2338,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "12056:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2355,
														"nodeType": "IfStatement",
														"src": "12052:95:11",
														"trueBody": {
															"id": 2354,
															"nodeType": "Block",
															"src": "12073:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2346,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "12091:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2349,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:11"
																},
																{
																	"expression": {
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2350,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "12121:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2353,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2356,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "12164:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2370,
														"nodeType": "IfStatement",
														"src": "12160:95:11",
														"trueBody": {
															"id": 2369,
															"nodeType": "Block",
															"src": "12181:74:11",
															"statements": [
																{
																	"expression": {
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2361,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "12199:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2364,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:11"
																},
																{
																	"expression": {
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2365,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "12229:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2368,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:11"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2371,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2302,
																	"src": "12272:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2381,
														"nodeType": "IfStatement",
														"src": "12268:64:11",
														"trueBody": {
															"id": 2380,
															"nodeType": "Block",
															"src": "12288:44:11",
															"statements": [
																{
																	"expression": {
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2376,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2308,
																			"src": "12306:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2379,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:11"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2383,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2308,
													"src": "12358:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2306,
												"id": 2384,
												"nodeType": "Return",
												"src": "12351:13:11"
											}
										]
									},
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:11",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "11724:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:11"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "11762:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:11"
									},
									"scope": 2426,
									"src": "11708:663:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2424,
										"nodeType": "Block",
										"src": "12608:174:11",
										"statements": [
											{
												"id": 2423,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:11",
												"statements": [
													{
														"assignments": [
															2398
														],
														"declarations": [
															{
																"constant": false,
																"id": 2398,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 2423,
																"src": "12642:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2397,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2402,
														"initialValue": {
															"arguments": [
																{
																	"id": 2400,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2389,
																	"src": "12666:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2399,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2386,
																	2425
																],
																"referencedDeclaration": 2386,
																"src": "12659:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2403,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2398,
																"src": "12693:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1567",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2404,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2392,
																					"src": "12703:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2405,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "12715:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1567_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2406,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:11",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1565,
																					"src": "12715:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1567",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2413,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2408,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2411,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2409,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2398,
																									"src": "12736:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2410,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2412,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2389,
																					"src": "12751:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:11",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2420,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2396,
														"id": 2422,
														"nodeType": "Return",
														"src": "12686:79:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:11",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12542:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12557:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1567",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2391,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2390,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1567,
														"src": "12557:8:11"
													},
													"referencedDeclaration": 1567,
													"src": "12557:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1567",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:11"
									},
									"returnParameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "12599:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:11"
									},
									"scope": 2426,
									"src": "12526:256:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2427,
							"src": "202:12582:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2738
						]
					},
					"id": 2739,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2428,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2429,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:12",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2738,
							"linearizedBaseContracts": [
								2738
							],
							"name": "SafeMath",
							"nameLocation": "490:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2460,
										"nodeType": "Block",
										"src": "717:140:12",
										"statements": [
											{
												"id": 2459,
												"nodeType": "UncheckedBlock",
												"src": "727:124:12",
												"statements": [
													{
														"assignments": [
															2442
														],
														"declarations": [
															{
																"constant": false,
																"id": 2442,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2459,
																"src": "751:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2441,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2446,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2443,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "763:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2444,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2434,
																"src": "767:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2447,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2442,
																"src": "786:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2448,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2432,
																"src": "790:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2454,
														"nodeType": "IfStatement",
														"src": "782:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2440,
															"id": 2453,
															"nodeType": "Return",
															"src": "793:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2456,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "838:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2457,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2440,
														"id": 2458,
														"nodeType": "Return",
														"src": "824:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "657:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "668:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:12"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "702:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "708:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:12"
									},
									"scope": 2738,
									"src": "641:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2488,
										"nodeType": "Block",
										"src": "1078:113:12",
										"statements": [
											{
												"id": 2487,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2473,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2466,
																"src": "1116:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2474,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2464,
																"src": "1120:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2480,
														"nodeType": "IfStatement",
														"src": "1112:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2478,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2472,
															"id": 2479,
															"nodeType": "Return",
															"src": "1123:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2482,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2464,
																		"src": "1168:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2483,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2466,
																		"src": "1172:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2485,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2472,
														"id": 2486,
														"nodeType": "Return",
														"src": "1154:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "1018:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "1029:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:12"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "1063:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2489,
												"src": "1069:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:12"
									},
									"scope": 2738,
									"src": "1002:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2530,
										"nodeType": "Block",
										"src": "1415:417:12",
										"statements": [
											{
												"id": 2529,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2501,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "1683:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2508,
														"nodeType": "IfStatement",
														"src": "1679:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2506,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2500,
															"id": 2507,
															"nodeType": "Return",
															"src": "1691:16:12"
														}
													},
													{
														"assignments": [
															2510
														],
														"declarations": [
															{
																"constant": false,
																"id": 2510,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2529,
																"src": "1721:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2509,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2514,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2511,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2492,
																"src": "1733:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2512,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2494,
																"src": "1737:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2515,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2510,
																	"src": "1756:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2516,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2492,
																	"src": "1760:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2518,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2494,
																"src": "1765:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2524,
														"nodeType": "IfStatement",
														"src": "1752:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2522,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2500,
															"id": 2523,
															"nodeType": "Return",
															"src": "1768:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2526,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2510,
																	"src": "1813:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2527,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2500,
														"id": 2528,
														"nodeType": "Return",
														"src": "1799:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2490,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1355:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1366:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:12"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1400:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "1406:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:12"
									},
									"scope": 2738,
									"src": "1339:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2558,
										"nodeType": "Block",
										"src": "2057:114:12",
										"statements": [
											{
												"id": 2557,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2543,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2536,
																"src": "2095:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2550,
														"nodeType": "IfStatement",
														"src": "2091:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2548,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2542,
															"id": 2549,
															"nodeType": "Return",
															"src": "2103:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2552,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2534,
																		"src": "2148:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2553,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2536,
																		"src": "2152:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2555,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2542,
														"id": 2556,
														"nodeType": "Return",
														"src": "2134:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2532,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "1997:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2008:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:12"
									},
									"returnParameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2042:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2048:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:12"
									},
									"scope": 2738,
									"src": "1981:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "2406:114:12",
										"statements": [
											{
												"id": 2585,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2571,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2564,
																"src": "2444:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2578,
														"nodeType": "IfStatement",
														"src": "2440:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2576,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2570,
															"id": 2577,
															"nodeType": "Return",
															"src": "2452:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2580,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2562,
																		"src": "2497:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2581,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2564,
																		"src": "2501:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2583,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2570,
														"id": 2584,
														"nodeType": "Return",
														"src": "2483:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2346:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2357:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:12"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2391:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2566,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "2397:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:12"
									},
									"scope": 2738,
									"src": "2330:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "2822:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2597,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2590,
														"src": "2839:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2598,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2592,
														"src": "2843:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2596,
												"id": 2600,
												"nodeType": "Return",
												"src": "2832:12:12"
											}
										]
									},
									"documentation": {
										"id": 2588,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:12",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2768:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2779:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:12"
									},
									"returnParameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "2813:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:12"
									},
									"scope": 2738,
									"src": "2755:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2616,
										"nodeType": "Block",
										"src": "3189:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2612,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "3206:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2613,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2607,
														"src": "3210:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2611,
												"id": 2615,
												"nodeType": "Return",
												"src": "3199:12:12"
											}
										]
									},
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "3135:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "3146:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:12"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "3180:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:12"
									},
									"scope": 2738,
									"src": "3122:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2631,
										"nodeType": "Block",
										"src": "3532:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2627,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "3549:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2628,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2622,
														"src": "3553:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2626,
												"id": 2630,
												"nodeType": "Return",
												"src": "3542:12:12"
											}
										]
									},
									"documentation": {
										"id": 2618,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:12",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3478:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3489:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:12"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "3523:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:12"
									},
									"scope": 2738,
									"src": "3465:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2646,
										"nodeType": "Block",
										"src": "3917:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2642,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2635,
														"src": "3934:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2643,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2637,
														"src": "3938:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2641,
												"id": 2645,
												"nodeType": "Return",
												"src": "3927:12:12"
											}
										]
									},
									"documentation": {
										"id": 2633,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "3863:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "3874:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:12"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "3908:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:12"
									},
									"scope": 2738,
									"src": "3850:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2661,
										"nodeType": "Block",
										"src": "4466:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2657,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2650,
														"src": "4483:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2658,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2652,
														"src": "4487:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2656,
												"id": 2660,
												"nodeType": "Return",
												"src": "4476:12:12"
											}
										]
									},
									"documentation": {
										"id": 2648,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "4412:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "4423:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:12"
									},
									"returnParameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "4457:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:12"
									},
									"scope": 2738,
									"src": "4399:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "5054:106:12",
										"statements": [
											{
												"id": 2685,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2675,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2667,
																		"src": "5096:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2676,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2665,
																		"src": "5101:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2678,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "5104:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2674,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2680,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2681,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2665,
																"src": "5138:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2682,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2667,
																"src": "5142:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2673,
														"id": 2684,
														"nodeType": "Return",
														"src": "5131:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2663,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "4972:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "4983:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "4994:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2668,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:12"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "5045:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:12"
									},
									"scope": 2738,
									"src": "4959:201:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2711,
										"nodeType": "Block",
										"src": "5739:105:12",
										"statements": [
											{
												"id": 2710,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2700,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2692,
																		"src": "5781:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2703,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2694,
																	"src": "5788:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2699,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2705,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2706,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2690,
																"src": "5822:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2707,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2692,
																"src": "5826:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2698,
														"id": 2709,
														"nodeType": "Return",
														"src": "5815:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "5657:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "5668:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "5679:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:12"
									},
									"returnParameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "5730:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:12"
									},
									"scope": 2738,
									"src": "5644:200:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2736,
										"nodeType": "Block",
										"src": "6585:105:12",
										"statements": [
											{
												"id": 2735,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2725,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2717,
																		"src": "6627:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2728,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2719,
																	"src": "6634:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2724,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2730,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2731,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2715,
																"src": "6668:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2732,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2717,
																"src": "6672:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2723,
														"id": 2734,
														"nodeType": "Return",
														"src": "6661:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2713,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "6503:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "6514:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "6525:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:12"
									},
									"returnParameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "6576:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:12"
									},
									"scope": 2738,
									"src": "6490:200:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2739,
							"src": "482:6210:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2843
						]
					},
					"id": 2844,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2740,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2741,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2843,
							"linearizedBaseContracts": [
								2843
							],
							"name": "SignedMath",
							"nameLocation": "223:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2758,
										"nodeType": "Block",
										"src": "375:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2751,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "392:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2752,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "396:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2755,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2746,
														"src": "404:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:13",
													"trueExpression": {
														"id": 2754,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2744,
														"src": "400:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2750,
												"id": 2757,
												"nodeType": "Return",
												"src": "385:20:13"
											}
										]
									},
									"documentation": {
										"id": 2742,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "324:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2743,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "334:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2745,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:13"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "367:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2748,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:13"
									},
									"scope": 2843,
									"src": "311:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2776,
										"nodeType": "Block",
										"src": "554:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2769,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "571:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2770,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2764,
															"src": "575:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2773,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2764,
														"src": "583:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:13",
													"trueExpression": {
														"id": 2772,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2762,
														"src": "579:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2768,
												"id": 2775,
												"nodeType": "Return",
												"src": "564:20:13"
											}
										]
									},
									"documentation": {
										"id": 2760,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "503:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2761,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "513:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2763,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:13"
									},
									"returnParameters": {
										"id": 2768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2777,
												"src": "546:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2766,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:13"
									},
									"scope": 2843,
									"src": "490:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "796:162:13",
										"statements": [
											{
												"assignments": [
													2788
												],
												"declarations": [
													{
														"constant": false,
														"id": 2788,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2820,
														"src": "858:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2787,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2801,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2789,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2780,
																	"src": "870:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2790,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "874:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2792,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2793,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2780,
																				"src": "881:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2794,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2782,
																				"src": "885:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2796,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2799,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2802,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2788,
														"src": "910:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2807,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2788,
																						"src": "930:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2805,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2803,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2812,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2780,
																				"src": "944:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2813,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2782,
																				"src": "948:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2815,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2817,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2786,
												"id": 2819,
												"nodeType": "Return",
												"src": "903:48:13"
											}
										]
									},
									"documentation": {
										"id": 2778,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "745:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2779,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2782,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "755:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2781,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:13"
									},
									"returnParameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "788:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2784,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:13"
									},
									"scope": 2843,
									"src": "728:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "1102:158:13",
										"statements": [
											{
												"id": 2840,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2831,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "1227:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:13",
																		"subExpression": {
																			"id": 2835,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "1241:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:13",
																	"trueExpression": {
																		"id": 2834,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2824,
																		"src": "1236:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2829,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2828,
														"id": 2839,
														"nodeType": "Return",
														"src": "1212:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "1060:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2823,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:13"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "1093:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:13"
									},
									"scope": 2843,
									"src": "1047:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2844,
							"src": "215:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:13"
				},
				"id": 13
			},
			"crowdsale/crowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							1273
						],
						"Context": [
							1295
						],
						"Crowdsale": [
							3153
						],
						"IERC20": [
							531
						],
						"IERC20Permit": [
							567
						],
						"ReentrancyGuard": [
							453
						],
						"SafeERC20": [
							943
						],
						"SafeMath": [
							2738
						]
					},
					"id": 3154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2845,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2846,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 1296,
							"src": "60:51:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 532,
							"src": "113:56:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 454,
							"src": "171:62:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 2849,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 944,
							"src": "235:65:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3154,
							"sourceUnit": 2739,
							"src": "302:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2852,
										"name": "Context",
										"nameLocations": [
											"1102:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1295,
										"src": "1102:7:14"
									},
									"id": 2853,
									"nodeType": "InheritanceSpecifier",
									"src": "1102:7:14"
								},
								{
									"baseName": {
										"id": 2854,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1111:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 453,
										"src": "1111:15:14"
									},
									"id": 2855,
									"nodeType": "InheritanceSpecifier",
									"src": "1111:15:14"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2851,
								"nodeType": "StructuredDocumentation",
								"src": "363:706:14",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 3153,
							"linearizedBaseContracts": [
								3153,
								453,
								1295
							],
							"name": "Crowdsale",
							"nameLocation": "1089:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2858,
									"libraryName": {
										"id": 2856,
										"name": "SafeMath",
										"nameLocations": [
											"1140:8:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2738,
										"src": "1140:8:14"
									},
									"nodeType": "UsingForDirective",
									"src": "1134:27:14",
									"typeName": {
										"id": 2857,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1153:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 2862,
									"libraryName": {
										"id": 2859,
										"name": "SafeERC20",
										"nameLocations": [
											"1173:9:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 943,
										"src": "1173:9:14"
									},
									"nodeType": "UsingForDirective",
									"src": "1167:27:14",
									"typeName": {
										"id": 2861,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2860,
											"name": "IERC20",
											"nameLocations": [
												"1187:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 531,
											"src": "1187:6:14"
										},
										"referencedDeclaration": 531,
										"src": "1187:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$531",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 2865,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1246:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 3153,
									"src": "1231:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$531",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 2864,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2863,
											"name": "IERC20",
											"nameLocations": [
												"1231:6:14"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 531,
											"src": "1231:6:14"
										},
										"referencedDeclaration": 531,
										"src": "1231:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$531",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2867,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1327:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 3153,
									"src": "1303:31:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2866,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1303:15:14",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2869,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1647:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 3153,
									"src": "1631:21:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2868,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1631:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2871,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1706:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 3153,
									"src": "1690:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2870,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1690:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "1725:241:14",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 2882,
									"name": "TokensPurchased",
									"nameLocation": "1978:15:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "2010:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1994:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2037:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "2021:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2878,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2058:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "2050:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2880,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2073:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "2065:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:87:14"
									},
									"src": "1972:109:14"
								},
								{
									"body": {
										"id": 2935,
										"nodeType": "Block",
										"src": "2616:318:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2894,
																"name": "inRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2885,
																"src": "2635:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2644:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2635:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2647:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 2893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2627:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2627:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2899,
												"nodeType": "ExpressionStatement",
												"src": "2627:43:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2901,
																"name": "inWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2887,
																"src": "2689:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2709:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2701:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2902,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2701:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2701:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2689:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2713:39:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 2900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2681:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2681:72:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2909,
												"nodeType": "ExpressionStatement",
												"src": "2681:72:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2913,
																		"name": "inToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2890,
																		"src": "2780:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$531",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 2912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2772:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2911,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2772:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2772:16:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2800:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2792:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2915,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2792:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2792:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2772:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 2910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2764:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2764:79:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2922,
												"nodeType": "ExpressionStatement",
												"src": "2764:79:14"
											},
											{
												"expression": {
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2923,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2869,
														"src": "2856:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2924,
														"name": "inRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2885,
														"src": "2864:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2856:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2926,
												"nodeType": "ExpressionStatement",
												"src": "2856:14:14"
											},
											{
												"expression": {
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2927,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "2881:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2928,
														"name": "inWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2887,
														"src": "2891:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2881:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2930,
												"nodeType": "ExpressionStatement",
												"src": "2881:18:14"
											},
											{
												"expression": {
													"id": 2933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2931,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2865,
														"src": "2910:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$531",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2932,
														"name": "inToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2890,
														"src": "2919:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$531",
															"typeString": "contract IERC20"
														}
													},
													"src": "2910:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"id": 2934,
												"nodeType": "ExpressionStatement",
												"src": "2910:16:14"
											}
										]
									},
									"documentation": {
										"id": 2883,
										"nodeType": "StructuredDocumentation",
										"src": "2089:450:14",
										"text": " @param inRate Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param inWallet Address where collected funds will be forwarded to\n @param inToken Address of the token being sold"
									},
									"id": 2936,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "2566:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "2558:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "2590:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "2574:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "2607:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2936,
												"src": "2600:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2889,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2888,
														"name": "IERC20",
														"nameLocations": [
															"2600:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "2600:6:14"
													},
													"referencedDeclaration": 531,
													"src": "2600:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:58:14"
									},
									"returnParameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2616:0:14"
									},
									"scope": 3153,
									"src": "2545:389:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "3259:42:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2941,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "3280:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3280:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2940,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3050,
														"src": "3270:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3270:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2944,
												"nodeType": "ExpressionStatement",
												"src": "3270:23:14"
											}
										]
									},
									"documentation": {
										"id": 2937,
										"nodeType": "StructuredDocumentation",
										"src": "2942:283:14",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 2946,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:2:14"
									},
									"returnParameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3259:0:14"
									},
									"scope": 3153,
									"src": "3231:70:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "3340:42:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2950,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "3361:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3361:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2949,
														"name": "buyTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3050,
														"src": "3351:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2953,
												"nodeType": "ExpressionStatement",
												"src": "3351:23:14"
											}
										]
									},
									"id": 2955,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3320:2:14"
									},
									"returnParameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:0:14"
									},
									"scope": 3153,
									"src": "3313:69:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "3492:32:14",
										"statements": [
											{
												"expression": {
													"id": 2962,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2865,
													"src": "3510:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 2961,
												"id": 2963,
												"nodeType": "Return",
												"src": "3503:13:14"
											}
										]
									},
									"documentation": {
										"id": 2956,
										"nodeType": "StructuredDocumentation",
										"src": "3390:50:14",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 2965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3455:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:2:14"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "3484:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2959,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2958,
														"name": "IERC20",
														"nameLocations": [
															"3484:6:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "3484:6:14"
													},
													"referencedDeclaration": 531,
													"src": "3484:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:8:14"
									},
									"scope": 3153,
									"src": "3446:78:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2973,
										"nodeType": "Block",
										"src": "3661:33:14",
										"statements": [
											{
												"expression": {
													"id": 2971,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2867,
													"src": "3679:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 2970,
												"id": 2972,
												"nodeType": "Return",
												"src": "3672:14:14"
											}
										]
									},
									"documentation": {
										"id": 2966,
										"nodeType": "StructuredDocumentation",
										"src": "3532:67:14",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 2974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3614:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3620:2:14"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2974,
												"src": "3644:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3644:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3643:17:14"
									},
									"scope": 3153,
									"src": "3605:89:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2982,
										"nodeType": "Block",
										"src": "3838:31:14",
										"statements": [
											{
												"expression": {
													"id": 2980,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2869,
													"src": "3856:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2979,
												"id": 2981,
												"nodeType": "Return",
												"src": "3849:12:14"
											}
										]
									},
									"documentation": {
										"id": 2975,
										"nodeType": "StructuredDocumentation",
										"src": "3702:76:14",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 2983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3793:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3797:2:14"
									},
									"returnParameters": {
										"id": 2979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "3829:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3829:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3828:9:14"
									},
									"scope": 3153,
									"src": "3784:85:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2991,
										"nodeType": "Block",
										"src": "3988:36:14",
										"statements": [
											{
												"expression": {
													"id": 2989,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2871,
													"src": "4006:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2988,
												"id": 2990,
												"nodeType": "Return",
												"src": "3999:17:14"
											}
										]
									},
									"documentation": {
										"id": 2984,
										"nodeType": "StructuredDocumentation",
										"src": "3877:54:14",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 2992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "3946:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3955:2:14"
									},
									"returnParameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2992,
												"src": "3979:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:9:14"
									},
									"scope": 3153,
									"src": "3937:87:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3049,
										"nodeType": "Block",
										"src": "4357:554:14",
										"statements": [
											{
												"assignments": [
													3001
												],
												"declarations": [
													{
														"constant": false,
														"id": 3001,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4376:9:14",
														"nodeType": "VariableDeclaration",
														"scope": 3049,
														"src": "4368:17:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4368:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3004,
												"initialValue": {
													"expression": {
														"id": 3002,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4388:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4392:5:14",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4388:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4368:29:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3006,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4429:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3007,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4442:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3005,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3078,
														"src": "4408:20:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4408:44:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3009,
												"nodeType": "ExpressionStatement",
												"src": "4408:44:14"
											},
											{
												"assignments": [
													3011
												],
												"declarations": [
													{
														"constant": false,
														"id": 3011,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4522:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3049,
														"src": "4514:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3010,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4514:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3015,
												"initialValue": {
													"arguments": [
														{
															"id": 3013,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4547:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3012,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3140,
														"src": "4531:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4531:26:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4514:43:14"
											},
											{
												"expression": {
													"id": 3021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3016,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "4595:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3019,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3001,
																"src": "4623:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3017,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "4608:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4619:3:14",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2602,
															"src": "4608:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:25:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4595:38:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3022,
												"nodeType": "ExpressionStatement",
												"src": "4595:38:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3024,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4663:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3025,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3011,
															"src": "4676:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3023,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3117,
														"src": "4646:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4646:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3027,
												"nodeType": "ExpressionStatement",
												"src": "4646:37:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3029,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "4715:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4715:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3031,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4729:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3032,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4742:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3033,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3011,
															"src": "4753:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3028,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2882,
														"src": "4699:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:61:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3035,
												"nodeType": "EmitStatement",
												"src": "4694:66:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3037,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4796:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3038,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4809:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3036,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3126,
														"src": "4773:22:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4773:46:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3040,
												"nodeType": "ExpressionStatement",
												"src": "4773:46:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3041,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3152,
														"src": "4832:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:15:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3043,
												"nodeType": "ExpressionStatement",
												"src": "4832:15:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3045,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2995,
															"src": "4880:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3046,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3001,
															"src": "4893:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3044,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3087,
														"src": "4858:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 3047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4858:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3048,
												"nodeType": "ExpressionStatement",
												"src": "4858:45:14"
											}
										]
									},
									"documentation": {
										"id": 2993,
										"nodeType": "StructuredDocumentation",
										"src": "4032:251:14",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 3050,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2997,
												"name": "nonReentrant",
												"nameLocations": [
													"4336:12:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 418,
												"src": "4336:12:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "4336:12:14"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4298:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4316:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3050,
												"src": "4308:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:21:14"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4357:0:14"
									},
									"scope": 3153,
									"src": "4289:622:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3077,
										"nodeType": "Block",
										"src": "5556:296:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3059,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3053,
																"src": "5575:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5598:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5590:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3060,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5590:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 3063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5590:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5575:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 3065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5602:44:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 3058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5567:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:80:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3067,
												"nodeType": "ExpressionStatement",
												"src": "5567:80:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3069,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3055,
																"src": "5666:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5679:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5666:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5682:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 3068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5658:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5658:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3074,
												"nodeType": "ExpressionStatement",
												"src": "5658:52:14"
											},
											{
												"expression": {
													"id": 3075,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5721:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$3153",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 3076,
												"nodeType": "ExpressionStatement",
												"src": "5721:4:14"
											}
										]
									},
									"documentation": {
										"id": 3051,
										"nodeType": "StructuredDocumentation",
										"src": "4919:539:14",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 3078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5473:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5502:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3078,
												"src": "5494:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5494:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5523:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3078,
												"src": "5515:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5515:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5493:40:14"
									},
									"returnParameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5556:0:14"
									},
									"scope": 3153,
									"src": "5464:388:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3086,
										"nodeType": "Block",
										"src": "6248:66:14",
										"statements": []
									},
									"documentation": {
										"id": 3079,
										"nodeType": "StructuredDocumentation",
										"src": "5860:289:14",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 3087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6164:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6194:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3087,
												"src": "6186:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6215:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3087,
												"src": "6207:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:40:14"
									},
									"returnParameters": {
										"id": 3085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6248:0:14"
									},
									"scope": 3153,
									"src": "6155:159:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3102,
										"nodeType": "Block",
										"src": "6685:64:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3098,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3090,
															"src": "6716:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3099,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3092,
															"src": "6729:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3095,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "6696:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$531",
																"typeString": "contract IERC20"
															}
														},
														"id": 3097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6703:12:14",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 600,
														"src": "6696:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$531_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$531_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 3100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:45:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3101,
												"nodeType": "ExpressionStatement",
												"src": "6696:45:14"
											}
										]
									},
									"documentation": {
										"id": 3088,
										"nodeType": "StructuredDocumentation",
										"src": "6322:274:14",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 3103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6611:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3090,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6634:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3103,
												"src": "6626:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6626:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6655:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3103,
												"src": "6647:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6625:42:14"
									},
									"returnParameters": {
										"id": 3094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6685:0:14"
									},
									"scope": 3153,
									"src": "6602:147:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3116,
										"nodeType": "Block",
										"src": "7108:59:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3112,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3106,
															"src": "7134:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3113,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3108,
															"src": "7147:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3111,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3103,
														"src": "7119:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3115,
												"nodeType": "ExpressionStatement",
												"src": "7119:40:14"
											}
										]
									},
									"documentation": {
										"id": 3104,
										"nodeType": "StructuredDocumentation",
										"src": "6757:260:14",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 3117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "7032:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7057:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "7049:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7078:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3117,
												"src": "7070:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7070:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7048:42:14"
									},
									"returnParameters": {
										"id": 3110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7108:0:14"
									},
									"scope": 3153,
									"src": "7023:144:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3125,
										"nodeType": "Block",
										"src": "7534:66:14",
										"statements": []
									},
									"documentation": {
										"id": 3118,
										"nodeType": "StructuredDocumentation",
										"src": "7175:264:14",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 3126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7454:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7485:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "7477:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7477:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7506:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3126,
												"src": "7498:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7498:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7476:40:14"
									},
									"returnParameters": {
										"id": 3124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:14"
									},
									"scope": 3153,
									"src": "7445:155:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3139,
										"nodeType": "Block",
										"src": "7940:46:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3136,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2869,
															"src": "7972:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3134,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3129,
															"src": "7958:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7968:3:14",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2632,
														"src": "7958:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7958:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3133,
												"id": 3138,
												"nodeType": "Return",
												"src": "7951:27:14"
											}
										]
									},
									"documentation": {
										"id": 3127,
										"nodeType": "StructuredDocumentation",
										"src": "7608:242:14",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 3140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7865:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7889:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "7881:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7881:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7880:19:14"
									},
									"returnParameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "7931:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7931:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7930:9:14"
									},
									"scope": 3153,
									"src": "7856:130:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3151,
										"nodeType": "Block",
										"src": "8120:46:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8148:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8152:5:14",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8148:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3144,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2867,
															"src": "8131:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8139:8:14",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8131:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8131:27:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3150,
												"nodeType": "ExpressionStatement",
												"src": "8131:27:14"
											}
										]
									},
									"documentation": {
										"id": 3141,
										"nodeType": "StructuredDocumentation",
										"src": "7994:78:14",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 3152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "8087:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8100:2:14"
									},
									"returnParameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8120:0:14"
									},
									"scope": 3153,
									"src": "8078:88:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3154,
							"src": "1071:7098:14",
							"usedErrors": [],
							"usedEvents": [
								2882
							]
						}
					],
					"src": "33:8136:14"
				},
				"id": 14
			},
			"crowdsale/validation/whitelistCrowdsale.sol": {
				"ast": {
					"absolutePath": "crowdsale/validation/whitelistCrowdsale.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Address": [
							1273
						],
						"Context": [
							1295
						],
						"Crowdsale": [
							3153
						],
						"ERC165": [
							1548
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							1560
						],
						"IERC20": [
							531
						],
						"IERC20Permit": [
							567
						],
						"Math": [
							2426
						],
						"ReentrancyGuard": [
							453
						],
						"SafeERC20": [
							943
						],
						"SafeMath": [
							2738
						],
						"SignedMath": [
							2843
						],
						"Strings": [
							1524
						],
						"WhitelistCrowdsale": [
							3307
						]
					},
					"id": 3308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"absolutePath": "crowdsale/crowdsale.sol",
							"file": "crowdsale/crowdsale.sol",
							"id": 3156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3308,
							"sourceUnit": 3154,
							"src": "60:33:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 3157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3308,
							"sourceUnit": 316,
							"src": "95:58:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3159,
										"name": "Crowdsale",
										"nameLocations": [
											"297:9:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3153,
										"src": "297:9:15"
									},
									"id": 3160,
									"nodeType": "InheritanceSpecifier",
									"src": "297:9:15"
								},
								{
									"baseName": {
										"id": 3161,
										"name": "AccessControl",
										"nameLocations": [
											"308:13:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "308:13:15"
									},
									"id": 3162,
									"nodeType": "InheritanceSpecifier",
									"src": "308:13:15"
								}
							],
							"canonicalName": "WhitelistCrowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3158,
								"nodeType": "StructuredDocumentation",
								"src": "159:105:15",
								"text": " @title WhitelistCrowdsale\n @dev Crowdsale in which only whitelisted users can contribute."
							},
							"fullyImplemented": true,
							"id": 3307,
							"linearizedBaseContracts": [
								3307,
								315,
								1548,
								1560,
								388,
								3153,
								453,
								1295
							],
							"name": "WhitelistCrowdsale",
							"nameLocation": "275:18:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "7a3226ec",
									"id": 3167,
									"mutability": "constant",
									"name": "WHITELISTED_ROLE",
									"nameLocation": "353:16:15",
									"nodeType": "VariableDeclaration",
									"scope": 3307,
									"src": "329:72:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3163,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "57484954454c49535445445f524f4c45",
												"id": 3165,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "382:18:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49",
													"typeString": "literal_string \"WHITELISTED_ROLE\""
												},
												"value": "WHITELISTED_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8429d542926e6695b59ac6fbdcd9b37e8b1aeb757afab06ab60b1bb5878c3b49",
													"typeString": "literal_string \"WHITELISTED_ROLE\""
												}
											],
											"id": 3164,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "372:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "372:29:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "54202c4e",
									"id": 3172,
									"mutability": "constant",
									"name": "WHITELIST_ADMIN_ROLE",
									"nameLocation": "432:20:15",
									"nodeType": "VariableDeclaration",
									"scope": 3307,
									"src": "408:80:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3168,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "57484954454c4953545f41444d494e5f524f4c45",
												"id": 3170,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "465:22:15",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e2",
													"typeString": "literal_string \"WHITELIST_ADMIN_ROLE\""
												},
												"value": "WHITELIST_ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_28f5a99355973cc89255b8c4ac88405f27c78ded7608b040ee77a8bdf44d15e2",
													"typeString": "literal_string \"WHITELIST_ADMIN_ROLE\""
												}
											],
											"id": 3169,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "455:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3171,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "455:33:15",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3192,
										"nodeType": "Block",
										"src": "619:59:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3188,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "641:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3189,
															"name": "inWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3176,
															"src": "661:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 3187,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "630:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "630:40:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3191,
												"nodeType": "ExpressionStatement",
												"src": "630:40:15"
											}
										]
									},
									"id": 3193,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3182,
													"name": "inRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3174,
													"src": "587:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 3183,
													"name": "inWallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3176,
													"src": "595:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												{
													"id": 3184,
													"name": "inToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3179,
													"src": "605:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												}
											],
											"id": 3185,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3181,
												"name": "Crowdsale",
												"nameLocations": [
													"577:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3153,
												"src": "577:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "577:36:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3174,
												"mutability": "mutable",
												"name": "inRate",
												"nameLocation": "518:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3193,
												"src": "510:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "510:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "inWallet",
												"nameLocation": "542:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3193,
												"src": "526:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:15:15",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "inToken",
												"nameLocation": "559:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3193,
												"src": "552:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$531",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 3178,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3177,
														"name": "IERC20",
														"nameLocations": [
															"552:6:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 531,
														"src": "552:6:15"
													},
													"referencedDeclaration": 531,
													"src": "552:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$531",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "509:58:15"
									},
									"returnParameters": {
										"id": 3186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:0:15"
									},
									"scope": 3307,
									"src": "497:181:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3206,
										"nodeType": "Block",
										"src": "776:58:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3202,
															"name": "WHITELISTED_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3167,
															"src": "798:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3203,
															"name": "candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3195,
															"src": "816:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3201,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "787:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:39:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3205,
												"nodeType": "ExpressionStatement",
												"src": "787:39:15"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 3207,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3198,
													"name": "WHITELIST_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3172,
													"src": "749:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3199,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3197,
												"name": "onlyRole",
												"nameLocations": [
													"740:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "740:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "740:30:15"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "699:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3195,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "722:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3207,
												"src": "714:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:19:15"
									},
									"returnParameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:15"
									},
									"scope": 3307,
									"src": "690:144:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3236,
										"nodeType": "Block",
										"src": "932:199:15",
										"statements": [
											{
												"body": {
													"id": 3234,
													"nodeType": "Block",
													"src": "987:137:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3228,
																		"name": "WHITELISTED_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3167,
																		"src": "1081:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3229,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3210,
																			"src": "1099:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3231,
																		"indexExpression": {
																			"id": 3230,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3217,
																			"src": "1109:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1099:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3227,
																	"name": "_grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "1070:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 3232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1070:42:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3233,
															"nodeType": "ExpressionStatement",
															"src": "1070:42:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3220,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3217,
														"src": "960:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3221,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3210,
															"src": "964:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "974:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "964:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "960:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3235,
												"initializationExpression": {
													"assignments": [
														3217
													],
													"declarations": [
														{
															"constant": false,
															"id": 3217,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "953:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 3235,
															"src": "948:6:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3216,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "948:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3219,
													"initialValue": {
														"hexValue": "30",
														"id": 3218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "957:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "948:10:15"
												},
												"loopExpression": {
													"expression": {
														"id": 3225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "982:3:15",
														"subExpression": {
															"id": 3224,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3217,
															"src": "982:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3226,
													"nodeType": "ExpressionStatement",
													"src": "982:3:15"
												},
												"nodeType": "ForStatement",
												"src": "943:181:15"
											}
										]
									},
									"functionSelector": "7f649783",
									"id": 3237,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3213,
													"name": "WHITELIST_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3172,
													"src": "910:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3214,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3212,
												"name": "onlyRole",
												"nameLocations": [
													"901:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "901:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "901:30:15"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "851:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3210,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "883:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3237,
												"src": "866:26:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3208,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "866:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3209,
													"nodeType": "ArrayTypeName",
													"src": "866:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:28:15"
									},
									"returnParameters": {
										"id": 3215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:15"
									},
									"scope": 3307,
									"src": "842:289:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3250,
										"nodeType": "Block",
										"src": "1230:59:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3246,
															"name": "WHITELISTED_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3167,
															"src": "1253:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3247,
															"name": "candidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3239,
															"src": "1271:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3245,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "1241:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1241:40:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3249,
												"nodeType": "ExpressionStatement",
												"src": "1241:40:15"
											}
										]
									},
									"functionSelector": "8ab1d681",
									"id": 3251,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3242,
													"name": "WHITELIST_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3172,
													"src": "1203:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3241,
												"name": "onlyRole",
												"nameLocations": [
													"1194:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1194:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1194:30:15"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "1148:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3239,
												"mutability": "mutable",
												"name": "candidate",
												"nameLocation": "1176:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "1168:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:19:15"
									},
									"returnParameters": {
										"id": 3244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1230:0:15"
									},
									"scope": 3307,
									"src": "1139:150:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3280,
										"nodeType": "Block",
										"src": "1396:200:15",
										"statements": [
											{
												"body": {
													"id": 3278,
													"nodeType": "Block",
													"src": "1451:138:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3272,
																		"name": "WHITELISTED_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3167,
																		"src": "1546:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3273,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3254,
																			"src": "1564:9:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3275,
																		"indexExpression": {
																			"id": 3274,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3261,
																			"src": "1574:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1564:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3271,
																	"name": "_revokeRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "1534:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 3276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1534:43:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3277,
															"nodeType": "ExpressionStatement",
															"src": "1534:43:15"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3264,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3261,
														"src": "1424:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3265,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3254,
															"src": "1428:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1438:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1428:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1424:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3279,
												"initializationExpression": {
													"assignments": [
														3261
													],
													"declarations": [
														{
															"constant": false,
															"id": 3261,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1417:1:15",
															"nodeType": "VariableDeclaration",
															"scope": 3279,
															"src": "1412:6:15",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3260,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1412:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3263,
													"initialValue": {
														"hexValue": "30",
														"id": 3262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1421:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1412:10:15"
												},
												"loopExpression": {
													"expression": {
														"id": 3269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1446:3:15",
														"subExpression": {
															"id": 3268,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3261,
															"src": "1446:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3270,
													"nodeType": "ExpressionStatement",
													"src": "1446:3:15"
												},
												"nodeType": "ForStatement",
												"src": "1407:182:15"
											}
										]
									},
									"functionSelector": "548db174",
									"id": 3281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3257,
													"name": "WHITELIST_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3172,
													"src": "1374:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3256,
												"name": "onlyRole",
												"nameLocations": [
													"1365:8:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1365:8:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1365:30:15"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "1310:19:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "1347:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3281,
												"src": "1330:26:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3252,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1330:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3253,
													"nodeType": "ArrayTypeName",
													"src": "1330:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1329:28:15"
									},
									"returnParameters": {
										"id": 3259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1396:0:15"
									},
									"scope": 3307,
									"src": "1301:295:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3078
									],
									"body": {
										"id": 3305,
										"nodeType": "Block",
										"src": "1976:199:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3292,
																	"name": "WHITELISTED_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3167,
																	"src": "2003:16:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3293,
																	"name": "_beneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3284,
																	"src": "2021:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3291,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1995:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 3294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1995:39:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57686974656c69737443726f776473616c653a2062656e656669636961727920646f65736e27742068617665207468652057686974656c697374656420726f6c65",
															"id": 3295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2036:67:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548",
																"typeString": "literal_string \"WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role\""
															},
															"value": "WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d4d81a9acac4fa209d4fd468306311d92f08da1d0ae45d65f549de57dd92548",
																"typeString": "literal_string \"WhitelistCrowdsale: beneficiary doesn't have the Whitelisted role\""
															}
														],
														"id": 3290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1987:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:117:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3297,
												"nodeType": "ExpressionStatement",
												"src": "1987:117:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3301,
															"name": "_beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3284,
															"src": "2142:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3302,
															"name": "_weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3286,
															"src": "2156:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3298,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2115:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WhitelistCrowdsale_$3307_$",
																"typeString": "type(contract super WhitelistCrowdsale)"
															}
														},
														"id": 3300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2121:20:15",
														"memberName": "_preValidatePurchase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3078,
														"src": "2115:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 3303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2115:52:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3304,
												"nodeType": "ExpressionStatement",
												"src": "2115:52:15"
											}
										]
									},
									"documentation": {
										"id": 3282,
										"nodeType": "StructuredDocumentation",
										"src": "1604:271:15",
										"text": " @dev Extend parent behavior requiring beneficiary to be whitelisted. Note that no\n restriction is imposed on the account sending the transaction.\n @param _beneficiary Token beneficiary\n @param _weiAmount Amount of wei contributed"
									},
									"id": 3306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "1890:20:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1962:8:15"
									},
									"parameters": {
										"id": 3287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3284,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "1919:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "1911:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3286,
												"mutability": "mutable",
												"name": "_weiAmount",
												"nameLocation": "1941:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "1933:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1933:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1910:42:15"
									},
									"returnParameters": {
										"id": 3289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1976:0:15"
									},
									"scope": 3307,
									"src": "1881:294:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3308,
							"src": "266:1912:15",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345,
								2882
							]
						}
					],
					"src": "33:2145:15"
				},
				"id": 15
			}
		}
	}
}